{"root":"0:0:1939","crate_version":"1.0.17","includes_private":false,"index":{"a:2:8250:2909-0:400:1743":{"id":"a:2:8250:2909-0:400:1743","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:400:1743","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:231":{"id":"0:231","crate_id":0,"name":null,"span":{"filename":"src/parse.rs","begin":[127,0],"end":[137,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:11672:1701","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:385:1741","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:232:127","0:233:1912"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8250:2909-0:320:1756":{"id":"a:2:8250:2909-0:320:1756","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:320:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2612:8214":{"id":"2:2612:8214","crate_id":2,"name":"provide","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["demand",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Demand","id":"2:3382:7911","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:684-0:335:1758":{"id":"b:5:684-0:335:1758","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:335:1758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:686:3002","5:687:3003","5:688:3004"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:232:127":{"id":"0:232:127","crate_id":0,"name":"Err","span":{"filename":"src/parse.rs","begin":[128,4],"end":[128,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:220:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:407":{"id":"0:407","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[375,25],"end":[375,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:400:1743","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:380":{"id":"0:380","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,37],"end":[251,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:354:1762","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:381:729"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:192":{"id":"0:192","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[45,0],"end":[49,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ge","le","lt","gt"],"trait":{"name":"PartialOrd","id":"2:2354:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BuildMetadata","id":"0:400:1743","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:400:1743","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:193:1035"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:37:668":{"id":"0:37:668","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[117,4],"end":[119,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:363:1807":{"id":"0:363:1807","crate_id":0,"name":"LessEq","span":{"filename":"src/lib.rs","begin":[258,4],"end":[258,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:2684:220-0:335:1758":{"id":"a:2:2684:220-0:335:1758","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:335:1758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12081:34335":{"id":"2:12081:34335","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12039:31934":{"id":"2:12039:31934","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12038:31940"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:43640:2697","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:396:613":{"id":"0:396:613","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[317,29],"end":[317,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Prerelease","id":"0:385:1741","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12060:2196":{"id":"2:12060:2196","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:11712:2652","`DoubleEndedIterator`":"2:7240:121","prim@char":"1:11888:419","str::split_whitespace":"2:12038:31940","str::rsplit":"2:12066:27685"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43357:2685","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:367:1809":{"id":"0:367:1809","crate_id":0,"name":"Caret","span":{"filename":"src/lib.rs","begin":[260,4],"end":[260,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:186:552":{"id":"0:186:552","crate_id":0,"name":"deref","span":{"filename":"src/impls.rs","begin":[26,4],"end":[28,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:2898:117","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12128:1698":{"id":"2:12128:1698","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:11673:127","`FromStr`":"2:11672:1701"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:11672:1701","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:11672:1701","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:320:1756":{"id":"b:2:2251-0:320:1756","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:320:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:24896"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:325":{"id":"0:325","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[187,16],"end":[187,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:320:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12029:8430":{"id":"2:12029:8430","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:3321:1491":{"id":"2:3321:1491","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39341:6615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:236:1912":{"id":"0:236:1912","crate_id":0,"name":"from_str","span":{"filename":"src/parse.rs","begin":[142,4],"end":[148,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:11672:1701","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:2796-0:385:1741":{"id":"a:2:2741:2796-0:385:1741","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:385:1741","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:229:127":{"id":"0:229:127","crate_id":0,"name":"Err","span":{"filename":"src/parse.rs","begin":[114,4],"end":[114,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:220:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:413:729":{"id":"0:413:729","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[375,40],"end":[375,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9370:145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:400:1743":{"id":"b:2:2251-0:400:1743","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:400:1743","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:24896"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:687:3003":{"id":"5:687:3003","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:409":{"id":"0:409","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[375,29],"end":[375,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2694:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:400:1743","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12033:2247":{"id":"2:12033:2247","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:12034:27675"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:220:128":{"id":"a:2:2684:220-0:220:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2248-0:320:1756":{"id":"b:2:2248-0:320:1756","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:320:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:2355"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2538-0:299:1736":{"id":"b:2:2538-0:299:1736","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:2941"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:322":{"id":"0:322","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[187,9],"end":[187,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:320:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:323:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2553-0:335:1758":{"id":"b:2:2553-0:335:1758","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:335:1758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:230:1912":{"id":"0:230:1912","crate_id":0,"name":"from_str","span":{"filename":"src/parse.rs","begin":[116,4],"end":[124,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:11672:1701","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:310":{"id":"0:310","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[161,20],"end":[161,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2694:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:350:729":{"id":"0:350:729","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[195,31],"end":[195,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9370:145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:400:1743":{"id":"a:2:2684:220-0:400:1743","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:400:1743","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:188:230":{"id":"0:188:230","crate_id":0,"name":"Target","span":{"filename":"src/impls.rs","begin":[32,4],"end":[32,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"str"}}}},"2:2552:1478":{"id":"2:2552:1478","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12027:27652":{"id":"2:12027:27652","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:320:1756":{"id":"b:2:2548-0:320:1756","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:320:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:361:1806":{"id":"0:361:1806","crate_id":0,"name":"Less","span":{"filename":"src/lib.rs","begin":[257,4],"end":[257,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:8249:2910-0:400:1743":{"id":"a:2:8249:2910-0:400:1743","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:2910","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:400:1743","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12103:34342":{"id":"2:12103:34342","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12105:34343":{"id":"2:12105:34343","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12011:811":{"id":"2:12011:811","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:11888:419"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5398:35003":{"id":"5:5398:35003","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7255:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12132:27581":{"id":"2:12132:27581","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:317":{"id":"0:317","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[161,48],"end":[161,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:318:729"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:330":{"id":"0:330","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[187,31],"end":[187,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:320:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:331:729"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:314:430":{"id":"0:314:430","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[161,31],"end":[161,34]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Version","id":"0:299:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30836:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:339:1739":{"id":"0:339:1739","crate_id":0,"name":"patch","span":{"filename":"src/lib.rs","begin":[201,4],"end":[201,26]},"visibility":"public","docs":"Patch is only allowed if minor is Some.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u64"}}],"bindings":[]}}}}}},"0:381:729":{"id":"0:381:729","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[251,37],"end":[251,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9370:145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:405:423":{"id":"0:405:423","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[375,18],"end":[375,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"BuildMetadata","id":"0:400:1743","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:354:1762":{"id":"b:2:2548-0:354:1762","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:354:1762","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:28":{"id":"0:28","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[81,0],"end":[85,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9147:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:385:1741","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:29:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12107:34345":{"id":"2:12107:34345","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:2652"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11737:2667","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:334:668":{"id":"0:334:668","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[187,37],"end":[187,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:341":{"id":"0:341","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[195,9],"end":[195,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:335:1758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:342:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2553-0:354:1762":{"id":"b:2:2553-0:354:1762","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:354:1762","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:300:1737":{"id":"0:300:1737","crate_id":0,"name":"major","span":{"filename":"src/lib.rs","begin":[163,4],"end":[163,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u64"}}},"0:233:1912":{"id":"0:233:1912","crate_id":0,"name":"from_str","span":{"filename":"src/parse.rs","begin":[130,4],"end":[136,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:11672:1701","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5644-0:385:1741":{"id":"b:5:5644-0:385:1741","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9147:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5642:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:385:1741","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5646:1455"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:273:1938":{"id":"0:273:1938","crate_id":0,"name":"is_empty","span":{"filename":"src/lib.rs","begin":[512,4],"end":[514,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:400:1743":{"id":"b:2:2542-0:400:1743","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:400:1743","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2701:228-0:400:1743":{"id":"a:2:2701:228-0:400:1743","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:400:1743","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:348:613":{"id":"0:348:613","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[195,20],"end":[195,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Comparator","id":"0:335:1758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:305":{"id":"0:305","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[161,9],"end":[161,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:306:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:354:1762":{"id":"0:354:1762","crate_id":0,"name":"Op","span":{"filename":"src/lib.rs","begin":[253,0],"end":[266,1]},"visibility":"public","docs":"SemVer comparison operator: `=`, `>`, `>=`, `<`, `<=`, `~`, `^`, `*`.\n\n# Op::Exact\n- &ensp;**`=I.J.K`**&emsp;&mdash;&emsp;exactly the version I.J.K\n- &ensp;**`=I.J`**&emsp;&mdash;&emsp;equivalent to `>=I.J.0, <I.(J+1).0`\n- &ensp;**`=I`**&emsp;&mdash;&emsp;equivalent to `>=I.0.0, <(I+1).0.0`\n\n# Op::Greater\n- &ensp;**`>I.J.K`**\n- &ensp;**`>I.J`**&emsp;&mdash;&emsp;equivalent to `>=I.(J+1).0`\n- &ensp;**`>I`**&emsp;&mdash;&emsp;equivalent to `>=(I+1).0.0`\n\n# Op::GreaterEq\n- &ensp;**`>=I.J.K`**\n- &ensp;**`>=I.J`**&emsp;&mdash;&emsp;equivalent to `>=I.J.0`\n- &ensp;**`>=I`**&emsp;&mdash;&emsp;equivalent to `>=I.0.0`\n\n# Op::Less\n- &ensp;**`<I.J.K`**\n- &ensp;**`<I.J`**&emsp;&mdash;&emsp;equivalent to `<I.J.0`\n- &ensp;**`<I`**&emsp;&mdash;&emsp;equivalent to `<I.0.0`\n\n# Op::LessEq\n- &ensp;**`<=I.J.K`**\n- &ensp;**`<=I.J`**&emsp;&mdash;&emsp;equivalent to `<I.(J+1).0`\n- &ensp;**`<=I`**&emsp;&mdash;&emsp;equivalent to `<(I+1).0.0`\n\n# Op::Tilde&emsp;(\"patch\" updates)\n*Tilde requirements allow the **patch** part of the semver version (the third number) to increase.*\n- &ensp;**`~I.J.K`**&emsp;&mdash;&emsp;equivalent to `>=I.J.K, <I.(J+1).0`\n- &ensp;**`~I.J`**&emsp;&mdash;&emsp;equivalent to `=I.J`\n- &ensp;**`~I`**&emsp;&mdash;&emsp;equivalent to `=I`\n\n# Op::Caret&emsp;(\"compatible\" updates)\n*Caret requirements allow parts that are **right of the first nonzero** part of the semver version to increase.*\n- &ensp;**`^I.J.K`**&ensp;(for I\\>0)&emsp;&mdash;&emsp;equivalent to `>=I.J.K, <(I+1).0.0`\n- &ensp;**`^0.J.K`**&ensp;(for J\\>0)&emsp;&mdash;&emsp;equivalent to `>=0.J.K, <0.(J+1).0`\n- &ensp;**`^0.0.K`**&emsp;&mdash;&emsp;equivalent to `=0.0.K`\n- &ensp;**`^I.J`**&ensp;(for I\\>0 or J\\>0)&emsp;&mdash;&emsp;equivalent to `^I.J.0`\n- &ensp;**`^0.0`**&emsp;&mdash;&emsp;equivalent to `=0.0`\n- &ensp;**`^I`**&emsp;&mdash;&emsp;equivalent to `=I`\n\n# Op::Wildcard\n- &ensp;**`I.J.*`**&emsp;&mdash;&emsp;equivalent to `=I.J`\n- &ensp;**`I.*`**&ensp;or&ensp;**`I.*.*`**&emsp;&mdash;&emsp;equivalent to `=I`","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:355:1803","0:357:1804","0:359:1805","0:361:1806","0:363:1807","0:365:1808","0:367:1809","0:369:1810"],"impls":["a:2:2684:220-0:354:1762","a:2:8249:2910-0:354:1762","a:2:8250:2909-0:354:1762","a:2:2701:228-0:354:1762","a:2:2741:2796-0:354:1762","b:2:2251-0:354:1762","b:2:2542-0:354:1762","b:2:2248-0:354:1762","b:2:2538-0:354:1762","b:2:2553-0:354:1762","b:2:2548-0:354:1762","b:2:3319-0:354:1762","b:5:684-0:354:1762","0:375","0:383","0:374","0:380","0:377","0:378","0:371","0:372"]}}},"0:88":{"id":"0:88","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[104,0],"end":[111,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:89:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:265:60":{"id":"0:265:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[484,4],"end":[486,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:347":{"id":"0:347","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[195,20],"end":[195,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Comparator","id":"0:335:1758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:335:1758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:348:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:224:1912":{"id":"0:224:1912","crate_id":0,"name":"from_str","span":{"filename":"src/parse.rs","begin":[28,4],"end":[81,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:11672:1701","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:26":{"id":"0:26","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[48,0],"end":[79,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9147:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:335:1758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:27:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:189:552":{"id":"0:189:552","crate_id":0,"name":"deref","span":{"filename":"src/impls.rs","begin":[34,4],"end":[36,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:2898:117","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:320:1756":{"id":"b:2:3319-0:320:1756","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:320:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:276:939":{"id":"0:276:939","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[522,4],"end":[524,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:220:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:220:128":{"id":"b:2:2251-0:220:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:24896"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2701:228-0:220:128":{"id":"a:2:2701:228-0:220:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2250:2355":{"id":"2:2250:2355","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:385:1741":{"id":"b:2:2538-0:385:1741","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:385:1741","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:2941"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:278:1938":{"id":"0:278:1938","crate_id":0,"name":"is_empty","span":{"filename":"src/lib.rs","begin":[530,4],"end":[532,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:36":{"id":"0:36","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[116,0],"end":[120,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:400:1743","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:37:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12072:34334":{"id":"2:12072:34334","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:11712:2652","str::split":"2:12060:2196","prim@char":"1:11888:419","str::split_terminator":"2:12069:34333"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43425:2684","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:2668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8250:2909-0:299:1736":{"id":"a:2:8250:2909-0:299:1736","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:316:1035":{"id":"0:316:1035","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[161,36],"end":[161,46]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Version","id":"0:299:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30836:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:385:1741":{"id":"b:2:2548-0:385:1741","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:385:1741","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:349":{"id":"0:349","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[195,31],"end":[195,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:335:1758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:350:729"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:385:1741":{"id":"0:385:1741","crate_id":0,"name":"Prerelease","span":{"filename":"src/lib.rs","begin":[318,0],"end":[320,1]},"visibility":"public","docs":"Optional pre-release identifier on a version string. This comes after `-` in\na SemVer version, like `1.0.0-alpha.1`\n\n# Examples\n\nSome real world pre-release idioms drawn from crates.io:\n\n- **[mio]** <code>0.7.0-<b>alpha.1</b></code> &mdash; the most common style\n  for numbering pre-releases.\n\n- **[pest]** <code>1.0.0-<b>beta.8</b></code>,&ensp;<code>1.0.0-<b>rc.0</b></code>\n  &mdash; this crate makes a distinction between betas and release\n  candidates.\n\n- **[sassers]** <code>0.11.0-<b>shitshow</b></code> &mdash; ???.\n\n- **[atomic-utils]** <code>0.0.0-<b>reserved</b></code> &mdash; a squatted\n  crate name.\n\n[mio]: https://crates.io/crates/mio\n[pest]: https://crates.io/crates/pest\n[atomic-utils]: https://crates.io/crates/atomic-utils\n[sassers]: https://crates.io/crates/sassers\n\n*Tip:* Be aware that if you are planning to number your own pre-releases,\nyou should prefer to separate the numeric part from any non-numeric\nidentifiers by using a dot in between. That is, prefer pre-releases\n`alpha.1`, `alpha.2`, etc rather than `alpha1`, `alpha2` etc. The SemVer\nspec's rule for pre-release precedence has special treatment of numeric\ncomponents in the pre-release string, but only if there are no non-digit\ncharacters in the same dot-separated component. So you'd have `alpha.2` &lt;\n`alpha.11` as intended, but `alpha11` &lt; `alpha2`.\n\n# Syntax\n\nPre-release strings are a series of dot separated identifiers immediately\nfollowing the patch version. Identifiers must comprise only ASCII\nalphanumerics and hyphens: `0-9`, `A-Z`, `a-z`, `-`. Identifiers must not be\nempty. Numeric identifiers must not include leading zeros.\n\n# Total ordering\n\nPre-releases have a total order defined by the SemVer spec. It uses\nlexicographic ordering of dot-separated components. Identifiers consisting\nof only digits are compared numerically. Otherwise, identifiers are compared\nin ASCII sort order. Any numeric identifier is always less than any\nnon-numeric identifier.\n\nExample:&ensp;`alpha`&ensp;&lt;&ensp;`alpha.85`&ensp;&lt;&ensp;`alpha.90`&ensp;&lt;&ensp;`alpha.200`&ensp;&lt;&ensp;`alpha.0a`&ensp;&lt;&ensp;`alpha.1a0`&ensp;&lt;&ensp;`alpha.a`&ensp;&lt;&ensp;`beta`","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:269","a:2:2684:220-0:385:1741","a:2:8249:2910-0:385:1741","a:2:8250:2909-0:385:1741","a:2:2701:228-0:385:1741","a:2:2741:2796-0:385:1741","b:2:2251-0:385:1741","b:2:2542-0:385:1741","b:2:2248-0:385:1741","b:2:2538-0:385:1741","b:2:2553-0:385:1741","b:2:2548-0:385:1741","b:2:3319-0:385:1741","b:5:684-0:385:1741","b:5:5644-0:385:1741","0:394","0:389","0:190","0:395","0:391","0:184","0:387","0:28","0:194","0:397","0:392","0:34","0:231"]}}},"a:2:8250:2909-0:385:1741":{"id":"a:2:8250:2909-0:385:1741","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:385:1741","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2553-0:299:1736":{"id":"b:2:2553-0:299:1736","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:260":{"id":"0:260","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[436,0],"end":[479,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"VersionReq","id":"0:320:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:261:1924","0:262:1698","0:263:1933"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:34":{"id":"0:34","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[110,0],"end":[114,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:385:1741","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:35:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:684-0:400:1743":{"id":"b:5:684-0:400:1743","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:400:1743","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:686:3002","5:687:3003","5:688:3004"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12020:34329":{"id":"2:12020:34329","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12049:27236":{"id":"2:12049:27236","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:2652"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:2668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:257":{"id":"0:257","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[380,0],"end":[434,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Version","id":"0:299:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:258:939","0:259:1698"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:372":{"id":"0:372","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,15],"end":[251,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:354:1762","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:373:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:392":{"id":"0:392","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[317,25],"end":[317,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:385:1741","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8249:2910-0:320:1756":{"id":"a:2:8249:2910-0:320:1756","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:2910","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:320:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2684:220-0:385:1741":{"id":"a:2:2684:220-0:385:1741","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:385:1741","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:270:1895":{"id":"0:270:1895","crate_id":0,"name":"EMPTY","span":{"filename":"src/lib.rs","begin":[500,4],"end":[502,6]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:235:127":{"id":"0:235:127","crate_id":0,"name":"Err","span":{"filename":"src/parse.rs","begin":[140,4],"end":[140,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:220:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:277:316":{"id":"0:277:316","crate_id":0,"name":"as_str","span":{"filename":"src/lib.rs","begin":[526,4],"end":[528,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12025:27651":{"id":"2:12025:27651","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41396:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12069:34333":{"id":"2:12069:34333","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:11712:2652","str::split":"2:12060:2196","prim@char":"1:11888:419","`DoubleEndedIterator`":"2:7240:121","str::rsplit_terminator":"2:12072:34334"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43407:2686","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12119:34346":{"id":"2:12119:34346","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:2652"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:2668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12133:27582":{"id":"2:12133:27582","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:84":{"id":"0:84","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[32,0],"end":[90,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9147:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:85:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:271:939":{"id":"0:271:939","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[504,4],"end":[506,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:220:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:377":{"id":"0:377","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,26],"end":[251,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2694:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:354:1762","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:397":{"id":"0:397","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[317,40],"end":[317,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:385:1741","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:398:729"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8250:2909-0:335:1758":{"id":"a:2:8250:2909-0:335:1758","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:335:1758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3319-0:220:128":{"id":"b:2:3319-0:220:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:5644-0:400:1743":{"id":"b:5:5644-0:400:1743","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9147:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5642:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:400:1743","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5646:1455"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2741:2796-0:354:1762":{"id":"a:2:2741:2796-0:354:1762","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:354:1762","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2684:220-0:354:1762":{"id":"a:2:2684:220-0:354:1762","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:354:1762","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:387":{"id":"0:387","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[317,9],"end":[317,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:385:1741","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:388:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12101:34341":{"id":"2:12101:34341","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12012:1938":{"id":"2:12012:1938","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12110:2205":{"id":"2:12110:2205","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:2652"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:320:1756":{"id":"b:2:2538-0:320:1756","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:320:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:2941"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:321:1757":{"id":"0:321:1757","crate_id":0,"name":"comparators","span":{"filename":"src/lib.rs","begin":[190,4],"end":[190,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Vec","id":"5:6696:244","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Comparator","id":"0:335:1758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:359:1805":{"id":"0:359:1805","crate_id":0,"name":"GreaterEq","span":{"filename":"src/lib.rs","begin":[256,4],"end":[256,13]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:390:423":{"id":"0:390:423","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[317,18],"end":[317,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Prerelease","id":"0:385:1741","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:2796-0:400:1743":{"id":"a:2:2741:2796-0:400:1743","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:400:1743","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:365:1808":{"id":"0:365:1808","crate_id":0,"name":"Tilde","span":{"filename":"src/lib.rs","begin":[259,4],"end":[259,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:193:1035":{"id":"0:193:1035","crate_id":0,"name":"partial_cmp","span":{"filename":"src/impls.rs","begin":[46,4],"end":[48,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Ordering","id":"2:30836:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:258:939":{"id":"0:258:939","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[398,4],"end":[406,5]},"visibility":"public","docs":"Create `Version` with an empty pre-release and build metadata.\n\nEquivalent to:\n\n```\n# use semver::{BuildMetadata, Prerelease, Version};\n#\n# const fn new(major: u64, minor: u64, patch: u64) -> Version {\nVersion {\n    major,\n    minor,\n    patch,\n    pre: Prerelease::EMPTY,\n    build: BuildMetadata::EMPTY,\n}\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["major",{"primitive":"u64"}],["minor",{"primitive":"u64"}],["patch",{"primitive":"u64"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:275:1895":{"id":"0:275:1895","crate_id":0,"name":"EMPTY","span":{"filename":"src/lib.rs","begin":[518,4],"end":[520,6]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:198":{"id":"0:198","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[106,0],"end":[146,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clamp","max","min"],"trait":{"name":"Ord","id":"2:2348:182","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:400:1743","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:199:430"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8249:2910-0:299:1736":{"id":"a:2:8249:2910-0:299:1736","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:2910","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:388:60":{"id":"0:388:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[317,9],"end":[317,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Prerelease","id":"0:385:1741","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:203":{"id":"0:203","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[148,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromIterator","id":"2:7198:134","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Comparator","id":"0:335:1758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:320:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:204:697"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12032:34331":{"id":"2:12032:34331","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:11894:1397","crate::ops::IndexMut":"2:2985:2412","str::slice_unchecked":"2:12031:34330"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"5:5401:28846":{"id":"5:5401:28846","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12133:27582"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:2796-0:220:128":{"id":"a:2:2741:2796-0:220:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2538-0:335:1758":{"id":"b:2:2538-0:335:1758","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:335:1758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:2941"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:329:613":{"id":"0:329:613","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[187,20],"end":[187,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"VersionReq","id":"0:320:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:353:668":{"id":"0:353:668","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[195,37],"end":[195,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:684-0:385:1741":{"id":"b:5:684-0:385:1741","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:385:1741","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:686:3002","5:687:3003","5:688:3004"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:389":{"id":"0:389","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[317,18],"end":[317,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:385:1741","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:390:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2542-0:220:128":{"id":"b:2:2542-0:220:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:307":{"id":"0:307","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[161,16],"end":[161,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2695:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:391":{"id":"0:391","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[317,25],"end":[317,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2695:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:385:1741","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:327":{"id":"0:327","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[187,20],"end":[187,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2694:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:320:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:83":{"id":"0:83","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[30,0],"end":[30,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["source","description","cause","provide","type_id"],"trait":{"name":"Error","id":"2:2603:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3319-0:354:1762":{"id":"b:2:3319-0:354:1762","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:354:1762","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:263:1933":{"id":"0:263:1933","crate_id":0,"name":"matches","span":{"filename":"src/lib.rs","begin":[476,4],"end":[478,5]},"visibility":"public","docs":"Evaluate whether the given `Version` satisfies the version requirement\ndescribed by `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["version",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Version","id":"0:299:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12022:2150":{"id":"2:12022:2150","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:11905:1499"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12096:34339":{"id":"2:12096:34339","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:11712:2652","`DoubleEndedIterator`":"2:7240:121","prim@char":"1:11888:419","str::match_indices":"2:12093:34338"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:43525:2692","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:2668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12134:27583":{"id":"2:12134:27583","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12075:27687":{"id":"2:12075:27687","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:2652","str::rsplitn":"2:12078:27689"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43461:2688","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:267:1698":{"id":"0:267:1698","crate_id":0,"name":"parse","span":{"filename":"src/lib.rs","begin":[490,4],"end":[492,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:220:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:331:729":{"id":"0:331:729","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[187,31],"end":[187,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9370:145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8249:2910-0:385:1741":{"id":"a:2:8249:2910-0:385:1741","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:2910","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:385:1741","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12035:2221":{"id":"2:12035:2221","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:11888:419"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43327:2679","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:328":{"id":"0:328","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[187,20],"end":[187,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"VersionReq","id":"0:320:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:320:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:329:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12130:27578":{"id":"2:12130:27578","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_is_ascii\", issue = \"111090\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:335:1758":{"id":"b:2:2548-0:335:1758","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:335:1758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:398:729":{"id":"0:398:729","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[317,40],"end":[317,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9370:145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:320:1756":{"id":"a:2:2684:220-0:320:1756","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:320:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:268:1933":{"id":"0:268:1933","crate_id":0,"name":"matches","span":{"filename":"src/lib.rs","begin":[494,4],"end":[496,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["version",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Version","id":"0:299:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:228":{"id":"0:228","crate_id":0,"name":null,"span":{"filename":"src/parse.rs","begin":[113,0],"end":[125,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:11672:1701","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:335:1758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:229:127","0:230:1912"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:684-0:354:1762":{"id":"b:5:684-0:354:1762","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:354:1762","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:686:3002","5:687:3003","5:688:3004"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12113:2045":{"id":"2:12113:2045","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:2652"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5646:1455":{"id":"5:5646:1455","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:315":{"id":"0:315","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[161,36],"end":[161,46]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ge","le","lt","gt"],"trait":{"name":"PartialOrd","id":"2:2354:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Version","id":"0:299:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:316:1035"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8250:2909-0:220:128":{"id":"a:2:8250:2909-0:220:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:256-0:220:128":{"id":"0:256-0:220:128","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[110,0],"end":[110,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::parse::Error","name":"Error","id":"0:220:128","glob":false}}},"2:12099:34340":{"id":"2:12099:34340","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:195:430":{"id":"0:195:430","crate_id":0,"name":"cmp","span":{"filename":"src/impls.rs","begin":[52,4],"end":[103,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Ordering","id":"2:30836:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:194":{"id":"0:194","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[51,0],"end":[104,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clamp","max","min"],"trait":{"name":"Ord","id":"2:2348:182","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:385:1741","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:195:430"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12041:34332":{"id":"2:12041:34332","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:43621:2682","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8250:2909-0:354:1762":{"id":"a:2:8250:2909-0:354:1762","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:2909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:354:1762","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:20":{"id":"0:20","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[4,0],"end":[31,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9147:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:21:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:333":{"id":"0:333","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[187,37],"end":[187,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:320:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:334:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12137:8749":{"id":"2:12137:8749","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4536:8749"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:43665:2695","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12122:34347":{"id":"2:12122:34347","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:2652"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:406":{"id":"0:406","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[375,25],"end":[375,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2695:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:400:1743","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:262:1698":{"id":"0:262:1698","crate_id":0,"name":"parse","span":{"filename":"src/lib.rs","begin":[470,4],"end":[472,5]},"visibility":"public","docs":"Create `VersionReq` by parsing from string representation.\n\n# Errors\n\nPossible reasons for the parse to fail include:\n\n- `>a.b` &mdash; unexpected characters in the partial version.\n\n- `@1.0.0` &mdash; unrecognized comparison operator.\n\n- `^1.0.0, ` &mdash; unexpected end of input.\n\n- `>=1.0 <2.0` &mdash; missing comma between comparators.\n\n- `*.*` &mdash; unsupported wildcard syntax.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:220:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:313":{"id":"0:313","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[161,31],"end":[161,34]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clamp","max","min"],"trait":{"name":"Ord","id":"2:2348:182","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:314:430"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:302:1739":{"id":"0:302:1739","crate_id":0,"name":"patch","span":{"filename":"src/lib.rs","begin":[165,4],"end":[165,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u64"}}},"b:2:2248-0:220:128":{"id":"b:2:2248-0:220:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:2355"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:338:1738":{"id":"0:338:1738","crate_id":0,"name":"minor","span":{"filename":"src/lib.rs","begin":[199,4],"end":[199,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u64"}}],"bindings":[]}}}}}},"0:400:1743":{"id":"0:400:1743","crate_id":0,"name":"BuildMetadata","span":{"filename":"src/lib.rs","begin":[376,0],"end":[378,1]},"visibility":"public","docs":"Optional build metadata identifier. This comes after `+` in a SemVer\nversion, as in `0.8.1+zstd.1.5.0`.\n\n# Examples\n\nSome real world build metadata idioms drawn from crates.io:\n\n- **[libgit2-sys]** <code>0.12.20+<b>1.1.0</b></code> &mdash; for this\n  crate, the build metadata indicates the version of the C libgit2 library\n  that the Rust crate is built against.\n\n- **[mashup]** <code>0.1.13+<b>deprecated</b></code> &mdash; just the word\n  \"deprecated\" for a crate that has been superseded by another. Eventually\n  people will take notice of this in Cargo's build output where it lists the\n  crates being compiled.\n\n- **[google-bigquery2]** <code>2.0.4+<b>20210327</b></code> &mdash; this\n  library is automatically generated from an official API schema, and the\n  build metadata indicates the date on which that schema was last captured.\n\n- **[fbthrift-git]** <code>0.0.6+<b>c7fcc0e</b></code> &mdash; this crate is\n  published from snapshots of a big company monorepo. In monorepo\n  development, there is no concept of versions, and all downstream code is\n  just updated atomically in the same commit that breaking changes to a\n  library are landed. Therefore for crates.io purposes, every published\n  version must be assumed to be incompatible with the previous. The build\n  metadata provides the source control hash of the snapshotted code.\n\n[libgit2-sys]: https://crates.io/crates/libgit2-sys\n[mashup]: https://crates.io/crates/mashup\n[google-bigquery2]: https://crates.io/crates/google-bigquery2\n[fbthrift-git]: https://crates.io/crates/fbthrift-git\n\n# Syntax\n\nBuild metadata is a series of dot separated identifiers immediately\nfollowing the patch or pre-release version. Identifiers must comprise only\nASCII alphanumerics and hyphens: `0-9`, `A-Z`, `a-z`, `-`. Identifiers must\nnot be empty. Leading zeros *are* allowed, unlike any other place in the\nSemVer grammar.\n\n# Total ordering\n\nBuild metadata is ignored in evaluating `VersionReq`; it plays no role in\nwhether a `Version` matches any one of the comparison operators.\n\nHowever for comparing build metadatas among one another, they do have a\ntotal order which is determined by lexicographic ordering of dot-separated\ncomponents. Identifiers consisting of only digits are compared numerically.\nOtherwise, identifiers are compared in ASCII sort order. Any numeric\nidentifier is always less than any non-numeric identifier.\n\nExample:&ensp;`demo`&ensp;&lt;&ensp;`demo.85`&ensp;&lt;&ensp;`demo.90`&ensp;&lt;&ensp;`demo.090`&ensp;&lt;&ensp;`demo.200`&ensp;&lt;&ensp;`demo.1a0`&ensp;&lt;&ensp;`demo.a`&ensp;&lt;&ensp;`memo`","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:274","a:2:2684:220-0:400:1743","a:2:8249:2910-0:400:1743","a:2:8250:2909-0:400:1743","a:2:2701:228-0:400:1743","a:2:2741:2796-0:400:1743","b:2:2251-0:400:1743","b:2:2542-0:400:1743","b:2:2248-0:400:1743","b:2:2538-0:400:1743","b:2:2553-0:400:1743","b:2:2548-0:400:1743","b:2:3319-0:400:1743","b:5:684-0:400:1743","b:5:5644-0:400:1743","0:406","0:410","0:407","0:404","0:234","0:187","0:412","0:192","0:409","0:402","0:198","0:30","0:36"]}}},"5:5387:35001":{"id":"5:5387:35001","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7255:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:220:128":{"id":"b:2:2538-0:220:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:2941"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2248-0:299:1736":{"id":"b:2:2248-0:299:1736","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:2355"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2544:694":{"id":"2:2544:694","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:299:1736":{"id":"b:2:3319-0:299:1736","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:337:1737":{"id":"0:337:1737","crate_id":0,"name":"major","span":{"filename":"src/lib.rs","begin":[198,4],"end":[198,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u64"}}},"0:335:1758":{"id":"0:335:1758","crate_id":0,"name":"Comparator","span":{"filename":"src/lib.rs","begin":[196,0],"end":[204,1]},"visibility":"public","docs":"A pair of comparison operator and partial version, such as `>=1.2`. Forms\none piece of a VersionReq.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:336:1761","0:337:1737","0:338:1738","0:339:1739","0:340:1740"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:266","a:2:2684:220-0:335:1758","a:2:8249:2910-0:335:1758","a:2:8250:2909-0:335:1758","a:2:2701:228-0:335:1758","a:2:2741:2796-0:335:1758","b:2:2251-0:335:1758","b:2:2542-0:335:1758","b:2:2248-0:335:1758","b:2:2538-0:335:1758","b:2:2553-0:335:1758","b:2:2548-0:335:1758","b:2:3319-0:335:1758","b:5:684-0:335:1758","b:5:5644-0:335:1758","0:349","0:341","0:343","0:228","0:347","0:26","0:346","0:203","0:352","0:344"]}}},"b:2:2251-0:354:1762":{"id":"b:2:2251-0:354:1762","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:354:1762","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:24896"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12014:34327":{"id":"2:12014:34327","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12010":{"id":"2:12010","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12011:811","2:12012:1938","2:12013:34326","2:12014:34327","2:12016:34328","2:12019:2233","2:12020:34329","2:12021:314","2:12022:2150","2:12023:2169","2:12025:27651","2:12027:27652","2:12029:8430","2:12031:34330","2:12032:34331","2:12033:2247","2:12034:27675","2:12035:2221","2:12036:6834","2:12037:2149","2:12038:31940","2:12039:31934","2:12040:26764","2:12041:34332","2:12042:31939","2:12043:27691","2:12046:2047","2:12049:27236","2:12052:2984","2:12056:2947","2:12060:2196","2:12063:27683","2:12066:27685","2:12069:34333","2:12072:34334","2:12075:27687","2:12078:27689","2:12081:34335","2:12084:34336","2:12087:1933","2:12090:34337","2:12093:34338","2:12096:34339","2:12099:34340","2:12101:34341","2:12103:34342","2:12105:34343","2:12106:34344","2:12107:34345","2:12110:2205","2:12113:2045","2:12116:27692","2:12119:34346","2:12122:34347","2:12125:34348","2:12128:1698","2:12130:27578","2:12131:27579","2:12132:27581","2:12133:27582","2:12134:27583","2:12135:34349","2:12137:8749","2:12138:34350"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2542-0:335:1758":{"id":"b:2:2542-0:335:1758","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:335:1758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:308":{"id":"0:308","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[161,16],"end":[161,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:324":{"id":"0:324","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[187,16],"end":[187,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2695:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:320:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12063:27683":{"id":"2:12063:27683","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:2652"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:11535:2698","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12046:2047":{"id":"2:12046:2047","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:2652"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:688:3004":{"id":"5:688:3004","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12056:2947":{"id":"2:12056:2947","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41396:179","prim@char":"1:11888:419","self::pattern":"2:11712:2652"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:2668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:21:668":{"id":"0:21:668","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[5,4],"end":[30,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12087:1933":{"id":"2:12087:1933","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:11712:2652","`DoubleEndedIterator`":"2:7240:121","prim@char":"1:11888:419","str::matches":"2:12087:1933"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:43561:2689","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12138:34350":{"id":"2:12138:34350","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4533:34350"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:43674:2696","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:185:230":{"id":"0:185:230","crate_id":0,"name":"Target","span":{"filename":"src/impls.rs","begin":[24,4],"end":[24,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"str"}}}},"0:412":{"id":"0:412","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[375,40],"end":[375,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:400:1743","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:413:729"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12043:27691":{"id":"2:12043:27691","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:2652"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:220:128":{"id":"b:2:2548-0:220:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:342:423":{"id":"0:342:423","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[195,9],"end":[195,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Comparator","id":"0:335:1758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:184":{"id":"0:184","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[23,0],"end":[29,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:2898:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:385:1741","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:185:230","0:186:552"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:352":{"id":"0:352","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[195,37],"end":[195,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:335:1758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:353:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:306:423":{"id":"0:306:423","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[161,9],"end":[161,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Version","id":"0:299:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:311":{"id":"0:311","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[161,20],"end":[161,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Version","id":"0:299:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:312:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12125:34348":{"id":"2:12125:34348","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:2652"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:2668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5644-0:335:1758":{"id":"b:5:5644-0:335:1758","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9147:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5642:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:335:1758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5646:1455"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12019:2233":{"id":"2:12019:2233","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11279:2672"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12021:314":{"id":"2:12021:314","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12022:2150","`u8`":"1:11905:1499"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12078:27689":{"id":"2:12078:27689","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:11888:419","str::splitn":"2:12075:27687","self::pattern":"2:11712:2652"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43479:2687","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:2668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:31:668":{"id":"0:31:668","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[88,4],"end":[90,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:354:1762":{"id":"b:2:2538-0:354:1762","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:354:1762","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:2941"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12038:31940":{"id":"2:12038:31940","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12039:31934"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:43631:2681","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2557:1477":{"id":"2:2557:1477","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:354:1762":{"id":"b:2:2248-0:354:1762","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:354:1762","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:2355"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12066:27685":{"id":"2:12066:27685","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:11712:2652","`DoubleEndedIterator`":"2:7240:121","prim@char":"1:11888:419","str::split":"2:12060:2196"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43375:2683","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:2668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:2796-0:299:1736":{"id":"a:2:2741:2796-0:299:1736","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2553-0:385:1741":{"id":"b:2:2553-0:385:1741","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:385:1741","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:355:1803":{"id":"0:355:1803","crate_id":0,"name":"Exact","span":{"filename":"src/lib.rs","begin":[254,4],"end":[254,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:234":{"id":"0:234","crate_id":0,"name":null,"span":{"filename":"src/parse.rs","begin":[139,0],"end":[149,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:11672:1701","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:400:1743","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:235:127","0:236:1912"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12093:34338":{"id":"2:12093:34338","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:11712:2652","`DoubleEndedIterator`":"2:7240:121","prim@char":"1:11888:419","str::rmatch_indices":"2:12096:34339"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:43507:2691","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:301:1738":{"id":"0:301:1738","crate_id":0,"name":"minor","span":{"filename":"src/lib.rs","begin":[164,4],"end":[164,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u64"}}},"0:402":{"id":"0:402","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[375,9],"end":[375,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:400:1743","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:403:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2248-0:385:1741":{"id":"b:2:2248-0:385:1741","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:385:1741","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:2355"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:384:668":{"id":"0:384:668","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[251,43],"end":[251,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:320:1756":{"id":"0:320:1756","crate_id":0,"name":"VersionReq","span":{"filename":"src/lib.rs","begin":[189,0],"end":[191,1]},"visibility":"public","docs":"**SemVer version requirement** describing the intersection of some version\ncomparators, such as `>=1.2.3, <1.8`.\n\n# Syntax\n\n- Either `*` (meaning \"any\"), or one or more comma-separated comparators.\n\n- A [`Comparator`] is an operator ([`Op`]) and a partial version, separated\n  by optional whitespace. For example `>=1.0.0` or `>=1.0`.\n\n- Build metadata is syntactically permitted on the partial versions, but is\n  completely ignored, as it's never relevant to whether any comparator\n  matches a particular version.\n\n- Whitespace is permitted around commas and around operators. Whitespace is\n  not permitted within a partial version, i.e. anywhere between the major\n  version number and its minor, patch, pre-release, or build metadata.","links":{"`Op`":"0:354:1762","`Comparator`":"0:335:1758"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:321:1757"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:260","a:2:2684:220-0:320:1756","a:2:8249:2910-0:320:1756","a:2:8250:2909-0:320:1756","a:2:2701:228-0:320:1756","a:2:2741:2796-0:320:1756","b:2:2251-0:320:1756","b:2:2542-0:320:1756","b:2:2248-0:320:1756","b:2:2538-0:320:1756","b:2:2553-0:320:1756","b:2:2548-0:320:1756","b:2:3319-0:320:1756","b:5:684-0:320:1756","b:5:5644-0:320:1756","0:328","0:327","0:264","0:225","0:324","0:322","0:325","0:203","0:333","0:24","0:330"]}}},"0:346":{"id":"0:346","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[195,20],"end":[195,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2694:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:335:1758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3319-0:385:1741":{"id":"b:2:3319-0:385:1741","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:385:1741","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:27:668":{"id":"0:27:668","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[49,4],"end":[78,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:220:128":{"id":"0:220:128","crate_id":0,"name":"Error","span":{"filename":"src/parse.rs","begin":[21,0],"end":[23,1]},"visibility":"public","docs":"Error parsing a SemVer version or version requirement.\n\n# Example\n\n```\nuse semver::Version;\n\nfn main() {\n    let err = Version::parse(\"1.q.r\").unwrap_err();\n\n    // \"unexpected character 'q' while parsing minor version number\"\n    eprintln!(\"{}\", err);\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2684:220-0:220:128","a:2:8249:2910-0:220:128","a:2:8250:2909-0:220:128","a:2:2701:228-0:220:128","a:2:2741:2796-0:220:128","b:2:2251-0:220:128","b:2:2542-0:220:128","b:2:2248-0:220:128","b:2:2538-0:220:128","b:2:2553-0:220:128","b:2:2610-0:220:128","b:2:2548-0:220:128","b:2:3319-0:220:128","b:5:5644-0:220:128","0:83","0:84","0:88"]}}},"a:2:2741:2796-0:335:1758":{"id":"a:2:2741:2796-0:335:1758","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:335:1758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12016:34328":{"id":"2:12016:34328","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12014:34327"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:269":{"id":"0:269","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[499,0],"end":[515,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Prerelease","id":"0:385:1741","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:270:1895","0:271:939","0:272:316","0:273:1938"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:191:1035":{"id":"0:191:1035","crate_id":0,"name":"partial_cmp","span":{"filename":"src/impls.rs","begin":[40,4],"end":[42,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Ordering","id":"2:30836:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2701:228-0:299:1736":{"id":"a:2:2701:228-0:299:1736","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2701:228-0:354:1762":{"id":"a:2:2701:228-0:354:1762","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:354:1762","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8249:2910-0:220:128":{"id":"a:2:8249:2910-0:220:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:2910","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:375":{"id":"0:375","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,22],"end":[251,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:354:1762","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:259:1698":{"id":"0:259:1698","crate_id":0,"name":"parse","span":{"filename":"src/lib.rs","begin":[431,4],"end":[433,5]},"visibility":"public","docs":"Create `Version` by parsing from string representation.\n\n# Errors\n\nPossible reasons for the parse to fail include:\n\n- `1.0` &mdash; too few numeric components. A SemVer version must have\n  exactly three. If you are looking at something that has fewer than\n  three numbers in it, it's possible it is a `VersionReq` instead (with\n  an implicit default `^` comparison operator).\n\n- `1.0.01` &mdash; a numeric component has a leading zero.\n\n- `1.0.unknown` &mdash; unexpected character in one of the components.\n\n- `1.0.0-` or `1.0.0+` &mdash; the pre-release or build metadata are\n  indicated present but empty.\n\n- `1.0.0-alpha_123` &mdash; pre-release or build metadata have something\n  outside the allowed characters, which are `0-9`, `A-Z`, `a-z`, `-`,\n  and `.` (dot).\n\n- `23456789999999999999.0.0` &mdash; overflow of a u64.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:220:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:227:1912":{"id":"0:227:1912","crate_id":0,"name":"from_str","span":{"filename":"src/parse.rs","begin":[87,4],"end":[110,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:11672:1701","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12042:31939":{"id":"2:12042:31939","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:43649:2693","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:686:3002":{"id":"5:686:3002","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:264":{"id":"0:264","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[483,0],"end":[487,1]},"visibility":"default","docs":"The default VersionReq is the same as [`VersionReq::STAR`].","links":{"`VersionReq::STAR`":"0:261:1924"},"attrs":["#[cfg(not(no_const_vec_new))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:320:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:265:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2610-0:220:128":{"id":"b:2:2610-0:220:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:2603:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:3370:14161","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:8214"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"E"}}}},"a:2:2701:228-0:320:1756":{"id":"a:2:2701:228-0:320:1756","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:320:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:336:1761":{"id":"0:336:1761","crate_id":0,"name":"op","span":{"filename":"src/lib.rs","begin":[197,4],"end":[197,14]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Op","id":"0:354:1762","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:12116:27692":{"id":"2:12116:27692","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:2652"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:2668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:261:1924":{"id":"0:261:1924","crate_id":0,"name":"STAR","span":{"filename":"src/lib.rs","begin":[451,4],"end":[453,6]},"visibility":"public","docs":"A `VersionReq` with no constraint on the version numbers it matches.\nEquivalent to `VersionReq::parse(\"*\").unwrap()`.\n\nIn terms of comparators this is equivalent to `>=0.0.0`.\n\nCounterintuitively a `*` VersionReq does not match every possible\nversion number. In particular, in order for *any* `VersionReq` to match\na pre-release version, the `VersionReq` must contain at least one\n`Comparator` that has an explicit major, minor, and patch version\nidentical to the pre-release being matched, and that has a nonempty\npre-release component. Since `*` is not written with an explicit major,\nminor, and patch version, and does not contain a nonempty pre-release\ncomponent, it does not match any pre-release versions.","links":{},"attrs":["#[cfg(not(no_const_vec_new))]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:2553-0:220:128":{"id":"b:2:2553-0:220:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12084:34336":{"id":"2:12084:34336","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:2668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:357:1804":{"id":"0:357:1804","crate_id":0,"name":"Greater","span":{"filename":"src/lib.rs","begin":[255,4],"end":[255,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:344":{"id":"0:344","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[195,16],"end":[195,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:335:1758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:25:668":{"id":"0:25:668","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[34,4],"end":[45,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:373:423":{"id":"0:373:423","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[251,15],"end":[251,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Op","id":"0:354:1762","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:400:1743":{"id":"b:2:2553-0:400:1743","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:400:1743","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12013:34326":{"id":"2:12013:34326","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:32":{"id":"0:32","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[93,0],"end":[108,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:33:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:272:316":{"id":"0:272:316","crate_id":0,"name":"as_str","span":{"filename":"src/lib.rs","begin":[508,4],"end":[510,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:35:668":{"id":"0:35:668","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[111,4],"end":[113,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:411:613":{"id":"0:411:613","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[375,29],"end":[375,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BuildMetadata","id":"0:400:1743","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2701:228-0:335:1758":{"id":"a:2:2701:228-0:335:1758","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:335:1758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:383":{"id":"0:383","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,43],"end":[251,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:354:1762","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:384:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:343":{"id":"0:343","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[195,16],"end":[195,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2695:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:335:1758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:369:1810":{"id":"0:369:1810","crate_id":0,"name":"Wildcard","span":{"filename":"src/lib.rs","begin":[261,4],"end":[261,12]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2251-0:385:1741":{"id":"b:2:2251-0:385:1741","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:385:1741","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:24896"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3319-0:400:1743":{"id":"b:2:3319-0:400:1743","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:400:1743","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2253:24896":{"id":"2:2253:24896","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:274":{"id":"0:274","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[517,0],"end":[533,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"BuildMetadata","id":"0:400:1743","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:275:1895","0:276:939","0:277:316","0:278:1938"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2548-0:299:1736":{"id":"b:2:2548-0:299:1736","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:303:1740":{"id":"0:303:1740","crate_id":0,"name":"pre","span":{"filename":"src/lib.rs","begin":[166,4],"end":[166,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Prerelease","id":"0:385:1741","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:266":{"id":"0:266","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[489,0],"end":[497,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Comparator","id":"0:335:1758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:267:1698","0:268:1933"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:403:60":{"id":"0:403:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[375,9],"end":[375,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"BuildMetadata","id":"0:400:1743","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:312:613":{"id":"0:312:613","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[161,20],"end":[161,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Version","id":"0:299:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5382":{"id":"5:5382","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5383:35000","5:5384:2519","5:5387:35001","5:5390:35002","5:5398:35003","5:5399:35004","5:5400:2557","5:5401:28846","5:5402:28847"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:85:668":{"id":"0:85:668","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[33,4],"end":[89,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:0:1939":{"id":"0:0:1939","crate_id":0,"name":"semver","span":{"filename":"src/lib.rs","begin":[1,0],"end":[533,1]},"visibility":"public","docs":"[![github]](https://github.com/dtolnay/semver)&ensp;[![crates-io]](https://crates.io/crates/semver)&ensp;[![docs-rs]](https://docs.rs/semver)\n\n[github]: https://img.shields.io/badge/github-8da0cb?style=for-the-badge&labelColor=555555&logo=github\n[crates-io]: https://img.shields.io/badge/crates.io-fc8d62?style=for-the-badge&labelColor=555555&logo=rust\n[docs-rs]: https://img.shields.io/badge/docs.rs-66c2a5?style=for-the-badge&labelColor=555555&logo=docs.rs\n\n<br>\n\nA parser and evaluator for Cargo's flavor of Semantic Versioning.\n\nSemantic Versioning (see <https://semver.org>) is a guideline for how\nversion numbers are assigned and incremented. It is widely followed within\nthe Cargo/crates.io ecosystem for Rust.\n\n<br>\n\n# Example\n\n```\nuse semver::{BuildMetadata, Prerelease, Version, VersionReq};\n\nfn main() {\n    let req = VersionReq::parse(\">=1.2.3, <1.8.0\").unwrap();\n\n    // Check whether this requirement matches version 1.2.3-alpha.1 (no)\n    let version = Version {\n        major: 1,\n        minor: 2,\n        patch: 3,\n        pre: Prerelease::new(\"alpha.1\").unwrap(),\n        build: BuildMetadata::EMPTY,\n    };\n    assert!(!req.matches(&version));\n\n    // Check whether it matches 1.3.0 (yes it does)\n    let version = Version::parse(\"1.3.0\").unwrap();\n    assert!(req.matches(&version));\n}\n```\n\n<br><br>\n\n# Scope of this crate\n\nBesides Cargo, several other package ecosystems and package managers for\nother languages also use SemVer:&ensp;RubyGems/Bundler for Ruby, npm for\nJavaScript, Composer for PHP, CocoaPods for Objective-C...\n\nThe `semver` crate is specifically intended to implement Cargo's\ninterpretation of Semantic Versioning.\n\nWhere the various tools differ in their interpretation or implementation of\nthe spec, this crate follows the implementation choices made by Cargo. If\nyou are operating on version numbers from some other package ecosystem, you\nwill want to use a different semver library which is appropriate to that\necosystem.\n\nThe extent of Cargo's SemVer support is documented in the *[Specifying\nDependencies]* chapter of the Cargo reference.\n\n[Specifying Dependencies]: https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html","links":{},"attrs":["#![doc(html_root_url = \"https://docs.rs/semver/1.0.17\")]","#![deny(unsafe_op_in_unsafe_fn)]","#![allow(clippy :: cast_lossless, clippy :: cast_possible_truncation, clippy\n:: doc_markdown, clippy :: items_after_statements, clippy :: manual_map,\nclippy :: match_bool, clippy :: missing_errors_doc, clippy ::\nmust_use_candidate, clippy :: needless_doctest_main, clippy ::\noption_if_let_else, clippy :: ptr_as_ptr, clippy :: redundant_else, clippy ::\nsemicolon_if_nothing_returned, clippy :: similar_names, clippy ::\nunnested_or_patterns, clippy :: unseparated_literal_suffix, clippy ::\nwildcard_imports)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:256-0:220:128","0:299:1736","0:320:1756","0:335:1758","0:354:1762","0:385:1741","0:400:1743"],"is_stripped":false}}},"2:12036:6834":{"id":"2:12036:6834","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:11888:419"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43333:2678","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:379:613":{"id":"0:379:613","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[251,26],"end":[251,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Op","id":"0:354:1762","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:199:430":{"id":"0:199:430","crate_id":0,"name":"cmp","span":{"filename":"src/impls.rs","begin":[107,4],"end":[145,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Ordering","id":"2:30836:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:378":{"id":"0:378","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,26],"end":[251,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Op","id":"0:354:1762","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:354:1762","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:379:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:394":{"id":"0:394","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[317,29],"end":[317,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2694:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:385:1741","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12034:27675":{"id":"2:12034:27675","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12033:2247"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2541:2941":{"id":"2:2541:2941","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2515:133"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5383:35000":{"id":"5:5383:35000","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:280:2416","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7004:2415","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:280:2416","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}},{"type":{"resolved_path":{"name":"Global","id":"5:7004:2415","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5402:28847":{"id":"5:5402:28847","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12134:27583"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:323:423":{"id":"0:323:423","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[187,9],"end":[187,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"VersionReq","id":"0:320:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:320:1756":{"id":"b:2:2553-0:320:1756","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:320:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2551:128":{"id":"2:2551:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:371":{"id":"0:371","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,9],"end":[251,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:354:1762","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:684-0:299:1736":{"id":"b:5:684-0:299:1736","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:686:3002","5:687:3003","5:688:3004"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:33:668":{"id":"0:33:668","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[94,4],"end":[107,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:299:1736":{"id":"0:299:1736","crate_id":0,"name":"Version","span":{"filename":"src/lib.rs","begin":[162,0],"end":[168,1]},"visibility":"public","docs":"**SemVer version** as defined by <https://semver.org>.\n\n# Syntax\n\n- The major, minor, and patch numbers may be any integer 0 through u64::MAX.\n  When representing a SemVer version as a string, each number is written as\n  a base 10 integer. For example, `1.0.119`.\n\n- Leading zeros are forbidden in those positions. For example `1.01.00` is\n  invalid as a SemVer version.\n\n- The pre-release identifier, if present, must conform to the syntax\n  documented for [`Prerelease`].\n\n- The build metadata, if present, must conform to the syntax documented for\n  [`BuildMetadata`].\n\n- Whitespace is not allowed anywhere in the version.\n\n# Total ordering\n\nGiven any two SemVer versions, one is less than, greater than, or equal to\nthe other. Versions may be compared against one another using Rust's usual\ncomparison operators.\n\n- The major, minor, and patch number are compared numerically from left to\nright, lexicographically ordered as a 3-tuple of integers. So for example\nversion `1.5.0` is less than version `1.19.0`, despite the fact that\n\"1.19.0\" &lt; \"1.5.0\" as ASCIIbetically compared strings and 1.19 &lt; 1.5\nas real numbers.\n\n- When major, minor, and patch are equal, a pre-release version is\n  considered less than the ordinary release:&ensp;version `1.0.0-alpha.1` is\n  less than version `1.0.0`.\n\n- Two pre-releases of the same major, minor, patch are compared by\n  lexicographic ordering of dot-separated components of the pre-release\n  string.\n\n  - Identifiers consisting of only digits are compared\n    numerically:&ensp;`1.0.0-pre.8` is less than `1.0.0-pre.12`.\n\n  - Identifiers that contain a letter or hyphen are compared in ASCII sort\n    order:&ensp;`1.0.0-pre12` is less than `1.0.0-pre8`.\n\n  - Any numeric identifier is always less than any non-numeric\n    identifier:&ensp;`1.0.0-pre.1` is less than `1.0.0-pre.x`.\n\nExample:&ensp;`1.0.0-alpha`&ensp;&lt;&ensp;`1.0.0-alpha.1`&ensp;&lt;&ensp;`1.0.0-alpha.beta`&ensp;&lt;&ensp;`1.0.0-beta`&ensp;&lt;&ensp;`1.0.0-beta.2`&ensp;&lt;&ensp;`1.0.0-beta.11`&ensp;&lt;&ensp;`1.0.0-rc.1`&ensp;&lt;&ensp;`1.0.0`","links":{"`Prerelease`":"0:385:1741","`BuildMetadata`":"0:400:1743"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:300:1737","0:301:1738","0:302:1739","0:303:1740","0:304:1742"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:257","a:2:2684:220-0:299:1736","a:2:8249:2910-0:299:1736","a:2:8250:2909-0:299:1736","a:2:2701:228-0:299:1736","a:2:2741:2796-0:299:1736","b:2:2251-0:299:1736","b:2:2542-0:299:1736","b:2:2248-0:299:1736","b:2:2538-0:299:1736","b:2:2553-0:299:1736","b:2:2548-0:299:1736","b:2:3319-0:299:1736","b:5:684-0:299:1736","b:5:5644-0:299:1736","0:307","0:313","0:32","0:20","0:305","0:315","0:308","0:310","0:311","0:222","0:317"]}}},"0:187":{"id":"0:187","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[31,0],"end":[37,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:2898:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:400:1743","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:188:230","0:189:552"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:30":{"id":"0:30","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[87,0],"end":[91,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9147:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:400:1743","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:31:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:5644-0:299:1736":{"id":"b:5:5644-0:299:1736","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9147:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5642:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5646:1455"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8249:2910-0:354:1762":{"id":"a:2:8249:2910-0:354:1762","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:2910","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:354:1762","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12052:2984":{"id":"2:12052:2984","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41396:179","prim@char":"1:11888:419","self::pattern":"2:11712:2652"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12037:2149":{"id":"2:12037:2149","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43343:2677","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:299:1736":{"id":"b:2:2542-0:299:1736","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5390:35002":{"id":"5:5390:35002","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7255:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:400:1743":{"id":"b:2:2248-0:400:1743","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:400:1743","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:2355"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12131:27579":{"id":"2:12131:27579","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39552:27591","Self::is_ascii":"2:12130:27578"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39552:27591","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12135:34349":{"id":"2:12135:34349","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4535:34349"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:43656:2694","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12106:34344":{"id":"2:12106:34344","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5400:2557":{"id":"5:5400:2557","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7255:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:299:1736":{"id":"b:2:2251-0:299:1736","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:24896"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3319-0:335:1758":{"id":"b:2:3319-0:335:1758","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:335:1758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2251-0:335:1758":{"id":"b:2:2251-0:335:1758","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:335:1758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:24896"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5384:2519":{"id":"5:5384:2519","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7255:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8249:2910-0:335:1758":{"id":"a:2:8249:2910-0:335:1758","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:2910","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:335:1758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:404":{"id":"0:404","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[375,18],"end":[375,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:400:1743","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:405:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:340:1740":{"id":"0:340:1740","crate_id":0,"name":"pre","span":{"filename":"src/lib.rs","begin":[203,4],"end":[203,23]},"visibility":"public","docs":"Non-empty pre-release is only allowed if patch is Some.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Prerelease","id":"0:385:1741","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:12040:26764":{"id":"2:12040:26764","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:43611:2680","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:304:1742":{"id":"0:304:1742","crate_id":0,"name":"build","span":{"filename":"src/lib.rs","begin":[167,4],"end":[167,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"BuildMetadata","id":"0:400:1743","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:29:668":{"id":"0:29:668","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[82,4],"end":[84,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:2796-0:320:1756":{"id":"a:2:2741:2796-0:320:1756","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:320:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2684:220-0:299:1736":{"id":"a:2:2684:220-0:299:1736","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2542-0:320:1756":{"id":"b:2:2542-0:320:1756","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:320:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:684-0:320:1756":{"id":"b:5:684-0:320:1756","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:320:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:686:3002","5:687:3003","5:688:3004"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2248-0:335:1758":{"id":"b:2:2248-0:335:1758","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:335:1758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:2355"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:190":{"id":"0:190","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[39,0],"end":[43,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ge","le","lt","gt"],"trait":{"name":"PartialOrd","id":"2:2354:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Prerelease","id":"0:385:1741","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:385:1741","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:191:1035"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:223:127":{"id":"0:223:127","crate_id":0,"name":"Err","span":{"filename":"src/parse.rs","begin":[26,4],"end":[26,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:220:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:318:729":{"id":"0:318:729","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[161,48],"end":[161,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9370:145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12031:34330":{"id":"2:12031:34330","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:11894:1397","str::slice_mut_unchecked":"2:12032:34331","crate::ops::Index":"2:2981:2411"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:374":{"id":"0:374","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,22],"end":[251,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2695:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:354:1762","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2542-0:385:1741":{"id":"b:2:2542-0:385:1741","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:385:1741","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12090:34337":{"id":"2:12090:34337","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:11712:2652","`DoubleEndedIterator`":"2:7240:121","prim@char":"1:11888:419","str::matches":"2:12087:1933"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:43579:2690","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:2668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:222":{"id":"0:222","crate_id":0,"name":null,"span":{"filename":"src/parse.rs","begin":[25,0],"end":[82,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:11672:1701","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:223:127","0:224:1912"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2548-0:400:1743":{"id":"b:2:2548-0:400:1743","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:400:1743","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:204:697":{"id":"0:204:697","crate_id":0,"name":"from_iter","span":{"filename":"src/impls.rs","begin":[149,4],"end":[155,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["iter",{"generic":"I"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"Comparator","id":"0:335:1758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:226:127":{"id":"0:226:127","crate_id":0,"name":"Err","span":{"filename":"src/parse.rs","begin":[85,4],"end":[85,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:220:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:5:5644-0:220:128":{"id":"b:5:5644-0:220:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9147:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5642:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5646:1455"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:89:668":{"id":"0:89:668","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[105,4],"end":[110,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2556:128":{"id":"2:2556:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32020:5385","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:24":{"id":"0:24","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[33,0],"end":[46,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9147:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:320:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:25:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2542-0:354:1762":{"id":"b:2:2542-0:354:1762","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:354:1762","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:5644-0:320:1756":{"id":"b:5:5644-0:320:1756","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9147:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5642:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:320:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5646:1455"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2701:228-0:385:1741":{"id":"a:2:2701:228-0:385:1741","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:385:1741","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:395":{"id":"0:395","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[317,29],"end":[317,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Prerelease","id":"0:385:1741","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:385:1741","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:396:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2538-0:400:1743":{"id":"b:2:2538-0:400:1743","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:400:1743","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:2941"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:225":{"id":"0:225","crate_id":0,"name":null,"span":{"filename":"src/parse.rs","begin":[84,0],"end":[111,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:11672:1701","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:320:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:226:127","0:227:1912"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:410":{"id":"0:410","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[375,29],"end":[375,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BuildMetadata","id":"0:400:1743","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:400:1743","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:411:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12023:2169":{"id":"2:12023:2169","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41396:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5399:35004":{"id":"5:5399:35004","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:280:2416","`String`":"5:7255:224"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:280:2416","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7004:2415","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"2:45938:6885":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"6:587:5534":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"2:8249:2910":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2:44092:2665":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:22425:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"2:42476:128":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"6:6151:6268":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"1:10712:7028":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"15:198:19942":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"5:1716:2419":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"1:7821:130":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"2:2161:2510":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"5:6180:3694":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"2:3163:2642":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"18:707:2669":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"1:11210:7097":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"16:7103:7069":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"2:42449:71":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"5:1454:198":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"17:13053:4573":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"1:3440:2049":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"17:10743:7809":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"1:10931:3766":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"17:12461:4374":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"2:21854:6521":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"5:5834:8473":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"16:7635:5172":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"1:2362:8816":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"1:8215:7034":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"18:515:3820":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"16:6243:35454":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"2:4377:3707":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:2985:2412":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"5:880:3396":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"2:44131:122":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"1:10314:8004":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"1:4903:8925":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"16:6488:5014":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"17:13803:4786":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"17:420:3909":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"5:3547:3397":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"2:10092:3399":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"2:30232:2408":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"5:4336:3684":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"17:9617:7757":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"2:2589:116":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"17:12224:4335":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:2348:182":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"2:40399:2594":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"2:30466:31651":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"2:12512:3729":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"17:10257:7792":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"6:4719:5876":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"3:229:210":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"17:12622:4062":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"5:7103:2423":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"2:42713:6814":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:41631:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"2:76:1553":{"crate_id":2,"path":["core","usize"],"kind":"module"},"17:13821:4792":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"16:2572:4841":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"1:2208:7947":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"16:5886:4947":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"2:43525:2692":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"17:11641:4216":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"1:1589:5380":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"18:0:2265":{"crate_id":18,"path":["memchr"],"kind":"module"},"17:13879:4802":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"17:9557:3979":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"2:46370:6911":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"2:9405:2544":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:8838:8965":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"1:4414:8893":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"16:6327:4998":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"1:4760:8878":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"1:10692:130":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"2:4782:33056":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"0:385:1741":{"crate_id":0,"path":["semver","Prerelease"],"kind":"struct"},"1:7937:7994":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:44283:211":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"2:41831:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:6409:3753":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"5:3673:6463":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"6:5829:6125":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"5:7028:2421":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"2:39114:2646":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"17:12550:4392":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"6:1622:5605":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"1:11859:8754":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"17:2933:7738":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"5:5712:2421":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"1:1062:7887":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"5:1058:8470":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"6:1700:5660":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:20579:33745":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"17:10283:4029":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"1:638:7936":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"1:6101:3749":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"1:6133:7980":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"2:2691:2795":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"1:11893:1367":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"1:7781:3902":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"16:5779:4933":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"1:7528:3760":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"6:4821:5925":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:11072:7091":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"17:10402:7796":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"1:8479:3396":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"5:2916:8472":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"1:11308:3771":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:4019:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:9106:210":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"2:20909:9014":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"11:1688:144":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"17:10635:4059":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"6:4559:5838":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"11:359:3646":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"17:9148:35464":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"17:11946:4280":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"17:10681:4065":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"17:10589:4054":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"1:11891:1049":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"17:12923:4526":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"5:6367:2423":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"6:4527:5824":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"1:10826:5446":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"18:574:3817":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:40708:2560":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"2:1667:1087":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"5:963:3658":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"5:0:286":{"crate_id":5,"path":["alloc"],"kind":"module"},"1:8485:7057":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"2:20770:2510":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"1:9003:7072":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"17:11969:4285":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"1:1982:185":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"18:766:24766":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:2758:2491":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"2:2817:2625":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"16:8047:5226":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"11:1866:5379":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"16:2426:4835":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"16:2470:4837":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"17:9498:3972":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"16:2546:4840":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"2:2784:2619":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"6:6651:6327":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:47464:6955":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"17:13419:4667":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"2:7588:2565":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"2:43884:6838":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"5:5642:232":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"18:681:3839":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"14:165:19928":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"17:1919:20955":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"2:7318:159":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"5:3124:5379":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"15:180:19941":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"17:11459:4172":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"16:6890:4867":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"5:1413:5377":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"17:11011:4095":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"2:46111:6891":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"17:9907:3987":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"2:2753:2489":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"17:12607:4400":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"1:7616:3764":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"17:10649:4060":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"0:320:1756":{"crate_id":0,"path":["semver","VersionReq"],"kind":"struct"},"16:6671:5051":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"5:6097:9092":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"2:7198:134":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"17:9917:1736":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"11:2076:7887":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2:41711:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"17:13461:4676":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"1:6907:3756":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"17:10478:7805":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"1:5926:206":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"17:10823:3923":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"17:11585:4199":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:47823:6971":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:5385:7973":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:2851:2633":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"5:5798:70":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"2:41203:155":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"6:4836:5929":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"17:12388:4361":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"2:9155:2443":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"16:5630:7812":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"11:1634:3653":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"2:22524:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"2:9157:194":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:2768:2616":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"17:11600:4205":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"2:4251:207":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"11:675:7878":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"5:7074:6482":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"2:43674:2696":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:21559:8826":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"2:3644:2423":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"2:41581:3396":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"1:5067:191":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"1:1048:5112":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"5:7269:6489":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"11:816:7893":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"11:1847:2421":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"1:3168:7954":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"16:5305:4914":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"2:21665:6510":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"11:97:5369":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"1:2832:3739":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"17:10270:7793":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"1:7670:6982":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"2:2470:14202":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:6085:3729":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"17:13101:4582":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"17:13812:4790":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"2:44164:14280":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"5:1612:3658":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"17:10897:4089":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"17:13506:4686":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"11:828:8764":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"2:3931:3682":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"17:11282:4138":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"1:11027:26156":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"11:1879:5381":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"17:8718:3954":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"5:211:3656":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"17:487:7730":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"2:2827:2628":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"2:43327:2679":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"2:3142:2640":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:4737:3740":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"2:9107:2049":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"17:8195:20892":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"14:7:7875":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"2:43163:3402":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"2:44104:2658":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"6:595:5539":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"1:11493:7107":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"2:2692:2927":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"2:40324:6763":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"5:4818:204":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"1:5179:190":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:9145:112":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"1:4256:7965":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"6:4991:6015":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"1:9184:3509":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"17:9340:7747":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"17:10092:7791":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"1:10050:8018":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"17:12980:4561":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"17:12046:4295":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"2:7632:32496":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"5:1463:7899":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"2:43611:2680":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"1:2550:3719":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"11:1524:19923":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"17:13249:4620":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"16:8170:5236":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"2:4110:7914":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"2:44080:2660":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"2:20596:33747":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:643:8751":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"1:7854:7992":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"2:2706:2407":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"17:9178:7744":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"5:3276:2419":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"2:30836:183":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"17:11628:4215":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"5:129:2136":{"crate_id":5,"path":["alloc","alloc","handle_alloc_error"],"kind":"function"},"16:4540:4896":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"17:0:2264":{"crate_id":17,"path":["object"],"kind":"module"},"1:530:3732":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"16:7366:20852":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"2:43507:2691":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"2:20536:2541":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"17:12835:4463":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"6:482:5473":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"16:6981:7852":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"2:39961:6744":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"17:11861:4268":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"14:202:14159":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"1:959:7886":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"2:21718:6511":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"17:9512:7753":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"11:859:7885":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"5:7044:34120":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"17:10761:20914":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"17:13066:4578":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"17:1978:7737":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"2:46606:6915":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"6:4803:5917":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"6:1728:5673":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:8250:2909":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"16:5677:20843":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"2:45681:6873":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"16:7467:5162":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2:46036:6889":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:11225:7145":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"1:7697:7925":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"10:0:2258":{"crate_id":10,"path":["adler"],"kind":"module"},"16:5032:4911":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"2:11737:2667":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:47706:6964":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"16:4596:4898":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"11:665:2423":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"17:9424:3969":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"5:7150:2417":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"16:5402:3952":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:39192:198":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"1:8968:7069":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"5:2636:6477":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"17:9028:7741":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:20922:8826":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"2:45521:6866":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"2:39216:199":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"2:40670:2552":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"6:4571:5847":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"2:46682:6917":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"2:40693:2556":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"11:1126:7891":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"16:7652:198":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"2:40121:6758":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"17:13857:4796":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"2:2929:2637":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"2:42683:145":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"6:474:5468":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"1:676:8567":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"2:39161:2638":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"17:13689:4754":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"1:8047:7995":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"1:6296:166":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"6:7544:6452":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"18:521:24767":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"17:9826:7768":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"1:8907:8007":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"2:2469:8826":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"17:13488:4683":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"14:40:4138":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"17:13324:4638":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"2:40076:6753":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"2:10286:3398":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"16:3225:4881":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"17:10615:4057":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"16:2694:4846":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"6:5900:6166":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"1:3129:25192":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"11:399:35441":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"6:1614:5600":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"15:0:2262":{"crate_id":15,"path":["addr2line"],"kind":"module"},"17:9839:7769":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"6:5988:6212":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"16:6728:5064":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"5:4167:3682":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"1:11913:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"17:11721:4223":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"2:9159:2444":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"14:215:5319":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"16:5811:4938":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"16:7065:5111":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"17:13777:4777":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"2:43210:2574":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"16:2298:19960":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"18:614:35473":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"2:12357:192":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"1:10628:8026":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"2:46212:6894":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"16:4728:4901":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"1:6538:8476":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"2:5987:2602":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:4642:8893":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"16:5724:4928":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"16:6819:5079":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"9:0:2257":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"1:6485:8960":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"17:9670:7763":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"2:23037:2492":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"16:4932:4908":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"6:4383:5752":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"6:4509:5815":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:40277:2577":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"16:7509:4871":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"17:9721:7765":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"6:5065:6050":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"1:8427:8942":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"6:1519:5545":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"17:9265:7745":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"17:9380:20924":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"6:1588:5584":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"6:7538:6451":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"17:13865:4799":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"2:30360:31662":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"17:9409:20925":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"17:8573:20912":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"16:5104:4913":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"1:2344:2501":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"2:6674:2583":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:5354:7971":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"17:13356:4646":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"2:9153:2442":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"16:2668:4845":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"17:10142:20997":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:43792:6835":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:8838:32498":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:41479:2906":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"1:3983:8870":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:21337:9015":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"5:5191:3658":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"17:10712:21024":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"1:731:142":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:43236:3404":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:11912:1126":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"16:6793:5078":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"1:9028:167":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"1:8264:6308":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"11:821:7880":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"6:4416:5771":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:3060:7951":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"1:8960:8013":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"1:1844:3509":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"17:9596:3976":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"6:1609:5598":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:40050:2694":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"17:9068:35460":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"5:1404:5376":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"1:11895:1481":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"17:12403:4365":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"5:3688:7900":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"16:2905:4855":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"1:9038:219":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"2:20729:9009":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"17:12194:4316":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"5:680:231":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:22458:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"5:109:286":{"crate_id":5,"path":["alloc","alloc","alloc"],"kind":"function"},"6:5058:6047":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"16:3030:4878":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"2:42167:2442":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"17:8256:20890":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"2:21952:2497":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"2:40438:2597":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:8103:8825":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"16:7557:5168":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"17:13625:4735":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"1:11091:7073":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"16:4510:4895":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"1:11854:8172":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"2:39365:7926":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"11:731:5376":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"1:2211:2176":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"2:9526:3715":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"16:5367:19958":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"6:4609:5849":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"18:113:24756":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:10203:3401":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:47770:6968":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"2:43375:2683":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"17:12059:4297":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"16:7016:5103":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"2:41530:193":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"16:2786:4850":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"1:7791:6985":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"11:2157:19916":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"2:2812:2624":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"2:43479:2687":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"2:2696:109":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"2:43969:2670":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"1:3875:8864":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"16:4480:4894":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"1:9374:129":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"2:11461:2704":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"16:6767:5077":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"2:40226:2574":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"16:8214:5160":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"5:3753:2419":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"11:1091:7890":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"6:6569:6292":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"6:6545:6275":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"17:10316:4032":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"16:8256:5243":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"6:4439:5780":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"2:44100:2664":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"17:13516:4691":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"17:11234:4123":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"2:2509:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"17:12358:4356":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"6:6578:6298":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"16:2764:4849":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"17:9098:7742":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"16:6460:4859":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"2:44084:2662":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"2:43741:14157":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"6:5785:6103":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"6:7497:6442":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"0:367:1809":{"crate_id":0,"path":["semver","Op","Caret"],"kind":"variant"},"2:42153:2441":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:20938:9000":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"17:1034:7732":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:7263:2569":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:22293:176":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"16:7757:5176":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"16:7529:4872":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"5:3775:3658":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:40268:2576":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"0:361:1806":{"crate_id":0,"path":["semver","Op","Less"],"kind":"variant"},"6:4707:5869":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"11:652:3397":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"6:4371:5749":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:25847:2493":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:11892:312":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"17:11770:4248":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"1:10226:8481":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"16:5655:4861":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"2:20869:9007":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr"],"kind":"trait"},"2:40347:2591":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:10847:26167":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"17:12510:4387":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:45968:6886":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"16:7498:5166":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"1:1931:653":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"1:8075:2085":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"17:562:4098":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"6:4486:5802":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:2822:2626":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"16:2879:4854":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"2:40012:6749":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"17:8310:20904":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"16:8090:5231":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"5:1314:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"2:21839:32604":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"6:4952:5997":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"17:10026:7782":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"6:5959:6199":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"1:3247:7958":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"6:6002:6215":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"1:7838:119":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"2:41345:7033":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"1:7693:7988":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"6:4773:5901":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"16:7803:5184":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"17:9469:7749":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"5:110:528":{"crate_id":5,"path":["alloc","alloc","dealloc"],"kind":"function"},"2:9295:7921":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"2:22326:177":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"17:9876:3901":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"2:2805:2627":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"1:2869:128":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"2:42160:2440":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"6:4911:5971":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"17:10527:21022":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"6:5032:6030":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"5:280:2416":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"1:11837:7146":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"18:699:3843":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"17:3266:7740":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"2:42658:2547":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:11003:7061":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:30302:31665":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"2:4:1014":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"2:41243:6779":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"2:2800:2622":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"6:6848:6419":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"6:1709:5666":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"5:7066:198":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"2:2932:2076":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"17:13411:4664":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"6:5809:6112":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:8843:8170":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"12:0:2260":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"2:22491:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"2:45391:6861":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:7595:6980":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"2:42666:6808":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"9:481:19842":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"1:7659:8753":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"11:119:3642":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"18:507:3817":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"17:8683:3953":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"17:9523:7754":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"2:9370:145":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"5:7095:2423":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"16:6696:20849":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"2:2522:237":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"17:13257:4622":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"1:635:7934":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"5:2407:6474":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"16:5000:4910":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"17:13159:4596":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:11672:1701":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"2:42421:110":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"18:548:141":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"5:6696:244":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"17:12496:4386":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"17:9641:7759":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"2:9410:2545":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:3911:8865":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"17:13344:4645":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"11:768:2419":{"crate_id":11,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"2:6768:2550":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"1:1594:5381":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"5:265:3658":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"2:39552:27591":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"17:12293:4349":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"7:0:1543":{"crate_id":7,"path":["unwind"],"kind":"module"},"6:1576:5576":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:8806:7064":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"5:7209:32605":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"0:335:1758":{"crate_id":0,"path":["semver","Comparator"],"kind":"struct"},"1:8286:7036":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"17:386:7729":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"2:1467:2137":{"crate_id":2,"path":["core","mem"],"kind":"module"},"1:11911:1553":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"1:9386:3762":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"2:45699:6874":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:3401:7960":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"16:6336:4999":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:46446:6913":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"18:624:35472":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:30864:2541":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"2:32147:2933":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"11:60:35439":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"2:41751:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"2:1733:2532":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"2:41260:8861":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"2:1747:6492":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"6:6057:6231":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:20564:33434":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"17:11615:4211":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"6:6016:6220":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:42695:6809":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"17:12006:4289":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"2:41309:32603":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"6:4546:5834":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"2:2738:2929":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"5:3158:5378":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"1:5570:3743":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"11:703:7879":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"2:7165:2571":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:585:8748":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"19:0:1031":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"1:10657:6985":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"2:9362:141":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"5:2906:33930":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"2:3157:135":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:42674:2546":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"16:6943:20850":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"17:10923:4090":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"2:32020:5385":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"6:1564:5567":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"1:4328:7966":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"17:13651:4744":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"5:7255:224":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:39280:203":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"2:40338:2590":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"5:2116:6467":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"1:4574:6319":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"6:6724:6351":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"3:0:443":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:12597:2414":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"1:11904:740":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"5:1228:7887":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"6:7491:6441":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"1:480:3731":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"2:41871:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"6:1546:5556":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"2:2898:117":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"16:4624:4899":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"1:8854:8964":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"18:660:7722":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:7665:6981":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"1:9098:8015":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"16:6254:4993":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"16:7543:4873":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"2:1756:2531":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"6:4698:5864":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"17:11653:4219":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"17:12372:4359":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:46014:6888":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"6:6755:6377":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"1:11909:1495":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"1:8736:186":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"1:7590:7986":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"2:43857:6837":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"6:4553:5836":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"17:9218:3979":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"17:13744:4770":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"1:10209:7973":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"17:13639:4741":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"2:3152:234":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"5:3150:5380":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"2:46416:6912":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"2:2515:133":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:44364:2473":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:11899:643":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"17:11069:20918":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"1:3881:8863":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"17:10555:4044":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"1:11910:789":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"17:12158:4310":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"18:719:3848":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"16:8109:5234":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"1:2215:8808":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"2:47402:6954":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"16:7596:20853":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"17:10569:4049":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"17:10885:4088":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"2:40408:2595":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"2:39075:2649":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"2:43223:3408":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:922:7878":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"5:3163:34119":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"5:7036:3668":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"2:39372:2451":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"6:579:5529":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"2:40034:2696":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"16:6307:4856":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"11:1144:7892":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"2:43946:6840":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"17:13791:4784":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"17:13469:4678":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"1:10416:7954":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"14:31:7875":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"18:636:3838":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"6:4790:5912":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"17:13041:4568":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"2:10010:2685":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:11424:2702":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:1785:7942":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"17:12138:4307":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"11:279:5370":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"17:9577:3974":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"1:4683:8882":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"16:2742:4848":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"2:7211:2570":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"18:582:2541":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"1:8337:7046":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"9:421:19845":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"17:9853:7770":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"2:47675:6961":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"6:6691:6335":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"11:2192:5382":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"17:13698:4756":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"5:7195:6483":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"16:2378:4833":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"8:0:2256":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"6:6830:6416":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"6:5947:6192":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:11265:3390":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"6:541:5510":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"17:9748:3979":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:7161:2572":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"17:8858:3958":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"6:554:5516":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"2:5380:3682":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"2:21787:6513":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"9:445:19843":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"6:4318:5706":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:1821:2140":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"16:2337:4826":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"16:8156:4877":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"2:12542:140":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"16:7572:35458":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"1:8776:7063":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:21561:9003":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"17:12634:4403":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"6:0:816":{"crate_id":6,"path":["libc"],"kind":"module"},"1:1565:2423":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"2:39236:202":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:554:7933":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"2:3510:2421":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"16:6558:5026":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"17:10440:7802":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"6:7532:6450":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:4176:7964":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"16:7588:7869":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"17:13376:4653":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"6:62:14492":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"1:7644:8752":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"6:4667:5854":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"17:11422:4166":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"6:4492:5805":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:3987:8871":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"17:11821:4260":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"2:21:681":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"2:14:2052":{"crate_id":2,"path":["core","write"],"kind":"macro"},"2:40206:7927":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"17:13233:4617":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"0:365:1808":{"crate_id":0,"path":["semver","Op","Tilde"],"kind":"variant"},"2:39258:201":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"16:5643:4922":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"1:1433:144":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"1:7808:6987":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"17:10416:7800":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"16:7478:4870":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"16:5963:4957":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"6:6116:6243":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:6721:31442":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:8893:7068":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:3317:69":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"1:3465:8844":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"16:2616:4843":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"1:11054:7074":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"2:2749:2529":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"16:3300:4882":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"6:4344:5726":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"18:671:7726":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"16:5741:20844":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"6:1721:5670":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"6:6685:6333":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:8251:2908":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:11901:742":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"2:43343:2677":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"2:41470:2423":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"6:4827:5926":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"17:8753:3955":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"1:917:7893":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"7:32:19829":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"16:7519:5167":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"17:11902:4272":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"18:690:3842":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"17:8283:20903":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:4406:2454":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"2:12308:151":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"16:6236:7847":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"6:4999:6017":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:39379:6617":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:42917:3416":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"2:43956:6844":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:10948:3768":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"17:9453:20926":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"2:42031:7920":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"17:13145:4595":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:2981:2411":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"9:52:8151":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"2:44389:6858":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"17:11520:4183":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"1:7846:7991":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:2963:2645":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"1:11898:642":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"16:5797:4937":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"17:8360:20905":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"2:39341:6615":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"1:8982:24969":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"2:21978:2498":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"17:975:7731":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"1:2372:8821":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"1:11162:7092":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"2:2780:2617":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"6:5843:6136":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"16:5571:4860":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"6:4431:5777":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"6:4521:5821":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"6:4882:1001":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"18:491:3816":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"18:590:3828":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"1:10419:7956":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"2:45746:6875":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"6:6776:6391":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"6:4688:5857":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"6:4920:5977":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"6:500:5481":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"16:6904:5087":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"1:10000:8480":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"2:47747:6967":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:8387:6809":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"6:653:14904":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"16:7042:5109":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"16:7293:5143":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"2:43135:3395":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:3234:2648":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"2:2312:188":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"2:2839:2630":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:7572:6979":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"2:21966:2495":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:8870:8966":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"5:1351:3396":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"17:10691:21023":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"2:43989:2671":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"17:12178:4311":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"6:6800:6401":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"16:6061:19959":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"17:9959:3992":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"5:4005:3658":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"2:39982:31663":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"6:4732:5880":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"1:1895:3119":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"16:6201:7836":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"17:13181:4600":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"2:22260:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"16:6544:4864":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"2:20594:33750":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"2:10165:2683":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"17:10705:4067":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"16:2448:4836":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"1:361:7932":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"2:45367:6860":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"13:110:35445":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"0:0:1939":{"crate_id":0,"path":["semver"],"kind":"module"},"16:6868:5085":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"17:9796:3986":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"1:9062:7074":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"1:618:3121":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"1:5021:7967":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:10465:7804":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"6:4726:5877":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"1:6482:7983":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"17:10670:4064":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"6:4857:5939":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"16:5976:4817":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"17:242:7727":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"17:12419:4366":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"6:4743:5886":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:40042:2695":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:10130:3412":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"17:9108:35468":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"17:13135:4594":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"1:3132:26694":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"2:47610:6958":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"2:45892:6884":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"5:783:3660":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"17:12770:4412":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"2:40448:2581":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:2746:106":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"2:2512:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"1:11905:1499":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"1:8925:26011":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"6:1594:5586":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"16:2862:4853":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"17:9534:7755":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"11:1009:7887":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"1:3973:8869":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"6:5870:6143":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"5:1981:6463":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"1:10682:6986":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"2:21114:9008":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"2:45561:6868":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"17:11410:4163":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"16:7743:4863":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"1:5686:7975":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"1:11907:1497":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"1:11889:1515":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"1:413:165":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:12382:7923":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"2:43809:6836":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:20984:9002":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"6:4960:6002":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"6:1525:5548":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"1:3449:26497":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"17:9683:7764":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"17:10125:3997":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"14:160:7875":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"10:44:5390":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"2:45844:6883":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"2:40083:14198":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"2:43425:2684":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"2:44088:2661":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:20549:33434":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"17:12915:4525":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"5:2077:3673":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"2:43461:2688":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:8825:7065":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"6:5717:6059":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"16:7317:35457":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"2:43407:2686":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"17:10452:7803":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"1:7571:8826":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"16:8025:5225":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"16:7259:2906":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"16:4568:4897":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"5:1366:3397":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"1:857:3397":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"17:9696:3972":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"6:119:14546":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"17:8823:3957":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"10:36:5389":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"6:4813:5921":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"17:9895:7776":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"1:5320:7968":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"1:4576:6321":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"17:10989:4042":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"17:11573:4196":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"17:12433:4368":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"17:12072:4298":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"1:4845:8918":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"17:12576:4394":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"1:5370:7972":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"17:9628:7758":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"1:4679:8879":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"1:3615:8862":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"16:6022:20846":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:40424:2596":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:11894:1397":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"2:1630:588":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"2:42174:2443":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"2:4141:6496":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"6:5974:6201":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"16:8072:5229":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:47695:6963":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:47572:6957":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:8670:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:21879:31652":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"6:4307:5698":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:9147:120":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"17:10660:4062":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"1:875:5376":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"17:11391:4162":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"17:10068:7789":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"2:2518:238":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"1:8319:8929":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"16:3815:4887":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"5:4137:3682":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"16:7449:7862":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"2:2242:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"6:4392:5757":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"16:4400:4892":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"9:234:6809":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"1:11903:744":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"6:5022:6025":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"1:10722:26165":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"17:10334:3979":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"17:12318:4352":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:2695:225":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"2:41289:6786":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"17:8971:129":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"2:9472:1367":{"crate_id":2,"path":["core","slice"],"kind":"module"},"6:7526:6449":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"9:174:8161":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"1:3383:7031":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"1:8082:7027":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"2:2763:2490":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"9:502:5449":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"16:6535:3641":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"2:32056:7925":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"1:6009:3745":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"2:2694:226":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"2:3370:14161":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"2:47732:6966":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"6:4681:5855":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"17:11879:4269":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"2:41538:210":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"2:20742:9010":{"crate_id":2,"path":["core","core_simd","cast","SimdCastPtr"],"kind":"trait"},"5:1242:7892":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"2:44334:6855":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"17:13564:4728":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"17:13667:4748":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"18:96:24755":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"16:6442:5013":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"5:7280:7910":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"2:9151:2441":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"6:1650:5630":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"7:79:19836":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"16:3047:19988":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"2:2843:2631":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"0:359:1805":{"crate_id":0,"path":["semver","Op","GreaterEq"],"kind":"variant"},"16:6919:35456":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"2:21771:6512":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:2540:3736":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"2:30288:68":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"6:5935:6187":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"17:9653:7760":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"6:532:5504":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"1:1577:5378":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"16:7837:5188":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:44108:2659":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"2:41394:181":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"2:43255:3405":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"16:2830:4852":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"2:40163:8795":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"typedef"},"1:2346:8811":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"17:11220:4122":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"6:4377:5750":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"6:1715:5669":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:12098:4302":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"17:12563:4393":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"2:9161:2445":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"16:2524:4839":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"17:10000:4074":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"6:4398:5759":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:41332:6793":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"17:8420:20907":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:40718:2562":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"17:13399:4661":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"17:11372:4157":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"6:7509:6444":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"17:12085:4300":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"16:5693:4924":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"5:1443:7879":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"1:3135:26697":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"2:30272:3134":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"16:6717:5063":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"17:10080:7790":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"5:7178:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:21083:8826":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"2:47800:6970":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"17:10428:7801":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"5:689:111":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"1:3680:7962":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"5:3534:3396":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:43245:3407":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"2:47648:6959":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:40389:2593":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"2:39302:2639":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"5:7162:8763":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"2:21827:2494":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"2:2744:2931":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"1:0:1389":{"crate_id":1,"path":["std"],"kind":"module"},"6:4466:5792":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:11544:4187":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"6:4941:5992":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"1:8730:8004":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"1:8948:2087":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"11:2198:5383":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"17:13024:4566":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"17:13453:4675":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"2:40726:2564":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"17:11163:4110":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"18:609:7721":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"1:5563:3742":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"16:4818:4904":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"16:4037:4890":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"16:2594:4842":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:39334:2641":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"18:727:3851":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"17:11037:20917":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"2:12330:31418":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"5:3521:163":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"17:13240:4619":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"1:11035:6849":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"2:40315:2588":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"16:7697:4865":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"2:41911:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"6:4767:5898":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:45644:6871":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:43301:2676":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:40473:2599":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"16:4702:4900":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"6:5779:6102":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"5:2189:6473":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"1:501:3673":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"2:41991:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"5:815:3663":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"1:11688:3774":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"2:3382:7911":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"17:13612:4729":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"1:2206:129":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"2:47686:6962":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:3355:3682":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"5:6740:3694":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"1:7257:25223":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"5:863:3665":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"17:11502:4182":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"17:12259:4346":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"2:7595:2568":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"6:6605:6308":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"0:369:1810":{"crate_id":0,"path":["semver","Op","Wildcard"],"kind":"variant"},"6:6110:6242":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:21107:8826":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"6:4757:5892":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:49668:9018":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"17:9822:7767":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"1:930:7880":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"2:39176:200":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:10462:3764":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"16:4904:4907":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"17:11891:4271":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"16:6351:20847":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"16:8142:7874":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"2:45990:6887":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:11900:745":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"17:10039:7785":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"17:12113:4305":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"1:10652:7081":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"2:43333:2678":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"17:11319:4150":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"1:6373:7982":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"1:11372:7962":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"17:13763:4775":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"11:744:5377":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"16:6876:4866":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"1:3925:8866":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"2:1916:2470":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"2:11484:2701":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:43084:7930":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:8166:8001":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"16:5346:4915":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"17:11355:4155":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"5:5239:14144":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"16:4445:4893":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"17:13292:4628":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"6:1736:5677":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"17:13316:4637":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"1:10670:7087":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"2:11938:112":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:10422:7958":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"6:5862:6138":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"2:20841:9013":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"6:5773:6099":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"16:7244:35453":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"2:40677:6771":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"11:638:3396":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"6:1682:5653":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"1:11243:7100":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"5:1078:35104":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2:10244:2688":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:8762:7062":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"1:3210:7957":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"1:5910:3742":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"1:888:5377":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"1:4125:8891":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"1:6865:8199":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"6:6553:6280":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"16:4845:4905":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"1:11887:936":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"1:3325:2558":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:40102:6757":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:3249:7959":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"2:40057:14197":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"1:1568:2421":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"1:8124:2584":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"2:6977:2553":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"17:10104:3995":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"2:30041:2488":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"1:11449:7102":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"2:46866:6919":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"2:4602:14191":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"1:1572:2419":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"17:12282:4347":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:4322:3706":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"17:11471:4173":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"17:12536:4389":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"2:40116:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:10865:7063":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"1:4990:7967":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"9:325:5426":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"17:13194:4606":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"2:21945:6534":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"5:1432:7878":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"1:6188:3742":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"16:6431:5012":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"16:55:5216":{"crate_id":16,"path":["gimli","endianity","Endianity"],"kind":"trait"},"2:20804:9012":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"16:2931:19986":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"1:11888:419":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"2:45592:6869":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:21443:33437":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"16:7669:4874":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:41671:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:5528:2589":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"17:13169:4597":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"17:8632:20891":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"2:4007:7913":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"2:43265:3406":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"0:354:1762":{"crate_id":0,"path":["semver","Op"],"kind":"enum"},"5:5485:2426":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"2:9368:141":{"crate_id":2,"path":["core","hash","macros","Hash"],"kind":"proc_derive"},"6:4890:5956":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"1:3458:8824":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"2:2856:2634":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"16:8180:20856":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"6:7520:6448":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"1:5719:7979":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"6:5995:6214":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:3677:7961":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"2:43561:2689":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"6:7230:6425":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"4:0:2255":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"17:12894:4515":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"6:4472:5794":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"6:7258:6428":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:45437:6863":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:947:7883":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"5:7225:6486":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"17:8651:3951":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"17:11434:4167":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"17:13082:4581":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"6:4404:5762":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"17:8548:20911":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"11:867:7886":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"1:8141:2677":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"2:42913:6816":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:4578:6323":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"6:4619:5850":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"2:9803:8826":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"2:47072:6951":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"18:80:24754":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:21900:31647":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"5:1422:7893":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"17:8909:2677":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"1:3292:8849":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"2:41368:6794":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"6:4797:5914":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"17:8490:20909":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"1:8160:7999":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"2:46189:6893":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"2:10771:3410":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:8154:2680":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"1:5502:8947":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"1:4096:8888":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"11:0:2259":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"1:2867:210":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"16:3872:4888":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"17:11109:4103":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"17:13015:4562":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:43184:3409":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"17:9866:7771":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"17:12019:4002":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"16:4872:4906":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"16:6218:7839":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"1:2360:8815":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"16:2404:4834":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"16:6575:20848":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"2:41791:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"17:10626:4058":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"11:757:2421":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"5:7004:2415":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"18:531:3822":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:40684:2554":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"2:12295:136":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"6:5747:6084":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:11726:2669":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"2:10258:2687":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:46158:6892":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:7798:6986":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"11:2204:35438":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"2:39970:6745":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"16:2357:4832":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"6:573:5526":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"1:5247:120":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"2:47324:6953":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"11:1839:3396":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"5:2908:6470":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"11:326:3644":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"2:9592:3718":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"16:4789:4903":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"5:2169:35077":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"16:6935:7851":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"1:8792:8006":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"6:4947:5995":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"5:1042:35106":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"17:9228:35466":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"6:5857:6137":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"1:7509:3758":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"1:11015:7062":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2:42705:6813":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"2:8356:2666":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"16:6400:5009":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"6:4845:5935":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:43315:2675":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"0:400:1743":{"crate_id":0,"path":["semver","BuildMetadata"],"kind":"struct"},"6:4629:5851":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"17:8979:35459":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"5:780:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"16:5998:20845":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"2:20879:2510":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"2:2506:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"17:9772:3984":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"16:7767:20854":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"2:41454:3396":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"2:44347:161":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"5:4047:3397":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"5:1382:2423":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"11:1540:7894":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"2:46716:6918":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"2:3169:2644":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"2:3079:2413":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"16:154:3639":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"17:12799:4432":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"1:8242:7035":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"1:911:2419":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"17:9886:7773":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"6:1555:5561":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"16:6132:4986":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"17:9488:7751":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"2:9813:222":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:1561:3396":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:11535:2698":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"16:0:2263":{"crate_id":16,"path":["gimli"],"kind":"module"},"17:3142:7739":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"17:1947:7734":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:44076:2657":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"2:22227:178":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"1:11902:743":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"2:4255:7915":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"6:568:5524":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"17:9478:7750":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"0:357:1804":{"crate_id":0,"path":["semver","Op","Greater"],"kind":"variant"},"5:3622:3658":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:7015:30574":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"5:3975:2421":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"2:2833:2629":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"2:6917:2085":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"5:2087:6465":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"6:1657:5634":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"17:13426:4668":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:43921:6839":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"17:10354:4034":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"5:4207:3396":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"17:9946:3991":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"17:13211:4611":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"2:7202:152":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"2:39358:5160":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"16:3063:3859":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"1:6621:7981":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"2:70:789":{"crate_id":2,"path":["core","isize"],"kind":"module"},"6:6700:6339":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:9961:3396":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"2:2264:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:39998:6748":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:4639:8920":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"11:1050:19922":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"17:9322:35461":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"1:4508:8911":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"17:8953:3961":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"2:40255:2584":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"5:1213:7889":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"6:6628:6326":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"17:9138:7743":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"17:12592:4396":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"1:8784:3396":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"6:7275:6438":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"1:1768:610":{"crate_id":1,"path":["std","env"],"kind":"module"},"2:2788:2623":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"5:5908:3682":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"2:22590:2496":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:936:8764":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"17:12236:4337":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"16:8269:128":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"1:867:2423":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"16:7411:4961":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"5:7238:6488":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:2922:2170":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"11:2087:7889":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"1:901:2421":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"1:1071:7889":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"5:6765:3702":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"17:10580:4053":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"2:45413:6862":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"14:187:19935":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:41462:3397":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:45491:6865":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2:40196:3708":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"2:4433:2453":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:9043:7073":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"1:3933:8867":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"16:2967:19987":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"2:44291:195":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"6:7252:6426":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"1:3995:8873":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"2:41606:183":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:2477:7948":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"17:9545:3946":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"2:41589:3397":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"2:47214:6952":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"0:363:1807":{"crate_id":0,"path":["semver","Op","LessEq"],"kind":"variant"},"17:13477:4679":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"1:4112:8890":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"17:12331:4354":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"6:4449:5786":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"17:9275:35465":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"17:10516:4037":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"11:1852:2419":{"crate_id":11,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"2:42498:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"2:4332:2451":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"2:42458:68":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"18:652:3817":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"6:7485:6440":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:21862:6522":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:2317:125":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"16:5616:4918":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"17:8389:20906":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"17:11924:4279":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"18:564:3827":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:4386:2452":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"17:10936:4092":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"5:3184:5381":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"1:7460:4098":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"2:11274:1397":{"crate_id":2,"path":["core","str"],"kind":"module"},"17:8521:20910":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"5:7019:6481":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"2:46528:6914":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"6:1532:5551":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"17:13433:4669":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"6:4331:5716":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"5:5818:3689":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"16:2642:4844":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"1:11145:3769":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"16:7488:5165":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"11:393:35440":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"5:3117:3396":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"18:755:3856":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:40367:2592":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"5:4321:245":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:43579:2690":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:20990:9004":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:11500:2703":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"17:10015:7781":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"2:9117:132":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"1:8171:8860":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"2:2151:589":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:5439:7974":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"17:11993:4286":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"1:8912:107":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"2:2796:2620":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"6:123:14547":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:44376:2471":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"2:4260:7916":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"17:9734:7766":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"17:12483:4385":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"18:538:3825":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"6:1514:5543":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"9:388:19844":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"2:11249:3388":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"11:1843:2423":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"16:5708:4927":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"11:1561:7895":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"1:9081:7075":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"11:1071:35444":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"16:5386:3951":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"5:6294:3658":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"6:6008:6218":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"17:10598:4093":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"2:43153:3394":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"1:5334:7970":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"2:20982:8826":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"2:41512:2907":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"2:44326:7405":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"5:5235:14143":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:43357:2685":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"17:10303:7795":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"6:5967:6200":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"5:1197:5112":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"17:8788:3956":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:6236:206":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"17:11813:4258":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"1:9381:7989":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"2:20768:8424":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"2:7591:2567":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"6:4970:6008":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"1:4564:8868":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"1:8226:8002":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"16:6662:5050":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"1:8496:7058":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:45662:6872":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:4808:795":{"crate_id":2,"path":["core","iter"],"kind":"module"},"16:2808:4851":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"2:11717:2666":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"2:40149:6759":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"2:41445:2208":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"1:11500:7107":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"6:506:5484":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"6:5051:6044":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"17:11446:4170":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"1:10138:8949":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"2:22359:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:8469:7054":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"6:7578:6459":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"17:12449:4372":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"17:10798:20915":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"17:12902:4518":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"1:2574:7949":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"1:926:7879":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"5:6608:2428":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"2:2792:2621":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"2:21116:6508":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"16:6361:5005":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"2:3197:2647":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"5:6248:2421":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"1:1583:5379":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"16:7626:7870":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"1:8748:7061":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"1:5764:3744":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"5:2912:8471":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"6:5755:6086":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"1:10647:7079":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"2:39955:2695":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"6:526:5501":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"1:11237:7099":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"6:7503:6443":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"17:8667:3952":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"16:6179:7821":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"16:5071:4912":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"1:8410:7049":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"5:2905:3002":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"17:11844:4265":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"6:4499:5808":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:1985:184":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"6:1908:15894":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"17:10052:7787":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"17:11258:4137":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"6:6814:6410":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"2:2847:2632":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"17:12126:4306":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:4042:14129":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"17:12646:4410":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"16:6474:4876":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"0:355:1803":{"crate_id":0,"path":["semver","Op","Exact"],"kind":"variant"},"1:4436:8894":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"16:3640:3863":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"17:9188:35463":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"11:2212:5386":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"2:2774:2618":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:21004:6508":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"11:1035:7889":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"6:4784:5909":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:43656:2694":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"5:4366:3682":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"2:32060:6606":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"1:6369:2554":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"2:1637:3132":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"2:12501:107":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"17:11299:4140":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"17:11785:4252":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"17:9973:3993":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"1:11331:7961":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"17:13265:4624":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"16:3446:4883":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"1:4104:8889":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"1:4681:8881":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"1:9877:6790":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"17:10721:4068":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"17:10377:4035":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"1:8918:8009":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"2:2354:189":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"16:4757:4902":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"17:10491:7806":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"1:11168:8030":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"16:4327:4891":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"6:6047:6228":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"6:4653:5853":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:42898:6815":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"9:352:19858":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"17:9933:3989":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"1:7862:6463":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"16:5847:4945":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"17:13659:4747":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"16:3749:4885":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"6:5015:6022":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"11:840:7883":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"6:1752:5682":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"6:4980:6009":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"6:4851:5936":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"6:4590:5848":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"6:5077:6055":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"1:2387:2271":{"crate_id":1,"path":["std","io"],"kind":"module"},"17:11532:4186":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"1:7942:2084":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"1:9033:218":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"1:11393:7963":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"6:5880:6150":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"14:221:5321":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"1:1846:7944":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"16:5944:7814":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"11:2219:2417":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"16:6293:4996":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:47862:6972":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"17:13033:4567":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"2:2926:2636":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:21916:31658":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"5:6579:2426":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"16:3782:4886":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"6:562:5521":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"16:3585:4884":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"2:43640:2697":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"6:4875:5950":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"16:5418:4916":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"17:10840:4086":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"6:7555:6456":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"16:6146:194":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"17:10747:128":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"5:3088:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"2:47785:6969":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"5:7352:2420":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"2:21803:6516":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:11886:371":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"16:6390:5008":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"13:226:5368":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:40069:6752":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"1:10942:3767":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"1:6757:8998":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"17:9350:35462":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"2:40459:2598":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:42433:5203":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"5:7058:2423":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2:46292:6895":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"5:6598:2427":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"15:219:8148":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"2:20760:9006":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr"],"kind":"trait"},"1:8091:7028":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"11:991:5112":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"2:47721:6965":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"6:494:5479":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"1:6586:217":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"2:30266:2409":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:7471:8033":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"1:3782:7963":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"17:13721:4769":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"17:12522:4388":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"2:22557:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"5:4914:3682":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"1:8208:7033":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"2:44152:6852":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"11:305:5373":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"16:6506:5022":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"1:3208:7956":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"1:8134:2598":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"2:44096:2663":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"2:11732:2668":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"2:43763:6826":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"6:6706:6340":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"2:9142:112":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:44273:205":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"6:4538:5829":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"1:7677:8784":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"2:40376:2579":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"2:10053:2698":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"6:547:5513":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"2:21431:3391":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"6:4288:5688":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:9609:3719":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"6:1668:5642":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:43649:2693":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"17:10545:4042":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"6:1692:5659":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:2163:2511":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"17:13367:4650":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"17:11556:4188":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"2:43665:2695":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"11:1873:5380":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"18:644:3817":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"2:45622:6870":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"1:10835:7974":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"1:11870:26160":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"17:11339:4151":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"1:11195:7096":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2:43144:3393":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:11906:1496":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"17:13121:4590":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"17:8931:3960":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"18:736:24765":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"1:8234:7999":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"11:452:142":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"1:1080:7892":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2:40286:2585":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"6:5798:6104":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"5:5035:3689":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"2:43778:6832":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"2:4761:389":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"5:35:2418":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"16:7683:4875":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"17:11832:4263":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"2:5586:2578":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2:40356:2601":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"2:45792:6881":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:844:3396":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"16:2720:4847":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"2:40022:6750":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"14:0:2261":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"5:4399:3684":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"16:6164:4991":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"2:43173:3403":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"2:42403:68":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"1:1821:7943":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"2:22392:2139":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"1:11461:27107":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"1:8955:8012":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"1:355:7931":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"6:6821:6413":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"2:11712:2652":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"17:12033:4294":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"17:10505:7807":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"1:5693:7978":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"17:9566:7745":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:40246:2575":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"2:9149:2440":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"11:2060:5112":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:46060:6890":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"17:8598:20913":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"6:4865:5944":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"1:7786:7989":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"2:41380:6795":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"2:0:497":{"crate_id":2,"path":["core"],"kind":"module"},"6:6024:6222":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"17:1787:7733":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"11:1859:5378":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"17:9312:7746":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"1:9120:27061":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"2:42393:6800":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"2:2245:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"17:13443:4672":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"2:20577:33749":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:1544:3682":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"1:9981:7943":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"17:11060:4062":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"6:4751:5890":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:2741:2796":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"2:40133:32605":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:10857:20916":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"16:6990:5102":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"2:45543:6867":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"5:3129:34115":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"1:10357:3763":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"2:4183:2450":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"2:9624:3724":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"6:4898:5961":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"2:2684:220":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"5:1995:7900":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"2:40487:2600":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"2:41597:2423":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"17:13309:4636":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"17:9443:7748":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"6:6587:6299":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"1:8260:8003":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"2:9985:3397":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"17:12959:4556":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"2:8817:668":{"crate_id":2,"path":["core","fmt"],"kind":"module"},"6:7443:6439":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:11279:2672":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"1:6332:7981":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"2:40306:2587":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"11:783:3652":{"crate_id":11,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"18:481:3815":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"17:11800:4256":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"6:7568:6457":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"6:4478:5797":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"16:7859:20855":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"16:4969:4909":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:21332:9005":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"16:6520:5024":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"17:9986:3994":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"16:7437:5161":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"1:11908:1498":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"1:5499:6229":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"17:13842:4795":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"1:6552:3754":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"5:7335:2419":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"17:11090:4100":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"6:4459:5789":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:41226:6777":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"17:10735:4071":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"1:8220:8892":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"6:4641:5852":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"1:8800:2423":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"16:7077:20851":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"2:45347:6859":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2:3182:33824":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"2:11783:14151":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"17:11484:4174":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"16:6854:5083":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"1:10702:119":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"2:10272:3400":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"16:2319:4824":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"16:5920:4953":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"1:4074:30573":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"2:2701:228":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"5:6446:3658":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:43621:2682":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"6:6785:6394":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"17:13385:4654":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"1:11468:7103":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"17:11136:4104":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"1:5556:206":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:2603:128":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"17:13219:4614":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"16:6376:4858":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"16:8129:7871":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"16:2502:4838":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"1:1924:3120":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"6:6136:6257":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"17:13678:4753":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"1:1783:7941":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"17:247:7728":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"6:4423:5775":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:41951:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:41521:3142":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"2:47526:6956":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"16:5594:4862":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:47666:6960":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"16:7029:5106":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:40699:2558":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"6:4932:5986":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"0:299:1736":{"crate_id":0,"path":["semver","Version"],"kind":"struct"},"5:633:7896":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"6:488:5476":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"6:5071:6052":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"6:1539:5553":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"1:953:7885":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"6:5816:6116":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"17:10967:4093":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"2:45459:6864":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"17:13499:4684":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"2:3995:7912":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"16:5557:4857":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"6:6598:6304":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:10804:3411":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"5:7013:2423":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"6:6668:6328":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"17:8443:20908":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"13:0:2254":{"crate_id":13,"path":["std_detect"],"kind":"module"},"18:599:35474":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:43935:14158":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"2:45822:6882":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:2614:7950":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"16:7335:35455":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"2:8675:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:3170:7955":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"6:4294:5689":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:11193:4114":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"2:40296:2586":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"2:6585:2573":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"17:9038:35467":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"17:13332:4639":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"16:535:4814":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"1:10822:7988":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"2:46652:6916":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:7932:7993":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"17:12307:4351":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"2:2911:2635":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:7240:121":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"2:43631:2681":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"16:7711:5174":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"1:4854:8919":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"16:6321:7850":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"2:21088:9001":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"2:44112:6849":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"2:5468:3682":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"1:8147:2685":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"16:3899:4889":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"17:12345:4355":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"1:3939:8868":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"}},"external_crates":{"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":26}