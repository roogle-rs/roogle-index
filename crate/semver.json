{"root":"0:0:2639","crate_version":"1.0.22","includes_private":false,"index":{"b:2:2920-0:299:2414":{"id":"b:2:2920-0:299:2414","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:2414","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2922:832"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:231":{"id":"0:231","crate_id":0,"name":null,"span":{"filename":"src/parse.rs","begin":[127,0],"end":[137,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12845:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Prerelease","id":"0:381:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:232:136","0:233:2590"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2931-0:319:2434":{"id":"b:2:2931-0:319:2434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2934:137","2:2935:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2929:137":{"id":"2:2929:137","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:269:2633":{"id":"0:269:2633","crate_id":0,"name":"matches","span":{"filename":"src/lib.rs","begin":[541,4],"end":[543,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["version",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Version","id":"0:299:2414","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42098:3645-0:351:2440":{"id":"a:2:42098:3645-0:351:2440","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42098:3645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:312":{"id":"0:312","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[161,31],"end":[161,34]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2729:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:2414","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:313:482"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2916-0:395:2421":{"id":"b:2:2916-0:395:2421","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2919:3683"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:192":{"id":"0:192","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[45,0],"end":[49,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","lt","le","ge"],"trait":{"name":"PartialOrd","id":"2:2735:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::BuildMetadata","id":"0:395:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:193:1295"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:398:60":{"id":"0:398:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[375,9],"end":[375,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"BuildMetadata","id":"0:395:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:195:482":{"id":"0:195:482","crate_id":0,"name":"cmp","span":{"filename":"src/impls.rs","begin":[52,4],"end":[103,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Ordering","id":"2:30997:196","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3758-0:333:2436":{"id":"b:2:3758-0:333:2436","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3756:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:2436","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3760:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13240:3727":{"id":"2:13240:3727","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:42005:191","prim@char":"1:12341:471","self::pattern":"2:12885:3380"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:274:2638":{"id":"0:274:2638","crate_id":0,"name":"is_empty","span":{"filename":"src/lib.rs","begin":[559,4],"end":[561,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13254:29282":{"id":"2:13254:29282","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12885:3380","`DoubleEndedIterator`":"2:8263:129","prim@char":"1:12341:471","str::split":"2:13248:2909"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43913:3411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12891:3394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12906:3396","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13291:34292":{"id":"2:13291:34292","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32235:237-0:351:2440":{"id":"a:2:32235:237-0:351:2440","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32235:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:5866-0:319:2434":{"id":"b:5:5866-0:319:2434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10319:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5864:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5868:1781"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5633:34999":{"id":"5:5633:34999","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:304:3127","`String`":"5:7645:243"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:304:3127","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7645:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:225":{"id":"0:225","crate_id":0,"name":null,"span":{"filename":"src/parse.rs","begin":[84,0],"end":[111,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12845:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::VersionReq","id":"0:319:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:226:136","0:227:2590"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:738-0:381:2419":{"id":"b:5:738-0:381:2419","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:734:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:740:3746","5:741:3747","5:742:3748"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13226:32393":{"id":"2:13226:32393","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:13227:32403"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:44169:3409","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:236:2590":{"id":"0:236:2590","crate_id":0,"name":"from_str","span":{"filename":"src/parse.rs","begin":[142,4],"end":[148,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42136:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:12845:2379","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:266:60":{"id":"0:266:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[531,4],"end":[533,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:27:802":{"id":"0:27:802","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[49,4],"end":[78,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13196:997":{"id":"2:13196:997","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12341:471"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:309":{"id":"0:309","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[161,20],"end":[161,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32237:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:2414","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2645:3066":{"id":"2:2645:3066","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:325":{"id":"0:325","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[187,20],"end":[187,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32237:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13284:34289":{"id":"2:13284:34289","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12885:3380","`DoubleEndedIterator`":"2:8263:129","prim@char":"1:12341:471","str::match_indices":"2:13281:34288"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:44063:3420","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12891:3394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12906:3396","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13323:29141":{"id":"2:13323:29141","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:991:38683"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2926-0:351:2440":{"id":"b:2:2926-0:351:2440","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2896:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2929:137","2:2930:1808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:37:802":{"id":"0:37:802","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[117,4],"end":[119,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:31:802":{"id":"0:31:802","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[88,4],"end":[90,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13251:29280":{"id":"2:13251:29280","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12341:471","self::pattern":"2:12885:3380"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:12700:3426","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:391:699":{"id":"0:391:699","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[317,29],"end":[317,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Prerelease","id":"0:381:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42097:3646-0:220:137":{"id":"a:2:42097:3646-0:220:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42097:3646","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:229:136":{"id":"0:229:136","crate_id":0,"name":"Err","span":{"filename":"src/parse.rs","begin":[114,4],"end":[114,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:220:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:3174:3665-0:381:2419":{"id":"a:2:3174:3665-0:381:2419","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3174:3665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:272:1178":{"id":"0:272:1178","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[551,4],"end":[553,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42136:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:220:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13220:29277":{"id":"2:13220:29277","crate_id":2,"name":"split_at_checked","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut_checked`]\nmethod.\n\n[`split_at_mut_checked`]: str::split_at_mut_checked\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at_checked(3).unwrap();\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n\nassert_eq!(None, s.split_at_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_checked(16));  // Beyond the string length\n```","links":{"str::split_at_mut_checked":"2:13221:29278"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13321:28634":{"id":"2:13321:28634","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:310":{"id":"0:310","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[161,20],"end":[161,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2693:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:2414","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:311:699"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13230:32389":{"id":"2:13230:32389","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:44187:3421","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13275:2633":{"id":"2:13275:2633","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12885:3380","`DoubleEndedIterator`":"2:8263:129","prim@char":"1:12341:471","str::rmatches":"2:13278:34287"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:44099:3417","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:227:2590":{"id":"0:227:2590","crate_id":0,"name":"from_str","span":{"filename":"src/parse.rs","begin":[87,4],"end":[110,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42136:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:12845:2379","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3139:247-0:220:137":{"id":"a:2:3139:247-0:220:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3139:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:405:699":{"id":"0:405:699","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[375,29],"end":[375,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BuildMetadata","id":"0:395:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:186:630":{"id":"0:186:630","crate_id":0,"name":"deref","span":{"filename":"src/impls.rs","begin":[26,4],"end":[28,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:3347:124","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:381:2419":{"id":"0:381:2419","crate_id":0,"name":"Prerelease","span":{"filename":"src/lib.rs","begin":[318,0],"end":[320,1]},"visibility":"public","docs":"Optional pre-release identifier on a version string. This comes after `-` in\na SemVer version, like `1.0.0-alpha.1`\n\n# Examples\n\nSome real world pre-release idioms drawn from crates.io:\n\n- **[mio]** <code>0.7.0-<b>alpha.1</b></code> &mdash; the most common style\n  for numbering pre-releases.\n\n- **[pest]** <code>1.0.0-<b>beta.8</b></code>,&ensp;<code>1.0.0-<b>rc.0</b></code>\n  &mdash; this crate makes a distinction between betas and release\n  candidates.\n\n- **[sassers]** <code>0.11.0-<b>shitshow</b></code> &mdash; ???.\n\n- **[atomic-utils]** <code>0.0.0-<b>reserved</b></code> &mdash; a squatted\n  crate name.\n\n[mio]: https://crates.io/crates/mio\n[pest]: https://crates.io/crates/pest\n[atomic-utils]: https://crates.io/crates/atomic-utils\n[sassers]: https://crates.io/crates/sassers\n\n*Tip:* Be aware that if you are planning to number your own pre-releases,\nyou should prefer to separate the numeric part from any non-numeric\nidentifiers by using a dot in between. That is, prefer pre-releases\n`alpha.1`, `alpha.2`, etc rather than `alpha1`, `alpha2` etc. The SemVer\nspec's rule for pre-release precedence has special treatment of numeric\ncomponents in the pre-release string, but only if there are no non-digit\ncharacters in the same dot-separated component. So you'd have `alpha.2` &lt;\n`alpha.11` as intended, but `alpha11` &lt; `alpha2`.\n\n# Syntax\n\nPre-release strings are a series of dot separated identifiers immediately\nfollowing the patch version. Identifiers must comprise only ASCII\nalphanumerics and hyphens: `0-9`, `A-Z`, `a-z`, `-`. Identifiers must not be\nempty. Numeric identifiers must not include leading zeros.\n\n# Total ordering\n\nPre-releases have a total order defined by the SemVer spec. It uses\nlexicographic ordering of dot-separated components. Identifiers consisting\nof only digits are compared numerically. Otherwise, identifiers are compared\nin ASCII sort order. Any numeric identifier is always less than any\nnon-numeric identifier.\n\nExample:&ensp;`alpha`&ensp;&lt;&ensp;`alpha.85`&ensp;&lt;&ensp;`alpha.90`&ensp;&lt;&ensp;`alpha.200`&ensp;&lt;&ensp;`alpha.0a`&ensp;&lt;&ensp;`alpha.1a0`&ensp;&lt;&ensp;`alpha.a`&ensp;&lt;&ensp;`beta`","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:270","a:2:3139:247-0:381:2419","a:2:42098:3645-0:381:2419","a:2:32294:3531-0:381:2419","a:2:42097:3646-0:381:2419","a:2:3174:3665-0:381:2419","a:2:32235:237-0:381:2419","b:2:2646-0:381:2419","b:2:2643-0:381:2419","b:2:2920-0:381:2419","b:2:2916-0:381:2419","b:2:2926-0:381:2419","b:2:3758-0:381:2419","b:2:2931-0:381:2419","b:5:5866-0:381:2419","b:5:738-0:381:2419","0:184","0:34","0:190","0:383","0:387","0:28","0:231","0:390","0:392","0:385","0:389","0:194"]}}},"b:2:2643-0:299:2414":{"id":"b:2:2643-0:299:2414","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2637:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:2414","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2645:3066"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13225:2862":{"id":"2:13225:2862","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43881:3405","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:386:475":{"id":"0:386:475","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[317,18],"end":[317,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Prerelease","id":"0:381:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2916-0:319:2434":{"id":"b:2:2916-0:319:2434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2919:3683"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32235:237-0:333:2436":{"id":"a:2:32235:237-0:333:2436","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32235:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:2436","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2931-0:299:2414":{"id":"b:2:2931-0:299:2414","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:2414","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2934:137","2:2935:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32294:3531-0:220:137":{"id":"a:2:32294:3531-0:220:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32294:3531","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2926-0:299:2414":{"id":"b:2:2926-0:299:2414","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2896:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:2414","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2929:137","2:2930:1808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:299:2414":{"id":"0:299:2414","crate_id":0,"name":"Version","span":{"filename":"src/lib.rs","begin":[162,0],"end":[168,1]},"visibility":"public","docs":"**SemVer version** as defined by <https://semver.org>.\n\n# Syntax\n\n- The major, minor, and patch numbers may be any integer 0 through u64::MAX.\n  When representing a SemVer version as a string, each number is written as\n  a base 10 integer. For example, `1.0.119`.\n\n- Leading zeros are forbidden in those positions. For example `1.01.00` is\n  invalid as a SemVer version.\n\n- The pre-release identifier, if present, must conform to the syntax\n  documented for [`Prerelease`].\n\n- The build metadata, if present, must conform to the syntax documented for\n  [`BuildMetadata`].\n\n- Whitespace is not allowed anywhere in the version.\n\n# Total ordering\n\nGiven any two SemVer versions, one is less than, greater than, or equal to\nthe other. Versions may be compared against one another using Rust's usual\ncomparison operators.\n\n- The major, minor, and patch number are compared numerically from left to\nright, lexicographically ordered as a 3-tuple of integers. So for example\nversion `1.5.0` is less than version `1.19.0`, despite the fact that\n\"1.19.0\" &lt; \"1.5.0\" as ASCIIbetically compared strings and 1.19 &lt; 1.5\nas real numbers.\n\n- When major, minor, and patch are equal, a pre-release version is\n  considered less than the ordinary release:&ensp;version `1.0.0-alpha.1` is\n  less than version `1.0.0`.\n\n- Two pre-releases of the same major, minor, patch are compared by\n  lexicographic ordering of dot-separated components of the pre-release\n  string.\n\n  - Identifiers consisting of only digits are compared\n    numerically:&ensp;`1.0.0-pre.8` is less than `1.0.0-pre.12`.\n\n  - Identifiers that contain a letter or hyphen are compared in ASCII sort\n    order:&ensp;`1.0.0-pre12` is less than `1.0.0-pre8`.\n\n  - Any numeric identifier is always less than any non-numeric\n    identifier:&ensp;`1.0.0-pre.1` is less than `1.0.0-pre.x`.\n\nExample:&ensp;`1.0.0-alpha`&ensp;&lt;&ensp;`1.0.0-alpha.1`&ensp;&lt;&ensp;`1.0.0-alpha.beta`&ensp;&lt;&ensp;`1.0.0-beta`&ensp;&lt;&ensp;`1.0.0-beta.2`&ensp;&lt;&ensp;`1.0.0-beta.11`&ensp;&lt;&ensp;`1.0.0-rc.1`&ensp;&lt;&ensp;`1.0.0`","links":{"`Prerelease`":"0:381:2419","`BuildMetadata`":"0:395:2421"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:300:2415","0:301:2416","0:302:2417","0:303:2418","0:304:2420"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:257","a:2:3139:247-0:299:2414","a:2:42098:3645-0:299:2414","a:2:32294:3531-0:299:2414","a:2:42097:3646-0:299:2414","a:2:3174:3665-0:299:2414","a:2:32235:237-0:299:2414","b:2:2646-0:299:2414","b:2:2643-0:299:2414","b:2:2920-0:299:2414","b:2:2916-0:299:2414","b:2:2926-0:299:2414","b:2:3758-0:299:2414","b:2:2931-0:299:2414","b:5:5866-0:299:2414","b:5:738-0:299:2414","0:305","0:20","0:316","0:310","0:32","0:307","0:222","0:314","0:309","0:312"]}}},"0:335:2415":{"id":"0:335:2415","crate_id":0,"name":"major","span":{"filename":"src/lib.rs","begin":[198,4],"end":[198,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u64"}}},"0:271:2573":{"id":"0:271:2573","crate_id":0,"name":"EMPTY","span":{"filename":"src/lib.rs","begin":[547,4],"end":[549,6]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:35:802":{"id":"0:35:802","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[111,4],"end":[113,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3758-0:381:2419":{"id":"b:2:3758-0:381:2419","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3756:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3760:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:268:2377":{"id":"0:268:2377","crate_id":0,"name":"parse","span":{"filename":"src/lib.rs","begin":[537,4],"end":[539,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42136:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:220:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:362:2486":{"id":"0:362:2486","crate_id":0,"name":"Tilde","span":{"filename":"src/lib.rs","begin":[259,4],"end":[259,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:5:738-0:319:2434":{"id":"b:5:738-0:319:2434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:734:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:740:3746","5:741:3747","5:742:3748"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:339":{"id":"0:339","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[195,9],"end":[195,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:2436","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:340:475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:341":{"id":"0:341","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[195,16],"end":[195,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2698:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:2436","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:315:1295":{"id":"0:315:1295","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[161,36],"end":[161,46]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Version","id":"0:299:2414","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30997:196","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:319:2434":{"id":"0:319:2434","crate_id":0,"name":"VersionReq","span":{"filename":"src/lib.rs","begin":[189,0],"end":[191,1]},"visibility":"public","docs":"**SemVer version requirement** describing the intersection of some version\ncomparators, such as `>=1.2.3, <1.8`.\n\n# Syntax\n\n- Either `*` (meaning \"any\"), or one or more comma-separated comparators.\n\n- A [`Comparator`] is an operator ([`Op`]) and a partial version, separated\n  by optional whitespace. For example `>=1.0.0` or `>=1.0`.\n\n- Build metadata is syntactically permitted on the partial versions, but is\n  completely ignored, as it's never relevant to whether any comparator\n  matches a particular version.\n\n- Whitespace is permitted around commas and around operators. Whitespace is\n  not permitted within a partial version, i.e. anywhere between the major\n  version number and its minor, patch, pre-release, or build metadata.","links":{"`Op`":"0:351:2440","`Comparator`":"0:333:2436"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:320:2435"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:261","a:2:3139:247-0:319:2434","a:2:42098:3645-0:319:2434","a:2:32294:3531-0:319:2434","a:2:42097:3646-0:319:2434","a:2:3174:3665-0:319:2434","a:2:32235:237-0:319:2434","b:2:2646-0:319:2434","b:2:2643-0:319:2434","b:2:2920-0:319:2434","b:2:2916-0:319:2434","b:2:2926-0:319:2434","b:2:3758-0:319:2434","b:2:2931-0:319:2434","b:5:5866-0:319:2434","b:5:738-0:319:2434","0:24","0:325","0:328","0:203","0:225","0:323","0:265","0:321","0:326","0:331"]}}},"0:369":{"id":"0:369","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,15],"end":[251,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:370:475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:28":{"id":"0:28","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[81,0],"end":[85,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10319:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Prerelease","id":"0:381:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:29:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:738-0:395:2421":{"id":"b:5:738-0:395:2421","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:734:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:740:3746","5:741:3747","5:742:3748"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:403":{"id":"0:403","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[375,29],"end":[375,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32237:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:235:136":{"id":"0:235:136","crate_id":0,"name":"Err","span":{"filename":"src/parse.rs","begin":[140,4],"end":[140,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:220:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:5:738-0:299:2414":{"id":"b:5:738-0:299:2414","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:734:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:2414","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:740:3746","5:741:3747","5:742:3748"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3758-0:299:2414":{"id":"b:2:3758-0:299:2414","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3756:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:2414","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3760:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2920-0:220:137":{"id":"b:2:2920-0:220:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2922:832"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42098:3645-0:333:2436":{"id":"a:2:42098:3645-0:333:2436","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42098:3645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:2436","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:85:802":{"id":"0:85:802","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[33,4],"end":[89,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13212:29252":{"id":"2:13212:29252","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10975:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10975:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13219:29274":{"id":"2:13219:29274","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_mut_checked`](str::split_at_mut_checked).\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:13218:2957","str::split_at_mut_checked":"2:13221:29278"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13322:28635":{"id":"2:13322:28635","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:322:475":{"id":"0:322:475","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[187,9],"end":[187,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"VersionReq","id":"0:319:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:305":{"id":"0:305","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[161,9],"end":[161,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:2414","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:306:475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:321":{"id":"0:321","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[187,9],"end":[187,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:322:475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2643-0:381:2419":{"id":"b:2:2643-0:381:2419","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2637:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2645:3066"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:88":{"id":"0:88","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[104,0],"end":[111,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10314:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::parse::Error","id":"0:220:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:89:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42098:3645-0:299:2414":{"id":"a:2:42098:3645-0:299:2414","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42098:3645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:2414","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:393:872":{"id":"0:393:872","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[317,40],"end":[317,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10538:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:193:1295":{"id":"0:193:1295","crate_id":0,"name":"partial_cmp","span":{"filename":"src/impls.rs","begin":[46,4],"end":[48,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Ordering","id":"2:30997:196","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5617:34995":{"id":"5:5617:34995","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:304:3127","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:304:3127","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5616":{"id":"5:5616","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5617:34995","5:5618:3238","5:5621:34996","5:5624:34997","5:5632:34998","5:5633:34999","5:5634:3279","5:5635:28631","5:5636:28632"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:304:2420":{"id":"0:304:2420","crate_id":0,"name":"build","span":{"filename":"src/lib.rs","begin":[167,4],"end":[167,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"BuildMetadata","id":"0:395:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:375:699":{"id":"0:375:699","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[251,26],"end":[251,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Op","id":"0:351:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3139:247-0:381:2419":{"id":"a:2:3139:247-0:381:2419","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3139:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:33:802":{"id":"0:33:802","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[94,4],"end":[107,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:26":{"id":"0:26","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[48,0],"end":[79,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10319:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Comparator","id":"0:333:2436","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:27:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42097:3646-0:351:2440":{"id":"a:2:42097:3646-0:351:2440","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42097:3646","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13206:336":{"id":"2:13206:336","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:13207:2863","`u8`":"1:12360:1851"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13295:34295":{"id":"2:13295:34295","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12341:471","self::pattern":"2:12885:3380"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12891:3394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12911:3395","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13307:34296":{"id":"2:13307:34296","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12341:471","self::pattern":"2:12885:3380"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12891:3394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12906:3396","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:360:2485":{"id":"0:360:2485","crate_id":0,"name":"LessEq","span":{"filename":"src/lib.rs","begin":[258,4],"end":[258,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:13329:34300":{"id":"2:13329:34300","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4949:34300"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:44212:3424","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:36":{"id":"0:36","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[116,0],"end":[120,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10314:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::BuildMetadata","id":"0:395:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:37:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13231:29290":{"id":"2:13231:29290","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12341:471","self::pattern":"2:12885:3380"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5624:34997":{"id":"5:5624:34997","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7645:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7645:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:230:2590":{"id":"0:230:2590","crate_id":0,"name":"from_str","span":{"filename":"src/parse.rs","begin":[116,4],"end":[124,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42136:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:12845:2379","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:270":{"id":"0:270","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[546,0],"end":[562,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Prerelease","id":"0:381:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:271:2573","0:272:1178","0:273:338","0:274:2638"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2919:3683":{"id":"2:2919:3683","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2893:144"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:303:2418":{"id":"0:303:2418","crate_id":0,"name":"pre","span":{"filename":"src/lib.rs","begin":[166,4],"end":[166,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Prerelease","id":"0:381:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:13328:9815":{"id":"2:13328:9815","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4952:9815"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:44203:3423","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:264:2633":{"id":"0:264:2633","crate_id":0,"name":"matches","span":{"filename":"src/lib.rs","begin":[523,4],"end":[525,5]},"visibility":"public","docs":"Evaluate whether the given `Version` satisfies the version requirement\ndescribed by `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["version",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Version","id":"0:299:2414","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42097:3646-0:381:2419":{"id":"a:2:42097:3646-0:381:2419","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42097:3646","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:5866-0:381:2419":{"id":"b:5:5866-0:381:2419","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10319:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5864:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5868:1781"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13294:34294":{"id":"2:13294:34294","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:29:802":{"id":"0:29:802","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[82,4],"end":[84,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:275":{"id":"0:275","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[564,0],"end":[580,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:276:2573","0:277:1178","0:278:338","0:279:2638"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2920-0:351:2440":{"id":"b:2:2920-0:351:2440","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2922:832"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13234:2758":{"id":"2:13234:2758","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, in which case this function will return true if\nthe `&str` is a prefix of this string slice.\n\nThe [pattern] can also be a [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\nThese will only be checked against the first character of this string slice.\nLook at the second example below regarding behavior for slices of [`char`]s.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```\n\n```\nlet bananas = \"bananas\";\n\n// Note that both of these assert successfully.\nassert!(bananas.starts_with(&['b', 'a', 'n', 'a']));\nassert!(bananas.starts_with(&['a', 'b', 'c', 'd']));\n```","links":{"prim@char":"1:12341:471","self::pattern":"2:12885:3380"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13218:2957":{"id":"2:13218:2957","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_checked`](str::split_at_checked).\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_checked":"2:13220:29277","str::split_at_mut":"2:13219:29274"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:349":{"id":"0:349","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[195,37],"end":[195,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10314:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:2436","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:350:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5634:3279":{"id":"5:5634:3279","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7645:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7645:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:34":{"id":"0:34","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[110,0],"end":[114,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10314:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Prerelease","id":"0:381:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:35:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13289:34291":{"id":"2:13289:34291","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2643-0:319:2434":{"id":"b:2:2643-0:319:2434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2637:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2645:3066"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:257":{"id":"0:257","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[380,0],"end":[481,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Version","id":"0:299:2414","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:258:1178","0:259:2377","0:260:2612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:392":{"id":"0:392","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[317,40],"end":[317,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10530:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:393:872"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:267":{"id":"0:267","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[536,0],"end":[544,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Comparator","id":"0:333:2436","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:268:2377","0:269:2633"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13269:29288":{"id":"2:13269:29288","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:84":{"id":"0:84","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[32,0],"end":[90,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10319:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::parse::Error","id":"0:220:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:85:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:89:802":{"id":"0:89:802","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[105,4],"end":[110,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:258:1178":{"id":"0:258:1178","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[398,4],"end":[406,5]},"visibility":"public","docs":"Create `Version` with an empty pre-release and build metadata.\n\nEquivalent to:\n\n```\n# use semver::{BuildMetadata, Prerelease, Version};\n#\n# const fn new(major: u64, minor: u64, patch: u64) -> Version {\nVersion {\n    major,\n    minor,\n    patch,\n    pre: Prerelease::EMPTY,\n    build: BuildMetadata::EMPTY,\n}\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["major",{"primitive":"u64"}],["minor",{"primitive":"u64"}],["patch",{"primitive":"u64"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:340:475":{"id":"0:340:475","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[195,9],"end":[195,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Comparator","id":"0:333:2436","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3758-0:351:2440":{"id":"b:2:3758-0:351:2440","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3756:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3760:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:199:482":{"id":"0:199:482","crate_id":0,"name":"cmp","span":{"filename":"src/impls.rs","begin":[107,4],"end":[145,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Ordering","id":"2:30997:196","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:397":{"id":"0:397","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[375,9],"end":[375,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2968:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:398:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:224:2590":{"id":"0:224:2590","crate_id":0,"name":"from_str","span":{"filename":"src/parse.rs","begin":[28,4],"end":[81,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42136:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:12845:2379","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13216:34282":{"id":"2:13216:34282","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12347:1721","str::slice_mut_unchecked":"2:13217:34283","crate::ops::Index":"2:39549:3123"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:387":{"id":"0:387","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[317,25],"end":[317,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2698:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:5866-0:299:2414":{"id":"b:5:5866-0:299:2414","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10319:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5864:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:2414","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5868:1781"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42098:3645-0:381:2419":{"id":"a:2:42098:3645-0:381:2419","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42098:3645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5868:1781":{"id":"5:5868:1781","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7645:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:742:3748":{"id":"5:742:3748","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32294:3531-0:319:2434":{"id":"a:2:32294:3531-0:319:2434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32294:3531","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:223:136":{"id":"0:223:136","crate_id":0,"name":"Err","span":{"filename":"src/parse.rs","begin":[26,4],"end":[26,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:220:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:13304:29292":{"id":"2:13304:29292","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12341:471","self::pattern":"2:12885:3380"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12891:3394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12906:3396","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3758-0:319:2434":{"id":"b:2:3758-0:319:2434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3756:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3760:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13316:2377":{"id":"2:13316:2377","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12846:136","`FromStr`":"2:12845:2379"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42136:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12845:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12845:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13244:3689":{"id":"2:13244:3689","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:42005:191","prim@char":"1:12341:471","self::pattern":"2:12885:3380"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12891:3394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12906:3396","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5866-0:333:2436":{"id":"b:5:5866-0:333:2436","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10319:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5864:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:2436","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5868:1781"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:198":{"id":"0:198","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[106,0],"end":[146,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2729:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::BuildMetadata","id":"0:395:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:199:482"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:345:699":{"id":"0:345:699","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[195,20],"end":[195,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Comparator","id":"0:333:2436","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13199:34279":{"id":"2:13199:34279","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:226:136":{"id":"0:226:136","crate_id":0,"name":"Err","span":{"filename":"src/parse.rs","begin":[85,4],"end":[85,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:220:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:13205:34281":{"id":"2:13205:34281","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13257:34285":{"id":"2:13257:34285","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12885:3380","str::split":"2:13248:2909","prim@char":"1:12341:471","`DoubleEndedIterator`":"2:8263:129","str::rsplit_terminator":"2:13260:34286"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43945:3414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:203":{"id":"0:203","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[148,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromIterator","id":"2:8214:145","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Comparator","id":"0:333:2436","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::VersionReq","id":"0:319:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:204:835"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:338:2418":{"id":"0:338:2418","crate_id":0,"name":"pre","span":{"filename":"src/lib.rs","begin":[203,4],"end":[203,23]},"visibility":"public","docs":"Non-empty pre-release is only allowed if patch is Some.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Prerelease","id":"0:381:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"a:2:42097:3646-0:299:2414":{"id":"a:2:42097:3646-0:299:2414","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42097:3646","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:2414","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2648:26770":{"id":"2:2648:26770","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:277:1178":{"id":"0:277:1178","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[569,4],"end":[571,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42136:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:220:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:389":{"id":"0:389","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[317,29],"end":[317,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32237:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:337:2417":{"id":"0:337:2417","crate_id":0,"name":"patch","span":{"filename":"src/lib.rs","begin":[201,4],"end":[201,26]},"visibility":"public","docs":"Patch is only allowed if minor is Some.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u64"}}],"bindings":[]}}}}}},"b:2:2646-0:220:137":{"id":"b:2:2646-0:220:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2640:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2648:26770"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:385":{"id":"0:385","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[317,18],"end":[317,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:386:475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:262:2624":{"id":"0:262:2624","crate_id":0,"name":"STAR","span":{"filename":"src/lib.rs","begin":[498,4],"end":[500,6]},"visibility":"public","docs":"A `VersionReq` with no constraint on the version numbers it matches.\nEquivalent to `VersionReq::parse(\"*\").unwrap()`.\n\nIn terms of comparators this is equivalent to `>=0.0.0`.\n\nCounterintuitively a `*` VersionReq does not match every possible\nversion number. In particular, in order for *any* `VersionReq` to match\na pre-release version, the `VersionReq` must contain at least one\n`Comparator` that has an explicit major, minor, and patch version\nidentical to the pre-release being matched, and that has a nonempty\npre-release component. Since `*` is not written with an explicit major,\nminor, and patch version, and does not contain a nonempty pre-release\ncomponent, it does not match any pre-release versions.","links":{},"attrs":["#[cfg(not(no_const_vec_new))]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:307":{"id":"0:307","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[161,16],"end":[161,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2698:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:2414","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:83":{"id":"0:83","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[30,0],"end":[30,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["description","type_id","cause","source","provide"],"trait":{"name":"Error","id":"2:2979:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::parse::Error","id":"0:220:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2931-0:351:2440":{"id":"b:2:2931-0:351:2440","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2934:137","2:2935:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:233:2590":{"id":"0:233:2590","crate_id":0,"name":"from_str","span":{"filename":"src/parse.rs","begin":[130,4],"end":[136,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42136:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:12845:2379","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:313:482":{"id":"0:313:482","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[161,31],"end":[161,34]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Version","id":"0:299:2414","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30997:196","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:328":{"id":"0:328","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[187,31],"end":[187,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10530:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:329:872"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2926-0:319:2434":{"id":"b:2:2926-0:319:2434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2896:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2929:137","2:2930:1808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:5866-0:220:137":{"id":"b:5:5866-0:220:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10319:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5864:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5868:1781"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:407:872":{"id":"0:407:872","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[375,40],"end":[375,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10538:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42097:3646-0:319:2434":{"id":"a:2:42097:3646-0:319:2434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42097:3646","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:228":{"id":"0:228","crate_id":0,"name":null,"span":{"filename":"src/parse.rs","begin":[113,0],"end":[125,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12845:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Comparator","id":"0:333:2436","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:229:136","0:230:2590"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:741:3747":{"id":"5:741:3747","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13224:7791":{"id":"2:13224:7791","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12341:471"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43871:3406","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2646-0:395:2421":{"id":"b:2:2646-0:395:2421","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2640:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2648:26770"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13320:28633":{"id":"2:13320:28633","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:273:338":{"id":"0:273:338","crate_id":0,"name":"as_str","span":{"filename":"src/lib.rs","begin":[555,4],"end":[557,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32294:3531-0:333:2436":{"id":"a:2:32294:3531-0:333:2436","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32294:3531","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:2436","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:373":{"id":"0:373","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,26],"end":[251,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32237:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42098:3645-0:395:2421":{"id":"a:2:42098:3645-0:395:2421","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42098:3645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2926-0:333:2436":{"id":"b:2:2926-0:333:2436","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2896:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:2436","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2929:137","2:2930:1808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13287:34290":{"id":"2:13287:34290","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2922:832":{"id":"2:2922:832","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:279:2638":{"id":"0:279:2638","crate_id":0,"name":"is_empty","span":{"filename":"src/lib.rs","begin":[577,4],"end":[579,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:738-0:333:2436":{"id":"b:5:738-0:333:2436","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:734:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:2436","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:740:3746","5:741:3747","5:742:3748"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2935:1806":{"id":"2:2935:1806","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:42136:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13197:2638":{"id":"2:13197:2638","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5866-0:395:2421":{"id":"b:5:5866-0:395:2421","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10319:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5864:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5868:1781"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13325:29143":{"id":"2:13325:29143","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:991:38683"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2930:1808":{"id":"2:2930:1808","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:42136:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5618:3238":{"id":"5:5618:3238","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7645:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7645:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:401":{"id":"0:401","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[375,25],"end":[375,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2698:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:259:2377":{"id":"0:259:2377","crate_id":0,"name":"parse","span":{"filename":"src/lib.rs","begin":[431,4],"end":[433,5]},"visibility":"public","docs":"Create `Version` by parsing from string representation.\n\n# Errors\n\nPossible reasons for the parse to fail include:\n\n- `1.0` &mdash; too few numeric components. A SemVer version must have\n  exactly three. If you are looking at something that has fewer than\n  three numbers in it, it's possible it is a `VersionReq` instead (with\n  an implicit default `^` comparison operator).\n\n- `1.0.01` &mdash; a numeric component has a leading zero.\n\n- `1.0.unknown` &mdash; unexpected character in one of the components.\n\n- `1.0.0-` or `1.0.0+` &mdash; the pre-release or build metadata are\n  indicated present but empty.\n\n- `1.0.0-alpha_123` &mdash; pre-release or build metadata have something\n  outside the allowed characters, which are `0-9`, `A-Z`, `a-z`, `-`,\n  and `.` (dot).\n\n- `23456789999999999999.0.0` &mdash; overflow of a u64.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42136:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:220:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:194":{"id":"0:194","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[51,0],"end":[104,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2729:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Prerelease","id":"0:381:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:195:482"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3758-0:395:2421":{"id":"b:2:3758-0:395:2421","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3756:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3760:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:20":{"id":"0:20","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[4,0],"end":[31,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10319:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Version","id":"0:299:2414","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:21:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13266:29286":{"id":"2:13266:29286","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12341:471","str::splitn":"2:13263:29284","self::pattern":"2:12885:3380"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:44017:3415","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12891:3394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12906:3396","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:302:2417":{"id":"0:302:2417","crate_id":0,"name":"patch","span":{"filename":"src/lib.rs","begin":[165,4],"end":[165,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u64"}}},"a:2:32294:3531-0:351:2440":{"id":"a:2:32294:3531-0:351:2440","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32294:3531","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2916-0:381:2419":{"id":"b:2:2916-0:381:2419","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2919:3683"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5621:34996":{"id":"5:5621:34996","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7645:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7645:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32294:3531-0:395:2421":{"id":"a:2:32294:3531-0:395:2421","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32294:3531","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:406":{"id":"0:406","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[375,40],"end":[375,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10530:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:407:872"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2643-0:220:137":{"id":"b:2:2643-0:220:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2637:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2645:3066"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13324:29142":{"id":"2:13324:29142","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:991:38683"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32235:237-0:220:137":{"id":"a:2:32235:237-0:220:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32235:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13310:34297":{"id":"2:13310:34297","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12341:471","self::pattern":"2:12885:3380"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:323":{"id":"0:323","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[187,16],"end":[187,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2698:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3139:247-0:395:2421":{"id":"a:2:3139:247-0:395:2421","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3139:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13229:34284":{"id":"2:13229:34284","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:44159:3410","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32235:237-0:299:2414":{"id":"a:2:32235:237-0:299:2414","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32235:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:2414","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42098:3645-0:220:137":{"id":"a:2:42098:3645-0:220:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42098:3645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2926-0:220:137":{"id":"b:2:2926-0:220:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2896:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2929:137","2:2930:1808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:347:872":{"id":"0:347:872","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[195,31],"end":[195,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10538:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13207:2863":{"id":"2:13207:2863","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12360:1851"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13228:28725":{"id":"2:13228:28725","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:44149:3408","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2926-0:395:2421":{"id":"b:2:2926-0:395:2421","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2896:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2929:137","2:2930:1808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13214:9447":{"id":"2:13214:9447","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10975:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10975:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:366:2488":{"id":"0:366:2488","crate_id":0,"name":"Wildcard","span":{"filename":"src/lib.rs","begin":[261,4],"end":[261,12]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:13313:34298":{"id":"2:13313:34298","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12341:471","self::pattern":"2:12885:3380"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12891:3394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12906:3396","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:316":{"id":"0:316","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[161,48],"end":[161,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10530:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:2414","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:317:872"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2646-0:319:2434":{"id":"b:2:2646-0:319:2434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2640:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2648:26770"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:331":{"id":"0:331","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[187,37],"end":[187,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10314:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:332:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2920-0:381:2419":{"id":"b:2:2920-0:381:2419","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2922:832"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:3760:1821":{"id":"2:3760:1821","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39718:7571","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:276:2573":{"id":"0:276:2573","crate_id":0,"name":"EMPTY","span":{"filename":"src/lib.rs","begin":[565,4],"end":[567,6]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"2:13260:34286":{"id":"2:13260:34286","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12885:3380","str::split":"2:13248:2909","prim@char":"1:12341:471","str::split_terminator":"2:13257:34285"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43963:3412","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12891:3394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12906:3396","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5635:28631":{"id":"5:5635:28631","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:13321:28634"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7645:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3174:3665-0:333:2436":{"id":"a:2:3174:3665-0:333:2436","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3174:3665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:2436","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:352:2481":{"id":"0:352:2481","crate_id":0,"name":"Exact","span":{"filename":"src/lib.rs","begin":[254,4],"end":[254,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:184":{"id":"0:184","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[23,0],"end":[29,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:3347:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Prerelease","id":"0:381:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:185:249","0:186:630"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:370:475":{"id":"0:370:475","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[251,15],"end":[251,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Op","id":"0:351:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13208:2882":{"id":"2:13208:2882","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:42005:191"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10975:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10975:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2931-0:333:2436":{"id":"b:2:2931-0:333:2436","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:2436","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2934:137","2:2935:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:368":{"id":"0:368","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,9],"end":[251,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3134:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:306:475":{"id":"0:306:475","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[161,9],"end":[161,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Version","id":"0:299:2414","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13319:29138":{"id":"2:13319:29138","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39904:3670","Self::is_ascii":"2:13318:28629"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39904:3670","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:21:802":{"id":"0:21:802","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[5,4],"end":[30,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:314":{"id":"0:314","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[161,36],"end":[161,46]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","lt","le","ge"],"trait":{"name":"PartialOrd","id":"2:2735:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:2414","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:315:1295"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:278:338":{"id":"0:278:338","crate_id":0,"name":"as_str","span":{"filename":"src/lib.rs","begin":[573,4],"end":[575,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2916-0:220:137":{"id":"b:2:2916-0:220:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2919:3683"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32235:237-0:319:2434":{"id":"a:2:32235:237-0:319:2434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32235:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:185:249":{"id":"0:185:249","crate_id":0,"name":"Target","span":{"filename":"src/impls.rs","begin":[24,4],"end":[24,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"str"}}}},"0:358:2484":{"id":"0:358:2484","crate_id":0,"name":"Less","span":{"filename":"src/lib.rs","begin":[257,4],"end":[257,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:234":{"id":"0:234","crate_id":0,"name":null,"span":{"filename":"src/parse.rs","begin":[139,0],"end":[149,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12845:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::BuildMetadata","id":"0:395:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:235:136","0:236:2590"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32235:237-0:395:2421":{"id":"a:2:32235:237-0:395:2421","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32235:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:327:699":{"id":"0:327:699","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[187,20],"end":[187,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"VersionReq","id":"0:319:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32294:3531-0:299:2414":{"id":"a:2:32294:3531-0:299:2414","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32294:3531","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:2414","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42097:3646-0:395:2421":{"id":"a:2:42097:3646-0:395:2421","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42097:3646","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3139:247-0:319:2434":{"id":"a:2:3139:247-0:319:2434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3139:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:346":{"id":"0:346","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[195,31],"end":[195,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10530:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:2436","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:347:872"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13210:29251":{"id":"2:13210:29251","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:42005:191"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10975:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10975:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:333:2436":{"id":"0:333:2436","crate_id":0,"name":"Comparator","span":{"filename":"src/lib.rs","begin":[196,0],"end":[204,1]},"visibility":"public","docs":"A pair of comparison operator and partial version, such as `>=1.2`. Forms\none piece of a VersionReq.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:334:2439","0:335:2415","0:336:2416","0:337:2417","0:338:2418"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:267","a:2:3139:247-0:333:2436","a:2:42098:3645-0:333:2436","a:2:32294:3531-0:333:2436","a:2:42097:3646-0:333:2436","a:2:3174:3665-0:333:2436","a:2:32235:237-0:333:2436","b:2:2646-0:333:2436","b:2:2643-0:333:2436","b:2:2920-0:333:2436","b:2:2916-0:333:2436","b:2:2926-0:333:2436","b:2:3758-0:333:2436","b:2:2931-0:333:2436","b:5:5866-0:333:2436","b:5:738-0:333:2436","0:203","0:26","0:228","0:344","0:349","0:339","0:346","0:343","0:341"]}}},"a:2:32235:237-0:381:2419":{"id":"a:2:32235:237-0:381:2419","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32235:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:329:872":{"id":"0:329:872","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[187,31],"end":[187,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10538:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:204:835":{"id":"0:204:835","crate_id":0,"name":"from_iter","span":{"filename":"src/impls.rs","begin":[149,4],"end":[155,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["iter",{"generic":"I"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8225:165","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"Comparator","id":"0:333:2436","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2646-0:381:2419":{"id":"b:2:2646-0:381:2419","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2640:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2648:26770"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13221:29278":{"id":"2:13221:29278","crate_id":2,"name":"split_at_mut_checked","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at_checked`] method.\n\n[`split_at_checked`]: str::split_at_checked\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\nif let Some((first, last)) = s.split_at_mut_checked(3) {\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n\nassert_eq!(None, s.split_at_mut_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_mut_checked(16));  // Beyond the string length\n```","links":{"str::split_at_checked":"2:13220:29277"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3174:3665-0:299:2414":{"id":"a:2:3174:3665-0:299:2414","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3174:3665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:2414","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:336:2416":{"id":"0:336:2416","crate_id":0,"name":"minor","span":{"filename":"src/lib.rs","begin":[199,4],"end":[199,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u64"}}],"bindings":[]}}}}}},"0:311:699":{"id":"0:311:699","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[161,20],"end":[161,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Version","id":"0:299:2414","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:334:2439":{"id":"0:334:2439","crate_id":0,"name":"op","span":{"filename":"src/lib.rs","begin":[197,4],"end":[197,14]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Op","id":"0:351:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:13223:2932":{"id":"2:13223:2932","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12341:471"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43865:3407","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5632:34998":{"id":"5:5632:34998","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7645:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7645:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:320:2435":{"id":"0:320:2435","crate_id":0,"name":"comparators","span":{"filename":"src/lib.rs","begin":[190,4],"end":[190,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"crate::alloc::vec::Vec","id":"5:7059:264","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Comparator","id":"0:333:2436","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"b:2:2931-0:381:2419":{"id":"b:2:2931-0:381:2419","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2934:137","2:2935:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:356:2483":{"id":"0:356:2483","crate_id":0,"name":"GreaterEq","span":{"filename":"src/lib.rs","begin":[256,4],"end":[256,13]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2643-0:395:2421":{"id":"b:2:2643-0:395:2421","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2637:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2645:3066"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:344":{"id":"0:344","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[195,20],"end":[195,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2693:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:2436","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:345:699"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:380:802":{"id":"0:380:802","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[251,43],"end":[251,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2643-0:333:2436":{"id":"b:2:2643-0:333:2436","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2637:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:2436","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2645:3066"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:740:3746":{"id":"5:740:3746","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:32":{"id":"0:32","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[93,0],"end":[108,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10314:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Version","id":"0:299:2414","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:33:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3139:247-0:351:2440":{"id":"a:2:3139:247-0:351:2440","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3139:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:383":{"id":"0:383","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[317,9],"end":[317,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2968:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:384:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:343":{"id":"0:343","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[195,20],"end":[195,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32237:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:2436","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:377:872":{"id":"0:377:872","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[251,37],"end":[251,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10538:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:317:872":{"id":"0:317:872","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[161,48],"end":[161,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10538:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2931-0:395:2421":{"id":"b:2:2931-0:395:2421","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2934:137","2:2935:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2934:137":{"id":"2:2934:137","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32159:6261","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:25:802":{"id":"0:25:802","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[34,4],"end":[45,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:364:2487":{"id":"0:364:2487","crate_id":0,"name":"Caret","span":{"filename":"src/lib.rs","begin":[260,4],"end":[260,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:13198:34278":{"id":"2:13198:34278","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13195":{"id":"2:13195","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:13196:997","2:13197:2638","2:13198:34278","2:13199:34279","2:13201:34280","2:13204:2944","2:13205:34281","2:13206:336","2:13207:2863","2:13208:2882","2:13210:29251","2:13212:29252","2:13214:9447","2:13216:34282","2:13217:34283","2:13218:2957","2:13219:29274","2:13220:29277","2:13221:29278","2:13223:2932","2:13224:7791","2:13225:2862","2:13226:32393","2:13227:32403","2:13228:28725","2:13229:34284","2:13230:32389","2:13231:29290","2:13234:2758","2:13237:29291","2:13240:3727","2:13244:3689","2:13248:2909","2:13251:29280","2:13254:29282","2:13257:34285","2:13260:34286","2:13263:29284","2:13266:29286","2:13269:29288","2:13272:29289","2:13275:2633","2:13278:34287","2:13281:34288","2:13284:34289","2:13287:34290","2:13289:34291","2:13291:34292","2:13293:34293","2:13294:34294","2:13295:34295","2:13298:2918","2:13301:2756","2:13304:29292","2:13307:34296","2:13310:34297","2:13313:34298","2:13316:2377","2:13318:28629","2:13319:29138","2:13320:28633","2:13321:28634","2:13322:28635","2:13323:29141","2:13324:29142","2:13325:29143","2:13326:34299","2:13328:9815","2:13329:34300"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13263:29284":{"id":"2:13263:29284","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12341:471","self::pattern":"2:12885:3380","str::rsplitn":"2:13266:29286"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43999:3416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:350:802":{"id":"0:350:802","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[195,37],"end":[195,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:400:475":{"id":"0:400:475","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[375,18],"end":[375,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"BuildMetadata","id":"0:395:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:261":{"id":"0:261","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[483,0],"end":[526,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"VersionReq","id":"0:319:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:262:2624","0:263:2377","0:264:2633"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2920-0:319:2434":{"id":"b:2:2920-0:319:2434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2922:832"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13298:2918":{"id":"2:13298:2918","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12341:471","self::pattern":"2:12885:3380"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13201:34280":{"id":"2:13201:34280","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:13199:34279"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:351:2440":{"id":"0:351:2440","crate_id":0,"name":"Op","span":{"filename":"src/lib.rs","begin":[253,0],"end":[266,1]},"visibility":"public","docs":"SemVer comparison operator: `=`, `>`, `>=`, `<`, `<=`, `~`, `^`, `*`.\n\n# Op::Exact\n- &ensp;**`=I.J.K`**&emsp;&mdash;&emsp;exactly the version I.J.K\n- &ensp;**`=I.J`**&emsp;&mdash;&emsp;equivalent to `>=I.J.0, <I.(J+1).0`\n- &ensp;**`=I`**&emsp;&mdash;&emsp;equivalent to `>=I.0.0, <(I+1).0.0`\n\n# Op::Greater\n- &ensp;**`>I.J.K`**\n- &ensp;**`>I.J`**&emsp;&mdash;&emsp;equivalent to `>=I.(J+1).0`\n- &ensp;**`>I`**&emsp;&mdash;&emsp;equivalent to `>=(I+1).0.0`\n\n# Op::GreaterEq\n- &ensp;**`>=I.J.K`**\n- &ensp;**`>=I.J`**&emsp;&mdash;&emsp;equivalent to `>=I.J.0`\n- &ensp;**`>=I`**&emsp;&mdash;&emsp;equivalent to `>=I.0.0`\n\n# Op::Less\n- &ensp;**`<I.J.K`**\n- &ensp;**`<I.J`**&emsp;&mdash;&emsp;equivalent to `<I.J.0`\n- &ensp;**`<I`**&emsp;&mdash;&emsp;equivalent to `<I.0.0`\n\n# Op::LessEq\n- &ensp;**`<=I.J.K`**\n- &ensp;**`<=I.J`**&emsp;&mdash;&emsp;equivalent to `<I.(J+1).0`\n- &ensp;**`<=I`**&emsp;&mdash;&emsp;equivalent to `<(I+1).0.0`\n\n# Op::Tilde&emsp;(\"patch\" updates)\n*Tilde requirements allow the **patch** part of the semver version (the third number) to increase.*\n- &ensp;**`~I.J.K`**&emsp;&mdash;&emsp;equivalent to `>=I.J.K, <I.(J+1).0`\n- &ensp;**`~I.J`**&emsp;&mdash;&emsp;equivalent to `=I.J`\n- &ensp;**`~I`**&emsp;&mdash;&emsp;equivalent to `=I`\n\n# Op::Caret&emsp;(\"compatible\" updates)\n*Caret requirements allow parts that are **right of the first nonzero** part of the semver version to increase.*\n- &ensp;**`^I.J.K`**&ensp;(for I\\>0)&emsp;&mdash;&emsp;equivalent to `>=I.J.K, <(I+1).0.0`\n- &ensp;**`^0.J.K`**&ensp;(for J\\>0)&emsp;&mdash;&emsp;equivalent to `>=0.J.K, <0.(J+1).0`\n- &ensp;**`^0.0.K`**&emsp;&mdash;&emsp;equivalent to `=0.0.K`\n- &ensp;**`^I.J`**&ensp;(for I\\>0 or J\\>0)&emsp;&mdash;&emsp;equivalent to `^I.J.0`\n- &ensp;**`^0.0`**&emsp;&mdash;&emsp;equivalent to `=0.0`\n- &ensp;**`^I`**&emsp;&mdash;&emsp;equivalent to `=I`\n\n# Op::Wildcard\n- &ensp;**`I.J.*`**&emsp;&mdash;&emsp;equivalent to `=I.J`\n- &ensp;**`I.*`**&ensp;or&ensp;**`I.*.*`**&emsp;&mdash;&emsp;equivalent to `=I`","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:352:2481","0:354:2482","0:356:2483","0:358:2484","0:360:2485","0:362:2486","0:364:2487","0:366:2488"],"impls":["a:2:3139:247-0:351:2440","a:2:42098:3645-0:351:2440","a:2:32294:3531-0:351:2440","a:2:42097:3646-0:351:2440","a:2:3174:3665-0:351:2440","a:2:32235:237-0:351:2440","b:2:2646-0:351:2440","b:2:2643-0:351:2440","b:2:2920-0:351:2440","b:2:2916-0:351:2440","b:2:2926-0:351:2440","b:2:3758-0:351:2440","b:2:2931-0:351:2440","b:5:738-0:351:2440","0:373","0:376","0:374","0:368","0:379","0:371","0:369"]}}},"2:13318:28629":{"id":"2:13318:28629","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:300:2415":{"id":"0:300:2415","crate_id":0,"name":"major","span":{"filename":"src/lib.rs","begin":[163,4],"end":[163,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u64"}}},"2:13281:34288":{"id":"2:13281:34288","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12885:3380","`DoubleEndedIterator`":"2:8263:129","prim@char":"1:12341:471","str::rmatch_indices":"2:13284:34289"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:44045:3419","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:371":{"id":"0:371","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,22],"end":[251,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2698:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:30":{"id":"0:30","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[87,0],"end":[91,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10319:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::BuildMetadata","id":"0:395:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:31:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:188:249":{"id":"0:188:249","crate_id":0,"name":"Target","span":{"filename":"src/impls.rs","begin":[32,4],"end":[32,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"str"}}}},"0:189:630":{"id":"0:189:630","crate_id":0,"name":"deref","span":{"filename":"src/impls.rs","begin":[34,4],"end":[36,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:3347:124","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:187":{"id":"0:187","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[31,0],"end":[37,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:3347:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::BuildMetadata","id":"0:395:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:188:249","0:189:630"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3139:247-0:299:2414":{"id":"a:2:3139:247-0:299:2414","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3139:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:2414","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:738-0:351:2440":{"id":"b:5:738-0:351:2440","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:734:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:740:3746","5:741:3747","5:742:3748"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:399":{"id":"0:399","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[375,18],"end":[375,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:400:475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:0:2639":{"id":"0:0:2639","crate_id":0,"name":"semver","span":{"filename":"src/lib.rs","begin":[1,0],"end":[580,1]},"visibility":"public","docs":"[![github]](https://github.com/dtolnay/semver)&ensp;[![crates-io]](https://crates.io/crates/semver)&ensp;[![docs-rs]](https://docs.rs/semver)\n\n[github]: https://img.shields.io/badge/github-8da0cb?style=for-the-badge&labelColor=555555&logo=github\n[crates-io]: https://img.shields.io/badge/crates.io-fc8d62?style=for-the-badge&labelColor=555555&logo=rust\n[docs-rs]: https://img.shields.io/badge/docs.rs-66c2a5?style=for-the-badge&labelColor=555555&logo=docs.rs\n\n<br>\n\nA parser and evaluator for Cargo's flavor of Semantic Versioning.\n\nSemantic Versioning (see <https://semver.org>) is a guideline for how\nversion numbers are assigned and incremented. It is widely followed within\nthe Cargo/crates.io ecosystem for Rust.\n\n<br>\n\n# Example\n\n```\nuse semver::{BuildMetadata, Prerelease, Version, VersionReq};\n\nfn main() {\n    let req = VersionReq::parse(\">=1.2.3, <1.8.0\").unwrap();\n\n    // Check whether this requirement matches version 1.2.3-alpha.1 (no)\n    let version = Version {\n        major: 1,\n        minor: 2,\n        patch: 3,\n        pre: Prerelease::new(\"alpha.1\").unwrap(),\n        build: BuildMetadata::EMPTY,\n    };\n    assert!(!req.matches(&version));\n\n    // Check whether it matches 1.3.0 (yes it does)\n    let version = Version::parse(\"1.3.0\").unwrap();\n    assert!(req.matches(&version));\n}\n```\n\n<br><br>\n\n# Scope of this crate\n\nBesides Cargo, several other package ecosystems and package managers for\nother languages also use SemVer:&ensp;RubyGems/Bundler for Ruby, npm for\nJavaScript, Composer for PHP, CocoaPods for Objective-C...\n\nThe `semver` crate is specifically intended to implement Cargo's\ninterpretation of Semantic Versioning.\n\nWhere the various tools differ in their interpretation or implementation of\nthe spec, this crate follows the implementation choices made by Cargo. If\nyou are operating on version numbers from some other package ecosystem, you\nwill want to use a different semver library which is appropriate to that\necosystem.\n\nThe extent of Cargo's SemVer support is documented in the *[Specifying\nDependencies]* chapter of the Cargo reference.\n\n[Specifying Dependencies]: https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html","links":{},"attrs":["#![doc(html_root_url = \"https://docs.rs/semver/1.0.22\")]","#![deny(unsafe_op_in_unsafe_fn)]","#![allow(clippy::cast_lossless, clippy::cast_possible_truncation,\nclippy::doc_markdown, clippy::incompatible_msrv,\nclippy::items_after_statements, clippy::manual_map, clippy::match_bool,\nclippy::missing_errors_doc, clippy::must_use_candidate,\nclippy::needless_doctest_main, clippy::ptr_as_ptr, clippy::redundant_else,\nclippy::semicolon_if_nothing_returned, clippy::similar_names,\nclippy::unnested_or_patterns, clippy::unseparated_literal_suffix,\nclippy::wildcard_imports)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:256-0:220:137","0:299:2414","0:319:2434","0:333:2436","0:351:2440","0:381:2419","0:395:2421"],"is_stripped":false}}},"b:2:2916-0:351:2440":{"id":"b:2:2916-0:351:2440","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2919:3683"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13293:34293":{"id":"2:13293:34293","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2931-0:220:137":{"id":"b:2:2931-0:220:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2934:137","2:2935:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13301:2756":{"id":"2:13301:2756","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns the substring after the prefix,\nwrapped in `Some`. Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12341:471","self::pattern":"2:12885:3380"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32294:3531-0:381:2419":{"id":"a:2:32294:3531-0:381:2419","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32294:3531","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3758-0:220:137":{"id":"b:2:3758-0:220:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3756:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3760:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:376":{"id":"0:376","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,37],"end":[251,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10530:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:377:872"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:232:136":{"id":"0:232:136","crate_id":0,"name":"Err","span":{"filename":"src/parse.rs","begin":[128,4],"end":[128,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:220:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:3139:247-0:333:2436":{"id":"a:2:3139:247-0:333:2436","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3139:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:2436","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:191:1295":{"id":"0:191:1295","crate_id":0,"name":"partial_cmp","span":{"filename":"src/impls.rs","begin":[40,4],"end":[42,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Ordering","id":"2:30997:196","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2916-0:299:2414":{"id":"b:2:2916-0:299:2414","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:2414","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2919:3683"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:404":{"id":"0:404","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[375,29],"end":[375,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2693:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:405:699"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13204:2944":{"id":"2:13204:2944","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12432:3400"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:263:2377":{"id":"0:263:2377","crate_id":0,"name":"parse","span":{"filename":"src/lib.rs","begin":[517,4],"end":[519,5]},"visibility":"public","docs":"Create `VersionReq` by parsing from string representation.\n\n# Errors\n\nPossible reasons for the parse to fail include:\n\n- `>a.b` &mdash; unexpected characters in the partial version.\n\n- `@1.0.0` &mdash; unrecognized comparison operator.\n\n- `^1.0.0, ` &mdash; unexpected end of input.\n\n- `>=1.0 <2.0` &mdash; missing comma between comparators.\n\n- `*.*` &mdash; unsupported wildcard syntax.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42136:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:220:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:384:60":{"id":"0:384:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[317,9],"end":[317,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Prerelease","id":"0:381:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13217:34283":{"id":"2:13217:34283","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12347:1721","crate::ops::IndexMut":"2:3417:3124","str::slice_unchecked":"2:13216:34282"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2646-0:299:2414":{"id":"b:2:2646-0:299:2414","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2640:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:2414","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2648:26770"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3174:3665-0:220:137":{"id":"a:2:3174:3665-0:220:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3174:3665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:190":{"id":"0:190","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[39,0],"end":[43,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","lt","le","ge"],"trait":{"name":"PartialOrd","id":"2:2735:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Prerelease","id":"0:381:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:191:1295"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13248:2909":{"id":"2:13248:2909","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12885:3380","`DoubleEndedIterator`":"2:8263:129","prim@char":"1:12341:471","str::split_whitespace":"2:13226:32393","str::rsplit":"2:13254:29282"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43895:3413","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:395:2421":{"id":"0:395:2421","crate_id":0,"name":"BuildMetadata","span":{"filename":"src/lib.rs","begin":[376,0],"end":[378,1]},"visibility":"public","docs":"Optional build metadata identifier. This comes after `+` in a SemVer\nversion, as in `0.8.1+zstd.1.5.0`.\n\n# Examples\n\nSome real world build metadata idioms drawn from crates.io:\n\n- **[libgit2-sys]** <code>0.12.20+<b>1.1.0</b></code> &mdash; for this\n  crate, the build metadata indicates the version of the C libgit2 library\n  that the Rust crate is built against.\n\n- **[mashup]** <code>0.1.13+<b>deprecated</b></code> &mdash; just the word\n  \"deprecated\" for a crate that has been superseded by another. Eventually\n  people will take notice of this in Cargo's build output where it lists the\n  crates being compiled.\n\n- **[google-bigquery2]** <code>2.0.4+<b>20210327</b></code> &mdash; this\n  library is automatically generated from an official API schema, and the\n  build metadata indicates the date on which that schema was last captured.\n\n- **[fbthrift-git]** <code>0.0.6+<b>c7fcc0e</b></code> &mdash; this crate is\n  published from snapshots of a big company monorepo. In monorepo\n  development, there is no concept of versions, and all downstream code is\n  just updated atomically in the same commit that breaking changes to a\n  library are landed. Therefore for crates.io purposes, every published\n  version must be assumed to be incompatible with the previous. The build\n  metadata provides the source control hash of the snapshotted code.\n\n[libgit2-sys]: https://crates.io/crates/libgit2-sys\n[mashup]: https://crates.io/crates/mashup\n[google-bigquery2]: https://crates.io/crates/google-bigquery2\n[fbthrift-git]: https://crates.io/crates/fbthrift-git\n\n# Syntax\n\nBuild metadata is a series of dot separated identifiers immediately\nfollowing the patch or pre-release version. Identifiers must comprise only\nASCII alphanumerics and hyphens: `0-9`, `A-Z`, `a-z`, `-`. Identifiers must\nnot be empty. Leading zeros *are* allowed, unlike any other place in the\nSemVer grammar.\n\n# Total ordering\n\nBuild metadata is ignored in evaluating `VersionReq`; it plays no role in\nwhether a `Version` matches any one of the comparison operators.\n\nHowever for comparing build metadatas among one another, they do have a\ntotal order which is determined by lexicographic ordering of dot-separated\ncomponents. Identifiers consisting of only digits are compared numerically.\nOtherwise, identifiers are compared in ASCII sort order. Any numeric\nidentifier is always less than any non-numeric identifier.\n\nExample:&ensp;`demo`&ensp;&lt;&ensp;`demo.85`&ensp;&lt;&ensp;`demo.90`&ensp;&lt;&ensp;`demo.090`&ensp;&lt;&ensp;`demo.200`&ensp;&lt;&ensp;`demo.1a0`&ensp;&lt;&ensp;`demo.a`&ensp;&lt;&ensp;`memo`","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:275","a:2:3139:247-0:395:2421","a:2:42098:3645-0:395:2421","a:2:32294:3531-0:395:2421","a:2:42097:3646-0:395:2421","a:2:3174:3665-0:395:2421","a:2:32235:237-0:395:2421","b:2:2646-0:395:2421","b:2:2643-0:395:2421","b:2:2920-0:395:2421","b:2:2916-0:395:2421","b:2:2926-0:395:2421","b:2:3758-0:395:2421","b:2:2931-0:395:2421","b:5:5866-0:395:2421","b:5:738-0:395:2421","0:198","0:403","0:192","0:397","0:30","0:36","0:401","0:404","0:406","0:187","0:234","0:399"]}}},"b:2:2643-0:351:2440":{"id":"b:2:2643-0:351:2440","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2637:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2645:3066"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2926-0:381:2419":{"id":"b:2:2926-0:381:2419","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2896:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2929:137","2:2930:1808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5636:28632":{"id":"5:5636:28632","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:13322:28635"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7645:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13278:34287":{"id":"2:13278:34287","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12885:3380","`DoubleEndedIterator`":"2:8263:129","prim@char":"1:12341:471","str::matches":"2:13275:2633"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:44117:3418","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12891:3394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12906:3396","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:354:2482":{"id":"0:354:2482","crate_id":0,"name":"Greater","span":{"filename":"src/lib.rs","begin":[255,4],"end":[255,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:13227:32403":{"id":"2:13227:32403","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:13226:32393"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:44178:3425","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:374":{"id":"0:374","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,26],"end":[251,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2693:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:375:699"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13326:34299":{"id":"2:13326:34299","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4951:34299"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:44194:3422","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3174:3665-0:351:2440":{"id":"a:2:3174:3665-0:351:2440","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3174:3665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:326":{"id":"0:326","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[187,20],"end":[187,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2693:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:327:699"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:301:2416":{"id":"0:301:2416","crate_id":0,"name":"minor","span":{"filename":"src/lib.rs","begin":[164,4],"end":[164,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u64"}}},"b:2:2920-0:333:2436":{"id":"b:2:2920-0:333:2436","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:2436","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2922:832"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:265":{"id":"0:265","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[530,0],"end":[534,1]},"visibility":"default","docs":"The default VersionReq is the same as [`VersionReq::STAR`].","links":{"`VersionReq::STAR`":"0:262:2624"},"attrs":["#[cfg(not(no_const_vec_new))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2968:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:266:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:332:802":{"id":"0:332:802","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[187,37],"end":[187,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:222":{"id":"0:222","crate_id":0,"name":null,"span":{"filename":"src/parse.rs","begin":[25,0],"end":[82,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12845:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Version","id":"0:299:2414","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:223:136","0:224:2590"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42097:3646-0:333:2436":{"id":"a:2:42097:3646-0:333:2436","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42097:3646","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:2436","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:220:137":{"id":"0:220:137","crate_id":0,"name":"Error","span":{"filename":"src/parse.rs","begin":[21,0],"end":[23,1]},"visibility":"public","docs":"Error parsing a SemVer version or version requirement.\n\n# Example\n\n```\nuse semver::Version;\n\nfn main() {\n    let err = Version::parse(\"1.q.r\").unwrap_err();\n\n    // \"unexpected character 'q' while parsing minor version number\"\n    eprintln!(\"{}\", err);\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:3139:247-0:220:137","a:2:42098:3645-0:220:137","a:2:32294:3531-0:220:137","a:2:42097:3646-0:220:137","a:2:3174:3665-0:220:137","a:2:32235:237-0:220:137","b:2:2646-0:220:137","b:2:2643-0:220:137","b:2:2920-0:220:137","b:2:2916-0:220:137","b:2:2926-0:220:137","b:2:3758-0:220:137","b:2:2931-0:220:137","b:5:5866-0:220:137","0:84","0:88","0:83"]}}},"b:2:2916-0:333:2436":{"id":"b:2:2916-0:333:2436","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:2436","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2919:3683"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13237:29291":{"id":"2:13237:29291","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12341:471","self::pattern":"2:12885:3380"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12891:3394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12906:3396","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2646-0:333:2436":{"id":"b:2:2646-0:333:2436","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2640:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:2436","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2648:26770"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:260:2612":{"id":"0:260:2612","crate_id":0,"name":"cmp_precedence","span":{"filename":"src/lib.rs","begin":[475,4],"end":[480,5]},"visibility":"public","docs":"Compare the major, minor, patch, and pre-release value of two versions,\ndisregarding build metadata. Versions that differ only in build metadata\nare considered equal. This comparison is what the SemVer spec refers to\nas \"precedence\".\n\n# Example\n\n```\nuse semver::Version;\n\nlet mut versions = [\n    \"1.20.0+c144a98\".parse::<Version>().unwrap(),\n    \"1.20.0\".parse().unwrap(),\n    \"1.0.0\".parse().unwrap(),\n    \"1.0.0-alpha\".parse().unwrap(),\n    \"1.20.0+bc17664\".parse().unwrap(),\n];\n\n// This is a stable sort, so it preserves the relative order of equal\n// elements. The three 1.20.0 versions differ only in build metadata so\n// they are not reordered relative to one another.\nversions.sort_by(Version::cmp_precedence);\nassert_eq!(versions, [\n    \"1.0.0-alpha\".parse().unwrap(),\n    \"1.0.0\".parse().unwrap(),\n    \"1.20.0+c144a98\".parse().unwrap(),\n    \"1.20.0\".parse().unwrap(),\n    \"1.20.0+bc17664\".parse().unwrap(),\n]);\n\n// Totally order the versions, including comparing the build metadata.\nversions.sort();\nassert_eq!(versions, [\n    \"1.0.0-alpha\".parse().unwrap(),\n    \"1.0.0\".parse().unwrap(),\n    \"1.20.0\".parse().unwrap(),\n    \"1.20.0+bc17664\".parse().unwrap(),\n    \"1.20.0+c144a98\".parse().unwrap(),\n]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Ordering","id":"2:30997:196","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2646-0:351:2440":{"id":"b:2:2646-0:351:2440","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2640:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2648:26770"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:24":{"id":"0:24","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[33,0],"end":[46,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10319:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::VersionReq","id":"0:319:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:25:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:379":{"id":"0:379","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,43],"end":[251,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10314:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:2440","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:380:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:256-0:220:137":{"id":"0:256-0:220:137","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[110,0],"end":[110,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::parse::Error","name":"Error","id":"0:220:137","glob":false}}},"a:2:42098:3645-0:319:2434":{"id":"a:2:42098:3645-0:319:2434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42098:3645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:390":{"id":"0:390","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[317,29],"end":[317,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2693:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:391:699"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2920-0:395:2421":{"id":"b:2:2920-0:395:2421","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2922:832"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3174:3665-0:319:2434":{"id":"a:2:3174:3665-0:319:2434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3174:3665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:2434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3174:3665-0:395:2421":{"id":"a:2:3174:3665-0:395:2421","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3174:3665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13272:29289":{"id":"2:13272:29289","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12891:3394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12906:3396","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"6:7446:7274":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"17:13568:5030":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"2:41965:7748":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"6:6409:6988":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"17:3264:8749":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"17:15206:5434":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"11:856:8906":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"5:2770:7419":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"2:10530:153":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"6:5477:6878":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"17:12572:4784":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"2:42184:4154":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"1:1603:4153":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:46285:7862":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2:13609:34122":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"2:46043:7841":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:12586:3430":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"2:3220:3365":{"crate_id":2,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"1:4815:7264":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"function"},"5:1184:9470":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"6:5134:6726":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"6:4942:6660":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"17:10877:8759":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"17:16165:5701":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"16:6749:5963":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"2:43692:4152":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:46707:7894":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:4666:9967":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"5:1168:34148":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"2:42176:4153":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"2:22889:32534":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"5:3046:9471":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"16:6532:5925":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"16:6948:5776":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"2:5296:977":{"crate_id":2,"path":["core","iter"],"kind":"module"},"2:5911:4436":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"2:34048:3351":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2:42098:3645":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"6:6678:7124":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"10:44:6266":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"17:10818:8758":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"1:12341:471":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"2:3417:3124":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"17:10218:4751":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"17:4821:8752":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"6:1559:6460":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:46441:7884":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"6:5191:6738":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"11:832:8915":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"5:7551:9832":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"2:2637:102":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"17:12318:4857":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"2:3144:3119":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"11:2231:6256":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"16:6098:22508":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"2:2698:134":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"1:2774:8988":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"2:47126:7938":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"17:12929:4912":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"17:12127:4849":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"16:2508:5748":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"17:11764:4809":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"17:12543:8825":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"2:21722:9894":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"2:43767:3296":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"17:15418:5490":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:41202:7726":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"2:40867:3304":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"5:5077:4436":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"16:7888:6101":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"1:2461:3220":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"1:8879:8052":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"1:947:8902":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"2:44117:3418":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"17:11189:4773":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:26051:267":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"2:10689:4477":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"1:5596:9005":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"2:8177:3294":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:9974:9208":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"2:44687:7811":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"17:16050:4969":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"16:2548:5750":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"16:7497:6074":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"5:4162:4154":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"2:33663:3346":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"6:5212:6750":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:7540:3295":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"17:13325:4976":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"17:11142:4784":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"17:11510:8781":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"16:4062:5799":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"1:9265:8062":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"1:4097:9937":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"1:8554:9035":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"17:15957:5634":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"17:14131:5130":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"1:888:3134":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:45862:7826":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:43741:4166":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"17:14587:5222":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"6:4952:6663":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"5:7634:4445":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"17:12792:4712":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"11:1603:8917":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"1:3336:8990":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"5:843:4415":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"1:11904:8100":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"2:11212:3426":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"6:5671:6956":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"17:11497:8780":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:40316:3423":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"17:12371:4912":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"2:5216:32464":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"2:3185:3339":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"1:8187:7977":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"17:13024:22583":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"1:8236:7980":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"11:1142:8913":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"1:8650:9039":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"17:10573:35854":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"8:0:2966":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"1:3553:4436":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"1:10721:8991":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"5:7566:4440":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"16:2572:5751":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:22591:9894":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"18:491:4599":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"17:12353:4868":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"9:330:6303":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"1:8654:7249":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"16:3329:5791":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"11:687:4154":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:22633:10144":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"5:1340:8911":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"5:7405:3132":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"1:11423:6323":{"crate_id":1,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"2:40515:7710":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"struct"},"6:5122:6725":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"16:6398:5766":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"1:8012:7974":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"2:7933:2798":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"2:7645:3305":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"17:13553:5024":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"17:12695:8830":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"17:14463:5206":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"1:5162:9993":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"11:434:35821":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"1:562:4494":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"2:23020:3218":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:8617:9038":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"2:40401:7706":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:4103:9936":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"2:9461:3394":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"17:13581:5034":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"6:4971:6671":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"1:9163:4153":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"2:46253:7860":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"17:2203:8745":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"17:14723:5231":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"17:10828:35852":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"17:10524:8754":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"17:13986:5113":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"5:111:309":{"crate_id":5,"path":["alloc","alloc","alloc"],"kind":"function"},"2:44815:164":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"17:14868:5344":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"1:8797:8043":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"6:5624:6937":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"1:3294:31732":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"2:44045:3419":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"16:4531:5804":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:40733:3310":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"17:11075:4769":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"5:3050:9472":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"17:14260:5170":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"1:11764:4537":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"17:14994:5387":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"6:497:6361":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"16:5781:5771":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"16:7098:6019":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"6:7546:7335":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"1:6400:9014":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"2:8214:145":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"16:5802:22506":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"2:1958:671":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"5:128:2849":{"crate_id":5,"path":["alloc","alloc","handle_alloc_error"],"kind":"function"},"17:13424:4992":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"17:15400:5486":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"6:0:1002":{"crate_id":6,"path":["libc"],"kind":"module"},"17:15410:5489":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"1:8339:9030":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"17:15333:5467":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"6:6689:7126":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"17:12707:8831":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"17:15655:5570":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"17:16198:5708":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"2:8234:3292":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"6:1692:6546":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"2:42039:4154":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"6:4891:6634":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"0:0:2639":{"crate_id":0,"path":["semver"],"kind":"module"},"17:11405:8778":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"11:1107:8912":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"6:1517:6432":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"2:46462:7885":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:7331:4521":{"crate_id":1,"path":["std","sys","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"17:13015:4875":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"6:7516:7318":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"16:2728:5758":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"16:4976:5818":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"17:14788:5282":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"15:288:21600":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"17:15701:5584":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"17:513:8741":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"16:5769:5831":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"6:8294:7388":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"17:11341:8775":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"2:4811:3168":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"16:542:5723":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"17:14912:5375":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"2:43245:3268":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"18:754:4639":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"0:354:2482":{"crate_id":0,"path":["semver","Op","Greater"],"kind":"variant"},"6:6597:7092":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"16:6560:5769":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"2:43865:3407":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"17:11269:22608":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"1:4155:9940":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"1:8093:9025":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"17:12043:8806":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"6:8197:7377":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"6:5283:6786":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"17:16032:4959":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"6:6821:7172":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"6:6670:7122":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:11362:4158":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"11:710:8901":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:3132:3663":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"16:6976:6000":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"1:9743:127":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"18:608:8732":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"5:3885:3130":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"17:15434:5493":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"1:12292:8144":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"2:4580:3164":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"6:491:6358":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"2:40843:3318":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"5:956:4153":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"1:7925:4524":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"16:7857:6097":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:8689:3290":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:8257:9029":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"2:46574:7889":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"6:4876:6627":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"17:13485:5005":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:38146:3356":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"17:13292:4970":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"16:2303:21619":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2:46183:7856":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"16:7604:5783":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"6:5014:6695":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"6:5457:6867":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"17:15266:5450":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"2:22903:7466":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"17:15760:5600":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"17:12422:4873":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"6:5643:6946":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"17:12993:22582":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"16:5722:5772":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:12959:15212":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"2:21620:32368":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"16:6574:5786":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"17:15748:5598":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"1:4921:9955":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"6:532:6387":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"17:15635:5567":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"1:8194:7978":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"16:6385:5908":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"6:4979:6676":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:33462:3345":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"5:1478:4153":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:33875:3350":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"16:3899:5797":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"17:14560:5219":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"0:360:2485":{"crate_id":0,"path":["semver","Op","LessEq"],"kind":"variant"},"5:883:4418":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"16:0:2973":{"crate_id":16,"path":["gimli"],"kind":"module"},"17:13046:4919":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"1:12352:738":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:3190:3344":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"2:12400:4145":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"2:2640:103":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"6:523:6381":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"1:9112:9040":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"6:6729:7142":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"16:6456:22511":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"16:5897:5842":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"17:12408:4872":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"17:10759:4784":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"2:42982:7763":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"6:8300:7389":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"17:4986:8753":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"11:837:8903":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"18:659:8733":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"2:44169:3409":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:4379:8938":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"2:42459:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"16:7321:3642":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"1:494:4493":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"17:14147:5135":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"5:3754:4413":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"17:15126:5412":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"16:7755:5775":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"2:46139:7854":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:9398:4513":{"crate_id":1,"path":["std","sync","mutex","MappedMutexGuard"],"kind":"struct"},"17:16259:4986":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"16:7727:5784":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"1:9129:8055":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"1:6031:4503":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"1:9451:8067":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"16:2418:5744":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"2:43023:73":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"2:44178:3425":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"6:5653:6947":{"crate_id":6,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"18:706:3397":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:47080:7934":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:45997:7838":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"1:4555:9001":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"17:15313:5460":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"2:22281:10063":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"6:5502:6887":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"2:43229:3269":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:10421:10017":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"1:12347:1721":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"17:12454:4878":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"17:11634:4796":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:3020:3865":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"1:9317:2800":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"18:563:4610":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:40637:8961":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"2:11324:3411":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"2:22638:10142":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"16:4743:5810":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"6:5636:6943":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"17:14855:5337":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"17:15197:5433":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"11:1566:21575":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"16:6278:8844":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"2:12885:3380":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"17:15569:5543":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"1:7478:28472":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"17:15720:5589":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"17:11324:8772":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"2:11120:4153":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"6:7452:7276":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:2523:672":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"6:7584:7354":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:16269:4991":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"16:6782:22513":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"2:12646:3429":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"16:7559:6079":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"2:12623:3432":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"6:8317:7394":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:44392:7795":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"2:3595:3370":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:47254:7951":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"2:2735:202":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"6:4965:6668":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"6:6447:7007":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"17:13844:5090":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"17:15039:5396":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"5:7493:3134":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"2:43812:4162":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"5:7540:3128":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"11:811:3130":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"11:396:4405":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"6:5112:6724":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"2:10325:3155":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"2:44017:3415":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"2:46951:7929":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"2:39553:3366":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"5:7449:3134":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2:46314:7863":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"17:14475:5207":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"17:16212:5712":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"1:968:8906":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"2:42119:3888":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"5:1509:3134":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"2:46367:7866":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"17:15799:5609":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:3666:3376":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"6:5630:6940":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"2:21639:32358":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"0:333:2436":{"crate_id":0,"path":["semver","Comparator"],"kind":"struct"},"1:6793:10028":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"17:12949:4857":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"2:4391:109":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:33730:3348":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"2:46980:7930":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"11:2498:21570":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"2:3756:70":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"11:1066:21574":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"17:15092:5409":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"17:13497:5006":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"1:9370:8066":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"14:165:21581":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"1:4147:9939":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"2:42264:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"17:12557:4769":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"11:2383:4153":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"1:9296:26892":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"1:6566:186":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"16:6480:5768":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"1:11642:8090":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"17:16151:5698":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"16:7428:22516":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"11:883:8909":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"2:44819:219":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"17:14752:5251":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:9948:802":{"crate_id":2,"path":["core","fmt"],"kind":"module"},"1:8535:3405":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"14:40:4957":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"1:666:8970":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"11:1896:3130":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"17:12201:8814":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"5:3805:7405":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"18:581:3263":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"2:40567:7713":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:2699:4497":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"1:5509:128":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"2:42342:93":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"2:40664:3297":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"2:40420:3423":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"17:12289:4852":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"17:15390:5483":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"18:651:4600":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"17:0:2974":{"crate_id":17,"path":["object"],"kind":"module"},"2:32226:7562":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"2:23144:7491":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI8Inner"],"kind":"struct"},"17:11256:4775":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"2:42225:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"2:22927:32494":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:6847:9019":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLock"],"kind":"struct"},"17:14051:5121":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"2:2864:15257":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"16:5927:5848":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"17:15289:5453":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"11:2326:8910":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"16:8155:6147":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"1:4335:9964":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"1:3334:8989":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"2:10787:4485":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"16:7769:6087":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"1:586:8969":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"5:3284:6254":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"16:7570:5781":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"2:44419:7796":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"17:15356:5475":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"16:2323:21645":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"17:15931:4942":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"17:11443:4789":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"1:669:8972":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"5:2102:7405":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"2:22989:7479":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"17:11026:22591":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"2:21622:32360":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:11251:8067":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"6:7467:7281":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"16:3778:5794":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"2:46524:7887":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"2:4532:7440":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"16:4587:5806":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"17:11574:6256":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"6:4932:6654":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:15944:4956":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"1:1083:8910":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"2:43469:7772":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"2:42201:196":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"17:12388:4870":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"17:11812:8798":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"2:40808:3315":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"2:43793:4161":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"2:78:1911":{"crate_id":2,"path":["core","usize"],"kind":"module"},"1:1916:8981":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"5:939:4420":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"17:12508:4884":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"14:220:6236":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"17:13785:5082":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"2:46014:7839":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:4917:9952":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"1:11268:8082":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"17:11419:4784":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"17:14372:5185":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"16:7910:22519":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"5:1493:4154":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2:22455:10149":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"9:447:21495":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"2:4723:4466":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"2:22148:4148":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"3:0:505":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"6:6915:7209":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"17:11367:4769":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"6:1680:6542":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"6:6763:7154":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"1:5702:9008":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"17:15678:5583":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"6:1585:6476":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"1:3059:226":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"2:43841:3404":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"17:10399:3405":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"1:5283:9002":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"16:5367:22505":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:749:190":{"crate_id":2,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"14:187:21588":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"17:15368:5478":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"6:5039:6708":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"1:11609:9066":{"crate_id":1,"path":["std","sys","thread_local","fast_local","Key"],"kind":"struct"},"1:8599:8027":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"17:10915:35858":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"6:5260:6772":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"16:2458:5746":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"16:5863:22507":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"16:7355:6056":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"1:11668:8095":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"6:8328:7395":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"1:4205:9943":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:10538:157":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"2:23122:7489":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU128Inner"],"kind":"struct"},"6:1653:6529":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"16:2808:5762":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"1:12308:9210":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"6:6435:7003":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"16:150:4399":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"2:46221:7858":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"2:6707:3324":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"11:0:2969":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"16:2438:5745":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"17:14503:5211":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"16:6263:5903":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"2:23651:236":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:8560:9037":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"17:13089:4923":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"2:30618:3121":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"2:12891:3394":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:7144:10059":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"2:44063:3420":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:5616:9006":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"6:6379:6963":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"6:6775:7156":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"5:1324:6025":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"5:5230:4444":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"2:40786:3314":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"17:12189:8813":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"6:7359:7245":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:46029:7840":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:44951:7818":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"2:44625:3393":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"11:774:6250":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"16:2528:5749":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"1:2004:785":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"11:1160:8914":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"17:15324:5464":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"17:14271:5171":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:40322:7700":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"2:42722:3153":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"18:623:35863":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:40412:3424":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"18:635:4621":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"5:1739:4413":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"5:6051:4444":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"2:23009:3205":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"2:45909:7829":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:4880:9967":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"5:6566:3132":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"2:46906:7928":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"4:0:2965":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"17:13344:4981":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"16:3614:5793":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"2:39621:215":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"2:3134:117":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"2:46335:7864":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"6:5483:6879":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"6:7575:7351":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"2:7761:3272":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"1:9425:4520":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockWriteGuard"],"kind":"struct"},"11:844:9833":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"16:7539:5780":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"5:2302:35790":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"2:43780:4165":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:5582:9003":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"11:364:4403":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"6:545:6393":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"17:13753:5075":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"16:2592:5752":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:45976:7837":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:4217:9946":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"1:2489:9889":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"6:5064:6721":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"18:643:4600":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"6:7984:7363":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"17:10671:35853":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"6:5296:6791":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:40686:3298":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"16:6160:21618":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"6:1485:6419":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"17:261:8739":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"2:44504:3398":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"2:40607:4468":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"16:6758:5964":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"18:670:8737":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"5:839:101":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"2:43710:4151":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"18:765:26763":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"5:5934:3132":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"2:13524:8953":{"crate_id":2,"path":["core","future","async_drop","AsyncDropInPlace"],"kind":"struct"},"2:42097:3646":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2:12900:3397":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"6:4837:6601":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"2:23041:9894":{"crate_id":2,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"1:11693:8097":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"5:7415:4423":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"17:13738:5071":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"17:13538:5018":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"17:12030:8805":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"1:6790:9016":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"5:1531:6250":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"1:12355:909":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"1:12340:1174":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"16:8118:6142":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"5:7645:243":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:43484:7773":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"6:5489:6881":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"6:1535:6443":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"6:8282:7386":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"1:5845:7972":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"16:2854:5764":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"2:44939:3184":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"6:6698:7132":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"2:32236:3530":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"1:10957:139":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"17:9781:22572":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"17:11743:4805":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"2:43854:3403":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"6:5382:6820":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"1:12363:1845":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"2:1755:3852":{"crate_id":2,"path":["core","intrinsics","AggregateRawPtr"],"kind":"trait"},"1:367:8967":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"1:1891:8979":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"2:40774:3323":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:9202:8059":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"16:6504:5922":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:40714:133":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"2:42047:3134":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"17:9737:22556":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"2:46204:7857":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:8631:8029":{"crate_id":1,"path":["std","os","unix","net","ucred","UCred"],"kind":"struct"},"0:364:2487":{"crate_id":0,"path":["semver","Op","Caret"],"kind":"variant"},"16:5742:5827":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"17:13387:4986":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"1:1855:8978":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2:39603:212":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:3897:8996":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"2:21605:32363":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"17:11567:8785":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"16:4424:5801":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"6:6491:7029":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:8683:3289":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"16:7813:6089":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"1:5831:220":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"17:15214:5436":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"2:1965:3874":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"11:2443:3132":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"16:7397:35846":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"16:2478:5747":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"17:15116:5411":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"16:7823:22518":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"17:13363:4982":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"17:11153:8758":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:46101:7852":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:3652:31352":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"2:22718:7455":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"2:13636:205":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"2:44617:3390":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"16:6427:8873":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"2:22479:9894":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"2:42736:3156":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"16:6047:8837":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"16:6927:5996":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"16:6246:206":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"17:437:4698":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"11:800:3132":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"17:12530:8824":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"12:0:2970":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"17:1098:8742":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"2:2890:163":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"1:10512:9476":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"16:6494:5921":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"2:3329:3373":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"16:4560:5805":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"2:3511:211":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:44298:7783":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"16:7014:22514":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:9726:4528":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"2:32201:8958":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"1:10994:31488":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"17:1207:8743":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:72:966":{"crate_id":2,"path":["core","isize"],"kind":"module"},"1:11682:8143":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"1:6712:4516":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"1:6861:4517":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLockGuard"],"kind":"struct"},"2:5195:435":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"6:8253:7379":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"17:16105:5685":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"6:4800:6573":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"17:3597:8751":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"1:5648:113":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"17:16223:5714":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"18:698:4626":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"6:5352:6806":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"6:4992:6682":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:10647:4529":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"2:22855:7461":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:373:8968":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"5:6072:9473":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"1:7360:9263":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"6:7561:7342":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:5254:8944":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"5:3039:3746":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"16:2748:5759":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"5:7425:7425":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"2:44159:3410":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"2:23413:2853":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"type_alias"},"16:2394:5743":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"16:5914:5847":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"6:5400:6831":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"1:11102:4533":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"17:13526:5015":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"2:10975:239":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"6:8247:7378":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"16:3029:4642":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"2:40673:3307":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"17:12478:4880":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"2:44698:15353":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:12356:891":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"6:5306:6795":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"6:8029:7376":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"16:6606:5935":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"16:4830:5813":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"5:1590:8924":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"17:13797:5084":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"1:9433:162":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:45930:7834":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"6:5336:6804":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"17:13723:5067":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"2:21637:32367":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"17:11354:8776":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"16:872:8739":{"crate_id":16,"path":["gimli","read","endian_slice","DebugLen"],"kind":"struct"},"9:53:9189":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"0:319:2434":{"crate_id":0,"path":["semver","VersionReq"],"kind":"struct"},"6:5536:6894":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:22996:3217":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"11:430:35825":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"2:42498:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"2:11930:4167":{"crate_id":2,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"7:79:21488":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"5:7668:8936":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"16:7473:5871":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"6:5225:6754":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"1:865:4153":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"6:1510:6429":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"6:5219:6751":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"16:5700:5770":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"1:8216:139":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"2:40536:106":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"2:3174:3665":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"17:11595:4792":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"1:8072:9821":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"1:4400:8999":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"1:6916:233":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"16:6335:8870":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"5:7132:4462":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"17:16187:5707":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"17:12076:8808":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"6:6478:7020":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"17:13594:5035":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"17:15383:5482":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:44099:3417":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"17:15769:5604":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"17:14986:5386":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"17:15222:5438":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"16:4614:5807":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"6:1496:6424":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:22911:7467":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"6:6441:7006":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"16:7509:8885":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"2:44212:3424":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:21671:10065":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"16:4940:5817":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"1:11654:8094":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"16:2338:5734":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"1:12365:966":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"16:6342:35845":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"16:7006:8874":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"11:1917:6254":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"17:15249:5442":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"1:10353:9052":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"16:2708:5757":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"1:521:4430":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"2:8316:3291":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"5:6958:3138":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"17:10954:22589":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"2:43963:3412":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"2:22824:7457":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"17:12150:4850":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"6:7485:7292":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"1:12368:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"1:11005:9025":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"2:38311:3359":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"17:11537:8783":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"2:44878:7815":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:3181:3246":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"17:11392:8777":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"16:5347:5824":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"6:4787:6564":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"16:5960:5855":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"17:11825:8800":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"9:392:21496":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"2:3574:3368":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"17:14876:5345":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"6:1621:6506":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:980:8909":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"10:36:6265":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"2:10317:119":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"6:1628:6510":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"17:256:8738":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"16:3925:5798":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:41943:8027":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"17:13959:5108":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"16:7528:6075":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"1:3586:8025":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"17:15616:5561":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"6:6880:7184":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"6:4885:6632":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"16:7379:35847":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"1:11286:162":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"1:957:9833":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"16:867:8738":{"crate_id":16,"path":["gimli","read","endian_slice","DebugByte"],"kind":"struct"},"16:6317:8862":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"17:14235:5166":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:39581:210":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"17:10622:35857":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"1:3297:31731":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"1:11013:9008":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"1:1101:8914":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"17:14212:5165":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"2:6198:3300":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2:4414:15190":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"2:2729:195":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"15:0:2972":{"crate_id":15,"path":["addr2line"],"kind":"module"},"16:6849:5990":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"5:1077:4413":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"2:41743:170":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"1:4348:9965":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"6:5361:6810":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"18:735:26762":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"16:7061:6015":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"16:2660:5755":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"17:10317:4754":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"16:6991:35839":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"5:7435:35348":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"2:13834:4492":{"crate_id":2,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"16:2684:5756":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"1:3389:8992":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"9:482:21494":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"1:10764:4530":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"5:6414:10153":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"17:10155:4748":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"1:12362:1839":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"2:8680:149":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"2:47038:7932":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:11513:4535":{"crate_id":1,"path":["std","sys","sync","once","futex","CompletionGuard"],"kind":"struct"},"0:358:2484":{"crate_id":0,"path":["semver","Op","Less"],"kind":"variant"},"2:10327:3156":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"6:465:6345":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"2:44327:7792":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:12358:903":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"1:12366:1911":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"1:11787:8996":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"17:14341:5180":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"1:12348:1811":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"13:110:35827":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"16:8136:6144":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"1:6276:4504":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"6:6664:7119":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"5:1581:210":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"5:3292:6252":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"16:2636:5754":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"16:5107:5822":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"17:9916:22575":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:43488:4174":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"5:289:4413":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"2:41240:3282":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"2:22121:9894":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"0:356:2483":{"crate_id":0,"path":["semver","Op","GreaterEq"],"kind":"variant"},"2:2083:3249":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"17:11773:4891":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"2:39681:3367":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"2:45962:7836":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"17:14449:5205":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"1:5632:9007":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"1:752:154":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:44829:227":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"5:2220:7407":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"16:5817:5833":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"17:12851:4907":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"17:11583:8790":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"17:16235:5717":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"2:46479:7886":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"2:39549:3123":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"1:11648:9068":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"17:15301:5459":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"1:1853:8977":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"2:41765:7731":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"6:6900:7198":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"6:5390:6825":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"1:2463:9879":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"17:15058:5397":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"5:3251:4153":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"16:8259:6073":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"17:14599:5229":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"17:14545:5215":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"17:14436:5204":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"2:44645:7808":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"1:2309:8985":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:45845:7823":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"5:6433:10154":{"crate_id":5,"path":["alloc","task","LocalWake"],"kind":"trait"},"16:5686:5767":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"2:47163:7941":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"5:304:3127":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"16:7633:35840":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"1:8488:8022":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"2:1882:4436":{"crate_id":2,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"1:8182:9026":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"1:10495:113":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"17:14025:5117":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"6:6609:7097":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"1:974:8908":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"2:3388:142":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:9179:3134":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"17:15463:5500":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"17:10044:22578":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"0:395:2421":{"crate_id":0,"path":["semver","BuildMetadata"],"kind":"struct"},"1:8078:9852":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"17:11661:4798":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"1:3387:8991":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"6:1723:6558":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"17:10997:4766":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"18:80:26752":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"6:6788:7163":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"5:3820:8925":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:43010:32567":{"crate_id":2,"path":["core","fmt","rt","ArgumentType"],"kind":"enum"},"17:10612:8755":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"16:7085:6016":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"17:11647:4797":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"17:9886:22574":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"1:12367:1419":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"5:7485:3134":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"17:14575:4875":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"17:12584:8758":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"2:42617:8948":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:2316:9876":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"2:3614:33092":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"17:13252:4959":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"17:11089:8765":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"1:12360:1851":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"15:394:21610":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"14:160:8898":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"11:1582:8916":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"11:2352:8911":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"2:46072:7843":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"6:5344:6805":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"2:13791:115":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"16:4882:5815":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"2:42056:3642":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:44613:3388":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"16:6300:8859":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"1:8611:9966":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"17:14091:5126":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"5:7376:3126":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"17:403:8740":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"6:5181:6731":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"17:11715:4802":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"6:5546:6900":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:2270:3252":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:9406:4436":{"crate_id":1,"path":["std","sync","poison","Guard"],"kind":"struct"},"1:1625:6253":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"17:9938:22576":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"6:570:6406":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"1:2713:4480":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"0:362:2486":{"crate_id":0,"path":["semver","Op","Tilde"],"kind":"variant"},"1:5838:4509":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"2:23133:7490":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroUsizeInner"],"kind":"struct"},"2:746:3206":{"crate_id":2,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"2:3589:146":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"16:6665:22512":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"6:4824:6591":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"16:3196:5733":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"13:229:6242":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"16:7052:8875":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"2:42136:226":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"17:13235:4957":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"2:30650:32566":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"17:13774:5079":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"1:10985:31490":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"6:5236:6760":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"17:11605:2414":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"16:8216:6149":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"2:44902:8966":{"crate_id":2,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"2:41825:7740":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"2:42578:97":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:44203:3423":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"6:1707:6553":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:39711:3369":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"17:12621:4887":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"11:875:8908":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"1:8007:9023":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"2:21848:10062":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"2:44633:3392":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"2:13814:4490":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:41231:3280":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:44313:7789":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:922:3132":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"2:42994:6116":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"2:46657:7892":{"crate_id":2,"path":["core","core_arch","simd","m16x16"],"kind":"struct"},"17:11293:22609":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"17:14356:5184":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"2:43266:7766":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"16:4468:5802":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"1:9155:8057":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:12906:3396":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:11916:31832":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"5:6612:4413":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"11:1051:8911":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"2:43031:2760":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"1:8177:4691":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"6:4811:6581":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:42128:4250":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"5:6693:3134":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"2:44621:3389":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:6902:7446":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"2:9787:91":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:43069:3163":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"16:7711:210":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"2:11403:3416":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:42192:3134":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:40857:3319":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"5:2210:4430":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"10:0:2968":{"crate_id":10,"path":["adler"],"kind":"module"},"2:22126:10067":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"17:11166:4771":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"2:45894:7828":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"17:15582:5549":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"17:11063:8764":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"1:4319:9962":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"16:6802:5976":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"11:2124:6025":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"6:7348:7240":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"5:7622:7432":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"6:8351:7401":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"16:7590:5782":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"6:4985:6679":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"17:15168:5426":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"2:11445:4155":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"16:4913:5816":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"16:3810:5795":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"18:589:4611":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"2:40992:3320":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:9329:9048":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"2:47106:7936":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"18:613:35862":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"2:47178:7942":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:12364:1827":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"2:2693:201":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"17:13375:4985":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"2:40435:15253":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"6:6524:7042":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"6:6417:6990":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"16:6895:5992":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"6:5557:6906":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"1:9118:199":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"1:8565:9933":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"2:40695:3299":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2:3376:2883":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"5:6176:4436":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"2:46591:7890":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"2:6084:3311":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"2:21838:9894":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"2:42003:194":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"1:8349:2797":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"9:424:21497":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"16:8188:8897":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"16:7168:8063":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"1:674:9817":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"1:1997:3861":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"11:742:8902":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"17:11621:4794":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"11:1728:156":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"11:490:154":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"17:12251:8818":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"17:13814:5087":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"1:9337:8063":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"19:0:1291":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"17:11524:8782":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"1:617:9814":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"1:2477:9883":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"6:6542:7054":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"16:6634:5774":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"2:44149:3408":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"2:34394:3354":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"2:32324:3667":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"16:5400:4749":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"6:5472:6876":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"6:5415:6837":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"1:8030:4530":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:21724:10061":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:9171:9041":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"1:1636:6255":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"1:2735:8987":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"2:23166:7493":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI32Inner"],"kind":"struct"},"17:15778:5606":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"1:1475:156":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:12004:2895":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"6:5160:6728":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"6:473:6350":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"2:44870:8380":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:9244:10034":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"1:4195:9942":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"6:6706:7136":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"17:14489:5208":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"2:13661:8954":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"2:44641:3387":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"17:10185:4750":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:2863:9894":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"2:45830:7822":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"17:11467:4791":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"1:12354:733":{"crate_id":1,"path":["std","f128"],"kind":"primitive"},"17:12175:8809":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"17:15473:5505":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"5:4252:4436":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"2:44609:3385":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"2:42729:3155":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"11:673:4153":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"2:10772:4480":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"17:13146:4933":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"1:12359:884":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"5:2539:7416":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"16:7741:5785":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"2:44807:7814":{"crate_id":2,"path":["core","future","async_drop","Noop"],"kind":"struct"},"5:2127:8926":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"2:2968:123":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"1:9185:8058":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"2:39661:216":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"2:46612:7891":{"crate_id":2,"path":["core","core_arch","simd","m8x32"],"kind":"struct"},"2:10573:3266":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"17:12264:8819":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:46154:7855":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"6:6636:7106":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:22505:9430":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"5:4938:217":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"16:4771:5811":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"1:9469:8068":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"17:12969:4914":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"1:11201:8055":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"1:9410:234":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"17:13972:4817":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"2:44491:7802":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"5:0:309":{"crate_id":5,"path":["alloc"],"kind":"module"},"2:40795:3301":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"6:5598:6920":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"11:787:6251":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"17:11313:4781":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"1:9393:187":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"1:2629:8986":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"2:7646:3306":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:9289:9044":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"2:40617:8960":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"5:3661:4153":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"11:1007:6025":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"6:1503:6427":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"0:351:2440":{"crate_id":0,"path":["semver","Op"],"kind":"enum"},"2:4842:3167":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"6:5617:6934":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"2:43913:3411":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"2:33529:3349":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:5083:9986":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"5:5729:3137":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"11:2536:6257":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"16:6442:5913":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"1:943:8901":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"1:10898:9060":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"1:5773:10015":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"1:5770:7170":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"6:5146:6727":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"17:13922:5104":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"6:7389:7267":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:6896:3302":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"17:12362:4869":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"16:7656:22517":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"11:2569:3128":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"2:41216:3276":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"2:7993:3275":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"2:44629:3391":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:3026:4500":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"16:6872:5991":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"6:5102:6723":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"5:7465:7426":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"2:30586:3120":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"2:22:817":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"2:10288:143":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"2:44928:3186":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"16:7111:6022":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"17:2234:8748":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"6:6471:7016":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"17:13399:4989":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"17:13946:5105":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:2537:3231":{"crate_id":2,"path":["core","ptr","with_exposed_provenance"],"kind":"function"},"11:351:35817":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"16:6466:5918":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"16:6620:5937":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"2:46412:7883":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"5:4436:265":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"6:1593:6481":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"17:15023:5393":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"2:12845:2379":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"17:10251:4752":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"2:13926:3125":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"17:12443:4877":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"17:12683:8829":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"16:4641:5808":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"5:6019:71":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"6:1565:6462":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:47009:7931":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"15:327:9186":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"17:13272:4969":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"2:8263:129":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"11:1923:6255":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"2:41209:3274":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"6:6768:7155":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"5:4282:4436":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"5:3318:6255":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"16:6962:5777":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:39731:7573":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"6:5466:6873":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"17:10905:8760":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"1:8498:9893":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"2:4290:4436":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"2:46784:7926":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:10269:226":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"2:40756:3312":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"5:4515:4438":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"2:10331:3157":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:5092:9987":{"crate_id":1,"path":["std","os","net","linux_ext","socket","UnixSocketExt"],"kind":"trait"},"17:11051:8763":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"17:14311:5175":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"11:1903:6252":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"1:8862:4153":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:47152:7940":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:23078:7485":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU8Inner"],"kind":"struct"},"2:13121:119":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"17:13187:4942":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"6:553:6398":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:41781:7733":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"15:306:21601":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"1:4209:9944":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"5:7727:3130":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"17:11102:8766":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"0:299:2414":{"crate_id":0,"path":["semver","Version"],"kind":"struct"},"6:5528:6889":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:3200:3342":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"18:680:4622":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:3671:9913":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"1:8230:127":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"16:5415:5825":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"17:10769:35855":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"14:202:15220":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"1:4297:28479":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"2:43881:3405":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"17:12399:4871":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"2:39469:3377":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"17:10720:35851":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"5:1441:99":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"2:11251:4156":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"2:30363:3203":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"17:16138:5692":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"2:46861:7927":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"17:15596:5555":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"1:3661:9892":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"1:11214:8056":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"5:2116:8925":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"2:22839:7458":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"17:12342:4864":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"17:9671:22557":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"2:2979:137":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:44194:3422":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"17:12213:8815":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"5:7610:7430":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"11:299:6244":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"2:44456:7797":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"17:15281:5452":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"17:14066:5124":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"2:40589:9862":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"2:43048:137":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"2:0:563":{"crate_id":2,"path":["core"],"kind":"module"},"2:32237:244":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"18:481:4598":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"2:32235:237":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"2:40391:7705":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:23345:2852":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"type_alias"},"2:10329:206":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:32978:3340":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"17:15608:5558":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"2:22507:3231":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_exposed_provenance"],"kind":"function"},"16:6588:5927":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"2:40474:7708":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"6:7314:7221":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"1:12127:4540":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"17:15342:5468":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"18:507:4600":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"17:14977:5385":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"2:43802:4164":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"17:14325:5178":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:40428:3422":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:11090:4532":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"1:1631:6254":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"5:2322:7415":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"16:8073:6138":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"5:3040:35326":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"16:6648:5939":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"17:10092:22579":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"2:10578:3267":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"2:33190:3343":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"17:11016:8761":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"1:9142:8056":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"6:6721:7141":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"16:7144:22515":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"16:5037:5820":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"16:5831:5836":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"2:11289:4169":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"6:586:6415":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"1:12313:9822":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"17:15814:5610":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"17:11688:4800":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"2:1781:2850":{"crate_id":2,"path":["core","mem"],"kind":"module"},"1:9324:9047":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"6:8259:7380":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"14:31:8898":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"2:11417:3415":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"16:2936:21647":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"5:6968:3139":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"6:8006:7364":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"2:8727:33117":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:6007:4436":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"17:14177:5154":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"1:650:3862":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"17:12659:8827":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"2:36270:3355":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"2:21742:7454":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"16:8226:22520":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"2:10314:119":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:44837:207":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"1:1619:6252":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"17:15151:5421":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"1:8470:2798":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"1:10927:7977":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"2:10965:9894":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"5:7393:7424":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"1:10976:8022":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"16:2788:5761":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"17:12107:4784":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"17:10534:35859":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"6:1663:6535":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"1:11028:26896":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"18:726:4634":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"2:40378:7704":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"17:13674:5042":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"6:1490:6421":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"6:1686:6545":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:23177:7494":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI64Inner"],"kind":"struct"},"2:22546:10151":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"17:15646:5568":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"6:6650:7117":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"5:112:605":{"crate_id":5,"path":["alloc","alloc","dealloc"],"kind":"function"},"1:8676:8030":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"6:6629:7105":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:40541:7712":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"17:16176:5706":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"1:10964:8079":{"crate_id":1,"path":["std","sys","pal","unix","fs","Mode"],"kind":"struct"},"2:3347:124":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"2:44912:180":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"17:15822:5613":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:11702:4801":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"11:1676:4407":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"17:12768:22559":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"2:12432:3400":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"2:12700:3426":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"5:4087:3132":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"1:1092:8911":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"16:6066:5867":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"2:32212:8959":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"2:43284:7771":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:6455:4509":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"1:6177:4509":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"5:1540:6251":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:40818:3316":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"16:2878:5765":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"5:3263:35349":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"17:12900:4911":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"6:479:6353":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"17:15836:5616":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"11:123:4401":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"1:5441:203":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"1:4327:9963":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"17:11788:8795":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"2:4654:8940":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"1:9278:9042":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"6:5565:6908":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"16:6940:5998":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"2:11431:4157":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:33596:3347":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"17:12516:8822":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"1:6503:220":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"2:32295:3668":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"2:44187:3421":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"2:46236:7859":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"17:12238:8817":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"17:2037:8744":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"1:12361:1833":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"16:2768:5760":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"1:2312:2889":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"6:1580:6474":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:2149:189":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"2:39641:214":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:2070:197":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"18:718:4631":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"5:1570:8902":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"1:5329:204":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"2:42955:7756":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"1:11316:8083":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"17:12724:22580":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"17:12225:8816":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"17:11042:8762":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"16:4856:5814":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"6:6505:7040":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:4688:9968":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"2:4:1256":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"2:42965:2760":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"17:13606:5038":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"1:9415:235":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"16:8301:6156":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"18:538:4608":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"6:8271:7382":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"17:11877:4810":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"1:2307:138":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"1:8774:7766":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"16:5995:5857":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"2:6907:4474":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"1:12345:335":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"2:10755:4479":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"2:45947:7835":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"17:13473:5002":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"1:9214:10033":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"1:8204:7979":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"6:7412:7268":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"16:7306:35848":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"2:3996:3134":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"6:5588:6915":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"17:15376:5481":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"16:6353:5905":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"17:15176:5429":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"17:14189:5156":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"6:5320:6800":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"16:7648:8892":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"1:2226:128":{"crate_id":1,"path":["std","ffi","os_str","Display"],"kind":"struct"},"6:6621:7104":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:44277:15218":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:5106:9988":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"2:4367:8937":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"18:531:4605":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"17:11841:8802":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"6:5423:6842":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"1:7875:4745":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"16:4352:5800":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"2:39904:3670":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"17:13999:5114":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"17:9755:22554":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"5:4322:4153":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"1:12324:26885":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"1:8541:3413":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"1:1610:3132":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"6:7461:7280":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"1:4998:9951":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"5:7059:264":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:44663:130":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"17:15273:5451":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"6:6738:7145":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"17:12647:8826":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"1:7989:7973":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"18:0:2975":{"crate_id":18,"path":["memchr"],"kind":"module"},"2:47216:7949":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"2:4733:3165":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"2:3584:254":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"2:2060:3250":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:11699:8098":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"5:743:118":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"2:2896:258":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"1:2479:9884":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:44522:3399":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"17:13412:4991":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"6:5290:6788":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"2:4501:8939":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"6:5407:1243":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"1:2067:198":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"1:10947:7978":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"11:2542:6258":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"1:11848:8998":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"2:34221:3352":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"17:11915:22678":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"17:14529:5213":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"17:597:4745":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"17:11755:4808":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"2:23199:7496":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroIsizeInner"],"kind":"struct"},"0:381:2419":{"crate_id":0,"path":["semver","Prerelease"],"kind":"struct"},"6:6811:7169":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"6:4897:6637":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:7710:32730":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"6:4916:6650":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"1:11045:8057":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"2:10321:3153":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"6:8288:7387":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"1:3480:9920":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"6:4959:6666":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:41931:7747":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"17:12485:22704":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"16:5006:5819":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"2:21850:7454":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"17:14038:5119":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"16:860:8834":{"crate_id":16,"path":["gimli","read","endian_slice","DebugBytes"],"kind":"struct"},"17:11547:4690":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"17:16121:5690":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"2:4789:3166":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"17:14079:5125":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"6:5174:6729":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"2:42031:4153":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"2:42381:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:4433:15230":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"2:30624:3876":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"2:43720:4159":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"6:5515:6888":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"17:11853:8803":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"11:2423:3134":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"2:40552:15317":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:42022:173":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"5:3674:4154":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"1:1838:696":{"crate_id":1,"path":["std","env"],"kind":"module"},"6:5665:6954":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"17:11674:4799":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"2:43871:3406":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"2:41258:3286":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"2:4780:4467":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:39718:7571":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"5:7595:15317":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:3604:8995":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:3382:140":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:40352:7701":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"2:41909:32558":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"1:1069:6025":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"1:7403:4522":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"17:10457:138":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"1:10938:8077":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"18:548:153":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:40742:7718":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"6:5002:6689":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"17:15624:5562":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"5:7457:210":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"17:14516:5212":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"17:10068:22561":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"1:7885:9071":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"2:39566:213":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:8548:3408":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"16:7580:6080":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"2:40508:7709":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"1:9714:138":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"9:178:9199":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"6:7306:7216":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"2:9782:84":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:30639:2760":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"2:22493:10150":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"1:10917:8069":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"16:7618:6081":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"2:2887:76":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"16:5846:5837":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"5:5466:15204":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"1:9721:9026":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"1:10334:8979":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"2:3139:247":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"6:5581:6913":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"17:13855:5091":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"1:8518:3307":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"1:3900:8997":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"2:43822:4163":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"2:43237:7765":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"5:7582:7427":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"17:11115:8767":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"6:5020:6698":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"2:41225:3278":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"17:13173:4941":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"16:4718:5809":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"2:41002:3321":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"17:9858:22573":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"17:11242:8771":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"16:2838:5763":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"17:15102:5410":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"6:6746:7146":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"1:8249:9028":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"5:3297:35350":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"11:1891:3132":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"2:12662:3431":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:5252:9002":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"6:564:6403":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"2:9350:3644":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"2:5022:15247":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"16:4802:5812":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"16:5385:4748":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:41016:3322":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"6:538:6390":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"17:16069:5678":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"1:8058:9820":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"11:2554:35816":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"2:10323:3154":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"1:7723:28600":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"17:15521:5542":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"1:12344:1314":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"1:10355:9051":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"11:1087:35820":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"17:10350:4755":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"11:102:6243":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"2:43254:157":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"2:32294:3531":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"17:13766:5077":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"2:32205:6073":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"16:2355:5736":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"6:485:6356":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"6:6874:7183":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:23100:7487":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU32Inner"],"kind":"struct"},"11:1025:8910":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"5:1843:3130":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"5:5864:251":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"2:46686:7893":{"crate_id":2,"path":["core","core_arch","simd","m32x8"],"kind":"struct"},"1:4877:9989":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"1:6672:3276":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"17:10170:4749":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2:22160:32365":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"17:14284:5173":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"0:366:2488":{"crate_id":0,"path":["semver","Op","Wildcard"],"kind":"variant"},"5:3410:3130":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"17:14298:5174":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"14:0:2971":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"16:2902:21646":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"2:8371:178":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"17:11227:8770":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"6:5244:6764":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"1:12351:735":{"crate_id":1,"path":["std","f16"],"kind":"primitive"},"1:12339:417":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"17:12597:4886":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"1:8625:9035":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"2:44470:15219":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"16:6412:22510":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCacheStrategy"],"kind":"enum"},"2:32326:114":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"2:47231:7950":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"5:1355:8910":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"6:5376:6817":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"1:8812:10010":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"1:6352:4490":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"6:5677:6959":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"6:6519:7041":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"5:3258:6253":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:8225:165":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"17:12433:4875":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"6:517:6378":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"17:16249:5718":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"1:11233:7808":{"crate_id":1,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"5:1204:34153":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"17:15992:5664":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"2:32219:3165":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"17:13211:4956":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"1:10604:9040":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"16:8202:5787":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"14:214:6234":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"11:2151:8911":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"5:40:3129":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"16:6026:5863":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"17:2175:22636":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"1:9350:26919":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"2:10270:2761":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"17:14012:5116":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"6:4909:6646":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"6:7339:7239":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:10333:3158":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"2:3215:3364":{"crate_id":2,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"1:6368:4508":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"1:9229:10032":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"17:11898:4812":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"9:0:2967":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"17:11865:8804":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"1:11360:9065":{"crate_id":1,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"6:5052:6712":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"17:3473:8750":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"17:10439:4758":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"18:515:4603":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"17:11730:4804":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"11:2403:4154":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"9:357:21510":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"1:8241:7981":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"1:9420:4519":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockReadGuard"],"kind":"struct"},"1:8852:8048":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"1:4801:9941":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"17:12089:4847":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"1:951:8903":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"1:8344:9031":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"17:14111:5129":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"1:6193:220":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"5:3222:100":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"7:0:1901":{"crate_id":7,"path":["unwind"],"kind":"module"},"6:1699:6549":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:2539:3232":{"crate_id":2,"path":["core","ptr","with_exposed_provenance_mut"],"kind":"function"},"2:2893:144":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"1:5952:9009":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"2:12416:4147":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"16:8313:137":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"17:14933:5380":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"5:6934:3137":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"2:23111:7488":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU64Inner"],"kind":"struct"},"1:10718:8989":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"1:11931:8101":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"17:11557:8784":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"2:2900:257":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"2:22417:10148":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"2:3365:3362":{"crate_id":2,"path":["core","ops","deref","DerefPure"],"kind":"trait"},"1:3432:8994":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"1:8868:8051":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"17:13899:5099":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"6:4870:6625":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"17:9984:22577":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"2:40644:3296":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"6:5277:6783":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"1:0:1713":{"crate_id":1,"path":["std"],"kind":"module"},"5:1549:8915":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"6:5329:6803":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"1:1968:3860":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"2:47293:7967":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"2:47097:7935":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"2:40724:3309":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"6:7602:7357":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"17:10018:22558":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"2:11144:4154":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:8709:9997":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"1:5959:9012":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"7:32:21481":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"2:40765:3313":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"2:12911:3395":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"6:5314:6799":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:38201:3357":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"2:22962:32499":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"1:8726:8040":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"1:11923:8101":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"17:15734:5591":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"6:5046:6710":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"2:43730:4160":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"2:44481:7798":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"2:45815:7819":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"17:15010:5388":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"17:15456:5498":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"2:44812:150":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"16:3842:5796":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"1:8479:8021":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"17:11128:4738":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"3:234:226":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:4975:4501":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"17:9807:22562":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"17:12278:8820":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"6:1671:6536":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:11631:26886":{"crate_id":1,"path":["std","sys","thread_local","fast_local","DtorState"],"kind":"enum"},"2:47201:7948":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"17:12863:4908":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"2:3360:3361":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"17:14968:5381":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"1:12346:1687":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:22771:7456":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:5986:9013":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"2:46553:7888":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"2:47137:7939":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:21593:32363":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"5:4451:4438":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"6:6714:7140":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"2:13871:152":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"1:12353:754":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"2:10536:153":{"crate_id":2,"path":["core","hash","macros","Hash"],"kind":"proc_derive"},"2:38256:3358":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"18:598:35860":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"17:12056:4844":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"17:10419:4757":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"17:13455:5001":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"1:426:185":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"1:7988:9894":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:43276:7770":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:3523:3280":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:32159:6261":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"6:5436:6852":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"1:10922:8071":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"2:32766:3341":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"2:10319:128":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"5:219:4411":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"6:4864:6624":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"6:6562:7070":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"1:4766:9985":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"17:13509:5007":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"17:13308:4974":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"6:5200:6743":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"17:12671:8828":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"2:21730:10064":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"16:2612:5753":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:22605:10143":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"2:43641:8965":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:4481:9000":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"16:6543:5926":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"2:1995:1358":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"16:4502:5803":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"6:8341:7399":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"17:12711:137":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:11963:4168":{"crate_id":2,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"2:4650:221":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"2:47117:7937":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"5:1369:8914":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"2:13547:3312":{"crate_id":2,"path":["core","future","async_drop","Fuse"],"kind":"struct"},"2:2074:7436":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"2:3863:3132":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"1:10227:7744":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"17:15190:5432":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:15:2764":{"crate_id":2,"path":["core","write"],"kind":"macro"},"2:40523:7711":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:4161:9941":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"17:13832:5088":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"16:6079:5726":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"17:10887:35856":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"1:3291:29121":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"17:13064:4922":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"14:7:8898":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"17:10284:4753":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"2:40827:3317":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:909:6251":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"6:5083:6722":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"6:6532:7047":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:39505:3374":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"5:4481:4436":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"17:10710:8757":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"2:2062:3251":{"crate_id":2,"path":["core","ptr","metadata","Thin"],"kind":"trait_alias"},"2:23089:7486":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU16Inner"],"kind":"struct"},"5:3648:182":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"2:47059:7933":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"5:6775:4413":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"5:3042:7412":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"2:22878:3204":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:6676:9015":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"17:15426:5492":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"6:5445:6858":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"2:3629:3375":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"6:5266:6775":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"16:7132:6024":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"6:7537:7332":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"17:15138:5415":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"1:11827:8997":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"16:6231:5898":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"2:10114:3175":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"2:12425:1721":{"crate_id":2,"path":["core","str"],"kind":"module"},"11:2369:8920":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"2:42715:3154":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:41797:9934":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"6:8306:7390":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"2:43701:4150":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"2:42420:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"2:3601:3372":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"6:4924:6652":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"16:2374:5742":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"2:2884:77":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"1:11225:31491":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"11:1910:6253":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"2:22373:10147":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"2:11169:3413":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"1:938:8915":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"5:734:250":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"6:6756:7153":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"16:7695:6085":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"16:7799:5773":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"2:40579:3405":{"crate_id":2,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"17:12887:4909":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"16:7686:8893":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:21651:32355":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"1:1914:8980":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"6:7366:7249":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"17:12300:22702":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"1:4919:9954":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"11:700:3134":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"1:10724:8993":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"5:680:8921":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"6:6657:7118":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:3835:9935":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"11:2469:3130":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"17:12464:22703":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"2:2659:112":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"17:14414:5193":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"2:30997:196":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:44637:3386":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"17:15078:5405":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"1:8528:3320":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"2:13507:8950":{"crate_id":2,"path":["core","future","async_drop","AsyncDropOwning"],"kind":"struct"},"17:14847:5334":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"17:11214:8769":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"6:8012:7366":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"1:11108:4534":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"5:5422:4413":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"13:0:2964":{"crate_id":13,"path":["std_detect"],"kind":"module"},"1:932:3130":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"18:521:26764":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"2:43945:3414":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"11:328:6247":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"2:3212:3363":{"crate_id":2,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"5:4117:4413":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"6:8265:7381":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"2:3270:3353":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"1:3643:2761":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"16:3669:4647":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"6:5031:6703":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"2:31024:3263":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"2:46058:7842":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"2:38890:3360":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:3061:137":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"6:6460:7008":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:43999:3416":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"0:352:2481":{"crate_id":0,"path":["semver","Op","Exact"],"kind":"variant"},"6:5370:6816":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:9969:33113":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:8606:8028":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"1:896:6250":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"17:10137:22555":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"16:6433:5912":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"2:21669:9894":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"2:22560:3231":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","with_exposed_provenance"],"kind":"function"},"17:12824:22581":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"6:1639:6518":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"1:12357:897":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"6:1526:6437":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"16:6120:22509":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"1:4813:7262":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"function"},"2:21583:3263":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"6:5250:6766":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"17:12328:4859":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"6:559:6401":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"1:7944:4526":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"1:12342:1873":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"2:45877:7827":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"17:10982:22590":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"16:8175:8894":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"11:1887:3134":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"11:1883:4153":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"16:2998:5788":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"16:6813:5977":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"6:7330:7233":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:40363:32557":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"6:578:6411":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"17:16079:5679":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"1:9551:8980":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"5:1559:8901":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"18:573:4600":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"6:1547:6452":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"11:2548:6259":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"5:5470:15205":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"18:113:26754":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"17:11799:8796":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"2:41250:3284":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"11:2304:6025":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"9:238:7766":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"16:5075:5821":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"16:7549:6078":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"17:14246:5168":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"17:12808:4905":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2:22947:32502":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:4002:8998":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"16:5307:5823":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"2:3385:141":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"17:13877:5098":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"2:22279:9894":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"17:14386:5187":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"2:44344:7793":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:42539:90":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:42087:3643":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"9:502:6326":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"1:4811:7260":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"function"},"17:13116:4929":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"1:8265:7405":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"17:11493:8779":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"2:41983:7749":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"17:13437:4993":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"5:7743:3131":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"11:2140:8910":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2:46122:7853":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"17:12494:4881":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"16:3475:5792":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"11:2562:6262":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"17:16093:5683":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"18:689:4625":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"1:1607:3134":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"1:3430:8993":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"2:46268:7861":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"17:10661:8756":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"6:7429:7269":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"5:7385:3134":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:44891:32527":{"crate_id":2,"path":["core","task","wake","ExtData"],"kind":"enum"},"2:46352:7865":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:1614:3130":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"17:15445:5497":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"2:8181:3293":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"2:43895:3413":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"17:14402:5191":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"2:10643:1687":{"crate_id":2,"path":["core","slice"],"kind":"module"},"2:4659:8941":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"16:3014:21648":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"16:5756:8835":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"2:40704:3308":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"5:7107:4459":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"1:2535:2981":{"crate_id":1,"path":["std","io"],"kind":"module"},"2:23155:7492":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI16Inner"],"kind":"struct"},"18:96:26753":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"16:8093:6139":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"5:7658:7433":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"1:4133:9938":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"5:2249:7409":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"2:42303:86":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:9283:115":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"2:23188:7495":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI128Inner"],"kind":"struct"},"1:878:4154":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"}},"external_crates":{"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":29}