{"root":"0:0:1883","crate_version":"1.0.16","includes_private":false,"index":{"a:2:2666:215-0:297:1680":{"id":"a:2:2666:215-0:297:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2666:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:297:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:7732:2919-0:297:1680":{"id":"a:2:7732:2919-0:297:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7732:2919","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:297:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:351:651":{"id":"0:351:651","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[195,37],"end":[195,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8550:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8539:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:297:1680":{"id":"b:2:2238-0:297:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2673:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:297:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:2289"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11386:54693":{"id":"2:11386:54693","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"self::pattern":"2:11035:2651","prim@char":"1:12374:2219"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:10859:2698","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11040:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:36":{"id":"0:36","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[116,0],"end":[120,1]},"visibility":{"restricted":{"parent":"0:6:1637","path":"::display"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8590:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:398:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:37:651"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:410":{"id":"0:410","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[375,40],"end":[375,44]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:8813:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:398:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:411:703"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2241-0:352:1706":{"id":"b:2:2241-0:352:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2673:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:352:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2243:53628"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:674:3011":{"id":"5:674:3011","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2680:223-0:398:1687":{"id":"a:2:2680:223-0:398:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2680:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:398:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11401:54699":{"id":"2:11401:54699","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12374:2219","self::pattern":"2:11035:2651","str::splitn":"2:11398:54697"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:50136:2687","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11040:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11040:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11055:2668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2241-0:333:1702":{"id":"b:2:2241-0:333:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2673:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:333:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2243:53628"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11339:60409":{"id":"2:11339:60409","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:11337:60408"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:401:59":{"id":"0:401:59","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[375,9],"end":[375,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:398:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:322":{"id":"0:322","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[187,16],"end":[187,18]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2677:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:318:1700","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:7732:2919-0:352:1706":{"id":"a:2:7732:2919-0:352:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7732:2919","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:352:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3325-0:218:126":{"id":"b:2:3325-0:218:126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2673:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3323:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:218:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3327:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:270:309":{"id":"0:270:309","crate_id":0,"name":"as_str","span":{"filename":"src/lib.rs","begin":[508,4],"end":[510,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:310:596":{"id":"0:310:596","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[161,20],"end":[161,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Version","id":"0:297:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3325-0:318:1700":{"id":"b:2:3325-0:318:1700","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2673:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3323:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:318:1700","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3327:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5094:61064":{"id":"5:5094:61064","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:276:2352","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6725:2351","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:276:2352","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6725:2351","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2530:126":{"id":"2:2530:126","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2501:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"0:350":{"id":"0:350","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[195,37],"end":[195,42]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8590:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:333:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:351:651"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:183:225":{"id":"0:183:225","crate_id":0,"name":"Target","span":{"filename":"src/impls.rs","begin":[24,4],"end":[24,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"str"}}},"0:390":{"id":"0:390","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[317,25],"end":[317,27]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2290:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:383:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11416:60419":{"id":"2:11416:60419","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"`DoubleEndedIterator`":"2:7075:119","prim@char":"1:12374:2219","self::pattern":"2:11035:2651","str::rmatch_indices":"2:11419:60420"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:50164:2691","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11040:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11342:2167":{"id":"2:11342:2167","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:10603:2672"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11363:4647":{"id":"2:11363:4647","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:50268:2680","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11430:60426":{"id":"2:11430:60426","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12374:2219","self::pattern":"2:11035:2651"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11040:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11040:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11060:2667","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:28":{"id":"0:28","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[81,0],"end":[85,1]},"visibility":{"restricted":{"parent":"0:6:1637","path":"::display"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8595:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:383:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:29:651"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:381":{"id":"0:381","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,43],"end":[251,48]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8590:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:352:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:382:651"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2521-0:218:126":{"id":"b:2:2521-0:218:126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2494:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:218:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2523:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:332:651":{"id":"0:332:651","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[187,37],"end":[187,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8550:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8539:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:340:410":{"id":"0:340:410","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[195,9],"end":[195,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:333:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2517-0:398:1687":{"id":"b:2:2517-0:398:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2494:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2491:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:398:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2520:2949"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:386:59":{"id":"0:386:59","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[317,9],"end":[317,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:383:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:234:1856":{"id":"0:234:1856","crate_id":0,"name":"from_str","span":{"filename":"src/parse.rs","begin":[138,4],"end":[144,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48190:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:10996:1645","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7732:2919-0:333:1702":{"id":"a:2:7732:2919-0:333:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7732:2919","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:333:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:329:703":{"id":"0:329:703","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[187,31],"end":[187,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:8827:142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11426:60423":{"id":"2:11426:60423","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3325-0:297:1680":{"id":"b:2:3325-0:297:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2673:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3323:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:297:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3327:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:303":{"id":"0:303","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[161,9],"end":[161,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:297:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:304:410"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:5362-0:218:126":{"id":"b:5:5362-0:218:126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8595:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2673:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5360:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:218:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5364:1402"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:671-0:383:1685":{"id":"b:5:671-0:383:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:667:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:383:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:673:3010","5:674:3011","5:675:3012"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:311":{"id":"0:311","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[161,31],"end":[161,34]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clamp","max","min"],"trait":{"name":"Ord","id":"2:2321:177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:297:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:312:417"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:29:651":{"id":"0:29:651","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[82,4],"end":[84,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["formatter",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8550:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8539:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:400":{"id":"0:400","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[375,9],"end":[375,16]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2568:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:398:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:401:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:5362-0:398:1687":{"id":"b:5:5362-0:398:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8595:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2673:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5360:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:398:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5364:1402"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2527-0:297:1680":{"id":"b:2:2527-0:297:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2501:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:297:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:126","2:2531:1423"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:255":{"id":"0:255","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[380,0],"end":[434,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:297:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:256:911","0:257:1642"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:258":{"id":"0:258","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[436,0],"end":[479,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:318:1700","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:259:1868","0:260:1642","0:261:1877"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:297:1680":{"id":"0:297:1680","crate_id":0,"name":"Version","span":{"filename":"src/lib.rs","begin":[162,0],"end":[168,1]},"visibility":"public","docs":"**SemVer version** as defined by <https://semver.org>.\n\n# Syntax\n\n- The major, minor, and patch numbers may be any integer 0 through u64::MAX.\n  When representing a SemVer version as a string, each number is written as\n  a base 10 integer. For example, `1.0.119`.\n\n- Leading zeros are forbidden in those positions. For example `1.01.00` is\n  invalid as a SemVer version.\n\n- The pre-release identifier, if present, must conform to the syntax\n  documented for [`Prerelease`].\n\n- The build metadata, if present, must conform to the syntax documented for\n  [`BuildMetadata`].\n\n- Whitespace is not allowed anywhere in the version.\n\n# Total ordering\n\nGiven any two SemVer versions, one is less than, greater than, or equal to\nthe other. Versions may be compared against one another using Rust's usual\ncomparison operators.\n\n- The major, minor, and patch number are compared numerically from left to\nright, lexicographically ordered as a 3-tuple of integers. So for example\nversion `1.5.0` is less than version `1.19.0`, despite the fact that\n\"1.19.0\" &lt; \"1.5.0\" as ASCIIbetically compared strings and 1.19 &lt; 1.5\nas real numbers.\n\n- When major, minor, and patch are equal, a pre-release version is\n  considered less than the ordinary release:&ensp;version `1.0.0-alpha.1` is\n  less than version `1.0.0`.\n\n- Two pre-releases of the same major, minor, patch are compared by\n  lexicographic ordering of dot-separated components of the pre-release\n  string.\n\n  - Identifiers consisting of only digits are compared\n    numerically:&ensp;`1.0.0-pre.8` is less than `1.0.0-pre.12`.\n\n  - Identifiers that contain a letter or hyphen are compared in ASCII sort\n    order:&ensp;`1.0.0-pre12` is less than `1.0.0-pre8`.\n\n  - Any numeric identifier is always less than any non-numeric\n    identifier:&ensp;`1.0.0-pre.1` is less than `1.0.0-pre.x`.\n\nExample:&ensp;`1.0.0-alpha`&ensp;&lt;&ensp;`1.0.0-alpha.1`&ensp;&lt;&ensp;`1.0.0-alpha.beta`&ensp;&lt;&ensp;`1.0.0-beta`&ensp;&lt;&ensp;`1.0.0-beta.2`&ensp;&lt;&ensp;`1.0.0-beta.11`&ensp;&lt;&ensp;`1.0.0-rc.1`&ensp;&lt;&ensp;`1.0.0`","links":{"`BuildMetadata`":"0:398:1687","`Prerelease`":"0:383:1685"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:298:1681","0:299:1682","0:300:1683","0:301:1684","0:302:1686"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:255","a:2:2730:2808-0:297:1680","a:2:2666:215-0:297:1680","a:2:2680:223-0:297:1680","a:2:7731:2920-0:297:1680","a:2:7732:2919-0:297:1680","b:2:2532-0:297:1680","b:2:2521-0:297:1680","b:2:2241-0:297:1680","b:2:2527-0:297:1680","b:2:2517-0:297:1680","b:2:2238-0:297:1680","b:2:3325-0:297:1680","b:5:671-0:297:1680","b:5:5362-0:297:1680","0:20","0:32","0:220","0:303","0:305","0:306","0:308","0:309","0:311","0:313","0:315"]}},"b:5:671-0:352:1706":{"id":"b:5:671-0:352:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:667:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:352:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:673:3010","5:674:3011","5:675:3012"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:193:417":{"id":"0:193:417","crate_id":0,"name":"cmp","span":{"filename":"src/impls.rs","begin":[52,4],"end":[103,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:38118:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2680:223-0:333:1702":{"id":"a:2:2680:223-0:333:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2680:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:333:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2521-0:333:1702":{"id":"b:2:2521-0:333:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2494:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:333:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2523:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:671-0:297:1680":{"id":"b:5:671-0:297:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:667:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:297:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:673:3010","5:674:3011","5:675:3012"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:87:651":{"id":"0:87:651","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[103,4],"end":[108,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["formatter",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8550:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8539:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:395":{"id":"0:395","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[317,40],"end":[317,44]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:8813:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:383:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:396:703"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11407:60417":{"id":"2:11407:60417","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48046:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11040:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11040:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11055:2668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:223":{"id":"0:223","crate_id":0,"name":null,"span":{"filename":"src/parse.rs","begin":[80,0],"end":[107,1]},"visibility":{"restricted":{"parent":"0:204:1642","path":"::parse"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:10996:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:318:1700","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:224:125","0:225:1856"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:220":{"id":"0:220","crate_id":0,"name":null,"span":{"filename":"src/parse.rs","begin":[25,0],"end":[78,1]},"visibility":{"restricted":{"parent":"0:204:1642","path":"::parse"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:10996:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:297:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:221:125","0:222:1856"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11352:8869":{"id":"2:11352:8869","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9132:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9132:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:325":{"id":"0:325","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[187,20],"end":[187,29]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2676:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:318:1700","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:196":{"id":"0:196","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[106,0],"end":[146,1]},"visibility":{"restricted":{"parent":"0:162:1641","path":"::impls"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clamp","max","min"],"trait":{"name":"Ord","id":"2:2321:177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:398:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:197:417"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2666:215-0:398:1687":{"id":"a:2:2666:215-0:398:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2666:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:398:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:363:1752":{"id":"0:363:1752","crate_id":0,"name":"Tilde","span":{"filename":"src/lib.rs","begin":[259,4],"end":[259,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:232":{"id":"0:232","crate_id":0,"name":null,"span":{"filename":"src/parse.rs","begin":[135,0],"end":[145,1]},"visibility":{"restricted":{"parent":"0:204:1642","path":"::parse"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:10996:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:398:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:233:125","0:234:1856"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:327:596":{"id":"0:327:596","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[187,20],"end":[187,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:318:1700","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:377:596":{"id":"0:377:596","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[251,26],"end":[251,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Op","id":"0:352:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11356:2181":{"id":"2:11356:2181","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:11357:54685"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:301:1684":{"id":"0:301:1684","crate_id":0,"name":"pre","span":{"filename":"src/lib.rs","begin":[166,4],"end":[166,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:383:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"b:2:2241-0:218:126":{"id":"b:2:2241-0:218:126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2673:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:218:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2243:53628"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:262":{"id":"0:262","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[483,0],"end":[487,1]},"visibility":"crate","docs":"The default VersionReq is the same as [`VersionReq::STAR`].","links":{"`VersionReq::STAR`":"0:259:1868"},"attrs":["#[cfg(not(no_const_vec_new))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2568:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:318:1700","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:263:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:409:596":{"id":"0:409:596","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[375,29],"end":[375,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:398:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2521-0:352:1706":{"id":"b:2:2521-0:352:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2494:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:352:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2523:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5101:61066":{"id":"5:5101:61066","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:6980:219"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6980:219","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2680:223-0:383:1685":{"id":"a:2:2680:223-0:383:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2680:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:383:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2532-0:333:1702":{"id":"b:2:2532-0:333:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2491:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2501:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:333:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2535:126","2:2536:1422"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2730:2808-0:218:126":{"id":"a:2:2730:2808-0:218:126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2730:2808","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:218:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:5362-0:318:1700":{"id":"b:5:5362-0:318:1700","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8595:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2673:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5360:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:318:1700","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5364:1402"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7732:2919-0:398:1687":{"id":"a:2:7732:2919-0:398:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7732:2919","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:398:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2521-0:297:1680":{"id":"b:2:2521-0:297:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2494:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:297:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2523:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:263:59":{"id":"0:263:59","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[484,4],"end":[486,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2531:1423":{"id":"2:2531:1423","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48190:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2501:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:197:417":{"id":"0:197:417","crate_id":0,"name":"cmp","span":{"filename":"src/impls.rs","begin":[107,4],"end":[145,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:38118:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:372":{"id":"0:372","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,22],"end":[251,24]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2677:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:352:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:306":{"id":"0:306","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[161,16],"end":[161,18]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2290:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:297:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:33:651":{"id":"0:33:651","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[94,4],"end":[107,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["formatter",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8550:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8539:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11404:60416":{"id":"2:11404:60416","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48046:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11040:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:268:1839":{"id":"0:268:1839","crate_id":0,"name":"EMPTY","span":{"filename":"src/lib.rs","begin":[500,4],"end":[502,6]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"2:2523:669":{"id":"2:2523:669","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2517-0:318:1700":{"id":"b:2:2517-0:318:1700","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2494:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2491:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:318:1700","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2520:2949"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:328":{"id":"0:328","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[187,31],"end":[187,35]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:8813:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:318:1700","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:329:703"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2241-0:398:1687":{"id":"b:2:2241-0:398:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2673:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:398:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2243:53628"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:675:3012":{"id":"5:675:3012","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:342":{"id":"0:342","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[195,16],"end":[195,18]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2290:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:333:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:271:1882":{"id":"0:271:1882","crate_id":0,"name":"is_empty","span":{"filename":"src/lib.rs","begin":[512,4],"end":[514,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:267":{"id":"0:267","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[499,0],"end":[515,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:383:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:268:1839","0:269:911","0:270:309","0:271:1882"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:375":{"id":"0:375","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,26],"end":[251,35]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2676:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:352:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:37:651":{"id":"0:37:651","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[117,4],"end":[119,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["formatter",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8550:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8539:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:365:1753":{"id":"0:365:1753","crate_id":0,"name":"Caret","span":{"filename":"src/lib.rs","begin":[260,4],"end":[260,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:411:703":{"id":"0:411:703","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[375,40],"end":[375,44]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:8827:142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7732:2919-0:318:1700":{"id":"a:2:7732:2919-0:318:1700","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7732:2919","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:318:1700","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:257:1642":{"id":"0:257:1642","crate_id":0,"name":"parse","span":{"filename":"src/lib.rs","begin":[431,4],"end":[433,5]},"visibility":"public","docs":"Create `Version` by parsing from string representation.\n\n# Errors\n\nPossible reasons for the parse to fail include:\n\n- `1.0` &mdash; too few numeric components. A SemVer version must have\n  exactly three. If you are looking at something that has fewer than\n  three numbers in it, it's possible it is a `VersionReq` instead (with\n  an implicit default `^` comparison operator).\n\n- `1.0.01` &mdash; a numeric component has a leading zero.\n\n- `1.0.unknown` &mdash; unexpected character in one of the components.\n\n- `1.0.0-` or `1.0.0+` &mdash; the pre-release or build metadata are\n  indicated present but empty.\n\n- `1.0.0-alpha_123` &mdash; pre-release or build metadata have something\n  outside the allowed characters, which are `0-9`, `A-Z`, `a-z`, `-`,\n  and `.` (dot).\n\n- `23456789999999999999.0.0` &mdash; overflow of a u64.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48190:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:218:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11360:2083":{"id":"2:11360:2083","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:50000:2677","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:353:1747":{"id":"0:353:1747","crate_id":0,"name":"Exact","span":{"filename":"src/lib.rs","begin":[254,4],"end":[254,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:336:1682":{"id":"0:336:1682","crate_id":0,"name":"minor","span":{"filename":"src/lib.rs","begin":[199,4],"end":[199,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48046:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}}],"bindings":[]}}}}},"b:2:2521-0:398:1687":{"id":"b:2:2521-0:398:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2494:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:398:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2523:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:298:1681":{"id":"0:298:1681","crate_id":0,"name":"major","span":{"filename":"src/lib.rs","begin":[163,4],"end":[163,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u64"}},"0:25:651":{"id":"0:25:651","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[34,4],"end":[45,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["formatter",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8550:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8539:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11359:4065":{"id":"2:11359:4065","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12374:2219"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49990:2678","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:227:125":{"id":"0:227:125","crate_id":0,"name":"Err","span":{"filename":"src/parse.rs","begin":[110,4],"end":[110,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Error","id":"0:218:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:2532-0:383:1685":{"id":"b:2:2532-0:383:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2491:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2501:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:383:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2535:126","2:2536:1422"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:273:1839":{"id":"0:273:1839","crate_id":0,"name":"EMPTY","span":{"filename":"src/lib.rs","begin":[518,4],"end":[520,6]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"0:233:125":{"id":"0:233:125","crate_id":0,"name":"Err","span":{"filename":"src/parse.rs","begin":[136,4],"end":[136,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Error","id":"0:218:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:189:999":{"id":"0:189:999","crate_id":0,"name":"partial_cmp","span":{"filename":"src/impls.rs","begin":[40,4],"end":[42,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48046:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:38118:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:304:410":{"id":"0:304:410","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[161,9],"end":[161,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Version","id":"0:297:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:398:1687":{"id":"0:398:1687","crate_id":0,"name":"BuildMetadata","span":{"filename":"src/lib.rs","begin":[376,0],"end":[378,1]},"visibility":"public","docs":"Optional build metadata identifier. This comes after `+` in a SemVer\nversion, as in `0.8.1+zstd.1.5.0`.\n\n# Examples\n\nSome real world build metadata idioms drawn from crates.io:\n\n- **[libgit2-sys]** <code>0.12.20+<b>1.1.0</b></code> &mdash; for this\n  crate, the build metadata indicates the version of the C libgit2 library\n  that the Rust crate is built against.\n\n- **[mashup]** <code>0.1.13+<b>deprecated</b></code> &mdash; just the word\n  \"deprecated\" for a crate that has been superseded by another. Eventually\n  people will take notice of this in Cargo's build output where it lists the\n  crates being compiled.\n\n- **[google-bigquery2]** <code>2.0.4+<b>20210327</b></code> &mdash; this\n  library is automatically generated from an official API schema, and the\n  build metadata indicates the date on which that schema was last captured.\n\n- **[fbthrift-git]** <code>0.0.6+<b>c7fcc0e</b></code> &mdash; this crate is\n  published from snapshots of a big company monorepo. In monorepo\n  development, there is no concept of versions, and all downstream code is\n  just updated atomically in the same commit that breaking changes to a\n  library are landed. Therefore for crates.io purposes, every published\n  version must be assumed to be incompatible with the previous. The build\n  metadata provides the source control hash of the snapshotted code.\n\n[libgit2-sys]: https://crates.io/crates/libgit2-sys\n[mashup]: https://crates.io/crates/mashup\n[google-bigquery2]: https://crates.io/crates/google-bigquery2\n[fbthrift-git]: https://crates.io/crates/fbthrift-git\n\n# Syntax\n\nBuild metadata is a series of dot separated identifiers immediately\nfollowing the patch or pre-release version. Identifiers must comprise only\nASCII alphanumerics and hyphens: `0-9`, `A-Z`, `a-z`, `-`. Identifiers must\nnot be empty. Leading zeros *are* allowed, unlike any other place in the\nSemVer grammar.\n\n# Total ordering\n\nBuild metadata is ignored in evaluating `VersionReq`; it plays no role in\nwhether a `Version` matches any one of the comparison operators.\n\nHowever for comparing build metadatas among one another, they do have a\ntotal order which is determined by lexicographic ordering of dot-separated\ncomponents. Identifiers consisting of only digits are compared numerically.\nOtherwise, identifiers are compared in ASCII sort order. Any numeric\nidentifier is always less than any non-numeric identifier.\n\nExample:&ensp;`demo`&ensp;&lt;&ensp;`demo.85`&ensp;&lt;&ensp;`demo.90`&ensp;&lt;&ensp;`demo.090`&ensp;&lt;&ensp;`demo.200`&ensp;&lt;&ensp;`demo.1a0`&ensp;&lt;&ensp;`demo.a`&ensp;&lt;&ensp;`memo`","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:272","a:2:2730:2808-0:398:1687","a:2:2666:215-0:398:1687","a:2:2680:223-0:398:1687","a:2:7731:2920-0:398:1687","a:2:7732:2919-0:398:1687","b:2:2532-0:398:1687","b:2:2521-0:398:1687","b:2:2241-0:398:1687","b:2:2527-0:398:1687","b:2:2517-0:398:1687","b:2:2238-0:398:1687","b:2:3325-0:398:1687","b:5:671-0:398:1687","b:5:5362-0:398:1687","0:30","0:36","0:185","0:190","0:196","0:232","0:400","0:402","0:404","0:405","0:407","0:408","0:410"]}},"0:261:1877":{"id":"0:261:1877","crate_id":0,"name":"matches","span":{"filename":"src/lib.rs","begin":[476,4],"end":[478,5]},"visibility":"public","docs":"Evaluate whether the given `Version` satisfies the version requirement\ndescribed by `self`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["version",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Version","id":"0:297:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:218:126":{"id":"0:218:126","crate_id":0,"name":"Error","span":{"filename":"src/parse.rs","begin":[21,0],"end":[23,1]},"visibility":"public","docs":"Error parsing a SemVer version or version requirement.\n\n# Example\n\n```\nuse semver::Version;\n\nfn main() {\n    let err = Version::parse(\"1.q.r\").unwrap_err();\n\n    // \"unexpected character 'q' while parsing minor version number\"\n    eprintln!(\"{}\", err);\n}\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2730:2808-0:218:126","a:2:2666:215-0:218:126","a:2:2680:223-0:218:126","a:2:7731:2920-0:218:126","a:2:7732:2919-0:218:126","b:2:2532-0:218:126","b:2:2521-0:218:126","b:2:2241-0:218:126","b:2:2527-0:218:126","b:2:2589-0:218:126","b:2:2517-0:218:126","b:2:2238-0:218:126","b:2:3325-0:218:126","b:5:5362-0:218:126","0:81","0:82","0:86"]}},"2:11335:1882":{"id":"2:11335:1882","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2532-0:352:1706":{"id":"b:2:2532-0:352:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2491:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2501:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:352:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2535:126","2:2536:1422"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:305":{"id":"0:305","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[161,16],"end":[161,18]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2677:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:297:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2680:223-0:218:126":{"id":"a:2:2680:223-0:218:126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2680:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:218:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2527-0:218:126":{"id":"b:2:2527-0:218:126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2501:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:218:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:126","2:2531:1423"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:671-0:318:1700":{"id":"b:5:671-0:318:1700","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:667:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:318:1700","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:673:3010","5:674:3011","5:675:3012"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:387":{"id":"0:387","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[317,18],"end":[317,23]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:383:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:388:410"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:371:410":{"id":"0:371:410","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[251,15],"end":[251,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Op","id":"0:352:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2591:8656":{"id":"2:2591:8656","crate_id":2,"name":"provide","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["demand",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Demand","id":"2:3386:3509","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2730:2808-0:383:1685":{"id":"a:2:2730:2808-0:383:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2730:2808","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:383:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:32":{"id":"0:32","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[93,0],"end":[108,1]},"visibility":{"restricted":{"parent":"0:6:1637","path":"::display"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8590:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:297:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:33:651"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:275:309":{"id":"0:275:309","crate_id":0,"name":"as_str","span":{"filename":"src/lib.rs","begin":[526,4],"end":[528,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2527-0:318:1700":{"id":"b:2:2527-0:318:1700","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2501:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:318:1700","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:126","2:2531:1423"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11344:307":{"id":"2:11344:307","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"`u8`":"1:12391:2233","str::as_mut_ptr":"2:11345:2084"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:357:1749":{"id":"0:357:1749","crate_id":0,"name":"GreaterEq","span":{"filename":"src/lib.rs","begin":[256,4],"end":[256,13]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"2:11433:2139":{"id":"2:11433:2139","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:11035:2651","prim@char":"1:12374:2219"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11040:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:316:703":{"id":"0:316:703","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[161,48],"end":[161,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:8827:142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7731:2920-0:297:1680":{"id":"a:2:7731:2920-0:297:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7731:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:297:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11457:60430":{"id":"2:11457:60430","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4471:60430"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:50313:2694","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:0:1883":{"id":"0:0:1883","crate_id":0,"name":"semver","span":{"filename":"src/lib.rs","begin":[1,0],"end":[533,1]},"visibility":"public","docs":"[![github]](https://github.com/dtolnay/semver)&ensp;[![crates-io]](https://crates.io/crates/semver)&ensp;[![docs-rs]](https://docs.rs/semver)\n\n[github]: https://img.shields.io/badge/github-8da0cb?style=for-the-badge&labelColor=555555&logo=github\n[crates-io]: https://img.shields.io/badge/crates.io-fc8d62?style=for-the-badge&labelColor=555555&logo=rust\n[docs-rs]: https://img.shields.io/badge/docs.rs-66c2a5?style=for-the-badge&labelColor=555555&logo=docs.rs\n\n<br>\n\nA parser and evaluator for Cargo's flavor of Semantic Versioning.\n\nSemantic Versioning (see <https://semver.org>) is a guideline for how\nversion numbers are assigned and incremented. It is widely followed within\nthe Cargo/crates.io ecosystem for Rust.\n\n<br>\n\n# Example\n\n```\nuse semver::{BuildMetadata, Prerelease, Version, VersionReq};\n\nfn main() {\n    let req = VersionReq::parse(\">=1.2.3, <1.8.0\").unwrap();\n\n    // Check whether this requirement matches version 1.2.3-alpha.1 (no)\n    let version = Version {\n        major: 1,\n        minor: 2,\n        patch: 3,\n        pre: Prerelease::new(\"alpha.1\").unwrap(),\n        build: BuildMetadata::EMPTY,\n    };\n    assert!(!req.matches(&version));\n\n    // Check whether it matches 1.3.0 (yes it does)\n    let version = Version::parse(\"1.3.0\").unwrap();\n    assert!(req.matches(&version));\n}\n```\n\n<br><br>\n\n# Scope of this crate\n\nBesides Cargo, several other package ecosystems and package managers for\nother languages also use SemVer:&ensp;RubyGems/Bundler for Ruby, npm for\nJavaScript, Composer for PHP, CocoaPods for Objective-C...\n\nThe `semver` crate is specifically intended to implement Cargo's\ninterpretation of Semantic Versioning.\n\nWhere the various tools differ in their interpretation or implementation of\nthe spec, this crate follows the implementation choices made by Cargo. If\nyou are operating on version numbers from some other package ecosystem, you\nwill want to use a different semver library which is appropriate to that\necosystem.\n\nThe extent of Cargo's SemVer support is documented in the *[Specifying\nDependencies]* chapter of the Cargo reference.\n\n[Specifying Dependencies]: https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html","links":{},"attrs":["#![doc(html_root_url = \"https://docs.rs/semver/1.0.16\")]","#![deny(unsafe_op_in_unsafe_fn)]","#![allow(clippy :: cast_lossless, clippy :: cast_possible_truncation, clippy\n:: doc_markdown, clippy :: items_after_statements, clippy :: manual_map,\nclippy :: match_bool, clippy :: missing_errors_doc, clippy ::\nmust_use_candidate, clippy :: needless_doctest_main, clippy ::\noption_if_let_else, clippy :: ptr_as_ptr, clippy :: redundant_else, clippy ::\nsemicolon_if_nothing_returned, clippy :: similar_names, clippy ::\nunnested_or_patterns, clippy :: unseparated_literal_suffix, clippy ::\nwildcard_imports)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:254","0:297:1680","0:318:1700","0:333:1702","0:352:1706","0:383:1685","0:398:1687"],"is_stripped":false}},"2:11424:60422":{"id":"2:11424:60422","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5093":{"id":"5:5093","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5004:1348","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:5094:61064","5:5095:2496","5:5098:61065","5:5101:61066","5:5109:61067","5:5110:61068","5:5111:2542","5:5112:53662","5:5113:53663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:230:125":{"id":"0:230:125","crate_id":0,"name":"Err","span":{"filename":"src/parse.rs","begin":[124,4],"end":[124,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Error","id":"0:218:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:3325-0:398:1687":{"id":"b:2:3325-0:398:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2673:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3323:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:398:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3327:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11336:60407":{"id":"2:11336:60407","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11372:54359":{"id":"2:11372:54359","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"self::pattern":"2:11035:2651","prim@char":"1:12374:2219"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11040:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11040:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11055:2668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:359:1750":{"id":"0:359:1750","crate_id":0,"name":"Less","span":{"filename":"src/lib.rs","begin":[257,4],"end":[257,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:191:999":{"id":"0:191:999","crate_id":0,"name":"partial_cmp","span":{"filename":"src/impls.rs","begin":[46,4],"end":[48,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48046:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:38118:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11392:60414":{"id":"2:11392:60414","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"prim@char":"1:12374:2219","str::split":"2:11383:2130","`DoubleEndedIterator`":"2:7075:119","str::rsplit_terminator":"2:11395:60415","self::pattern":"2:11035:2651"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:50064:2686","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11040:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:185":{"id":"0:185","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[31,0],"end":[37,1]},"visibility":{"restricted":{"parent":"0:162:1641","path":"::impls"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:2908:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:398:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:186:225","0:187:537"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2238-0:398:1687":{"id":"b:2:2238-0:398:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2673:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:398:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:2289"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3327:1436":{"id":"2:3327:1436","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:46519:3511","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2532-0:218:126":{"id":"b:2:2532-0:218:126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2491:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2501:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:218:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2535:126","2:2536:1422"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11369:1983":{"id":"2:11369:1983","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"self::pattern":"2:11035:2651","prim@char":"1:12374:2219"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11040:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2517-0:383:1685":{"id":"b:2:2517-0:383:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2494:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2491:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:383:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2520:2949"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2536:1422":{"id":"2:2536:1422","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48190:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"2:2501:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2243:53628":{"id":"2:2243:53628","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2532-0:297:1680":{"id":"b:2:2532-0:297:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2491:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2501:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:297:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2535:126","2:2536:1422"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:396:703":{"id":"0:396:703","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[317,40],"end":[317,44]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:8827:142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:256:911":{"id":"0:256:911","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[398,4],"end":[406,5]},"visibility":"public","docs":"Create `Version` with an empty pre-release and build metadata.\n\nEquivalent to:\n\n```\n# use semver::{BuildMetadata, Prerelease, Version};\n#\n# const fn new(major: u64, minor: u64, patch: u64) -> Version {\nVersion {\n    major,\n    minor,\n    patch,\n    pre: Prerelease::EMPTY,\n    build: BuildMetadata::EMPTY,\n}\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["major",{"kind":"primitive","inner":"u64"}],["minor",{"kind":"primitive","inner":"u64"}],["patch",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5112:53662":{"id":"5:5112:53662","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:11455:53665"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6980:219","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2589-0:218:126":{"id":"b:2:2589-0:218:126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:2582:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2673:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:3374:3510","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:218:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2591:8656"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"E"}}},"a:2:7731:2920-0:318:1700":{"id":"a:2:7731:2920-0:318:1700","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7731:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:318:1700","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11429:60425":{"id":"2:11429:60425","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7731:2920-0:398:1687":{"id":"a:2:7731:2920-0:398:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7731:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:398:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:321:410":{"id":"0:321:410","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[187,9],"end":[187,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:318:1700","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:225:1856":{"id":"0:225:1856","crate_id":0,"name":"from_str","span":{"filename":"src/parse.rs","begin":[83,4],"end":[106,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48190:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:10996:1645","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11398:54697":{"id":"2:11398:54697","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"str::rsplitn":"2:11401:54699","self::pattern":"2:11035:2651","prim@char":"1:12374:2219"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:50118:2688","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11040:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5113:53663":{"id":"5:5113:53663","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:11456:53666"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6980:219","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:5362-0:383:1685":{"id":"b:5:5362-0:383:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8595:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2673:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5360:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:383:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5364:1402"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11383:2130":{"id":"2:11383:2130","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"str::split_whitespace":"2:11361:59085","prim@char":"1:12374:2219","self::pattern":"2:11035:2651","`DoubleEndedIterator`":"2:7075:119","str::rsplit":"2:11389:54695"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:50014:2685","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11040:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2520:2949":{"id":"2:2520:2949","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2494:131"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:302:1686":{"id":"0:302:1686","crate_id":0,"name":"build","span":{"filename":"src/lib.rs","begin":[167,4],"end":[167,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:398:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"b:5:5362-0:333:1702":{"id":"b:5:5362-0:333:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8595:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2673:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5360:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:333:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5364:1402"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:344":{"id":"0:344","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[195,20],"end":[195,29]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2676:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:333:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:86":{"id":"0:86","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[102,0],"end":[109,1]},"visibility":{"restricted":{"parent":"0:40:1638","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8590:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:218:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:87:651"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11358:2155":{"id":"2:11358:2155","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12374:2219"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49984:2679","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2240:2289":{"id":"2:2240:2289","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11375:2992":{"id":"2:11375:2992","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"self::pattern":"2:11035:2651","prim@char":"1:12374:2219","`None`":"2:48048:174"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48046:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11040:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:81":{"id":"0:81","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[29,0],"end":[29,35]},"visibility":{"restricted":{"parent":"0:40:1638","path":"::error"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["cause","provide","source","description","type_id"],"trait":{"name":"Error","id":"2:2582:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:218:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:7731:2920-0:383:1685":{"id":"a:2:7731:2920-0:383:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7731:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:383:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11389:54695":{"id":"2:11389:54695","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"prim@char":"1:12374:2219","str::split":"2:11383:2130","`DoubleEndedIterator`":"2:7075:119","self::pattern":"2:11035:2651"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:50032:2683","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11040:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11040:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11055:2668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:326":{"id":"0:326","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[187,20],"end":[187,29]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2285:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:318:1700","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:318:1700","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:327:596"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:269:911":{"id":"0:269:911","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[504,4],"end":[506,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48190:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:218:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:300:1683":{"id":"0:300:1683","crate_id":0,"name":"patch","span":{"filename":"src/lib.rs","begin":[165,4],"end":[165,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u64"}},"2:11410:1877":{"id":"2:11410:1877","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"`DoubleEndedIterator`":"2:7075:119","self::pattern":"2:11035:2651","prim@char":"1:12374:2219","str::matches":"2:11410:1877"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:50218:2689","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11040:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11334:785":{"id":"2:11334:785","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12374:2219"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2666:215-0:218:126":{"id":"a:2:2666:215-0:218:126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2666:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:218:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:389":{"id":"0:389","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[317,25],"end":[317,27]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2677:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:383:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:186:225":{"id":"0:186:225","crate_id":0,"name":"Target","span":{"filename":"src/impls.rs","begin":[32,4],"end":[32,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"str"}}},"0:272":{"id":"0:272","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[517,0],"end":[533,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:398:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:273:1839","0:274:911","0:275:309","0:276:1882"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:20":{"id":"0:20","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[4,0],"end":[31,1]},"visibility":{"restricted":{"parent":"0:6:1637","path":"::display"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8595:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:297:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:21:651"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11442:60427":{"id":"2:11442:60427","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:11035:2651","prim@char":"1:12374:2219"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11040:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11040:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11055:2668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:31:651":{"id":"0:31:651","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[88,4],"end":[90,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["formatter",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8550:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8539:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11333":{"id":"2:11333","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:10598:1348","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:11334:785","2:11335:1882","2:11336:60407","2:11337:60408","2:11339:60409","2:11342:2167","2:11343:60410","2:11344:307","2:11345:2084","2:11346:2103","2:11348:54662","2:11350:54663","2:11352:8869","2:11354:60411","2:11355:60412","2:11356:2181","2:11357:54685","2:11358:2155","2:11359:4065","2:11360:2083","2:11361:59085","2:11362:59078","2:11363:4647","2:11364:60413","2:11365:59081","2:11366:54701","2:11369:1983","2:11372:54359","2:11375:2992","2:11379:2955","2:11383:2130","2:11386:54693","2:11389:54695","2:11392:60414","2:11395:60415","2:11398:54697","2:11401:54699","2:11404:60416","2:11407:60417","2:11410:1877","2:11413:60418","2:11416:60419","2:11419:60420","2:11422:60421","2:11424:60422","2:11426:60423","2:11428:60424","2:11429:60425","2:11430:60426","2:11433:2139","2:11436:1981","2:11439:54702","2:11442:60427","2:11445:60428","2:11448:60429","2:11451:1642","2:11453:4326","2:11454:53664","2:11455:53665","2:11456:53666","2:11457:60430","2:11459:3518","2:11460:60431"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2517-0:297:1680":{"id":"b:2:2517-0:297:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2494:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2491:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:297:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2520:2949"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:299:1682":{"id":"0:299:1682","crate_id":0,"name":"minor","span":{"filename":"src/lib.rs","begin":[164,4],"end":[164,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u64"}},"b:5:671-0:398:1687":{"id":"b:5:671-0:398:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:667:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:398:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:673:3010","5:674:3011","5:675:3012"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:345":{"id":"0:345","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[195,20],"end":[195,29]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2285:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:333:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:333:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:346:596"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:254":{"id":"0:254","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[110,0],"end":[110,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::parse::Error","name":"Error","id":"0:218:126","glob":false}},"0:394:596":{"id":"0:394:596","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[317,29],"end":[317,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:383:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:376":{"id":"0:376","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,26],"end":[251,35]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2285:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Op","id":"0:352:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:352:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:377:596"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5095:2496":{"id":"5:5095:2496","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:6980:219"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6980:219","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11040:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7731:2920-0:352:1706":{"id":"a:2:7731:2920-0:352:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7731:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:352:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:26":{"id":"0:26","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[48,0],"end":[79,1]},"visibility":{"restricted":{"parent":"0:6:1637","path":"::display"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8595:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:333:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:27:651"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:393":{"id":"0:393","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[317,29],"end":[317,38]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2285:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:383:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:383:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:394:596"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2517-0:352:1706":{"id":"b:2:2517-0:352:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2494:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2491:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:352:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2520:2949"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:34":{"id":"0:34","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[110,0],"end":[114,1]},"visibility":{"restricted":{"parent":"0:6:1637","path":"::display"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8590:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:383:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:35:651"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:187:537":{"id":"0:187:537","crate_id":0,"name":"deref","span":{"filename":"src/impls.rs","begin":[34,4],"end":[36,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:2908:115","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:352:1706":{"id":"0:352:1706","crate_id":0,"name":"Op","span":{"filename":"src/lib.rs","begin":[253,0],"end":[266,1]},"visibility":"public","docs":"SemVer comparison operator: `=`, `>`, `>=`, `<`, `<=`, `~`, `^`, `*`.\n\n# Op::Exact\n- &ensp;**`=I.J.K`**&emsp;&mdash;&emsp;exactly the version I.J.K\n- &ensp;**`=I.J`**&emsp;&mdash;&emsp;equivalent to `>=I.J.0, <I.(J+1).0`\n- &ensp;**`=I`**&emsp;&mdash;&emsp;equivalent to `>=I.0.0, <(I+1).0.0`\n\n# Op::Greater\n- &ensp;**`>I.J.K`**\n- &ensp;**`>I.J`**&emsp;&mdash;&emsp;equivalent to `>=I.(J+1).0`\n- &ensp;**`>I`**&emsp;&mdash;&emsp;equivalent to `>=(I+1).0.0`\n\n# Op::GreaterEq\n- &ensp;**`>=I.J.K`**\n- &ensp;**`>=I.J`**&emsp;&mdash;&emsp;equivalent to `>=I.J.0`\n- &ensp;**`>=I`**&emsp;&mdash;&emsp;equivalent to `>=I.0.0`\n\n# Op::Less\n- &ensp;**`<I.J.K`**\n- &ensp;**`<I.J`**&emsp;&mdash;&emsp;equivalent to `<I.J.0`\n- &ensp;**`<I`**&emsp;&mdash;&emsp;equivalent to `<I.0.0`\n\n# Op::LessEq\n- &ensp;**`<=I.J.K`**\n- &ensp;**`<=I.J`**&emsp;&mdash;&emsp;equivalent to `<I.(J+1).0`\n- &ensp;**`<=I`**&emsp;&mdash;&emsp;equivalent to `<(I+1).0.0`\n\n# Op::Tilde&emsp;(\"patch\" updates)\n*Tilde requirements allow the **patch** part of the semver version (the third number) to increase.*\n- &ensp;**`~I.J.K`**&emsp;&mdash;&emsp;equivalent to `>=I.J.K, <I.(J+1).0`\n- &ensp;**`~I.J`**&emsp;&mdash;&emsp;equivalent to `=I.J`\n- &ensp;**`~I`**&emsp;&mdash;&emsp;equivalent to `=I`\n\n# Op::Caret&emsp;(\"compatible\" updates)\n*Caret requirements allow parts that are **right of the first nonzero** part of the semver version to increase.*\n- &ensp;**`^I.J.K`**&ensp;(for I\\>0)&emsp;&mdash;&emsp;equivalent to `>=I.J.K, <(I+1).0.0`\n- &ensp;**`^0.J.K`**&ensp;(for J\\>0)&emsp;&mdash;&emsp;equivalent to `>=0.J.K, <0.(J+1).0`\n- &ensp;**`^0.0.K`**&emsp;&mdash;&emsp;equivalent to `=0.0.K`\n- &ensp;**`^I.J`**&ensp;(for I\\>0 or J\\>0)&emsp;&mdash;&emsp;equivalent to `^I.J.0`\n- &ensp;**`^0.0`**&emsp;&mdash;&emsp;equivalent to `=0.0`\n- &ensp;**`^I`**&emsp;&mdash;&emsp;equivalent to `=I`\n\n# Op::Wildcard\n- &ensp;**`I.J.*`**&emsp;&mdash;&emsp;equivalent to `=I.J`\n- &ensp;**`I.*`**&ensp;or&ensp;**`I.*.*`**&emsp;&mdash;&emsp;equivalent to `=I`","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:353:1747","0:355:1748","0:357:1749","0:359:1750","0:361:1751","0:363:1752","0:365:1753","0:367:1754"],"impls":["a:2:2730:2808-0:352:1706","a:2:2666:215-0:352:1706","a:2:2680:223-0:352:1706","a:2:7731:2920-0:352:1706","a:2:7732:2919-0:352:1706","b:2:2532-0:352:1706","b:2:2521-0:352:1706","b:2:2241-0:352:1706","b:2:2527-0:352:1706","b:2:2517-0:352:1706","b:2:2238-0:352:1706","b:2:3325-0:352:1706","b:5:671-0:352:1706","0:369","0:370","0:372","0:373","0:375","0:376","0:378","0:381"]}},"0:370":{"id":"0:370","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,15],"end":[251,20]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:352:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:371:410"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:221:125":{"id":"0:221:125","crate_id":0,"name":"Err","span":{"filename":"src/parse.rs","begin":[26,4],"end":[26,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Error","id":"0:218:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:11361:59085":{"id":"2:11361:59085","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:11362:59078"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:50288:2681","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7732:2919-0:383:1685":{"id":"a:2:7732:2919-0:383:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7732:2919","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:383:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11459:3518":{"id":"2:11459:3518","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4472:3518"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:50322:2695","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2241-0:318:1700":{"id":"b:2:2241-0:318:1700","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2673:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:318:1700","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2243:53628"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2517-0:218:126":{"id":"b:2:2517-0:218:126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2494:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2491:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:218:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2520:2949"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:385":{"id":"0:385","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[317,9],"end":[317,16]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2568:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:383:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:386:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:367:1754":{"id":"0:367:1754","crate_id":0,"name":"Wildcard","span":{"filename":"src/lib.rs","begin":[261,4],"end":[261,12]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"2:11346:2103":{"id":"2:11346:2103","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:48048:174"},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48046:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9132:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9132:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:190":{"id":"0:190","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[45,0],"end":[49,1]},"visibility":{"restricted":{"parent":"0:162:1641","path":"::impls"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","lt","gt","ge"],"trait":{"name":"PartialOrd","id":"2:2327:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:398:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:398:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:191:999"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:182":{"id":"0:182","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[23,0],"end":[29,1]},"visibility":{"restricted":{"parent":"0:162:1641","path":"::impls"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:2908:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:383:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:183:225","0:184:537"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11428:60424":{"id":"2:11428:60424","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:338:1684":{"id":"0:338:1684","crate_id":0,"name":"pre","span":{"filename":"src/lib.rs","begin":[203,4],"end":[203,23]},"visibility":"public","docs":"Non-empty pre-release is only allowed if patch is Some.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:383:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:192":{"id":"0:192","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[51,0],"end":[104,1]},"visibility":{"restricted":{"parent":"0:162:1641","path":"::impls"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clamp","max","min"],"trait":{"name":"Ord","id":"2:2321:177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:383:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:193:417"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:318:1700":{"id":"0:318:1700","crate_id":0,"name":"VersionReq","span":{"filename":"src/lib.rs","begin":[189,0],"end":[191,1]},"visibility":"public","docs":"**SemVer version requirement** describing the intersection of some version\ncomparators, such as `>=1.2.3, <1.8`.\n\n# Syntax\n\n- Either `*` (meaning \"any\"), or one or more comma-separated comparators.\n\n- A [`Comparator`] is an operator ([`Op`]) and a partial version, separated\n  by optional whitespace. For example `>=1.0.0` or `>=1.0`.\n\n- Build metadata is syntactically permitted on the partial versions, but is\n  completely ignored, as it's never relevant to whether any comparator\n  matches a particular version.\n\n- Whitespace is permitted around commas and around operators. Whitespace is\n  not permitted within a partial version, i.e. anywhere between the major\n  version number and its minor, patch, pre-release, or build metadata.","links":{"`Comparator`":"0:333:1702","`Op`":"0:352:1706"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:319:1701"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:258","a:2:2730:2808-0:318:1700","a:2:2666:215-0:318:1700","a:2:2680:223-0:318:1700","a:2:7731:2920-0:318:1700","a:2:7732:2919-0:318:1700","b:2:2532-0:318:1700","b:2:2521-0:318:1700","b:2:2241-0:318:1700","b:2:2527-0:318:1700","b:2:2517-0:318:1700","b:2:2238-0:318:1700","b:2:3325-0:318:1700","b:5:671-0:318:1700","b:5:5362-0:318:1700","0:24","0:201","0:223","0:320","0:322","0:323","0:325","0:326","0:328","0:331","0:262"]}},"2:11451:1642":{"id":"2:11451:1642","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"`FromStr`":"2:10996:1645","FromStr::Err":"2:10997:125"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48190:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:10996:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:10996:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2666:215-0:333:1702":{"id":"a:2:2666:215-0:333:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2666:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:333:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:323":{"id":"0:323","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[187,16],"end":[187,18]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2290:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:318:1700","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2527-0:333:1702":{"id":"b:2:2527-0:333:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2501:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:333:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:126","2:2531:1423"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:383:1685":{"id":"0:383:1685","crate_id":0,"name":"Prerelease","span":{"filename":"src/lib.rs","begin":[318,0],"end":[320,1]},"visibility":"public","docs":"Optional pre-release identifier on a version string. This comes after `-` in\na SemVer version, like `1.0.0-alpha.1`\n\n# Examples\n\nSome real world pre-release idioms drawn from crates.io:\n\n- **[mio]** <code>0.7.0-<b>alpha.1</b></code> &mdash; the most common style\n  for numbering pre-releases.\n\n- **[pest]** <code>1.0.0-<b>beta.8</b></code>,&ensp;<code>1.0.0-<b>rc.0</b></code>\n  &mdash; this crate makes a distinction between betas and release\n  candidates.\n\n- **[sassers]** <code>0.11.0-<b>shitshow</b></code> &mdash; ???.\n\n- **[atomic-utils]** <code>0.0.0-<b>reserved</b></code> &mdash; a squatted\n  crate name.\n\n[mio]: https://crates.io/crates/mio\n[pest]: https://crates.io/crates/pest\n[atomic-utils]: https://crates.io/crates/atomic-utils\n[sassers]: https://crates.io/crates/sassers\n\n*Tip:* Be aware that if you are planning to number your own pre-releases,\nyou should prefer to separate the numeric part from any non-numeric\nidentifiers by using a dot in between. That is, prefer pre-releases\n`alpha.1`, `alpha.2`, etc rather than `alpha1`, `alpha2` etc. The SemVer\nspec's rule for pre-release precedence has special treatment of numeric\ncomponents in the pre-release string, but only if there are no non-digit\ncharacters in the same dot-separated component. So you'd have `alpha.2` &lt;\n`alpha.11` as intended, but `alpha11` &lt; `alpha2`.\n\n# Syntax\n\nPre-release strings are a series of dot separated identifiers immediately\nfollowing the patch version. Identifiers must comprise only ASCII\nalphanumerics and hyphens: `0-9`, `A-Z`, `a-z`, `-`. Identifiers must not be\nempty. Numeric identifiers must not include leading zeros.\n\n# Total ordering\n\nPre-releases have a total order defined by the SemVer spec. It uses\nlexicographic ordering of dot-separated components. Identifiers consisting\nof only digits are compared numerically. Otherwise, identifiers are compared\nin ASCII sort order. Any numeric identifier is always less than any\nnon-numeric identifier.\n\nExample:&ensp;`alpha`&ensp;&lt;&ensp;`alpha.85`&ensp;&lt;&ensp;`alpha.90`&ensp;&lt;&ensp;`alpha.200`&ensp;&lt;&ensp;`alpha.0a`&ensp;&lt;&ensp;`alpha.1a0`&ensp;&lt;&ensp;`alpha.a`&ensp;&lt;&ensp;`beta`","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:267","a:2:2730:2808-0:383:1685","a:2:2666:215-0:383:1685","a:2:2680:223-0:383:1685","a:2:7731:2920-0:383:1685","a:2:7732:2919-0:383:1685","b:2:2532-0:383:1685","b:2:2521-0:383:1685","b:2:2241-0:383:1685","b:2:2527-0:383:1685","b:2:2517-0:383:1685","b:2:2238-0:383:1685","b:2:3325-0:383:1685","b:5:671-0:383:1685","b:5:5362-0:383:1685","0:28","0:34","0:182","0:188","0:192","0:229","0:385","0:387","0:389","0:390","0:392","0:393","0:395"]}},"5:5110:61068":{"id":"5:5110:61068","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:276:2352","`String`":"5:6980:219"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:276:2352","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6725:2351","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6980:219","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:319:1701":{"id":"0:319:1701","crate_id":0,"name":"comparators","span":{"filename":"src/lib.rs","begin":[190,4],"end":[190,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:6407:238","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:333:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"2:11364:60413":{"id":"2:11364:60413","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:50278:2682","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11445:60428":{"id":"2:11445:60428","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:11035:2651","prim@char":"1:12374:2219"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11040:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:404":{"id":"0:404","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[375,25],"end":[375,27]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2677:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:398:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2527-0:383:1685":{"id":"b:2:2527-0:383:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2501:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:383:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:126","2:2531:1423"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:188":{"id":"0:188","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[39,0],"end":[43,1]},"visibility":{"restricted":{"parent":"0:162:1641","path":"::impls"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","lt","gt","ge"],"trait":{"name":"PartialOrd","id":"2:2327:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:383:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:383:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:189:999"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2517-0:333:1702":{"id":"b:2:2517-0:333:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2494:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2491:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:333:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2520:2949"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:333:1702":{"id":"0:333:1702","crate_id":0,"name":"Comparator","span":{"filename":"src/lib.rs","begin":[196,0],"end":[204,1]},"visibility":"public","docs":"A pair of comparison operator and partial version, such as `>=1.2`. Forms\none piece of a VersionReq.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:334:1705","0:335:1681","0:336:1682","0:337:1683","0:338:1684"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:264","a:2:2730:2808-0:333:1702","a:2:2666:215-0:333:1702","a:2:2680:223-0:333:1702","a:2:7731:2920-0:333:1702","a:2:7732:2919-0:333:1702","b:2:2532-0:333:1702","b:2:2521-0:333:1702","b:2:2241-0:333:1702","b:2:2527-0:333:1702","b:2:2517-0:333:1702","b:2:2238-0:333:1702","b:2:3325-0:333:1702","b:5:671-0:333:1702","b:5:5362-0:333:1702","0:26","0:201","0:226","0:339","0:341","0:342","0:344","0:345","0:347","0:350"]}},"b:5:5362-0:297:1680":{"id":"b:5:5362-0:297:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8595:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2673:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5360:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:297:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5364:1402"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2730:2808-0:297:1680":{"id":"a:2:2730:2808-0:297:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2730:2808","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:297:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2241-0:297:1680":{"id":"b:2:2241-0:297:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2673:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:297:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2243:53628"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:341":{"id":"0:341","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[195,16],"end":[195,18]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2677:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:333:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2238-0:352:1706":{"id":"b:2:2238-0:352:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2673:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:352:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:2289"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:373":{"id":"0:373","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,22],"end":[251,24]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2290:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:352:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:337:1683":{"id":"0:337:1683","crate_id":0,"name":"patch","span":{"filename":"src/lib.rs","begin":[201,4],"end":[201,26]},"visibility":"public","docs":"Patch is only allowed if minor is Some.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48046:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}}],"bindings":[]}}}}},"5:673:3010":{"id":"5:673:3010","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"2:11395:60415":{"id":"2:11395:60415","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:11035:2651","prim@char":"1:12374:2219","str::split":"2:11383:2130","str::split_terminator":"2:11392:60414"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:50082:2684","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11040:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11040:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11055:2668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:347":{"id":"0:347","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[195,31],"end":[195,35]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:8813:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:333:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:348:703"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2535:126":{"id":"2:2535:126","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:39291:3544","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:83:651":{"id":"0:83:651","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[32,4],"end":[87,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["formatter",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8550:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8539:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:222:1856":{"id":"0:222:1856","crate_id":0,"name":"from_str","span":{"filename":"src/parse.rs","begin":[28,4],"end":[77,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48190:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:10996:1645","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2527-0:398:1687":{"id":"b:2:2527-0:398:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2501:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:398:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:126","2:2531:1423"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:313":{"id":"0:313","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[161,36],"end":[161,46]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","lt","gt","ge"],"trait":{"name":"PartialOrd","id":"2:2327:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Version","id":"0:297:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:297:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:314:999"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:30":{"id":"0:30","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[87,0],"end":[91,1]},"visibility":{"restricted":{"parent":"0:6:1637","path":"::display"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8595:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:398:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:31:651"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:35:651":{"id":"0:35:651","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[111,4],"end":[113,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["formatter",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8550:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8539:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:24":{"id":"0:24","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[33,0],"end":[46,1]},"visibility":{"restricted":{"parent":"0:6:1637","path":"::display"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8595:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:318:1700","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:25:651"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:260:1642":{"id":"0:260:1642","crate_id":0,"name":"parse","span":{"filename":"src/lib.rs","begin":[470,4],"end":[472,5]},"visibility":"public","docs":"Create `VersionReq` by parsing from string representation.\n\n# Errors\n\nPossible reasons for the parse to fail include:\n\n- `>a.b` &mdash; unexpected characters in the partial version.\n\n- `@1.0.0` &mdash; unrecognized comparison operator.\n\n- `^1.0.0, ` &mdash; unexpected end of input.\n\n- `>=1.0 <2.0` &mdash; missing comma between comparators.\n\n- `*.*` &mdash; unsupported wildcard syntax.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48190:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:218:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11422:60421":{"id":"2:11422:60421","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11455:53665":{"id":"2:11455:53665","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11366:54701":{"id":"2:11366:54701","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12374:2219","self::pattern":"2:11035:2651"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11040:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:402":{"id":"0:402","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[375,18],"end":[375,23]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:398:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:403:410"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:184:537":{"id":"0:184:537","crate_id":0,"name":"deref","span":{"filename":"src/impls.rs","begin":[26,4],"end":[28,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:2908:115","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3325-0:352:1706":{"id":"b:2:3325-0:352:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2673:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3323:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:352:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3327:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2680:223-0:318:1700":{"id":"a:2:2680:223-0:318:1700","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2680:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:318:1700","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2238-0:333:1702":{"id":"b:2:2238-0:333:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2673:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:333:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:2289"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11345:2084":{"id":"2:11345:2084","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12391:2233"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2521-0:383:1685":{"id":"b:2:2521-0:383:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2494:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:383:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2523:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2532-0:318:1700":{"id":"b:2:2532-0:318:1700","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2491:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2501:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:318:1700","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2535:126","2:2536:1422"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:202:671":{"id":"0:202:671","crate_id":0,"name":"from_iter","span":{"filename":"src/impls.rs","begin":[149,4],"end":[155,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["iter",{"kind":"generic","inner":"I"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:7038:147","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:333:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2730:2808-0:333:1702":{"id":"a:2:2730:2808-0:333:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2730:2808","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:333:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:407":{"id":"0:407","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[375,29],"end":[375,38]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2676:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:398:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:671-0:333:1702":{"id":"b:5:671-0:333:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:667:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:333:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:673:3010","5:674:3011","5:675:3012"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11348:54662":{"id":"2:11348:54662","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:48048:174"},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48046:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9132:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9132:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2666:215-0:352:1706":{"id":"a:2:2666:215-0:352:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2666:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:352:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:379:703":{"id":"0:379:703","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[251,37],"end":[251,41]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:8827:142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11355:60412":{"id":"2:11355:60412","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"crate::ops::IndexMut":"2:2995:2348","`str`":"1:12380:2224","str::slice_unchecked":"2:11354:60411"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:11439:54702":{"id":"2:11439:54702","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12374:2219","self::pattern":"2:11035:2651"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48046:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11040:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11040:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11055:2668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:335:1681":{"id":"0:335:1681","crate_id":0,"name":"major","span":{"filename":"src/lib.rs","begin":[198,4],"end":[198,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u64"}},"5:5364:1402":{"id":"5:5364:1402","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6980:219","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:369":{"id":"0:369","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,9],"end":[251,13]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2678:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:352:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11419:60420":{"id":"2:11419:60420","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"`DoubleEndedIterator`":"2:7075:119","self::pattern":"2:11035:2651","prim@char":"1:12374:2219","str::match_indices":"2:11416:60419"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:50182:2692","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11040:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11040:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11055:2668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:339":{"id":"0:339","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[195,9],"end":[195,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:333:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:340:410"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:320":{"id":"0:320","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[187,9],"end":[187,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:318:1700","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:321:410"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2527-0:352:1706":{"id":"b:2:2527-0:352:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2501:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:352:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:126","2:2531:1423"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2532-0:398:1687":{"id":"b:2:2532-0:398:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2491:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2501:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:398:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2535:126","2:2536:1422"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:226":{"id":"0:226","crate_id":0,"name":null,"span":{"filename":"src/parse.rs","begin":[109,0],"end":[121,1]},"visibility":{"restricted":{"parent":"0:204:1642","path":"::parse"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:10996:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:333:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:227:125","0:228:1856"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:312:417":{"id":"0:312:417","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[161,31],"end":[161,34]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Version","id":"0:297:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:38118:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:218:126":{"id":"b:2:2238-0:218:126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2673:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:218:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:2289"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2241-0:383:1685":{"id":"b:2:2241-0:383:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2673:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:383:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2243:53628"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11354:60411":{"id":"2:11354:60411","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"crate::ops::Index":"2:2991:2347","`str`":"1:12380:2224","str::slice_mut_unchecked":"2:11355:60412"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:11456:53666":{"id":"2:11456:53666","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:228:1856":{"id":"0:228:1856","crate_id":0,"name":"from_str","span":{"filename":"src/parse.rs","begin":[112,4],"end":[120,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48190:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:10996:1645","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2680:223-0:297:1680":{"id":"a:2:2680:223-0:297:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2680:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:297:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11362:59078":{"id":"2:11362:59078","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:11361:59085"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:50297:2697","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2666:215-0:318:1700":{"id":"a:2:2666:215-0:318:1700","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2666:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:318:1700","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:388:410":{"id":"0:388:410","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[317,18],"end":[317,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:383:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:318:1700":{"id":"b:2:2238-0:318:1700","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2673:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:318:1700","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:2289"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:21:651":{"id":"0:21:651","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[5,4],"end":[30,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["formatter",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8550:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8539:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:315":{"id":"0:315","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[161,48],"end":[161,52]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:8813:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:297:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:316:703"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11337:60408":{"id":"2:11337:60408","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5109:61067":{"id":"5:5109:61067","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:6980:219"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6980:219","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2680:223-0:352:1706":{"id":"a:2:2680:223-0:352:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2680:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:352:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:27:651":{"id":"0:27:651","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[49,4],"end":[78,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["formatter",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8550:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8539:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:314:999":{"id":"0:314:999","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[161,36],"end":[161,46]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Version","id":"0:297:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::option::Option","id":"2:48046:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:38118:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2730:2808-0:398:1687":{"id":"a:2:2730:2808-0:398:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2730:2808","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:398:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11460:60431":{"id":"2:11460:60431","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4469:60431"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:50331:2696","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7732:2919-0:218:126":{"id":"a:2:7732:2919-0:218:126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7732:2919","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:218:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:403:410":{"id":"0:403:410","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[375,18],"end":[375,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:398:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11357:54685":{"id":"2:11357:54685","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:11356:2181"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:392":{"id":"0:392","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[317,29],"end":[317,38]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2676:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:383:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:274:911":{"id":"0:274:911","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[522,4],"end":[524,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48190:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:218:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:229":{"id":"0:229","crate_id":0,"name":null,"span":{"filename":"src/parse.rs","begin":[123,0],"end":[133,1]},"visibility":{"restricted":{"parent":"0:204:1642","path":"::parse"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:10996:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:383:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:230:125","0:231:1856"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3325-0:383:1685":{"id":"b:2:3325-0:383:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2673:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3323:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:383:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3327:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11343:60410":{"id":"2:11343:60410","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:11436:1981":{"id":"2:11436:1981","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:11035:2651","prim@char":"1:12374:2219"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48046:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11040:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:334:1705":{"id":"0:334:1705","crate_id":0,"name":"op","span":{"filename":"src/lib.rs","begin":[197,4],"end":[197,14]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Op","id":"0:352:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:378":{"id":"0:378","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,37],"end":[251,41]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:8813:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:352:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:379:703"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11365:59081":{"id":"2:11365:59081","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:50306:2693","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:348:703":{"id":"0:348:703","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[195,31],"end":[195,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:8827:142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:224:125":{"id":"0:224:125","crate_id":0,"name":"Err","span":{"filename":"src/parse.rs","begin":[81,4],"end":[81,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Error","id":"0:218:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:82":{"id":"0:82","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[31,0],"end":[88,1]},"visibility":{"restricted":{"parent":"0:40:1638","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8595:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:218:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:83:651"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:266:1877":{"id":"0:266:1877","crate_id":0,"name":"matches","span":{"filename":"src/lib.rs","begin":[494,4],"end":[496,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["version",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Version","id":"0:297:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5098:61065":{"id":"5:5098:61065","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:6980:219"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6980:219","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11040:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:346:596":{"id":"0:346:596","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[195,20],"end":[195,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:333:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:265:1642":{"id":"0:265:1642","crate_id":0,"name":"parse","span":{"filename":"src/lib.rs","begin":[490,4],"end":[492,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48190:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:218:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:201":{"id":"0:201","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[148,0],"end":[156,1]},"visibility":{"restricted":{"parent":"0:162:1641","path":"::impls"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromIterator","id":"2:7034:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:333:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:318:1700","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:202:671"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11453:4326":{"id":"2:11453:4326","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:276:1882":{"id":"0:276:1882","crate_id":0,"name":"is_empty","span":{"filename":"src/lib.rs","begin":[530,4],"end":[532,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:264":{"id":"0:264","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[489,0],"end":[497,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:333:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:265:1642","0:266:1877"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2521-0:318:1700":{"id":"b:2:2521-0:318:1700","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2494:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:318:1700","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2523:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11379:2955":{"id":"2:11379:2955","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"prim@char":"1:12374:2219","`None`":"2:48048:174","self::pattern":"2:11035:2651"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48046:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11040:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11040:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11055:2668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:259:1868":{"id":"0:259:1868","crate_id":0,"name":"STAR","span":{"filename":"src/lib.rs","begin":[451,4],"end":[453,6]},"visibility":"public","docs":"A `VersionReq` with no constraint on the version numbers it matches.\nEquivalent to `VersionReq::parse(\"*\").unwrap()`.\n\nIn terms of comparators this is equivalent to `>=0.0.0`.\n\nCounterintuitively a `*` VersionReq does not match every possible\nversion number. In particular, in order for *any* `VersionReq` to match\na pre-release version, the `VersionReq` must contain at least one\n`Comparator` that has an explicit major, minor, and patch version\nidentical to the pre-release being matched, and that has a nonempty\npre-release component. Since `*` is not written with an explicit major,\nminor, and patch version, and does not contain a nonempty pre-release\ncomponent, it does not match any pre-release versions.","links":{},"attrs":["#[cfg(not(no_const_vec_new))]"],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"2:11448:60429":{"id":"2:11448:60429","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12374:2219","self::pattern":"2:11035:2651"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11040:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11040:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11055:2668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3325-0:333:1702":{"id":"b:2:3325-0:333:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2673:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3323:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:333:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3327:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:408":{"id":"0:408","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[375,29],"end":[375,38]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2285:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:398:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:398:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:409:596"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11454:53664":{"id":"2:11454:53664","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7731:2920-0:333:1702":{"id":"a:2:7731:2920-0:333:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7731:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:333:1702","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:405":{"id":"0:405","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[375,25],"end":[375,27]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2290:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:398:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:331":{"id":"0:331","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[187,37],"end":[187,42]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8590:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:318:1700","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:332:651"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:382:651":{"id":"0:382:651","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[251,43],"end":[251,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8550:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8539:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2730:2808-0:318:1700":{"id":"a:2:2730:2808-0:318:1700","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2730:2808","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:318:1700","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11413:60418":{"id":"2:11413:60418","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:11035:2651","str::matches":"2:11410:1877","`DoubleEndedIterator`":"2:7075:119","prim@char":"1:12374:2219"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:50236:2690","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11040:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11040:2666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11055:2668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:361:1751":{"id":"0:361:1751","crate_id":0,"name":"LessEq","span":{"filename":"src/lib.rs","begin":[258,4],"end":[258,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:309":{"id":"0:309","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[161,20],"end":[161,29]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2285:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Version","id":"0:297:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:297:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:310:596"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2238-0:383:1685":{"id":"b:2:2238-0:383:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2673:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:383:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:2289"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:355:1748":{"id":"0:355:1748","crate_id":0,"name":"Greater","span":{"filename":"src/lib.rs","begin":[255,4],"end":[255,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"5:5111:2542":{"id":"5:5111:2542","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:6980:219"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6980:219","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:308":{"id":"0:308","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[161,20],"end":[161,29]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2676:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:297:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:7731:2920-0:218:126":{"id":"a:2:7731:2920-0:218:126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7731:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:218:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11350:54663":{"id":"2:11350:54663","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9132:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9132:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2666:215-0:383:1685":{"id":"a:2:2666:215-0:383:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2666:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:383:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2730:2808-0:352:1706":{"id":"a:2:2730:2808-0:352:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2730:2808","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:352:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:231:1856":{"id":"0:231:1856","crate_id":0,"name":"from_str","span":{"filename":"src/parse.rs","begin":[126,4],"end":[132,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48190:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:10996:1645","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"paths":{"2:50817:4294":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"6:4267:7026":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:47104:2561":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"17:11300:5684":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:56990:240":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"6:5504:7289":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:13007:6108":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"17:12087:5840":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:1737:2511":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"16:2648:4989":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"1:457:3826":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"18:574:5417":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:21671:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"2:51839:4163":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"5:2727:61186":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"16:6794:5010":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"6:5699:7388":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:2860:2632":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:1123:3766":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"17:12926:6092":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"17:9700:5124":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"5:5810:16809":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"16:5175:45442":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:2676:221":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"16:2548:4978":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"5:6957:4366":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"16:7321:4707":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"16:6354:4784":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"17:10466:5579":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"18:538:5229":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"17:562:5601":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"16:6230:4781":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"2:70:763":{"crate_id":2,"path":["core","isize"],"kind":"module"},"1:5892:3796":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"16:5941:189":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"17:11661:5763":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2:49146:2396":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"2:52338:4139":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:6494:3795":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"5:1584:5324":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"17:8561:5121":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"5:3753:5324":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"6:7255:7636":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"5:3550:5324":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"5:6779:2359":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"1:4252:3521":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"17:12164:5853":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"17:1021:5180":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:11106:4041":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"16:7850:4715":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"16:4404:6315":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"1:11351:3726":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"1:9295:181":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"17:9644:5070":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"16:5574:4761":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"17:11606:5754":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"2:50992:156":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"16:5927:4772":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"2:7075:119":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"17:10608:5063":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"1:1828:8472":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"6:4417:7086":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"1:3468:55965":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"2:8825:138":{"crate_id":2,"path":["core","hash","macros","Hash"],"kind":"proc_derive"},"12:2190:61310":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"17:13100:6133":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"0:383:1685":{"crate_id":0,"path":["semver","Prerelease"],"kind":"struct"},"1:11675:7963":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"6:4726:7200":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"1:7784:5363":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"17:9539:5073":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"1:2586:5351":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"12:669:3756":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"6:7214:7627":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2:5461:2563":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"16:6571:4788":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"16:3623:6304":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"1:8446:150":{"crate_id":1,"path":["std","net","ip_addr","IpAddr"],"kind":"enum"},"1:1637:3671":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"1:2256:3568":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"17:11436:5706":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"15:214:4624":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"2:4090:4176":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"2:2843:2628":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"6:4191:6989":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"16:7489:4679":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"2:11060:2667":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:20040:59752":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"2:48182:188":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"17:12291:5875":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"2:49369:7783":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"12:1003:3764":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"16:6506:4787":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"17:8871:8398":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:7047:2555":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:12375:2220":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"2:48283:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"6:5534:7299":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:47122:2570":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"16:2596:5030":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"6:5713:7399":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"2:54069:7854":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:12386:2228":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"17:9250:8405":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"6:4804:7238":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"1:8440:2680":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"6:4575:7132":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"17:11873:5791":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"16:6654:4705":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"9:505:4424":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:2485:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"17:8822:61318":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"2:76:1497":{"crate_id":2,"path":["core","usize"],"kind":"module"},"6:5835:7428":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"6:4096:6925":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"16:6164:4699":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"2:10603:2672":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"2:3960:3982":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"17:10642:5168":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"2:4373:2414":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"12:985:3763":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"17:967:8396":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"16:5379:4751":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:50431:4042":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"6:4427:7087":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"16:7461:4709":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"16:6308:4782":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"17:8526:5141":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"17:11617:5755":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"17:10532:126":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"1:11995:7974":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"2:52640:4165":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"9:800:6678":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"2:2743:2942":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"2:20002:59727":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"6:4565:7126":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:54080:7855":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"16:7825:4808":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"2:9604:3409":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"6:4247:7017":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:9446:8412":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"1:9613:214":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"17:11734:5539":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"17:11893:5792":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"16:8034:4680":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"1:4452:3967":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"6:5841:7429":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:51739:4162":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"5:6083:2359":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"16:7535:4702":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"17:242:8392":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"2:10589:3402":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"16:5536:4760":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"1:9351:3794":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"1:2253:2110":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"1:5572:118":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"1:9532:4794":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"2:6763:2535":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"17:9328:5176":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"16:6048:4689":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"2:46292:2644":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"1:3228:3594":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"2:21250:3995":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"2:49347:142":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"0:361:1751":{"crate_id":0,"path":["semver","Op","LessEq"],"kind":"variant"},"2:21198:7662":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"7:79:44643":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"16:6682:4719":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:21108:4255":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"17:10583:5062":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"1:3267:3590":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"1:8812:3693":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"1:7976:8481":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"6:4706:7193":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:8597:2397":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"17:10625:5065":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"16:7920:4810":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"2:2855:2631":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"6:6302:7484":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:900:3408":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"18:564:5230":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:52560:7802":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"16:7189:4690":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"17:11485:5731":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"2:50928:206":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"2:9590:3411":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:3620:2359":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"11:36:6627":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"1:661:3132":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"2:46968:4282":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"6:4102:6926":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"16:8047:126":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"6:4437:7088":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"1:10942:3594":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"16:5365:4698":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"5:2039:4374":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"1:6884:212":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"12:1840:2357":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"17:10296:8431":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"1:10733:3724":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"17:11034:5635":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"2:21737:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"6:4239:7014":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"6:4367:7075":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"1:451:3825":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"6:6293:7478":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:20208:4115":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"2:50014:2685":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"16:6276:4726":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"2:10122:3422":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"5:6914:4364":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"17:9433:8411":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"2:50218:2689":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"2:3240:2646":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:11570:3626":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"17:9021:8401":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"17:11186:5658":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"5:2726:3010":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"2:7038:147":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"2:2921:2633":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"5:2728:7646":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"1:11681:3736":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"9:956:4432":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"17:12046:5835":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"17:11500:5735":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"2:29326:2460":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"16:2762:4983":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"17:13168:6154":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"5:6944:4365":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"17:13148:6148":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"1:8486:3641":{"crate_id":1,"path":["std","net","ip_addr","Ipv6Addr"],"kind":"struct"},"17:13059:6124":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"2:54171:7860":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"14:7:8445":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"17:10283:8430":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"9:863:4434":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"18:531:5228":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"17:13594:6280":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"5:2970:3670":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"5:2908:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"6:6545:7600":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"1:8137:3584":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"17:11235:5668":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"1:11921:3908":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"2:54118:7857":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"16:7071:4795":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"17:10385:5138":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"2:3178:2642":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:8420:2583":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"17:9223:47111":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"2:10824:2703":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"2:51891:4155":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:9519:8485":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"16:5154:4960":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"1:9307:3727":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"6:1722:6914":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"17:9897:8418":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"1:3269:3591":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"2:3323:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"17:487:8395":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"17:13082:6129":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"2:0:482":{"crate_id":2,"path":["core"],"kind":"module"},"1:1967:3131":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"6:4665:7172":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"17:12361:5891":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"5:2732:8908":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:9448:3423":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:1091:3763":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"5:2019:61193":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"2:50642:2671":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"6:581:6762":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"12:1044:4597":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"13:0:2188":{"crate_id":13,"path":["std_detect"],"kind":"module"},"2:49330:7779":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"4:0:2189":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"6:5582:7324":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"0:333:1702":{"crate_id":0,"path":["semver","Comparator"],"kind":"struct"},"16:2696:4980":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"2:50278:2682":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"2:48122:2359":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:47212:2564":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"17:11997:5828":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:11055:2668":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:7148:8641":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"2:49088:126":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"17:11125:5648":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"17:9738:5128":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"2:2792:2621":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"17:10310:8432":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"6:6352:7512":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"1:1938:3130":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"12:861:3762":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"16:4208:6309":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"6:4139:6953":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"17:13221:6165":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"2:46539:4743":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"2:50971:4237":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:4902:7505":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"1:9913:3858":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"2:2772:2614":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"6:6375:7513":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"6:4449:7089":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:52316:4136":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"6:1707:3914":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"1:8643:3903":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:21377:2472":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"17:12748:6048":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"2:7425:2552":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:10508:8473":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"2:47313:2584":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"6:1532:6794":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"6:4534:7112":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:52094:4164":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"16:7215:4797":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"18:727:5221":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"17:10506:5582":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"2:2809:2625":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:8593:110":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"5:1404:3756":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"1:11342:3685":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"1:8692:3962":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"5:6765:61198":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"17:8596:5516":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"17:12307:5877":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"5:5201:2362":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"1:5346:8476":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:6520:2568":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"2:47061:2559":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"16:2784:4985":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"2:50574:4049":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"16:7475:4704":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"2:46911:4316":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"2:49573:3427":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"1:3158:3888":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"1:2026:180":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"2:50416:4039":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"18:0:2199":{"crate_id":18,"path":["memchr"],"kind":"module"},"17:9805:5182":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"17:11536:5743":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"1:8532:7924":{"crate_id":1,"path":["std","net","ip_addr","fmt","Span"],"kind":"struct"},"2:50765:4292":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"17:10420:5196":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"2:50918:200":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"2:6567:4104":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"16:5739:4766":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"1:598:3780":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"1:11778:5374":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"5:1933:3845":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"12:2198:6624":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"16:5793:4769":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"1:6783:3742":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"2:11703:8461":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"17:12909:6087":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"2:20234:4169":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"5:1680:2355":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"1:2610:3576":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"1:12340:8615":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"16:2273:4958":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"1:12377:2221":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"2:11035:2651":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"1:9512:2022":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"2:11040:2666":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:8761:3679":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"16:6188:4779":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"17:11271:5673":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"17:11528:5741":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"5:1971:4375":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"1:11208:128":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"12:2184:6622":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"1:11531:3728":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"17:8911:61324":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"16:7992:4743":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"2:47262:2581":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:545:3845":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"18:507:5417":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"6:1608:6843":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"17:10476:47326":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"18:590:5419":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"6:6424:7526":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"6:6538:7597":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"1:4906:7509":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"2:29541:3147":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"16:6843:5013":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"6:6430:7527":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"1:4439:3966":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"6:4559:7124":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:1751:7652":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"1:3375:3560":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"6:507:6717":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"2:4:979":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"1:574:3850":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"16:6124:4747":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:29501:2344":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"17:10321:5194":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"2:8590:110":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:49895:3415":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"2:52140:4152":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"6:5876:7454":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"1:774:139":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:2290:123":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"5:6010:5324":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"16:6441:4785":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"1:11729:7968":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"17:8510:5515":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"16:7095:4969":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"6:5782:7417":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:49904:3418":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"17:12739:6047":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"1:1114:3765":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"1:4310:3525":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"6:4286:7034":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"6:6554:7603":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:53214:4146":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"2:47174:2575":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"2:50599:4051":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"2:20962:3539":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"6:5733:7405":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"1:1611:2357":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"12:2178:6621":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"1:681:8466":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:46798:4110":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:931:3754":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"2:11630:33442":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"2:10748:2702":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"16:4432:6316":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"17:10854:5122":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"17:8212:5160":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"2:21182:3999":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:3374:3510":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"16:5450:4755":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"12:393:61313":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"16:7615:4713":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"16:7227:4798":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"17:8666:5518":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"2:46951:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:9397:3799":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"16:6101:4697":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"17:12033:5833":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:8318:4217":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:21770:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"3:0:430":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:7152:154":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"17:13580:6277":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:9274:8407":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"2:46771:2695":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"12:98:4601":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"6:1686:6898":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"16:4253:6310":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"2:49043:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"2:4130:2411":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"2:6997:2557":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"17:9371:8402":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"16:6323:4703":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"5:4976:5331":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"1:8717:3923":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"2:10199:5348":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"19:0:995":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"16:2332:4993":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"2:5849:2587":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"17:9382:5526":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"2:50729:2656":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"2:47521:2539":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"17:12674:6037":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"2:47236:2579":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"17:9193:61325":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"17:13184:6157":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"2:4007:3546":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"3:223:205":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"5:1415:3757":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"16:3393:6301":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"5:6757:4401":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"6:487:6706":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"1:3192:3593":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"1:8794:14722":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"6:5672:7379":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"6:554:6748":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"1:7055:3785":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"1:12021:4628":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"16:5642:4763":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"17:11087:5642":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"2:53958:4161":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"5:6787:193":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"17:9820:5183":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"1:12379:2223":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:49110:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"6:5554:7312":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"17:10221:8425":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"5:1359:2359":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"1:2901:205":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"5:4616:3560":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"16:5995:4774":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"1:1608:2359":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"6:4581:7135":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"5:4031:5326":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"17:10374:5137":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"17:13158:6151":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"2:8297:651":{"crate_id":2,"path":["core","fmt"],"kind":"module"},"17:12322:5881":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"1:4431:3964":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"17:3249:5111":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"17:9293:5179":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"2:54023:7850":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"2:3188:4037":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:0:1340":{"crate_id":1,"path":["std"],"kind":"module"},"17:13354:6220":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"2:9303:3408":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"2:49843:3420":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"17:13393:6231":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"1:6679:3941":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"2:51695:7789":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"17:8418:5107":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"17:9263:8406":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"2:46253:2647":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"12:1555:4612":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"2:6614:2533":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"1:11756:7970":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"2:10808:2701":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:3951:3634":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"6:6448:7538":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"2:48397:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:12398:2240":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"17:9722:1680":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"2:20171:4028":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"12:1120:4600":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"2:4199:4177":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"17:11330:5696":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"16:5194:5514":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"1:1811:593":{"crate_id":1,"path":["std","env"],"kind":"module"},"2:48241:3408":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"2:53996:4126":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:2381:2478":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"6:1518:6789":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:2826:2624":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1:2250:3859":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"1:9656:3627":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"1:5878:201":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"17:12349:5884":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"1:5062:3552":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"1:12385:2227":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"1:8368:3597":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"6:4527:7111":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"12:853:3761":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"5:5513:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"1:12387:2229":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"1:9637:3626":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"6:5727:7402":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"17:10121:5103":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"2:50588:4050":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"17:12638:6007":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"0:318:1700":{"crate_id":0,"path":["semver","VersionReq"],"kind":"struct"},"2:48792:2397":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:6007:3928":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"17:9422:8410":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"2:50236:2690":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:54043:7852":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"17:11639:5762":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"2:53750:4138":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"5:1301:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"1:9489:53720":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"2:46519:3511":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"17:9350:5178":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"5:1394:3755":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"18:636:5427":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"1:9618:3625":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"17:8774:5057":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"1:3155:3887":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"16:6115:4695":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"1:2903:126":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"2:53000:4137":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"6:7226:7629":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"12:300:4604":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"1:11447:5369":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"2:2448:3539":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"2:2666:215":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"5:3096:2355":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"16:7350:5017":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"2:5628:59214":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"17:2916:5099":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:2804:2620":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"16:7948:4712":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"2:50510:4047":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"2:46777:7758":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"2:8155:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:2491:145":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"1:12345:11401":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"2:8603:2400":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:4015:3901":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"5:276:2352":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"16:6820:6404":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"17:9501:5083":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"16:6337:4783":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:2285:183":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"2:50753:2663":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"2:49076:108":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"1:5678:3722":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"17:10796:5159":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"1:10984:3832":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"16:6262:4710":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"5:6897:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"5:3004:3671":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:57016:240":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"12:1681:141":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"1:996:3761":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"17:10088:5566":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"12:738:3754":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"2:14:1988":{"crate_id":2,"path":["core","write"],"kind":"macro"},"6:1525:6791":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"17:9031:61319":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"1:8145:3586":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:20288:3539":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"6:4185:6987":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"16:3557:6302":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"5:7074:2356":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"2:48321:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:2409:3873":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"17:10403:5060":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"1:11228:3570":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"2:48190:205":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"5:109:513":{"crate_id":5,"path":["alloc","alloc","dealloc"],"kind":"function"},"6:6975:7613":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"17:11515:5739":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"17:10752:5060":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"5:1943:4356":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"2:50331:2696":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:12399:2241":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"2:50313:2694":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"17:10670:5165":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"16:6759:4718":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"2:10996:1645":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"16:2833:4956":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"17:8393:5044":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"2:49958:2676":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"5:939:5324":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"1:8389:3572":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"2:21238:2471":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"6:4683:7183":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"17:12730:6043":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"1:9289:3725":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"1:7537:56569":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"17:10434:5576":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"1:8328:3599":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"16:2358:4975":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"1:11744:8015":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"17:13203:6162":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"12:725:3753":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"2:2837:2627":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"18:614:61328":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"17:12874:6077":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"6:135:39501":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:8867:2527":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:6076:3940":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"17:1771:5076":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"5:3474:4409":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"17:10894:5104":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"6:495:6711":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"17:11828:5786":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"16:4135:6308":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"1:5009:3551":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"2:48164:2917":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"11:44:4587":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"5:4061:3560":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"16:4879:6329":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"2:50297:2697":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"16:5424:4753":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"1:7873:3848":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"6:4461:7090":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"17:13459:6248":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"17:11774:5778":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"5:1376:3753":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"5:1426:193":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"2:11678:187":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"16:5226:6332":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"18:766:5224":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"1:10838:3725":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"14:165:45369":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"16:7958:4744":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"2:9328:2685":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:53562:4134":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"16:3448:5437":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"2:50761:2665":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"2:48511:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"2:3386:3509":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"16:5715:4765":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"17:1903:47149":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"9:19:4524":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"15:0:2196":{"crate_id":15,"path":["addr2line"],"kind":"module"},"1:1887:8474":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:50288:2681":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:51970:4131":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"17:0:2198":{"crate_id":17,"path":["object"],"kind":"module"},"2:21290:58600":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"2:56977:240":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"0:352:1706":{"crate_id":0,"path":["semver","Op"],"kind":"enum"},"5:6795:4357":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"1:8215:3689":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"6:5480:7273":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"6:4745:7208":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"16:4626:6321":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"17:9475:5035":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"1:9719:8474":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"2:49025:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"2:47091:2569":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:3345:2543":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"17:12176:5855":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"2:39340:2941":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"5:5360:227":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"5:1435:4370":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"16:4565:6319":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"2:52537:7801":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"2:49794:3406":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:48046:176":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"17:10360:5195":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"1:4655:3920":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"17:12884:6078":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"2:48549:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"17:8494:5514":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"2:21:661":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"17:10774:5058":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"12:2080:3765":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"2:53874:4123":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"2:50537:4048":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"16:4348:6313":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"16:2984:4987":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"1:8735:3790":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"2:8540:1985":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"16:4680:6323":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"16:2380:4971":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2:2730:2808":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"1:887:3407":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"5:4938:3815":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"14:160:8445":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"1:8648:3904":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"5:842:4399":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"1:11714:7967":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"16:4288:6311":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"2:47287:2566":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"17:8441:5163":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"1:6230:201":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"18:681:5217":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:11338:8481":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"2:4330:2413":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"2:3161:228":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:7803:5365":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"1:4208:3775":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"12:1138:3766":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"1:8069:3858":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"1:4583:3919":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"2:48625:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"0:363:1752":{"crate_id":0,"path":["semver","Op","Tilde"],"kind":"variant"},"1:7960:12392":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"2:21356:7682":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"2:21273:7670":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:7429:2553":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"17:13031:6116":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"1:11238:56111":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"17:13436:6247":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"6:1714:6910":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"1:1002:3762":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"2:21161:7660":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"18:699:5219":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"1:973:3758":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"2:48114:3408":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"1:7868:3830":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"1:4401:3961":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"1:990:3760":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"17:10245:8427":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"2:49972:2675":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:8575:3958":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"17:9061:5085":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"2:47082:2560":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:9524:8486":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"1:11381:3729":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"1:4970:3789":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"1:3484:3574":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"6:4489:3922":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"1:8697:3965":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"2:47132:2571":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"2:47203:2577":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"17:11174:5657":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"16:6768:4792":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"1:6919:8478":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"5:6991:4360":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"2:52362:4121":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"6:4300:7042":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:969:3757":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"1:4742:3789":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"17:10445:5162":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"1:4314:3526":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"6:7237:7633":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"5:6980:219":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"17:9778:5127":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"12:697:3757":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"2:8827:142":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"2:47183:2576":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:8971:3709":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:52170:4156":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"2:48799:2399":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"5:1049:4372":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"17:11014:5625":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"2:54133:7858":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:8433:2685":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:21311:58597":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:5824:3732":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"12:1029:3765":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"2:4350:2415":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"2:8595:118":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"2:58291:7868":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"17:12695:6042":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"16:7245:4799":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"17:13374:6226":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"2:20856:3403":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"9:977:4437":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"1:7735:5601":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"6:4635:7159":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"18:652:5417":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"15:175:4619":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"5:6725:2351":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"17:10350:5058":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"2:47539:2543":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:21389:2475":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"2:47548:2545":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"17:9671:5047":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"1:8637:3902":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"2:56581:4244":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"2:8601:2399":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"17:13047:6118":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"13:220:6617":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"1:11762:7971":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"16:4376:6314":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"6:4810:7240":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"6:4346:7066":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"17:13557:6273":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"16:2291:5000":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"1:11198:3860":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"1:12394:2236":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"17:9577:5077":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"1:12388:2230":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"1:8588:3636":{"crate_id":1,"path":["std","net","socket_addr","SocketAddr"],"kind":"enum"},"16:6881:4794":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"1:4260:3522":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"2:48106:3407":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"2:46786:4109":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:11977:7973":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"2:48435:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:8121:117":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"16:2921:4683":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"2:39291:3544":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:50622:2670":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"1:6313:5353":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"2:4195:202":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"2:7098:2554":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:339:160":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"5:2736:8909":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"16:7266:4801":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"9:649:4477":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"16:6807:5011":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"1:4266:3523":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"1:6040:3931":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"16:2885:4991":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"16:2424:4972":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"12:1852:3668":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"16:6474:4786":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"17:12022:5832":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"6:4605:7148":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"17:11909:5797":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"6:5605:7337":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:50979:4238":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:6134:5353":{"crate_id":1,"path":["std","sync","mpmc","array","Channel"],"kind":"struct"},"2:51785:4142":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"16:2816:4984":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"6:586:6764":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"16:5210:5515":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"1:910:2359":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"16:7803:4807":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"2:12010:2521":{"crate_id":2,"path":["core","const_closure","ConstFnMutClosure"],"kind":"struct"},"1:8225:2020":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"18:515:5227":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"12:353:4602":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"17:11259:5672":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"2:50268:2680":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"17:11356:5701":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"17:12103:5842":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"2:46881:4314":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"17:10257:8428":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"17:11841:5787":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"1:12395:2237":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"17:13382:6227":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"6:4274:7029":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"1:12028:4628":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"17:10921:5603":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"2:2767:2467":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"1:12391:2233":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"1:6780:3937":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"17:10182:5569":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"2:49984:2679":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"2:57003:240":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:9844:5186":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"1:9477:3849":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"2:53672:4154":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"12:2053:3763":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"1:6675:2539":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"2:9371:2698":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:3230:3595":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"1:954:2355":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"2:48233:3407":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"17:8110:47059":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"2:4276:2412":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"12:274:6618":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"2:20421:16597":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"2:2677:220":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"5:108:280":{"crate_id":5,"path":["alloc","alloc","alloc"],"kind":"function"},"17:1962:5123":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"1:9359:2359":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"2:52876:4145":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"2:48785:2398":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:2154:573":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:5315:8476":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:39327:4381":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"16:2570:5029":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"1:10939:3592":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"2:51009:2443":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"6:7243:7634":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"17:11813:5783":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"17:9712:5529":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"1:1476:141":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"18:113:53467":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"1:11837:3643":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:47298:2583":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:12397:2239":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"12:1845:2355":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"2:2680:223":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"1:2650:3585":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"2:21869:165":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"16:2311:4682":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"2:21704:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"2:7836:2666":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"6:6998:7624":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"5:6451:5336":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"16:6037:4974":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"17:12550:5944":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"1:4836:3777":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"6:4329:7058":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:53030:4140":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"6:4115:6935":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"17:12073:5837":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"5:4521:199":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"16:7113:4970":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"5:1338:3407":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"17:247:8393":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"6:6329:7494":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:8323:4218":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"2:54148:7859":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"2:20021:59753":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"2:47142:2572":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:2383:3863":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"16:5817:4770":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"6:4206:6996":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"6:4816:7243":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"9:827:4431":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"16:7413:4740":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"5:5964:2357":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"17:9947:47254":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"1:8377:3570":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"17:13134:6146":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"6:4673:7177":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"2:49162:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"16:5606:4762":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"16:524:4950":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"17:11149:5652":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"1:5658:3721":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"2:47277:2582":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:1864:8473":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"2:21265:7669":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"2:11651:59064":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"16:4740:6325":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"17:420:4668":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"17:9401:5528":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"12:1859:3669":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"1:2513:3582":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"6:4621:7154":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"6:4761:7213":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"17:13572:6274":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"16:5592:4948":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"2:48258:178":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"12:387:61312":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"17:11368:5704":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"5:1230:3766":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"17:8339:47065":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"2:52764:4157":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"17:12278:5874":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"17:13404:6232":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"6:1541:6799":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:39331:3508":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"2:50136:2687":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"16:2674:4979":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"1:8885:3704":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:47328:2585":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:8104:128":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"2:29563:67":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"17:10875:5105":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"1:4892:3523":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"6:4506:7099":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"17:8241:5164":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"6:1887:40811":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"1:11168:7952":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"18:96:53466":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"17:10490:5581":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"2:29741:4277":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"1:524:5349":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"2:49914:3416":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"16:5758:4767":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"1:1632:3670":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"1:4423:3963":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"2:8607:2401":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"18:582:2514":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"17:10973:5621":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"17:13126:6143":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"7:0:1487":{"crate_id":7,"path":["unwind"],"kind":"module"},"12:1065:4598":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"17:9362:5085":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"16:2478:4976":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"2:53812:4158":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:12381:2225":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"2:8813:138":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"1:12392:2234":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"1:7847:3821":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"17:11070:5640":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"2:56951:240":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:10663:3734":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"1:9471:3547":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"1:3402:3540":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"17:12896:6081":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"2:52010:7792":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"16:3179:6299":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"2:49377:7784":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:29635:4276":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"2:21968:164":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"2:47031:5342":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"6:7279:7641":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"18:609:8390":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"2:21638:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"2:20699:4034":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"17:11974:5827":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"2:2942:2012":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:7746:8499":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"17:9857:5110":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"17:13231:6170":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:46370:193":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"1:5504:185":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:2497:232":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"1:12373:2218":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"6:4644:7162":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"6:4398:7085":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:19987:59727":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"5:128:2070":{"crate_id":5,"path":["alloc","alloc","handle_alloc_error"],"kind":"function"},"1:12396:2238":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"2:1552:3560":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"1:4115:3908":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"0:398:1687":{"crate_id":0,"path":["semver","BuildMetadata"],"kind":"struct"},"2:2788:2617":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"2:3151:2638":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"16:5974:4773":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"17:12514:5913":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"1:7922:11397":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"2:9410:3410":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"5:6822:2359":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"2:20449:4031":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"2:1474:2071":{"crate_id":2,"path":["core","mem"],"kind":"module"},"13:108:61316":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"17:11247:5671":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:2784:2615":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"2:50936:190":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"6:4629:7158":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:50118:2688":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"16:6139:4777":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"16:5856:4771":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"16:6668:4706":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:2778:2616":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"6:1574:6822":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"16:6149:4748":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"9:676:4522":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"17:10394:5139":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"17:12148:5849":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"2:46897:2694":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"2:2582:126":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"14:187:45375":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:48131:2916":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"1:6850:3897":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"2:2851:2630":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"5:3723:2357":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"5:4990:5334":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"2:4266:4183":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"2:2488:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:50745:2661":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"16:7521:4701":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"5:1385:3754":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"16:7430:193":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"17:11288:5681":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"2:46458:198":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"2:52506:7800":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:5392:186":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"17:12237:5869":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"17:9303:5083":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"17:13279:6207":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"1:4503:3910":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"2:49869:2559":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"2:2757:2466":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"16:4840:6328":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"5:6740:4400":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"2:21214:7664":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"2:5384:2574":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"2:54210:7861":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"6:5625:7353":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"1:11900:3901":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"5:2944:3669":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"1:11860:3900":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:46828:4318":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:1604:3407":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"6:646:39836":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"17:12980:6104":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"6:5541:7303":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:9413:3800":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"17:13340:6214":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"2:52459:7799":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2:46875:2695":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:48249:2359":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"17:12211:5867":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"2:51869:4151":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:8220:3690":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"17:12972:6102":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"16:6545:4717":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"2:52029:4120":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"12:444:139":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"1:4967:3791":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"6:4653:7168":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"5:6749:2357":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"14:0:2195":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"17:13527:6268":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"2:48473:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"18:707:2669":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"16:7868:4714":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"6:1701:6907":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:47226:2578":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"17:12816:6063":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"18:690:5218":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"12:822:3759":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"2:49832:3414":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"18:521:5225":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"17:10546:47066":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"6:608:6777":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"16:5519:4759":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"6:1600:6838":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"1:5707:3724":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"18:624:61329":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"17:9873:8416":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"17:9751:5126":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"17:11106:5647":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"9:111:4492":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"2:11856:4239":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"6:6277:7466":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"2:49924:3417":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"2:9521:3412":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:8862:3703":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"2:48806:2400":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"5:5621:3560":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"5:36:2354":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"1:7894:3832":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"17:9831:5185":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"1:11152:3792":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"2:52954:4133":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"2:9576:2687":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:11968:2350":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"5:2983:4354":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"6:7208:7626":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:29535:2345":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:4300:3524":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"6:4690:969":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"6:4737:7206":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"6:4212:6999":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"1:5085:3534":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"6:4354:7071":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"2:46436:196":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"17:12617:5999":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"17:9339:5177":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"12:810:3755":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"9:622:4476":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"2:4204:4178":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"18:80:53465":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"1:10577:3686":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"2:47192:2586":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"2:2449:3545":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"9:0:2191":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"1:4214:3776":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"16:7276:4802":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"2:56964:240":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"18:736:5222":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"1:8427:2677":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"1:8129:3880":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:52408:4125":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:8550:130":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"5:6290:2362":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"1:7937:11399":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"2:9122:3539":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"17:10233:8426":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"17:9553:5085":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"14:31:8445":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"17:10108:5102":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"12:1832:3407":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"2:1825:2074":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"9:896:4436":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:20290:3786":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"15:193:4620":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"1:5885:3795":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"2:22400:2469":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"16:3590:6303":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"6:600:6772":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"16:5503:4758":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"1:5167:3811":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"2:10785:2704":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"17:9526:5074":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"5:6309:2363":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"1:1889:8475":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"17:13492:6255":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"12:762:2355":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"6:5772:7415":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"2:10598:1348":{"crate_id":2,"path":["core","str"],"kind":"module"},"1:7298:58130":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"2:50000:2677":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"16:2500:4988":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"17:10455:5197":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"6:5692:7387":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"6:567:6754":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"17:8941:8399":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"17:8162:5108":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"2:2674:2938":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"17:10497:47327":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"6:539:6739":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:7731:2920":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"6:7166:7625":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"9:382:4429":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"1:11173:3532":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"2:46838:4319":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"6:4126:6943":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"1:9567:7949":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"2:49058:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"6:1595:6836":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"17:12836:6071":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"2:8539:205":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"8:0:2190":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"2:46984:4283":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"2:2796:2619":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"6:6572:7606":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:52384:4124":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:3203:2645":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"6:4231:7012":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"5:620:8448":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"2:7733:2918":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"6:4224:7008":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:8685:3636":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"17:3125:8397":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"17:11748:5775":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"1:2867:3692":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"6:1550:6805":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:2847:2629":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"17:11594:5752":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"17:11684:5767":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"6:4551:7120":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:50805:3629":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"16:4510:6317":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"16:4653:6322":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"0:353:1747":{"crate_id":0,"path":["semver","Op","Exact"],"kind":"variant"},"6:4698:7188":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"1:4322:3519":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"2:11049:2669":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"5:0:280":{"crate_id":5,"path":["alloc"],"kind":"module"},"6:1562:6814":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:8623:3638":{"crate_id":1,"path":["std","net","socket_addr","SocketAddrV6"],"kind":"struct"},"2:8605:189":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:1760:2510":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"16:7581:4725":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:11887:200":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"1:1826:8471":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"12:320:4603":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"2:21327:58591":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"6:1511:6786":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"12:0:2194":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"6:4598:7146":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"2:7001:2556":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"17:12860:6076":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"5:4016:239":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"17:11217:5667":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"1:8703:3913":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"5:3531:2355":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"2:46480:2637":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"1:9365:3797":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"6:4379:7084":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"6:5660:7374":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:46598:4095":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:50182:2692":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"6:5684:7386":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"17:11137:5651":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"1:5011:3549":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"17:8796:5064":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"6:7266:7640":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"1:8960:3708":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"1:11218:117":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"6:5749:7409":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"6:1505:6783":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"6:4307:7045":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"16:7144:4796":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"12:777:4589":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"2:51807:4130":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"16:6495:4616":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"5:5896:5336":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"16:6248:4700":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"2:47151:2573":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:8954:3407":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:49569:4324":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"6:6479:7564":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:10859:2698":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"5:1348:3408":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2:4697:59123":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"17:13478:6253":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"2:49990:2678":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"17:10270:8429":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"2:50462:4046":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"17:12781:6059":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"1:678:8464":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"17:9283:8408":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"16:4777:6326":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"5:5424:2357":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"1:3152:3886":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:2762:2468":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"17:11761:5776":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"1:6214:3795":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"2:3912:3560":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"6:1678:6897":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:20704:16615":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"16:7307:4805":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"2:54054:7853":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:6434:2558":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"16:4597:6320":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"1:7953:3767":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"6:4778:7221":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"2:46918:4317":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"5:768:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"2:50064:2686":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:19974:2514":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"17:9458:5045":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"1:3459:1985":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"6:4152:6963":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"17:13141:6147":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"0:359:1750":{"crate_id":0,"path":["semver","Op","Less"],"kind":"variant"},"17:9627:5081":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"16:6721:4791":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"2:50757:2664":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"6:4611:7151":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:46546:8462":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"12:60:61311":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"2:4534:4310":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"16:4712:6324":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"2:2908:115":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"5:4737:4329":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"17:9658:8413":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"2:3972:3983":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"17:9183:8404":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"1:11551:4292":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"2:48173:3151":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"17:12225:5868":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"1:9546:53722":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"2:4321:4184":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:2995:2348":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"6:513:6719":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"2:50306:2693":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"16:7297:4804":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"1:6391:4239":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"1:1626:3669":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"2:2673:2807":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"17:9791:5531":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"16:7637:4696":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"1:944:2357":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"1:8091:3533":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"6:5510:7290":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:50394:4038":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:10404:3915":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"2:38118:178":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:1919:2439":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"2:2800:2618":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:7943:3675":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"1:3477:3571":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"2:38135:2514":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"17:13413:6234":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"5:2466:4377":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"16:6646:5008":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"9:592:4475":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"17:11199:5659":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"5:4094:5326":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"17:9764:5530":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"1:1620:3668":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"2:52286:4132":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"17:9108:8402":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"17:12948:6097":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"6:6322:7490":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"1:918:3753":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"16:0:2197":{"crate_id":16,"path":["gimli"],"kind":"module"},"2:52240:4144":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:6707:3749":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"1:12389:2231":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"6:6981:7615":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:49822:3413":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"18:755:5223":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"5:1033:61278":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"9:586:4473":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"2:2816:2622":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"17:12934:6095":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"1:2576:3583":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"2:4063:4175":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:7980:4381":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"18:481:5226":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"2:51715:7790":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"2:25210:2470":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"17:9071:61327":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"2:2685:2343":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"2:20296:3787":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:2939:2635":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"2:47558:2547":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:1105:3764":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"17:8981:8400":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"2:49338:2528":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"2:11617:134":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"2:20042:59750":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"2:50445:4045":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:4012:3900":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"16:3707:6306":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"17:11161:5655":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"2:20259:4033":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"16:7404:4724":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"5:6928:4282":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:2321:177":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"2:3984:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"16:6030:4776":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:50749:2662":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"16:7907:4809":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"17:13091:6132":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"17:12337:5162":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"1:6542:201":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"1:1615:2355":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"2:9562:2688":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"17:11939:5816":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"17:8881:61326":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"16:4808:6327":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"6:6500:7578":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"1:8503:3747":{"crate_id":1,"path":["std","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"17:12060:5836":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"16:7374:4806":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"2:9132:217":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"6:1500:6781":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"1:10527:8910":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"2:4723:769":{"crate_id":2,"path":["core","iter"],"kind":"module"},"2:51909:7791":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"5:6158:5324":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:49743:4231":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"17:10159:5568":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"2:50784:120":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"2:10089:3421":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"16:6597:4789":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"5:6869:2353":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"17:9155:8403":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"17:12251:5870":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"17:10520:5585":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"17:12964:6100":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"1:6439:8477":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"16:5113:6331":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"6:7249:7635":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"5:2978:3668":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"1:9906:127":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"12:659:2359":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"2:51021:2441":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"2:46394:194":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"17:11343:5700":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"16:7287:4803":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"2:50082:2684":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"17:11708:5768":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"1:5693:3723":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"2:46850:2696":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"6:1654:6880":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"16:6012:4775":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"2:50737:2659":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:9918:5367":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"6:4280:7031":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"6:1636:6868":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"17:12134:5847":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"17:12118:5846":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"1:2397:3867":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"2:2973:2643":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"2:54034:7851":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"9:709:3703":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"6:5720:7401":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:3312:3579":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"1:3592:3644":{"crate_id":1,"path":["std","net","display_buffer","DisplayBuffer"],"kind":"struct"},"9:188:4500":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"17:10721:5600":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"1:9452:3936":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:49049:129":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"6:6311:7485":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"6:4179:6986":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"6:560:6751":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"17:11576:5751":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"16:7256:4800":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"12:1872:3671":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"2:2936:2634":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"17:10528:5158":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"2:50733:2658":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"5:6476:5341":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"1:11186:7958":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"16:6632:4790":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"5:6881:3770":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"16:2252:4959":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"17:13039:6117":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"17:13506:6262":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"12:1628:5322":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"17:13327:6208":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"16:153:4687":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"5:667:226":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"6:5595:7330":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"1:8361:2535":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:3172:2640":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"5:2244:4378":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"2:11846:3547":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"2:52718:4153":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"2:47113:2562":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"16:3001:4986":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"16:4536:6318":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"2:48097:2142":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"17:13366:6223":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"17:12485:5893":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"6:4475:7091":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"5:6816:2359":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"2:2232:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"17:12198:5866":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"9:33:4525":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"1:4244:3520":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"16:5681:4764":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"12:632:3407":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"1:11588:7962":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"1:4764:3806":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"2:49322:2529":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"6:4335:7061":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"2:21363:2474":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"17:12797:6062":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"18:719:5220":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"16:5402:4752":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:20019:59755":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"16:6294:4727":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"1:9466:8482":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"0:355:1748":{"crate_id":0,"path":["semver","Op","Greater"],"kind":"variant"},"2:53064:4122":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"16:7447:4708":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"6:6509:7581":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"17:11787:5779":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"17:9601:5075":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"6:0:790":{"crate_id":6,"path":["libc"],"kind":"module"},"17:9165:61322":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"2:52192:4159":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"6:4659:7169":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"1:11607:3625":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"6:5861:7443":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"1:11543:56109":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"17:9885:8417":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:46354:195":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"17:1931:5072":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"17:12768:6054":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"2:50164:2691":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"2:53920:4141":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:979:3759":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"5:215:4351":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"17:9681:5471":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"12:1518:4610":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"17:9930:5534":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"1:5007:3535":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"2:9279:3407":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"6:1580:6824":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"12:2205:2353":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"1:11519:3727":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:47530:2541":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"1:12380:2224":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"16:2622:4990":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"17:12630:6006":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"6:501:6714":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"17:9909:5532":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"14:40:5622":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"6:4515:7104":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:46553:2412":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"17:11951:5818":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"1:965:3756":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"1:628:3516":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"6:131:39500":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"16:4912:6330":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"1:8552:3957":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"2:54095:7856":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:11458:5370":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"1:9321:3728":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"2:8609:2402":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:12356:53723":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"6:1643:6872":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:21935:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"2:52794:4160":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:12378:2222":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"0:367:1754":{"crate_id":0,"path":["semver","Op","Wildcard"],"kind":"variant"},"0:0:1883":{"crate_id":0,"path":["semver"],"kind":"module"},"5:3900:3407":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"1:11363:53717":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"12:1866:3670":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"6:4257:7023":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"6:592:6767":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"2:49812:3405":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"1:2399:3868":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"17:13071:6125":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"6:1695:6904":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"16:6219:4780":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"5:1067:4373":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"6:1668:6891":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"1:5761:3726":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"16:6713:4721":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"17:8814:127":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"5:2937:3407":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"1:5644:3720":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"2:48587:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"17:10822:47067":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"1:11659:5372":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"17:10207:8421":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"2:8862:2526":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"16:2859:4957":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"6:5523:7291":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"16:7366:4722":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"6:6415:7522":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"16:5771:4768":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"17:10682:5166":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"17:8701:5519":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"5:7002:4361":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"1:8410:2569":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"2:46339:2636":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"2:47514:2537":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"2:2255:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:49359:3703":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"5:6734:2359":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"1:12390:2232":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"5:859:3407":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"12:815:3758":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"17:8631:5517":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"2:53420:4166":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:51992:4135":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"18:660:5215":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"17:9317:5175":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"2:46414:197":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"17:11315:5690":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"16:5488:4757":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"17:13176:6155":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:50322:2695":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"6:6524:7588":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"1:7846:3539":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"17:386:8394":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"6:545:6742":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"17:13518:6264":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"1:12384:2226":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"5:4890:5324":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"6:4716:7199":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"6:4768:7216":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"17:8368:5059":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"2:2494:131":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"5:3339:3407":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"17:10075:8420":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"6:6269:7461":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"17:13192:6158":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"2:6811:59641":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"2:54014:7849":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"16:3017:5433":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"1:6407:5360":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"2:21902:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"1:2029:179":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"17:8295:47064":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"16:2456:4999":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"16:2526:4977":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:8743:8460":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"1:12393:2235":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"10:0:2192":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"1:8711:3902":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"1:10881:5368":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"0:297:1680":{"crate_id":0,"path":["semver","Version"],"kind":"struct"},"17:12850:6075":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"16:3845:6307":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"2:21055:4253":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"17:10708:5161":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"17:11853:5788":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"17:8991:61321":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"16:7335:4720":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"12:646:3408":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:2932:2104":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"16:7887:4716":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"1:686:11400":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"2:7034:132":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:12374:2219":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"2:22001:2473":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:9335:3729":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"16:7545:4728":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"5:771:4398":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:20337:4031":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"6:5472:7271":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"1:8944:3706":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"1:3190:3592":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"5:676:109":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"2:50609:4052":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"5:5549:4330":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"5:3462:3586":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"1:8064:3810":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"5:3352:3408":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"17:12265:5873":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"2:47041:8463":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"2:21803:2073":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"17:13536:6270":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"1:2248:127":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"2:20964:4032":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"2:51761:4150":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:6014:3930":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"2:29577:4275":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"18:599:61330":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"5:1201:3765":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"6:6953:7612":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"1:7858:53714":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"16:3254:6300":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"2:2327:184":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"16:6087:4723":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"1:12216:5375":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"14:221:6572":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"2:2235:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"12:1534:4611":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"17:8137:47063":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"16:6855:4793":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"2:21836:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"2:50741:2660":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:6638:8478":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"1:10945:3590":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"17:12008:5830":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"2:46904:4315":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"2:56938:240":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:20868:59725":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"1:5225:14721":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"1:5821:3730":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"16:6178:4778":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"17:9691:5125":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"17:11547:5746":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"14:215:6570":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"2:11755:59065":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"18:644:5417":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"1:3420:3569":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:20416:3539":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"2:20440:3539":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"6:5568:7323":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:9384:3798":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2:49803:3404":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"17:8055:5056":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"17:10332:5202":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"6:7220:7628":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"5:1216:3764":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"6:6392:7515":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"1:5176:3609":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"2:49882:3419":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:9597:162":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"6:4294:7039":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"1:11464:5371":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"5:6974:7650":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"2:4676:11402":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"5:1185:3763":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"2:46937:4114":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"2:51940:4143":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"17:10062:8419":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"7:32:44636":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"17:9488:5038":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"12:1836:2359":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"6:4797:7235":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"18:671:5216":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"12:751:2357":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"2:47245:2580":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"6:5443:7247":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"16:7022:4966":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"5:3419:5324":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:9429:3801":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"2:1643:3145":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"16:2740:4982":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"5:6407:238":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"1:7190:5362":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"1:719:8965":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"18:491:5416":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"17:8752:2677":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"17:11054:5636":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"1:8611:3637":{"crate_id":1,"path":["std","net","socket_addr","SocketAddrV4"],"kind":"struct"},"5:4934:3817":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:3088:2349":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"9:920:4433":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"1:12372:2217":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"12:1085:4599":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"2:2501:231":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"2:47569:2549":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"2:48663:4286":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"17:12756:6049":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"2:46858:4313":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"1:6602:161":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"2:50032:2683":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"6:1738:6919":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"17:11559:5748":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"1:960:3755":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"17:13024:6115":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"2:9483:2683":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"0:365:1753":{"crate_id":0,"path":["semver","Op","Caret"],"kind":"variant"},"6:4361:7073":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"16:2402:4994":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"2:7422:2550":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"6:7289:7643":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"16:7934:4711":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"17:9118:61320":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"18:548:138":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"6:5741:7407":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"5:6319:2364":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"2:58312:7869":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"16:4318:6312":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"5:5533:4329":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"17:13214:6163":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"17:10997:5622":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"16:5438:4754":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"1:8739:7494":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"17:10949:5607":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"16:3680:6305":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:48359:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"6:5587:7325":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"1:9608:213":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"16:5959:4954":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"17:8951:61323":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"5:2949:4353":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"6:4496:7092":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:46956:4281":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"16:6450:4617":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"14:202:4363":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"11:0:2193":{"crate_id":11,"path":["adler"],"kind":"module"},"2:2717:2940":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"1:412:5374":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"2:11913:137":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"2:1672:1051":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"1:8902:3705":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"5:3794:3408":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"16:6697:5006":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"17:9631:5071":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:1636:572":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"2:8599:2398":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"2:11261:110":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"17:12609:5996":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"6:5498:7286":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"6:4200:6994":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:2831:2626":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"2:20247:3539":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"2:46512:2639":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:9343:3407":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"17:13114:6140":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"17:8475:5039":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"6:575:6759":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:8929:1318":{"crate_id":2,"path":["core","slice"],"kind":"module"},"16:5472:4756":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"12:119:4605":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"6:62:39434":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"2:2991:2347":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"17:10845:5162":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"12:834:3760":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"1:4904:7507":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"6:4592:7143":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"5:7057:2355":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"1:11163:7950":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"12:2069:3764":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2:47160:7769":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"2:2821:2623":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2:3166:133":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:2568:114":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"1:8469:3640":{"crate_id":1,"path":["std","net","ip_addr","Ipv4Addr"],"kind":"struct"},"17:8272:5167":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:8160:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"17:11721:5771":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"5:3328:158":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"17:11800:5781":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"2:46814:4112":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"17:10139:5085":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:2678:107":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"17:12955:6099":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"6:519:6722":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"16:7037:2916":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"1:6836:3896":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"16:2718:4981":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"2:20447:4118":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"0:357:1749":{"crate_id":0,"path":["semver","Op","GreaterEq"],"kind":"variant"},"6:4540:7115":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:52047:7793":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:8074:3532":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"6:6409:7520":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"6:4317:7052":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:6823:2538":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"1:8081:3860":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"2:7732:2919":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:10750:8911":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"1:3084:3598":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"2:10573:3400":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"}},"external_crates":{"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":23}