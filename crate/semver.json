{"root":"0:0:2123","crate_version":"1.0.22","includes_private":false,"index":{"a:2:41605:3123-0:319:1918":{"id":"a:2:41605:3123-0:319:1918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41605:3123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:231":{"id":"0:231","crate_id":0,"name":null,"span":{"filename":"src/parse.rs","begin":[127,0],"end":[137,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12717:1863","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Prerelease","id":"0:381:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:232:137","0:233:2074"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:31969:237-0:319:1918":{"id":"a:2:31969:237-0:319:1918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31969:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:192":{"id":"0:192","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[45,0],"end":[49,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","ge","gt","le"],"trait":{"name":"PartialOrd","id":"2:2652:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::BuildMetadata","id":"0:395:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:193:1151"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:398:60":{"id":"0:398:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[375,9],"end":[375,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"BuildMetadata","id":"0:395:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:312":{"id":"0:312","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[161,31],"end":[161,34]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2646:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:313:465"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13134:28367":{"id":"2:13134:28367","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12067:454","self::pattern":"2:12757:2857","str::rsplitn":"2:13137:28369"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43467:2893","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12763:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2841:755":{"id":"2:2841:755","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:334:1923":{"id":"0:334:1923","crate_id":0,"name":"op","span":{"filename":"src/lib.rs","begin":[197,4],"end":[197,14]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Op","id":"0:351:1924","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:274:2122":{"id":"0:274:2122","crate_id":0,"name":"is_empty","span":{"filename":"src/lib.rs","begin":[559,4],"end":[561,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:31969:237-0:381:1903":{"id":"a:2:31969:237-0:381:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31969:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:266:60":{"id":"0:266:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[531,4],"end":[533,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13072:34276":{"id":"2:13072:34276","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:13070:34275"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:309":{"id":"0:309","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[161,20],"end":[161,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:31971:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:325":{"id":"0:325","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[187,20],"end":[187,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:31971:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:199:465":{"id":"0:199:465","crate_id":0,"name":"cmp","span":{"filename":"src/impls.rs","begin":[107,4],"end":[145,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Ordering","id":"2:30809:196","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2835-0:319:1918":{"id":"b:2:2835-0:319:1918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2812:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2809:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2838:3161"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2560-0:220:138":{"id":"b:2:2560-0:220:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31970:3007","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2554:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2562:2542"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13081:28333":{"id":"2:13081:28333","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41482:191"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41480:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10849:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10849:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:338:1902":{"id":"0:338:1902","crate_id":0,"name":"pre","span":{"filename":"src/lib.rs","begin":[203,4],"end":[203,23]},"visibility":"public","docs":"Non-empty pre-release is only allowed if patch is Some.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Prerelease","id":"0:381:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:352:1965":{"id":"0:352:1965","crate_id":0,"name":"Exact","span":{"filename":"src/lib.rs","begin":[254,4],"end":[254,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2850-0:381:1903":{"id":"b:2:2850-0:381:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2809:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2819:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2853:138","2:2854:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:264:2117":{"id":"0:264:2117","crate_id":0,"name":"matches","span":{"filename":"src/lib.rs","begin":[523,4],"end":[525,5]},"visibility":"public","docs":"Evaluate whether the given `Version` satisfies the version requirement\ndescribed by `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["version",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Version","id":"0:299:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3058:246-0:220:138":{"id":"a:2:3058:246-0:220:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3058:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:386:458":{"id":"0:386:458","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[317,18],"end":[317,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Prerelease","id":"0:381:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:188:248":{"id":"0:188:248","crate_id":0,"name":"Target","span":{"filename":"src/impls.rs","begin":[32,4],"end":[32,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"str"}}}},"b:2:2845-0:381:1903":{"id":"b:2:2845-0:381:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2819:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2815:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2848:138","2:2849:1634"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2850-0:395:1905":{"id":"b:2:2850-0:395:1905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2809:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2819:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2853:138","2:2854:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:310":{"id":"0:310","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[161,20],"end":[161,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2610:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:311:667"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:306:458":{"id":"0:306:458","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[161,9],"end":[161,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Version","id":"0:299:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:186:602":{"id":"0:186:602","crate_id":0,"name":"deref","span":{"filename":"src/impls.rs","begin":[26,4],"end":[28,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:3270:127","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13102:28373":{"id":"2:13102:28373","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12067:454","self::pattern":"2:12757:2857"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12763:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2845-0:319:1918":{"id":"b:2:2845-0:319:1918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2819:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2815:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2848:138","2:2849:1634"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:725-0:333:1920":{"id":"b:5:725-0:333:1920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2576:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:721:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:727:3224","5:728:3225","5:729:3226"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13105:2234":{"id":"2:13105:2234","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, in which case this function will return true if\nthe `&str` is a prefix of this string slice.\n\nThe [pattern] can also be a [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\nThese will only be checked against the first character of this string slice.\nLook at the second example below regarding behavior for slices of [`char`]s.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```\n\n```\nlet bananas = \"bananas\";\n\n// Note that both of these assert successfully.\nassert!(bananas.starts_with(&['b', 'a', 'n', 'a']));\nassert!(bananas.starts_with(&['a', 'b', 'c', 'd']));\n```","links":{"prim@char":"1:12067:454","self::pattern":"2:12757:2857"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12763:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:299:1898":{"id":"0:299:1898","crate_id":0,"name":"Version","span":{"filename":"src/lib.rs","begin":[162,0],"end":[168,1]},"visibility":"public","docs":"**SemVer version** as defined by <https://semver.org>.\n\n# Syntax\n\n- The major, minor, and patch numbers may be any integer 0 through u64::MAX.\n  When representing a SemVer version as a string, each number is written as\n  a base 10 integer. For example, `1.0.119`.\n\n- Leading zeros are forbidden in those positions. For example `1.01.00` is\n  invalid as a SemVer version.\n\n- The pre-release identifier, if present, must conform to the syntax\n  documented for [`Prerelease`].\n\n- The build metadata, if present, must conform to the syntax documented for\n  [`BuildMetadata`].\n\n- Whitespace is not allowed anywhere in the version.\n\n# Total ordering\n\nGiven any two SemVer versions, one is less than, greater than, or equal to\nthe other. Versions may be compared against one another using Rust's usual\ncomparison operators.\n\n- The major, minor, and patch number are compared numerically from left to\nright, lexicographically ordered as a 3-tuple of integers. So for example\nversion `1.5.0` is less than version `1.19.0`, despite the fact that\n\"1.19.0\" &lt; \"1.5.0\" as ASCIIbetically compared strings and 1.19 &lt; 1.5\nas real numbers.\n\n- When major, minor, and patch are equal, a pre-release version is\n  considered less than the ordinary release:&ensp;version `1.0.0-alpha.1` is\n  less than version `1.0.0`.\n\n- Two pre-releases of the same major, minor, patch are compared by\n  lexicographic ordering of dot-separated components of the pre-release\n  string.\n\n  - Identifiers consisting of only digits are compared\n    numerically:&ensp;`1.0.0-pre.8` is less than `1.0.0-pre.12`.\n\n  - Identifiers that contain a letter or hyphen are compared in ASCII sort\n    order:&ensp;`1.0.0-pre12` is less than `1.0.0-pre8`.\n\n  - Any numeric identifier is always less than any non-numeric\n    identifier:&ensp;`1.0.0-pre.1` is less than `1.0.0-pre.x`.\n\nExample:&ensp;`1.0.0-alpha`&ensp;&lt;&ensp;`1.0.0-alpha.1`&ensp;&lt;&ensp;`1.0.0-alpha.beta`&ensp;&lt;&ensp;`1.0.0-beta`&ensp;&lt;&ensp;`1.0.0-beta.2`&ensp;&lt;&ensp;`1.0.0-beta.11`&ensp;&lt;&ensp;`1.0.0-rc.1`&ensp;&lt;&ensp;`1.0.0`","links":{"`Prerelease`":"0:381:1903","`BuildMetadata`":"0:395:1905"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:300:1899","0:301:1900","0:302:1901","0:303:1902","0:304:1904"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:257","a:2:41605:3123-0:299:1898","a:2:3058:246-0:299:1898","a:2:31969:237-0:299:1898","a:2:41604:3124-0:299:1898","a:2:32026:3008-0:299:1898","b:2:2563-0:299:1898","b:2:3671-0:299:1898","b:2:2835-0:299:1898","b:2:2839-0:299:1898","b:2:2850-0:299:1898","b:2:2560-0:299:1898","b:2:2845-0:299:1898","b:5:725-0:299:1898","b:5:5869-0:299:1898","0:310","0:305","0:20","0:307","0:309","0:32","0:222","0:314","0:312","0:316"]}}},"0:327:667":{"id":"0:327:667","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[187,20],"end":[187,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"VersionReq","id":"0:319:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13140:28371":{"id":"2:13140:28371","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41480:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12763:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:370:458":{"id":"0:370:458","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[251,15],"end":[251,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Op","id":"0:351:1924","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13122:28363":{"id":"2:13122:28363","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12067:454","self::pattern":"2:12757:2857"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:12573:2903","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12763:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13070:34275":{"id":"2:13070:34275","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13162:34288":{"id":"2:13162:34288","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:28":{"id":"0:28","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[81,0],"end":[85,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10198:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Prerelease","id":"0:381:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:29:726"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2845-0:299:1898":{"id":"b:2:2845-0:299:1898","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2819:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2815:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2848:138","2:2849:1634"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3058:246-0:333:1920":{"id":"a:2:3058:246-0:333:1920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3058:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:403":{"id":"0:403","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[375,29],"end":[375,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:31971:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:339":{"id":"0:339","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[195,9],"end":[195,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2576:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:340:458"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32026:3008-0:381:1903":{"id":"a:2:32026:3008-0:381:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32026:3008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2850-0:333:1920":{"id":"b:2:2850-0:333:1920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2809:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2819:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2853:138","2:2854:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:341":{"id":"0:341","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[195,16],"end":[195,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2615:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2848:138":{"id":"2:2848:138","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2819:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:369":{"id":"0:369","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,15],"end":[251,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2576:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:1924","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:370:458"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:395:1905":{"id":"0:395:1905","crate_id":0,"name":"BuildMetadata","span":{"filename":"src/lib.rs","begin":[376,0],"end":[378,1]},"visibility":"public","docs":"Optional build metadata identifier. This comes after `+` in a SemVer\nversion, as in `0.8.1+zstd.1.5.0`.\n\n# Examples\n\nSome real world build metadata idioms drawn from crates.io:\n\n- **[libgit2-sys]** <code>0.12.20+<b>1.1.0</b></code> &mdash; for this\n  crate, the build metadata indicates the version of the C libgit2 library\n  that the Rust crate is built against.\n\n- **[mashup]** <code>0.1.13+<b>deprecated</b></code> &mdash; just the word\n  \"deprecated\" for a crate that has been superseded by another. Eventually\n  people will take notice of this in Cargo's build output where it lists the\n  crates being compiled.\n\n- **[google-bigquery2]** <code>2.0.4+<b>20210327</b></code> &mdash; this\n  library is automatically generated from an official API schema, and the\n  build metadata indicates the date on which that schema was last captured.\n\n- **[fbthrift-git]** <code>0.0.6+<b>c7fcc0e</b></code> &mdash; this crate is\n  published from snapshots of a big company monorepo. In monorepo\n  development, there is no concept of versions, and all downstream code is\n  just updated atomically in the same commit that breaking changes to a\n  library are landed. Therefore for crates.io purposes, every published\n  version must be assumed to be incompatible with the previous. The build\n  metadata provides the source control hash of the snapshotted code.\n\n[libgit2-sys]: https://crates.io/crates/libgit2-sys\n[mashup]: https://crates.io/crates/mashup\n[google-bigquery2]: https://crates.io/crates/google-bigquery2\n[fbthrift-git]: https://crates.io/crates/fbthrift-git\n\n# Syntax\n\nBuild metadata is a series of dot separated identifiers immediately\nfollowing the patch or pre-release version. Identifiers must comprise only\nASCII alphanumerics and hyphens: `0-9`, `A-Z`, `a-z`, `-`. Identifiers must\nnot be empty. Leading zeros *are* allowed, unlike any other place in the\nSemVer grammar.\n\n# Total ordering\n\nBuild metadata is ignored in evaluating `VersionReq`; it plays no role in\nwhether a `Version` matches any one of the comparison operators.\n\nHowever for comparing build metadatas among one another, they do have a\ntotal order which is determined by lexicographic ordering of dot-separated\ncomponents. Identifiers consisting of only digits are compared numerically.\nOtherwise, identifiers are compared in ASCII sort order. Any numeric\nidentifier is always less than any non-numeric identifier.\n\nExample:&ensp;`demo`&ensp;&lt;&ensp;`demo.85`&ensp;&lt;&ensp;`demo.90`&ensp;&lt;&ensp;`demo.090`&ensp;&lt;&ensp;`demo.200`&ensp;&lt;&ensp;`demo.1a0`&ensp;&lt;&ensp;`demo.a`&ensp;&lt;&ensp;`memo`","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:275","a:2:41605:3123-0:395:1905","a:2:3058:246-0:395:1905","a:2:31969:237-0:395:1905","a:2:41604:3124-0:395:1905","a:2:32026:3008-0:395:1905","b:2:2563-0:395:1905","b:2:3671-0:395:1905","b:2:2835-0:395:1905","b:2:2839-0:395:1905","b:2:2850-0:395:1905","b:2:2560-0:395:1905","b:2:2845-0:395:1905","b:5:725-0:395:1905","b:5:5869-0:395:1905","0:399","0:406","0:187","0:403","0:36","0:401","0:234","0:198","0:192","0:404","0:30","0:397"]}}},"b:5:5869-0:395:1905":{"id":"b:5:5869-0:395:1905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10198:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:31970:3007","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5867:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5871:1609"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13149:34283":{"id":"2:13149:34283","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12757:2857","`DoubleEndedIterator`":"2:8139:131","prim@char":"1:12067:454","str::matches":"2:13146:2117"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:43585:2895","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12763:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12763:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12778:2873","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13194:29525":{"id":"2:13194:29525","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:970:36068"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2835-0:395:1905":{"id":"b:2:2835-0:395:1905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2812:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2809:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2838:3161"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13200:34296":{"id":"2:13200:34296","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4853:34296"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:43680:2901","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5613:2759":{"id":"5:5613:2759","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7633:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7633:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:31969:237-0:351:1924":{"id":"a:2:31969:237-0:351:1924","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31969:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:1924","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2563-0:299:1898":{"id":"b:2:2563-0:299:1898","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31970:3007","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2557:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2565:26328"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13079:2358":{"id":"2:13079:2358","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41482:191"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41480:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10849:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10849:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:329:793":{"id":"0:329:793","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[187,31],"end":[187,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10417:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:305":{"id":"0:305","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[161,9],"end":[161,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2576:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:306:458"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:321":{"id":"0:321","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[187,9],"end":[187,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2576:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:322:458"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:88":{"id":"0:88","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[104,0],"end":[111,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10193:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::parse::Error","id":"0:220:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:89:726"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:25:726":{"id":"0:25:726","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[34,4],"end":[45,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10168:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10149:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:302:1901":{"id":"0:302:1901","crate_id":0,"name":"patch","span":{"filename":"src/lib.rs","begin":[165,4],"end":[165,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u64"}}},"b:2:2560-0:299:1898":{"id":"b:2:2560-0:299:1898","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31970:3007","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2554:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2562:2542"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:5869-0:333:1920":{"id":"b:5:5869-0:333:1920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10198:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:31970:3007","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5867:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5871:1609"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:230:2074":{"id":"0:230:2074","crate_id":0,"name":"from_str","span":{"filename":"src/parse.rs","begin":[116,4],"end":[124,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41623:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:12717:1863","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:375:667":{"id":"0:375:667","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[251,26],"end":[251,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Op","id":"0:351:1924","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:41604:3124-0:395:1905":{"id":"a:2:41604:3124-0:395:1905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41604:3124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13175:28374":{"id":"2:13175:28374","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12067:454","self::pattern":"2:12757:2857"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41480:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12763:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12763:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12778:2873","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13195:29526":{"id":"2:13195:29526","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:970:36068"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2563-0:381:1903":{"id":"b:2:2563-0:381:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31970:3007","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2557:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2565:26328"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:26":{"id":"0:26","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[48,0],"end":[79,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10198:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Comparator","id":"0:333:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:27:726"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:5869-0:319:1918":{"id":"b:5:5869-0:319:1918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10198:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:31970:3007","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5867:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5871:1609"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:31969:237-0:220:138":{"id":"a:2:31969:237-0:220:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31969:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13125:28365":{"id":"2:13125:28365","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12757:2857","`DoubleEndedIterator`":"2:8139:131","prim@char":"1:12067:454","str::split":"2:13119:2386"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43381:2888","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12763:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12763:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12778:2873","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13146:2117":{"id":"2:13146:2117","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12757:2857","`DoubleEndedIterator`":"2:8139:131","prim@char":"1:12067:454","str::rmatches":"2:13149:34283"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:43567:2894","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12763:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:407:793":{"id":"0:407:793","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[375,40],"end":[375,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10417:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13197:34295":{"id":"2:13197:34295","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4855:34295"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:43662:2899","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:36":{"id":"0:36","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[116,0],"end":[120,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10193:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::BuildMetadata","id":"0:395:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:37:726"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2839-0:333:1920":{"id":"b:2:2839-0:333:1920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2812:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2841:755"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:41605:3123-0:299:1898":{"id":"a:2:41605:3123-0:299:1898","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41605:3123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:270":{"id":"0:270","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[546,0],"end":[562,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Prerelease","id":"0:381:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:271:2057","0:272:1053","0:273:336","0:274:2122"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2835-0:351:1924":{"id":"b:2:2835-0:351:1924","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2812:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2809:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:1924","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2838:3161"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:191:1151":{"id":"0:191:1151","crate_id":0,"name":"partial_cmp","span":{"filename":"src/impls.rs","begin":[40,4],"end":[42,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41480:194","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Ordering","id":"2:30809:196","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:41604:3124-0:381:1903":{"id":"a:2:41604:3124-0:381:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41604:3124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:5869-0:299:1898":{"id":"b:5:5869-0:299:1898","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10198:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:31970:3007","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5867:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5871:1609"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:259:1860":{"id":"0:259:1860","crate_id":0,"name":"parse","span":{"filename":"src/lib.rs","begin":[431,4],"end":[433,5]},"visibility":"public","docs":"Create `Version` by parsing from string representation.\n\n# Errors\n\nPossible reasons for the parse to fail include:\n\n- `1.0` &mdash; too few numeric components. A SemVer version must have\n  exactly three. If you are looking at something that has fewer than\n  three numbers in it, it's possible it is a `VersionReq` instead (with\n  an implicit default `^` comparison operator).\n\n- `1.0.01` &mdash; a numeric component has a leading zero.\n\n- `1.0.unknown` &mdash; unexpected character in one of the components.\n\n- `1.0.0-` or `1.0.0+` &mdash; the pre-release or build metadata are\n  indicated present but empty.\n\n- `1.0.0-alpha_123` &mdash; pre-release or build metadata have something\n  outside the allowed characters, which are `0-9`, `A-Z`, `a-z`, `-`,\n  and `.` (dot).\n\n- `23456789999999999999.0.0` &mdash; overflow of a u64.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41623:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:220:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:351:1924":{"id":"0:351:1924","crate_id":0,"name":"Op","span":{"filename":"src/lib.rs","begin":[253,0],"end":[266,1]},"visibility":"public","docs":"SemVer comparison operator: `=`, `>`, `>=`, `<`, `<=`, `~`, `^`, `*`.\n\n# Op::Exact\n- &ensp;**`=I.J.K`**&emsp;&mdash;&emsp;exactly the version I.J.K\n- &ensp;**`=I.J`**&emsp;&mdash;&emsp;equivalent to `>=I.J.0, <I.(J+1).0`\n- &ensp;**`=I`**&emsp;&mdash;&emsp;equivalent to `>=I.0.0, <(I+1).0.0`\n\n# Op::Greater\n- &ensp;**`>I.J.K`**\n- &ensp;**`>I.J`**&emsp;&mdash;&emsp;equivalent to `>=I.(J+1).0`\n- &ensp;**`>I`**&emsp;&mdash;&emsp;equivalent to `>=(I+1).0.0`\n\n# Op::GreaterEq\n- &ensp;**`>=I.J.K`**\n- &ensp;**`>=I.J`**&emsp;&mdash;&emsp;equivalent to `>=I.J.0`\n- &ensp;**`>=I`**&emsp;&mdash;&emsp;equivalent to `>=I.0.0`\n\n# Op::Less\n- &ensp;**`<I.J.K`**\n- &ensp;**`<I.J`**&emsp;&mdash;&emsp;equivalent to `<I.J.0`\n- &ensp;**`<I`**&emsp;&mdash;&emsp;equivalent to `<I.0.0`\n\n# Op::LessEq\n- &ensp;**`<=I.J.K`**\n- &ensp;**`<=I.J`**&emsp;&mdash;&emsp;equivalent to `<I.(J+1).0`\n- &ensp;**`<=I`**&emsp;&mdash;&emsp;equivalent to `<(I+1).0.0`\n\n# Op::Tilde&emsp;(\"patch\" updates)\n*Tilde requirements allow the **patch** part of the semver version (the third number) to increase.*\n- &ensp;**`~I.J.K`**&emsp;&mdash;&emsp;equivalent to `>=I.J.K, <I.(J+1).0`\n- &ensp;**`~I.J`**&emsp;&mdash;&emsp;equivalent to `=I.J`\n- &ensp;**`~I`**&emsp;&mdash;&emsp;equivalent to `=I`\n\n# Op::Caret&emsp;(\"compatible\" updates)\n*Caret requirements allow parts that are **right of the first nonzero** part of the semver version to increase.*\n- &ensp;**`^I.J.K`**&ensp;(for I\\>0)&emsp;&mdash;&emsp;equivalent to `>=I.J.K, <(I+1).0.0`\n- &ensp;**`^0.J.K`**&ensp;(for J\\>0)&emsp;&mdash;&emsp;equivalent to `>=0.J.K, <0.(J+1).0`\n- &ensp;**`^0.0.K`**&emsp;&mdash;&emsp;equivalent to `=0.0.K`\n- &ensp;**`^I.J`**&ensp;(for I\\>0 or J\\>0)&emsp;&mdash;&emsp;equivalent to `^I.J.0`\n- &ensp;**`^0.0`**&emsp;&mdash;&emsp;equivalent to `=0.0`\n- &ensp;**`^I`**&emsp;&mdash;&emsp;equivalent to `=I`\n\n# Op::Wildcard\n- &ensp;**`I.J.*`**&emsp;&mdash;&emsp;equivalent to `=I.J`\n- &ensp;**`I.*`**&ensp;or&ensp;**`I.*.*`**&emsp;&mdash;&emsp;equivalent to `=I`","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:352:1965","0:354:1966","0:356:1967","0:358:1968","0:360:1969","0:362:1970","0:364:1971","0:366:1972"],"impls":["a:2:41605:3123-0:351:1924","a:2:3058:246-0:351:1924","a:2:31969:237-0:351:1924","a:2:41604:3124-0:351:1924","a:2:32026:3008-0:351:1924","b:2:2563-0:351:1924","b:2:3671-0:351:1924","b:2:2835-0:351:1924","b:2:2839-0:351:1924","b:2:2850-0:351:1924","b:2:2560-0:351:1924","b:2:2845-0:351:1924","b:5:725-0:351:1924","0:368","0:374","0:371","0:376","0:369","0:379","0:373"]}}},"0:377:793":{"id":"0:377:793","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[251,37],"end":[251,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10417:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:275":{"id":"0:275","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[564,0],"end":[580,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:276:2057","0:277:1053","0:278:336","0:279:2122"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2838:3161":{"id":"2:2838:3161","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2812:145"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13089:2435":{"id":"2:13089:2435","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_checked`](str::split_at_checked).\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_checked":"2:13091:28360","str::split_at_mut":"2:13090:28357"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13160:34287":{"id":"2:13160:34287","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2845-0:333:1920":{"id":"b:2:2845-0:333:1920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2819:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2815:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2848:138","2:2849:1634"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:349":{"id":"0:349","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[195,37],"end":[195,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10193:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:350:726"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13189:27609":{"id":"2:13189:27609","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2563-0:333:1920":{"id":"b:2:2563-0:333:1920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31970:3007","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2557:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2565:26328"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13069:34274":{"id":"2:13069:34274","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13155:34285":{"id":"2:13155:34285","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12757:2857","`DoubleEndedIterator`":"2:8139:131","prim@char":"1:12067:454","str::match_indices":"2:13152:34284"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:43531:2897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12763:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12763:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12778:2873","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13191:27613":{"id":"2:13191:27613","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5595":{"id":"5:5595","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5596:34991","5:5597:2715","5:5600:34992","5:5603:34993","5:5611:34994","5:5612:34995","5:5613:2759","5:5614:27611","5:5615:27612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:31969:237-0:333:1920":{"id":"a:2:31969:237-0:333:1920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31969:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:34":{"id":"0:34","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[110,0],"end":[114,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10193:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Prerelease","id":"0:381:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:35:726"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:263:1860":{"id":"0:263:1860","crate_id":0,"name":"parse","span":{"filename":"src/lib.rs","begin":[517,4],"end":[519,5]},"visibility":"public","docs":"Create `VersionReq` by parsing from string representation.\n\n# Errors\n\nPossible reasons for the parse to fail include:\n\n- `>a.b` &mdash; unexpected characters in the partial version.\n\n- `@1.0.0` &mdash; unrecognized comparison operator.\n\n- `^1.0.0, ` &mdash; unexpected end of input.\n\n- `>=1.0 <2.0` &mdash; missing comma between comparators.\n\n- `*.*` &mdash; unsupported wildcard syntax.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41623:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:220:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13094:2409":{"id":"2:13094:2409","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12067:454"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43333:2884","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:257":{"id":"0:257","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[380,0],"end":[481,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Version","id":"0:299:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:258:1053","0:259:1860","0:260:2096"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:725-0:299:1898":{"id":"b:5:725-0:299:1898","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2576:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:721:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:727:3224","5:728:3225","5:729:3226"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:31969:237-0:299:1898":{"id":"a:2:31969:237-0:299:1898","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31969:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:313:465":{"id":"0:313:465","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[161,31],"end":[161,34]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Version","id":"0:299:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30809:196","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:262:2108":{"id":"0:262:2108","crate_id":0,"name":"STAR","span":{"filename":"src/lib.rs","begin":[498,4],"end":[500,6]},"visibility":"public","docs":"A `VersionReq` with no constraint on the version numbers it matches.\nEquivalent to `VersionReq::parse(\"*\").unwrap()`.\n\nIn terms of comparators this is equivalent to `>=0.0.0`.\n\nCounterintuitively a `*` VersionReq does not match every possible\nversion number. In particular, in order for *any* `VersionReq` to match\na pre-release version, the `VersionReq` must contain at least one\n`Comparator` that has an explicit major, minor, and patch version\nidentical to the pre-release being matched, and that has a nonempty\npre-release component. Since `*` is not written with an explicit major,\nminor, and patch version, and does not contain a nonempty pre-release\ncomponent, it does not match any pre-release versions.","links":{},"attrs":["#[cfg(not(no_const_vec_new))]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:392":{"id":"0:392","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[317,40],"end":[317,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10409:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:393:793"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:267":{"id":"0:267","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[536,0],"end":[544,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Comparator","id":"0:333:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:268:1860","0:269:2117"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:317:793":{"id":"0:317:793","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[161,48],"end":[161,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10417:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:347:793":{"id":"0:347:793","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[195,31],"end":[195,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10417:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:84":{"id":"0:84","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[32,0],"end":[90,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10198:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::parse::Error","id":"0:220:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:85:726"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:21:726":{"id":"0:21:726","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[5,4],"end":[30,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10168:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10149:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3671-0:351:1924":{"id":"b:2:3671-0:351:1924","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31970:3007","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3669:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:1924","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3673:1647"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13083:28334":{"id":"2:13083:28334","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10849:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10849:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3671-0:333:1920":{"id":"b:2:3671-0:333:1920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31970:3007","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3669:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3673:1647"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:195:465":{"id":"0:195:465","crate_id":0,"name":"cmp","span":{"filename":"src/impls.rs","begin":[52,4],"end":[103,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Ordering","id":"2:30809:196","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:232:137":{"id":"0:232:137","crate_id":0,"name":"Err","span":{"filename":"src/parse.rs","begin":[128,4],"end":[128,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:220:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:31:726":{"id":"0:31:726","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[88,4],"end":[90,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10168:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10149:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:397":{"id":"0:397","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[375,9],"end":[375,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2887:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:398:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:387":{"id":"0:387","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[317,25],"end":[317,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2615:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13137:28369":{"id":"2:13137:28369","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12067:454","str::splitn":"2:13134:28367","self::pattern":"2:12757:2857"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43485:2892","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12763:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12763:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12778:2873","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13143:28372":{"id":"2:13143:28372","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41480:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12763:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12763:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12778:2873","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13165:34290":{"id":"2:13165:34290","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:198":{"id":"0:198","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[106,0],"end":[146,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2646:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::BuildMetadata","id":"0:395:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:199:465"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32026:3008-0:351:1924":{"id":"a:2:32026:3008-0:351:1924","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32026:3008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:1924","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:203":{"id":"0:203","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[148,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromIterator","id":"2:8097:146","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Comparator","id":"0:333:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::VersionReq","id":"0:319:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:204:758"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:273:336":{"id":"0:273:336","crate_id":0,"name":"as_str","span":{"filename":"src/lib.rs","begin":[555,4],"end":[557,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2562:2542":{"id":"2:2562:2542","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2835-0:333:1920":{"id":"b:2:2835-0:333:1920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2812:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2809:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2838:3161"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13119:2386":{"id":"2:13119:2386","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12757:2857","`DoubleEndedIterator`":"2:8139:131","prim@char":"1:12067:454","str::split_whitespace":"2:13097:32014","str::rsplit":"2:13125:28365"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43363:2890","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12763:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:332:726":{"id":"0:332:726","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[187,37],"end":[187,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10168:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10149:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2853:138":{"id":"2:2853:138","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:31897:5782","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:5:725-0:319:1918":{"id":"b:5:725-0:319:1918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2576:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:721:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:727:3224","5:728:3225","5:729:3226"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:389":{"id":"0:389","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[317,29],"end":[317,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:31971:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:385":{"id":"0:385","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[317,18],"end":[317,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2576:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:386:458"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13097:32014":{"id":"2:13097:32014","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:13098:32017"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:43637:2886","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13169:2395":{"id":"2:13169:2395","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12067:454","self::pattern":"2:12757:2857"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12763:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:307":{"id":"0:307","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[161,16],"end":[161,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2615:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13187:1860":{"id":"2:13187:1860","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12718:137","`FromStr`":"2:12717:1863"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41623:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12717:1863","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12717:1863","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:41605:3123-0:220:138":{"id":"a:2:41605:3123-0:220:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41605:3123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:83":{"id":"0:83","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[30,0],"end":[30,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["source","type_id","cause","provide","description"],"trait":{"name":"Error","id":"2:2898:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::parse::Error","id":"0:220:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2563-0:351:1924":{"id":"b:2:2563-0:351:1924","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31970:3007","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2557:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:1924","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2565:26328"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:272:1053":{"id":"0:272:1053","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[551,4],"end":[553,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41623:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:220:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13131:34282":{"id":"2:13131:34282","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12757:2857","str::split":"2:13119:2386","prim@char":"1:12067:454","str::split_terminator":"2:13128:34281"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43431:2889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12763:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12763:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12778:2873","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5611:34994":{"id":"5:5611:34994","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7633:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7633:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:362:1970":{"id":"0:362:1970","crate_id":0,"name":"Tilde","span":{"filename":"src/lib.rs","begin":[259,4],"end":[259,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:236:2074":{"id":"0:236:2074","crate_id":0,"name":"from_str","span":{"filename":"src/parse.rs","begin":[142,4],"end":[148,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41623:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:12717:1863","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:41604:3124-0:220:138":{"id":"a:2:41604:3124-0:220:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41604:3124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:328":{"id":"0:328","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[187,31],"end":[187,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10409:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:329:793"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13164:34289":{"id":"2:13164:34289","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:727:3224":{"id":"5:727:3224","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:228":{"id":"0:228","crate_id":0,"name":null,"span":{"filename":"src/parse.rs","begin":[113,0],"end":[125,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12717:1863","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Comparator","id":"0:333:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:229:137","0:230:2074"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2835-0:381:1903":{"id":"b:2:2835-0:381:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2812:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2809:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2838:3161"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13066":{"id":"2:13066","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:13067:887","2:13068:2122","2:13069:34274","2:13070:34275","2:13072:34276","2:13075:2421","2:13076:34277","2:13077:334","2:13078:2339","2:13079:2358","2:13081:28333","2:13083:28334","2:13085:9009","2:13087:34278","2:13088:34279","2:13089:2435","2:13090:28357","2:13091:28360","2:13092:28361","2:13094:2409","2:13095:7301","2:13096:2338","2:13097:32014","2:13098:32017","2:13099:26915","2:13100:34280","2:13101:32373","2:13102:28373","2:13105:2234","2:13108:27966","2:13111:3205","2:13115:3167","2:13119:2386","2:13122:28363","2:13125:28365","2:13128:34281","2:13131:34282","2:13134:28367","2:13137:28369","2:13140:28371","2:13143:28372","2:13146:2117","2:13149:34283","2:13152:34284","2:13155:34285","2:13158:34286","2:13160:34287","2:13162:34288","2:13164:34289","2:13165:34290","2:13166:34291","2:13169:2395","2:13172:2232","2:13175:28374","2:13178:34292","2:13181:34293","2:13184:34294","2:13187:1860","2:13189:27609","2:13190:29522","2:13191:27613","2:13192:27614","2:13193:27615","2:13194:29525","2:13195:29526","2:13196:29527","2:13197:34295","2:13199:9375","2:13200:34296"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3671-0:381:1903":{"id":"b:2:3671-0:381:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31970:3007","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3669:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3673:1647"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:41604:3124-0:333:1920":{"id":"a:2:41604:3124-0:333:1920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41604:3124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:373":{"id":"0:373","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,26],"end":[251,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:31971:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:1924","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:41604:3124-0:299:1898":{"id":"a:2:41604:3124-0:299:1898","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41604:3124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:41605:3123-0:333:1920":{"id":"a:2:41605:3123-0:333:1920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41605:3123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3671-0:220:138":{"id":"b:2:3671-0:220:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31970:3007","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3669:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3673:1647"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:356:1967":{"id":"0:356:1967","crate_id":0,"name":"GreaterEq","span":{"filename":"src/lib.rs","begin":[256,4],"end":[256,13]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:3058:246-0:319:1918":{"id":"a:2:3058:246-0:319:1918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3058:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2839-0:351:1924":{"id":"b:2:2839-0:351:1924","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2812:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:1924","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2841:755"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3058:246-0:381:1903":{"id":"a:2:3058:246-0:381:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3058:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2560-0:381:1903":{"id":"b:2:2560-0:381:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31970:3007","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2554:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2562:2542"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:189:602":{"id":"0:189:602","crate_id":0,"name":"deref","span":{"filename":"src/impls.rs","begin":[34,4],"end":[36,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:3270:127","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13087:34278":{"id":"2:13087:34278","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12073:1552","str::slice_mut_unchecked":"2:13088:34279","crate::ops::Index":"2:39099:2598"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13090:28357":{"id":"2:13090:28357","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_mut_checked`](str::split_at_mut_checked).\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:13089:2435","str::split_at_mut_checked":"2:13092:28361"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13099:26915":{"id":"2:13099:26915","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:43617:2885","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13178:34292":{"id":"2:13178:34292","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12067:454","self::pattern":"2:12757:2857"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12763:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12763:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12778:2873","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:41605:3123-0:395:1905":{"id":"a:2:41605:3123-0:395:1905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41605:3123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:401":{"id":"0:401","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[375,25],"end":[375,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2615:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:194":{"id":"0:194","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[51,0],"end":[104,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2646:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Prerelease","id":"0:381:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:195:465"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:20":{"id":"0:20","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[4,0],"end":[31,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10198:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Version","id":"0:299:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:21:726"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:35:726":{"id":"0:35:726","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[111,4],"end":[113,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10168:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10149:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2835-0:299:1898":{"id":"b:2:2835-0:299:1898","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2812:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2809:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2838:3161"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5596:34991":{"id":"5:5596:34991","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:294:2602","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:294:2602","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:193:1151":{"id":"0:193:1151","crate_id":0,"name":"partial_cmp","span":{"filename":"src/impls.rs","begin":[46,4],"end":[48,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41480:194","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Ordering","id":"2:30809:196","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:345:667":{"id":"0:345:667","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[195,20],"end":[195,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Comparator","id":"0:333:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13181:34293":{"id":"2:13181:34293","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12067:454","self::pattern":"2:12757:2857"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12763:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:269:2117":{"id":"0:269:2117","crate_id":0,"name":"matches","span":{"filename":"src/lib.rs","begin":[541,4],"end":[543,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["version",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Version","id":"0:299:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:406":{"id":"0:406","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[375,40],"end":[375,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10409:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:407:793"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13190:29522":{"id":"2:13190:29522","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39453:3148","Self::is_ascii":"2:13189:27609"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41480:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39453:3148","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:301:1900":{"id":"0:301:1900","crate_id":0,"name":"minor","span":{"filename":"src/lib.rs","begin":[164,4],"end":[164,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u64"}}},"a:2:32026:3008-0:299:1898":{"id":"a:2:32026:3008-0:299:1898","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32026:3008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:85:726":{"id":"0:85:726","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[33,4],"end":[89,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10168:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10149:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:323":{"id":"0:323","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[187,16],"end":[187,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2615:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:229:137":{"id":"0:229:137","crate_id":0,"name":"Err","span":{"filename":"src/parse.rs","begin":[114,4],"end":[114,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:220:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:32026:3008-0:333:1920":{"id":"a:2:32026:3008-0:333:1920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32026:3008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:41605:3123-0:381:1903":{"id":"a:2:41605:3123-0:381:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41605:3123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5603:34993":{"id":"5:5603:34993","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7633:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7633:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2849:1634":{"id":"2:2849:1634","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41623:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2819:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5869-0:381:1903":{"id":"b:5:5869-0:381:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10198:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:31970:3007","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5867:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5871:1609"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2563-0:220:138":{"id":"b:2:2563-0:220:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31970:3007","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2557:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2565:26328"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13158:34286":{"id":"2:13158:34286","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:729:3226":{"id":"5:729:3226","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:256-0:220:138":{"id":"0:256-0:220:138","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[110,0],"end":[110,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::parse::Error","name":"Error","id":"0:220:138","glob":false}}},"0:319:1918":{"id":"0:319:1918","crate_id":0,"name":"VersionReq","span":{"filename":"src/lib.rs","begin":[189,0],"end":[191,1]},"visibility":"public","docs":"**SemVer version requirement** describing the intersection of some version\ncomparators, such as `>=1.2.3, <1.8`.\n\n# Syntax\n\n- Either `*` (meaning \"any\"), or one or more comma-separated comparators.\n\n- A [`Comparator`] is an operator ([`Op`]) and a partial version, separated\n  by optional whitespace. For example `>=1.0.0` or `>=1.0`.\n\n- Build metadata is syntactically permitted on the partial versions, but is\n  completely ignored, as it's never relevant to whether any comparator\n  matches a particular version.\n\n- Whitespace is permitted around commas and around operators. Whitespace is\n  not permitted within a partial version, i.e. anywhere between the major\n  version number and its minor, patch, pre-release, or build metadata.","links":{"`Op`":"0:351:1924","`Comparator`":"0:333:1920"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:320:1919"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:261","a:2:41605:3123-0:319:1918","a:2:3058:246-0:319:1918","a:2:31969:237-0:319:1918","a:2:41604:3124-0:319:1918","a:2:32026:3008-0:319:1918","b:2:2563-0:319:1918","b:2:3671-0:319:1918","b:2:2835-0:319:1918","b:2:2839-0:319:1918","b:2:2850-0:319:1918","b:2:2560-0:319:1918","b:2:2845-0:319:1918","b:5:725-0:319:1918","b:5:5869-0:319:1918","0:325","0:24","0:225","0:323","0:321","0:265","0:326","0:328","0:331","0:203"]}}},"0:366:1972":{"id":"0:366:1972","crate_id":0,"name":"Wildcard","span":{"filename":"src/lib.rs","begin":[261,4],"end":[261,12]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:13091:28360":{"id":"2:13091:28360","crate_id":2,"name":"split_at_checked","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut_checked`]\nmethod.\n\n[`split_at_mut_checked`]: str::split_at_mut_checked\n\n# Examples\n\n```\n#![feature(split_at_checked)]\n\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at_checked(3).unwrap();\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n\nassert_eq!(None, s.split_at_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_checked(16));  // Beyond the string length\n```","links":{"str::split_at_mut_checked":"2:13092:28361"},"attrs":["#[must_use]","#[unstable(feature = \"split_at_checked\", reason = \"new API\", issue =\n\"119128\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:41480:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:33:726":{"id":"0:33:726","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[94,4],"end":[107,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10168:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10149:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:316":{"id":"0:316","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[161,48],"end":[161,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10409:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:317:793"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:258:1053":{"id":"0:258:1053","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[398,4],"end":[406,5]},"visibility":"public","docs":"Create `Version` with an empty pre-release and build metadata.\n\nEquivalent to:\n\n```\n# use semver::{BuildMetadata, Prerelease, Version};\n#\n# const fn new(major: u64, minor: u64, patch: u64) -> Version {\nVersion {\n    major,\n    minor,\n    patch,\n    pre: Prerelease::EMPTY,\n    build: BuildMetadata::EMPTY,\n}\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["major",{"primitive":"u64"}],["minor",{"primitive":"u64"}],["patch",{"primitive":"u64"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:331":{"id":"0:331","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[187,37],"end":[187,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10193:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:332:726"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3671-0:395:1905":{"id":"b:2:3671-0:395:1905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31970:3007","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3669:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3673:1647"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5597:2715":{"id":"5:5597:2715","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7633:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7633:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12763:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13152:34284":{"id":"2:13152:34284","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12757:2857","`DoubleEndedIterator`":"2:8139:131","prim@char":"1:12067:454","str::rmatch_indices":"2:13155:34285"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:43513:2896","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12763:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:725-0:395:1905":{"id":"b:5:725-0:395:1905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2576:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:721:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:727:3224","5:728:3225","5:729:3226"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:184":{"id":"0:184","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[23,0],"end":[29,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:3270:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Prerelease","id":"0:381:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:185:248","0:186:602"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2839-0:220:138":{"id":"b:2:2839-0:220:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2812:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2841:755"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32026:3008-0:395:1905":{"id":"a:2:32026:3008-0:395:1905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32026:3008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:368":{"id":"0:368","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,9],"end":[251,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3053:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:1924","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32026:3008-0:319:1918":{"id":"a:2:32026:3008-0:319:1918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32026:3008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:320:1919":{"id":"0:320:1919","crate_id":0,"name":"comparators","span":{"filename":"src/lib.rs","begin":[190,4],"end":[190,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"crate::alloc::vec::Vec","id":"5:7056:263","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Comparator","id":"0:333:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:380:726":{"id":"0:380:726","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[251,43],"end":[251,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10168:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10149:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:322:458":{"id":"0:322:458","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[187,9],"end":[187,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"VersionReq","id":"0:319:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:314":{"id":"0:314","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[161,36],"end":[161,46]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","ge","gt","le"],"trait":{"name":"PartialOrd","id":"2:2652:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:315:1151"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:29:726":{"id":"0:29:726","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[82,4],"end":[84,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10168:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10149:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2839-0:381:1903":{"id":"b:2:2839-0:381:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2812:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2841:755"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13088:34279":{"id":"2:13088:34279","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12073:1552","crate::ops::IndexMut":"2:3333:2599","str::slice_unchecked":"2:13087:34278"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13111:3205":{"id":"2:13111:3205","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41482:191","prim@char":"1:12067:454","self::pattern":"2:12757:2857"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41480:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12763:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13075:2421":{"id":"2:13075:2421","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12305:2877"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2839-0:299:1898":{"id":"b:2:2839-0:299:1898","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2812:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2841:755"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:234":{"id":"0:234","crate_id":0,"name":null,"span":{"filename":"src/parse.rs","begin":[139,0],"end":[149,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12717:1863","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::BuildMetadata","id":"0:395:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:235:137","0:236:2074"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5614:27611":{"id":"5:5614:27611","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:13192:27614"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7633:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:364:1971":{"id":"0:364:1971","crate_id":0,"name":"Caret","span":{"filename":"src/lib.rs","begin":[260,4],"end":[260,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:315:1151":{"id":"0:315:1151","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[161,36],"end":[161,46]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Version","id":"0:299:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:41480:194","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30809:196","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13199:9375":{"id":"2:13199:9375","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4856:9375"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:43671:2900","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13184:34294":{"id":"2:13184:34294","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12067:454","self::pattern":"2:12757:2857"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12763:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12763:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12778:2873","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:346":{"id":"0:346","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[195,31],"end":[195,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10409:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:347:793"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:400:458":{"id":"0:400:458","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[375,18],"end":[375,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"BuildMetadata","id":"0:395:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13095:7301":{"id":"2:13095:7301","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12067:454"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43339:2883","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:333:1920":{"id":"0:333:1920","crate_id":0,"name":"Comparator","span":{"filename":"src/lib.rs","begin":[196,0],"end":[204,1]},"visibility":"public","docs":"A pair of comparison operator and partial version, such as `>=1.2`. Forms\none piece of a VersionReq.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:334:1923","0:335:1899","0:336:1900","0:337:1901","0:338:1902"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:267","a:2:41605:3123-0:333:1920","a:2:3058:246-0:333:1920","a:2:31969:237-0:333:1920","a:2:41604:3124-0:333:1920","a:2:32026:3008-0:333:1920","b:2:2563-0:333:1920","b:2:3671-0:333:1920","b:2:2835-0:333:1920","b:2:2839-0:333:1920","b:2:2850-0:333:1920","b:2:2560-0:333:1920","b:2:2845-0:333:1920","b:5:725-0:333:1920","b:5:5869-0:333:1920","0:339","0:346","0:26","0:343","0:228","0:341","0:349","0:344","0:203"]}}},"0:393:793":{"id":"0:393:793","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[317,40],"end":[317,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10417:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:350:726":{"id":"0:350:726","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[195,37],"end":[195,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10168:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10149:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2563-0:395:1905":{"id":"b:2:2563-0:395:1905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31970:3007","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2557:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2565:26328"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2839-0:395:1905":{"id":"b:2:2839-0:395:1905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2812:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2841:755"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:278:336":{"id":"0:278:336","crate_id":0,"name":"as_str","span":{"filename":"src/lib.rs","begin":[573,4],"end":[575,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:303:1902":{"id":"0:303:1902","crate_id":0,"name":"pre","span":{"filename":"src/lib.rs","begin":[166,4],"end":[166,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Prerelease","id":"0:381:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:13076:34277":{"id":"2:13076:34277","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:3673:1647":{"id":"2:3673:1647","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39267:7080","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13068:2122":{"id":"2:13068:2122","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:304:1904":{"id":"0:304:1904","crate_id":0,"name":"build","span":{"filename":"src/lib.rs","begin":[167,4],"end":[167,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"BuildMetadata","id":"0:395:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"a:2:41604:3124-0:319:1918":{"id":"a:2:41604:3124-0:319:1918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41604:3124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:337:1901":{"id":"0:337:1901","crate_id":0,"name":"patch","span":{"filename":"src/lib.rs","begin":[201,4],"end":[201,26]},"visibility":"public","docs":"Patch is only allowed if minor is Some.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41480:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u64"}}],"bindings":[]}}}}}},"b:2:2845-0:220:138":{"id":"b:2:2845-0:220:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2819:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2815:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2848:138","2:2849:1634"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32026:3008-0:220:138":{"id":"a:2:32026:3008-0:220:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32026:3008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:89:726":{"id":"0:89:726","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[105,4],"end":[110,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10168:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10149:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:27:726":{"id":"0:27:726","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[49,4],"end":[78,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10168:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10149:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:358:1968":{"id":"0:358:1968","crate_id":0,"name":"Less","span":{"filename":"src/lib.rs","begin":[257,4],"end":[257,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"5:5600:34992":{"id":"5:5600:34992","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7633:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7633:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12763:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:41605:3123-0:351:1924":{"id":"a:2:41605:3123-0:351:1924","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41605:3123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:1924","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:224:2074":{"id":"0:224:2074","crate_id":0,"name":"from_str","span":{"filename":"src/parse.rs","begin":[28,4],"end":[81,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41623:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:12717:1863","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:391:667":{"id":"0:391:667","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[317,29],"end":[317,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Prerelease","id":"0:381:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:344":{"id":"0:344","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[195,20],"end":[195,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2610:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:345:667"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:37:726":{"id":"0:37:726","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[117,4],"end":[119,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10168:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10149:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2560-0:333:1920":{"id":"b:2:2560-0:333:1920","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31970:3007","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2554:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2562:2542"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:268:1860":{"id":"0:268:1860","crate_id":0,"name":"parse","span":{"filename":"src/lib.rs","begin":[537,4],"end":[539,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41623:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:220:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2560-0:395:1905":{"id":"b:2:2560-0:395:1905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31970:3007","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2554:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2562:2542"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:32":{"id":"0:32","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[93,0],"end":[108,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10193:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Version","id":"0:299:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:33:726"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2563-0:319:1918":{"id":"b:2:2563-0:319:1918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31970:3007","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2557:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2565:26328"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:381:1903":{"id":"0:381:1903","crate_id":0,"name":"Prerelease","span":{"filename":"src/lib.rs","begin":[318,0],"end":[320,1]},"visibility":"public","docs":"Optional pre-release identifier on a version string. This comes after `-` in\na SemVer version, like `1.0.0-alpha.1`\n\n# Examples\n\nSome real world pre-release idioms drawn from crates.io:\n\n- **[mio]** <code>0.7.0-<b>alpha.1</b></code> &mdash; the most common style\n  for numbering pre-releases.\n\n- **[pest]** <code>1.0.0-<b>beta.8</b></code>,&ensp;<code>1.0.0-<b>rc.0</b></code>\n  &mdash; this crate makes a distinction between betas and release\n  candidates.\n\n- **[sassers]** <code>0.11.0-<b>shitshow</b></code> &mdash; ???.\n\n- **[atomic-utils]** <code>0.0.0-<b>reserved</b></code> &mdash; a squatted\n  crate name.\n\n[mio]: https://crates.io/crates/mio\n[pest]: https://crates.io/crates/pest\n[atomic-utils]: https://crates.io/crates/atomic-utils\n[sassers]: https://crates.io/crates/sassers\n\n*Tip:* Be aware that if you are planning to number your own pre-releases,\nyou should prefer to separate the numeric part from any non-numeric\nidentifiers by using a dot in between. That is, prefer pre-releases\n`alpha.1`, `alpha.2`, etc rather than `alpha1`, `alpha2` etc. The SemVer\nspec's rule for pre-release precedence has special treatment of numeric\ncomponents in the pre-release string, but only if there are no non-digit\ncharacters in the same dot-separated component. So you'd have `alpha.2` &lt;\n`alpha.11` as intended, but `alpha11` &lt; `alpha2`.\n\n# Syntax\n\nPre-release strings are a series of dot separated identifiers immediately\nfollowing the patch version. Identifiers must comprise only ASCII\nalphanumerics and hyphens: `0-9`, `A-Z`, `a-z`, `-`. Identifiers must not be\nempty. Numeric identifiers must not include leading zeros.\n\n# Total ordering\n\nPre-releases have a total order defined by the SemVer spec. It uses\nlexicographic ordering of dot-separated components. Identifiers consisting\nof only digits are compared numerically. Otherwise, identifiers are compared\nin ASCII sort order. Any numeric identifier is always less than any\nnon-numeric identifier.\n\nExample:&ensp;`alpha`&ensp;&lt;&ensp;`alpha.85`&ensp;&lt;&ensp;`alpha.90`&ensp;&lt;&ensp;`alpha.200`&ensp;&lt;&ensp;`alpha.0a`&ensp;&lt;&ensp;`alpha.1a0`&ensp;&lt;&ensp;`alpha.a`&ensp;&lt;&ensp;`beta`","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:270","a:2:41605:3123-0:381:1903","a:2:3058:246-0:381:1903","a:2:31969:237-0:381:1903","a:2:41604:3124-0:381:1903","a:2:32026:3008-0:381:1903","b:2:2563-0:381:1903","b:2:3671-0:381:1903","b:2:2835-0:381:1903","b:2:2839-0:381:1903","b:2:2850-0:381:1903","b:2:2560-0:381:1903","b:2:2845-0:381:1903","b:5:725-0:381:1903","b:5:5869-0:381:1903","0:190","0:194","0:28","0:390","0:34","0:383","0:184","0:392","0:389","0:387","0:231","0:385"]}}},"0:383":{"id":"0:383","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[317,9],"end":[317,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2887:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:384:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:336:1900":{"id":"0:336:1900","crate_id":0,"name":"minor","span":{"filename":"src/lib.rs","begin":[199,4],"end":[199,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41480:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u64"}}],"bindings":[]}}}}}},"0:343":{"id":"0:343","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[195,20],"end":[195,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:31971:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:333:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3058:246-0:299:1898":{"id":"a:2:3058:246-0:299:1898","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3058:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:340:458":{"id":"0:340:458","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[195,9],"end":[195,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Comparator","id":"0:333:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13085:9009":{"id":"2:13085:9009","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10849:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10849:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2839-0:319:1918":{"id":"b:2:2839-0:319:1918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2812:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2841:755"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:185:248":{"id":"0:185:248","crate_id":0,"name":"Target","span":{"filename":"src/impls.rs","begin":[24,4],"end":[24,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"str"}}}},"b:2:2850-0:351:1924":{"id":"b:2:2850-0:351:1924","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2809:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2819:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:1924","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2853:138","2:2854:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2845-0:395:1905":{"id":"b:2:2845-0:395:1905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2819:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2815:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2848:138","2:2849:1634"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2845-0:351:1924":{"id":"b:2:2845-0:351:1924","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2819:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2815:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:1924","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2848:138","2:2849:1634"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:279:2122":{"id":"0:279:2122","crate_id":0,"name":"is_empty","span":{"filename":"src/lib.rs","begin":[577,4],"end":[579,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:233:2074":{"id":"0:233:2074","crate_id":0,"name":"from_str","span":{"filename":"src/parse.rs","begin":[130,4],"end":[136,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41623:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:12717:1863","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:300:1899":{"id":"0:300:1899","crate_id":0,"name":"major","span":{"filename":"src/lib.rs","begin":[163,4],"end":[163,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u64"}}},"2:2565:26328":{"id":"2:2565:26328","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:261":{"id":"0:261","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[483,0],"end":[526,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"VersionReq","id":"0:319:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:262:2108","0:263:1860","0:264:2117"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13115:3167":{"id":"2:13115:3167","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41482:191","prim@char":"1:12067:454","self::pattern":"2:12757:2857"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41480:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12763:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12763:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12778:2873","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:311:667":{"id":"0:311:667","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[161,20],"end":[161,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Version","id":"0:299:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:360:1969":{"id":"0:360:1969","crate_id":0,"name":"LessEq","span":{"filename":"src/lib.rs","begin":[258,4],"end":[258,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:13096:2338":{"id":"2:13096:2338","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43349:2882","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:223:137":{"id":"0:223:137","crate_id":0,"name":"Err","span":{"filename":"src/parse.rs","begin":[26,4],"end":[26,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:220:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:2835-0:220:138":{"id":"b:2:2835-0:220:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2812:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2809:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2838:3161"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:371":{"id":"0:371","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,22],"end":[251,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2615:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:1924","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:187":{"id":"0:187","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[31,0],"end":[37,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:3270:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::BuildMetadata","id":"0:395:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:188:248","0:189:602"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:399":{"id":"0:399","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[375,18],"end":[375,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2576:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:400:458"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:30":{"id":"0:30","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[87,0],"end":[91,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10198:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::BuildMetadata","id":"0:395:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:31:726"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13092:28361":{"id":"2:13092:28361","crate_id":2,"name":"split_at_mut_checked","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at_checked`] method.\n\n[`split_at_checked`]: str::split_at_checked\n\n# Examples\n\n```\n#![feature(split_at_checked)]\n\nlet mut s = \"Per Martin-Löf\".to_string();\nif let Some((first, last)) = s.split_at_mut_checked(3) {\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n\nassert_eq!(None, s.split_at_mut_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_mut_checked(16));  // Beyond the string length\n```","links":{"str::split_at_checked":"2:13091:28360"},"attrs":["#[must_use]","#[unstable(feature = \"split_at_checked\", reason = \"new API\", issue =\n\"119128\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:41480:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13100:34280":{"id":"2:13100:34280","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:43627:2887","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13101:32373":{"id":"2:13101:32373","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:43655:2898","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:725-0:381:1903":{"id":"b:5:725-0:381:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2576:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:721:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:727:3224","5:728:3225","5:729:3226"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13192:27614":{"id":"2:13192:27614","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:405:667":{"id":"0:405:667","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[375,29],"end":[375,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BuildMetadata","id":"0:395:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:376":{"id":"0:376","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,37],"end":[251,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10409:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:1924","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:377:793"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13172:2232":{"id":"2:13172:2232","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns the substring after the prefix,\nwrapped in `Some`. Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12067:454","self::pattern":"2:12757:2857"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41480:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12763:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5869-0:220:138":{"id":"b:5:5869-0:220:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10198:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:31970:3007","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5867:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5871:1609"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:0:2123":{"id":"0:0:2123","crate_id":0,"name":"semver","span":{"filename":"src/lib.rs","begin":[1,0],"end":[580,1]},"visibility":"public","docs":"[![github]](https://github.com/dtolnay/semver)&ensp;[![crates-io]](https://crates.io/crates/semver)&ensp;[![docs-rs]](https://docs.rs/semver)\n\n[github]: https://img.shields.io/badge/github-8da0cb?style=for-the-badge&labelColor=555555&logo=github\n[crates-io]: https://img.shields.io/badge/crates.io-fc8d62?style=for-the-badge&labelColor=555555&logo=rust\n[docs-rs]: https://img.shields.io/badge/docs.rs-66c2a5?style=for-the-badge&labelColor=555555&logo=docs.rs\n\n<br>\n\nA parser and evaluator for Cargo's flavor of Semantic Versioning.\n\nSemantic Versioning (see <https://semver.org>) is a guideline for how\nversion numbers are assigned and incremented. It is widely followed within\nthe Cargo/crates.io ecosystem for Rust.\n\n<br>\n\n# Example\n\n```\nuse semver::{BuildMetadata, Prerelease, Version, VersionReq};\n\nfn main() {\n    let req = VersionReq::parse(\">=1.2.3, <1.8.0\").unwrap();\n\n    // Check whether this requirement matches version 1.2.3-alpha.1 (no)\n    let version = Version {\n        major: 1,\n        minor: 2,\n        patch: 3,\n        pre: Prerelease::new(\"alpha.1\").unwrap(),\n        build: BuildMetadata::EMPTY,\n    };\n    assert!(!req.matches(&version));\n\n    // Check whether it matches 1.3.0 (yes it does)\n    let version = Version::parse(\"1.3.0\").unwrap();\n    assert!(req.matches(&version));\n}\n```\n\n<br><br>\n\n# Scope of this crate\n\nBesides Cargo, several other package ecosystems and package managers for\nother languages also use SemVer:&ensp;RubyGems/Bundler for Ruby, npm for\nJavaScript, Composer for PHP, CocoaPods for Objective-C...\n\nThe `semver` crate is specifically intended to implement Cargo's\ninterpretation of Semantic Versioning.\n\nWhere the various tools differ in their interpretation or implementation of\nthe spec, this crate follows the implementation choices made by Cargo. If\nyou are operating on version numbers from some other package ecosystem, you\nwill want to use a different semver library which is appropriate to that\necosystem.\n\nThe extent of Cargo's SemVer support is documented in the *[Specifying\nDependencies]* chapter of the Cargo reference.\n\n[Specifying Dependencies]: https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html","links":{},"attrs":["#![doc(html_root_url = \"https://docs.rs/semver/1.0.22\")]","#![deny(unsafe_op_in_unsafe_fn)]","#![allow(clippy::cast_lossless, clippy::cast_possible_truncation,\nclippy::doc_markdown, clippy::incompatible_msrv,\nclippy::items_after_statements, clippy::manual_map, clippy::match_bool,\nclippy::missing_errors_doc, clippy::must_use_candidate,\nclippy::needless_doctest_main, clippy::ptr_as_ptr, clippy::redundant_else,\nclippy::semicolon_if_nothing_returned, clippy::similar_names,\nclippy::unnested_or_patterns, clippy::unseparated_literal_suffix,\nclippy::wildcard_imports)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:256-0:220:138","0:299:1898","0:319:1918","0:333:1920","0:351:1924","0:381:1903","0:395:1905"],"is_stripped":false}}},"a:2:3058:246-0:395:1905":{"id":"a:2:3058:246-0:395:1905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3058:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2850-0:220:138":{"id":"b:2:2850-0:220:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2809:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2819:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2853:138","2:2854:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2854:1632":{"id":"2:2854:1632","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:41623:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2819:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5615:27612":{"id":"5:5615:27612","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:13193:27615"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7633:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2560-0:351:1924":{"id":"b:2:2560-0:351:1924","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31970:3007","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2554:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:1924","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2562:2542"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:277:1053":{"id":"0:277:1053","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[569,4],"end":[571,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41623:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:220:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13098:32017":{"id":"2:13098:32017","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:13097:32014"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:43646:2902","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:404":{"id":"0:404","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[375,29],"end":[375,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2610:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:405:667"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:226:137":{"id":"0:226:137","crate_id":0,"name":"Err","span":{"filename":"src/parse.rs","begin":[85,4],"end":[85,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:220:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:227:2074":{"id":"0:227:2074","crate_id":0,"name":"from_str","span":{"filename":"src/parse.rs","begin":[87,4],"end":[110,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41623:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:12717:1863","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13078:2339":{"id":"2:13078:2339","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12084:1656"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:384:60":{"id":"0:384:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[317,9],"end":[317,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Prerelease","id":"0:381:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13067:887":{"id":"2:13067:887","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12067:454"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2850-0:319:1918":{"id":"b:2:2850-0:319:1918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2809:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2819:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2853:138","2:2854:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:204:758":{"id":"0:204:758","crate_id":0,"name":"from_iter","span":{"filename":"src/impls.rs","begin":[149,4],"end":[155,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["iter",{"generic":"I"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8101:166","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"Comparator","id":"0:333:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:271:2057":{"id":"0:271:2057","crate_id":0,"name":"EMPTY","span":{"filename":"src/lib.rs","begin":[547,4],"end":[549,6]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:190":{"id":"0:190","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[39,0],"end":[43,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","ge","gt","le"],"trait":{"name":"PartialOrd","id":"2:2652:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Prerelease","id":"0:381:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:191:1151"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3671-0:299:1898":{"id":"b:2:3671-0:299:1898","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31970:3007","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3669:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3673:1647"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:31969:237-0:395:1905":{"id":"a:2:31969:237-0:395:1905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31969:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:395:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:728:3225":{"id":"5:728:3225","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5871:1609":{"id":"5:5871:1609","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7633:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13128:34281":{"id":"2:13128:34281","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12757:2857","str::split":"2:13119:2386","prim@char":"1:12067:454","`DoubleEndedIterator`":"2:8139:131","str::rsplit_terminator":"2:13131:34282"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43413:2891","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12763:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13193:27615":{"id":"2:13193:27615","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:260:2096":{"id":"0:260:2096","crate_id":0,"name":"cmp_precedence","span":{"filename":"src/lib.rs","begin":[475,4],"end":[480,5]},"visibility":"public","docs":"Compare the major, minor, patch, and pre-release value of two versions,\ndisregarding build metadata. Versions that differ only in build metadata\nare considered equal. This comparison is what the SemVer spec refers to\nas \"precedence\".\n\n# Example\n\n```\nuse semver::Version;\n\nlet mut versions = [\n    \"1.20.0+c144a98\".parse::<Version>().unwrap(),\n    \"1.20.0\".parse().unwrap(),\n    \"1.0.0\".parse().unwrap(),\n    \"1.0.0-alpha\".parse().unwrap(),\n    \"1.20.0+bc17664\".parse().unwrap(),\n];\n\n// This is a stable sort, so it preserves the relative order of equal\n// elements. The three 1.20.0 versions differ only in build metadata so\n// they are not reordered relative to one another.\nversions.sort_by(Version::cmp_precedence);\nassert_eq!(versions, [\n    \"1.0.0-alpha\".parse().unwrap(),\n    \"1.0.0\".parse().unwrap(),\n    \"1.20.0+c144a98\".parse().unwrap(),\n    \"1.20.0\".parse().unwrap(),\n    \"1.20.0+bc17664\".parse().unwrap(),\n]);\n\n// Totally order the versions, including comparing the build metadata.\nversions.sort();\nassert_eq!(versions, [\n    \"1.0.0-alpha\".parse().unwrap(),\n    \"1.0.0\".parse().unwrap(),\n    \"1.20.0\".parse().unwrap(),\n    \"1.20.0+bc17664\".parse().unwrap(),\n    \"1.20.0+c144a98\".parse().unwrap(),\n]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Ordering","id":"2:30809:196","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:390":{"id":"0:390","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[317,29],"end":[317,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2610:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:381:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:391:667"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:326":{"id":"0:326","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[187,20],"end":[187,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2610:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:327:667"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:374":{"id":"0:374","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,26],"end":[251,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2610:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:1924","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:375:667"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13077:334":{"id":"2:13077:334","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:13078:2339","`u8`":"1:12084:1656"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:265":{"id":"0:265","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[530,0],"end":[534,1]},"visibility":"default","docs":"The default VersionReq is the same as [`VersionReq::STAR`].","links":{"`VersionReq::STAR`":"0:262:2108"},"attrs":["#[cfg(not(no_const_vec_new))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2887:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:266:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13196:29527":{"id":"2:13196:29527","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:970:36068"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:222":{"id":"0:222","crate_id":0,"name":null,"span":{"filename":"src/parse.rs","begin":[25,0],"end":[82,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12717:1863","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Version","id":"0:299:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:223:137","0:224:2074"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:41604:3124-0:351:1924":{"id":"a:2:41604:3124-0:351:1924","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41604:3124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:1924","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:725-0:351:1924":{"id":"b:5:725-0:351:1924","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2576:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:721:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:1924","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:727:3224","5:728:3225","5:729:3226"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13108:27966":{"id":"2:13108:27966","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12067:454","self::pattern":"2:12757:2857"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12763:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12763:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12778:2873","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:24":{"id":"0:24","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[33,0],"end":[46,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10198:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::VersionReq","id":"0:319:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:25:726"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3058:246-0:351:1924":{"id":"a:2:3058:246-0:351:1924","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3058:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:1924","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:379":{"id":"0:379","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,43],"end":[251,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10193:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:351:1924","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:380:726"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2850-0:299:1898":{"id":"b:2:2850-0:299:1898","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2809:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2819:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:299:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2853:138","2:2854:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:335:1899":{"id":"0:335:1899","crate_id":0,"name":"major","span":{"filename":"src/lib.rs","begin":[198,4],"end":[198,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u64"}}},"b:2:2560-0:319:1918":{"id":"b:2:2560-0:319:1918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31970:3007","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2554:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2562:2542"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:354:1966":{"id":"0:354:1966","crate_id":0,"name":"Greater","span":{"filename":"src/lib.rs","begin":[255,4],"end":[255,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:235:137":{"id":"0:235:137","crate_id":0,"name":"Err","span":{"filename":"src/parse.rs","begin":[140,4],"end":[140,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:220:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:13166:34291":{"id":"2:13166:34291","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12067:454","self::pattern":"2:12757:2857"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12763:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12763:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12783:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3671-0:319:1918":{"id":"b:2:3671-0:319:1918","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31970:3007","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3669:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:319:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3673:1647"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:225":{"id":"0:225","crate_id":0,"name":null,"span":{"filename":"src/parse.rs","begin":[84,0],"end":[111,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12717:1863","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::VersionReq","id":"0:319:1918","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:226:137","0:227:2074"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:220:138":{"id":"0:220:138","crate_id":0,"name":"Error","span":{"filename":"src/parse.rs","begin":[21,0],"end":[23,1]},"visibility":"public","docs":"Error parsing a SemVer version or version requirement.\n\n# Example\n\n```\nuse semver::Version;\n\nfn main() {\n    let err = Version::parse(\"1.q.r\").unwrap_err();\n\n    // \"unexpected character 'q' while parsing minor version number\"\n    eprintln!(\"{}\", err);\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:41605:3123-0:220:138","a:2:3058:246-0:220:138","a:2:31969:237-0:220:138","a:2:41604:3124-0:220:138","a:2:32026:3008-0:220:138","b:2:2563-0:220:138","b:2:3671-0:220:138","b:2:2835-0:220:138","b:2:2839-0:220:138","b:2:2850-0:220:138","b:2:2560-0:220:138","b:2:2845-0:220:138","b:5:5869-0:220:138","0:83","0:88","0:84"]}}},"0:276:2057":{"id":"0:276:2057","crate_id":0,"name":"EMPTY","span":{"filename":"src/lib.rs","begin":[565,4],"end":[567,6]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"5:5612:34995":{"id":"5:5612:34995","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:294:2602","`String`":"5:7633:243"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:294:2602","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7633:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"6:4885:6153":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:12459:2907":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"2:2554:103":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:21573:6975":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"16:2592:5232":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"16:7813:5569":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"1:3586:9473":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"1:3314:8494":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"17:13581:4513":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"1:4120:9502":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:43922:7307":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"17:13437:4472":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"17:13387:4465":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"17:12768:22115":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"17:1098:8248":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"2:12305:2877":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"17:16121:5170":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"1:867:5771":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"2:43212:3644":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:11419:7603":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"6:8282:6906":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"6:7306:6736":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"16:6026:5343":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"11:673:3631":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"1:8031:6925":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"17:12189:8321":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"1:1885:3757":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:44153:7321":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"16:7648:8401":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"1:7841:9412":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"2:44129:132":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"1:6881:9623":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"11:2443:2607":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"2:3131:2840":{"crate_id":2,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"2:12831:14776":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:362:8472":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"2:5081:422":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"1:8317:2885":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"17:3597:8257":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"6:1639:6039":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"5:1354:8423":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"17:13485:4484":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"1:10758:30473":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"2:8604:32777":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"5:6565:2607":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"16:860:8342":{"crate_id":16,"path":["gimli","read","endian_slice","DebugBytes"],"kind":"struct"},"2:10415:153":{"crate_id":2,"path":["core","hash","macros","Hash"],"kind":"proc_derive"},"1:9049:8540":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"2:46255:7435":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"17:11743:4284":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"16:6504:5402":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"17:13814:4566":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"17:12251:8326":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"5:1828:2605":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"2:3193:2831":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"16:7379:35260":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"6:5515:6409":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"6:5174:6250":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"16:5742:5307":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"1:4651:9543":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"1:11642:26772":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"11:299:5765":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"11:2569:2603":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"6:1517:5953":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"18:515:4083":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"16:6948:5256":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"17:15333:4947":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"2:43172:3628":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"5:721:249":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"17:12494:4360":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"17:16093:5163":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"2:22:741":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"2:72:861":{"crate_id":2,"path":["core","isize"],"kind":"module"},"17:12422:4352":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"16:2478:5227":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"1:8650:7559":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"1:1596:5774":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"11:1676:3892":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"1:4124:9503":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"17:13211:4435":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"5:2307:6935":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"5:3396:2605":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"2:42026:91":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"16:6927:5476":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"17:11256:4254":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"2:728:190":{"crate_id":2,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"1:10357:8538":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"2:40163:2779":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"17:2037:8250":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"17:597:4224":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"5:3283:33929":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"1:11353:8566":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"16:6494:5401":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"16:6782:22068":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"1:2419:2697":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"5:7731:2606":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"6:5344:6326":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"2:40344:2785":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"17:12485:22260":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"6:1559:5981":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"11:1883:3631":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"17:11773:4370":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"9:238:7276":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"16:7509:8393":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"1:11630:7606":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"2:9831:726":{"crate_id":2,"path":["core","fmt"],"kind":"module"},"16:2748:5239":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"11:434:35234":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"16:4062:5279":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"11:2548:5780":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"2:3301:142":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"6:8253:6899":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"17:12597:4365":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"5:7715:2605":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"6:1653:6050":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"16:2394:5223":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"1:3812:8498":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"16:5914:5327":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"1:4233:9520":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"16:7497:5554":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"15:0:2450":{"crate_id":15,"path":["addr2line"],"kind":"module"},"2:46446:7442":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"6:465:5866":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"17:14475:4686":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"1:10709:7587":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"17:12300:22258":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"17:15445:4977":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"16:3029:4122":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"5:6413:9717":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"17:12659:8335":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"17:15324:4944":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"6:5290:6309":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"17:14356:4663":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"1:8900:7562":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"2:10646:3966":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"17:15410:4969":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"16:6606:5415":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"5:3026:33939":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"9:447:21050":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"8:0:2444":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"17:16187:5187":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"0:366:1972":{"crate_id":0,"path":["semver","Op","Wildcard"],"kind":"variant"},"2:12289:3625":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"6:5407:1117":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"16:3329:5271":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"17:11493:8286":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"6:4932:6175":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"2:39099:2598":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:1908:640":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"17:9886:22130":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"1:5653:9579":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"6:5112:6245":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"6:6435:6524":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"17:13497:4485":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"17:14968:4860":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:39893:31840":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"2:40172:2780":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2:21561:9628":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"0:364:1971":{"crate_id":0,"path":["semver","Op","Caret"],"kind":"variant"},"16:4352:5280":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"2:43163:3630":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"11:800:2607":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"6:578:5932":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"0:333:1920":{"crate_id":0,"path":["semver","Comparator"],"kind":"struct"},"6:8259:6900":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"2:43947:7308":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"18:659:8239":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"16:6317:8370":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"17:13738:4550":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"6:8341:6919":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"11:2231:5777":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"5:5710:2612":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"16:2338:5214":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"11:2469:2605":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"11:1066:21129":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"17:12478:4359":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"2:41604:3124":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2:11835:3646":{"crate_id":2,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"16:2708:5237":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"6:553:5919":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"6:6900:6718":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"17:15023:4872":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"17:16069:5158":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"5:7528:2603":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"17:11877:4289":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"1:2435:9443":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"6:5283:6307":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"6:7467:6801":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"2:40094:8464":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"5:3032:9033":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:43238:2777":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"2:8560:2770":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"2:46018:7398":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"2:46300:7436":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"6:5046:6231":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"6:7429:6789":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"16:5347:5304":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"6:5014:6216":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:6792:3960":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"17:13399:4468":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"2:21680:6975":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"17:14529:4692":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"16:5960:5335":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"17:13959:4587":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"17:10887:35262":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"6:5200:6264":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"5:128:2325":{"crate_id":5,"path":["alloc","alloc","handle_alloc_error"],"kind":"function"},"18:651:4080":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"1:8889:199":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"17:15701:5064":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"1:945:8417":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"5:1426:100":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"6:6721:6661":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"2:3529:33546":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"16:3925:5278":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"1:909:8424":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:43662:2899":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:45545:7361":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"2:13449:8459":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"6:5083:6243":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"1:6053:3994":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"5:4922:217":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:43743:14782":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"17:403:8246":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"15:394:21165":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"2:13573:117":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"2:11289:2892":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:41751:97":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"18:635:4101":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"6:4824:6112":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"1:10667:8560":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"11:396:3890":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"16:6466:5398":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"6:1680:6063":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"1:12086:1654":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"1:12070:1167":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"17:15596:5035":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"17:15151:4900":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"1:8287:2788":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"16:2808:5242":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"6:5260:6293":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:9852:32778":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"6:7330:6753":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"1:951:8418":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"16:7910:22074":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"2:43646:2902":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"2:45487:7350":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:40304:2799":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"2:39115:213":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"17:14246:4647":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"1:7646:8569":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"17:14091:4605":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2:45406:7345":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:8139:131":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"17:14933:4859":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"1:6331:3994":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"1:7945:8524":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"2:45697:7369":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:3750:9494":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"17:13723:4546":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"1:7686:4004":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"2:43431:2889":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"5:7554:3925":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:46358:7438":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"16:6560:5249":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"2:4644:2639":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"2:10849:239":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"5:5867:250":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"17:14723:4710":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"2:45338:7337":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:11574:8500":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"5:6178:3921":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"17:14449:4684":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"0:299:1898":{"crate_id":0,"path":["semver","Version"],"kind":"struct"},"2:30460:31826":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"16:4718:5289":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"6:5643:6467":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"1:1040:5505":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"2:10212:2632":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"16:2636:5234":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"6:6915:6729":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"17:15569:5023":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"5:294:2602":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"1:3312:8493":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"2:7816:2274":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"16:4802:5292":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"17:15521:5022":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"17:13046:4398":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"1:7749:9454":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:9665:85":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:3093:3143":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"6:7366:6769":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"1:1602:5775":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"1:7486:30280":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"17:12557:4248":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"1:10749:7529":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"2:21956:9631":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"17:12150:4329":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"17:15720:5069":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"2:3544:2852":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:11853:4020":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"2:41386:31852":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"18:573:4080":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"17:11089:8272":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"16:7633:35252":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"17:14147:4614":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"16:6300:8367":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"16:5863:22062":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"2:39965:14817":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"5:7610:6952":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:9857:8706":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"5:3208:101":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"6:5002:6210":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"1:356:8471":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"6:6756:6673":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"2:40693:2756":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"16:7559:5559":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"1:7768:8521":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"6:6788:6683":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"16:7085:5496":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"6:5376:6338":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"6:6811:6689":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"17:14131:4609":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:41671:3632":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"5:7403:3908":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"1:11394:7601":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"2:45420:7346":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:45289:7332":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"6:1496:5945":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"17:14847:4813":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"2:39865:2900":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"11:1087:35238":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"16:3899:5277":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"1:9254:27714":{"crate_id":1,"path":["std","sys","pal","common","thread_local","fast_local","DtorState"],"kind":"enum"},"17:14025:4596":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"11:2562:5783":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"6:4800:6094":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"16:7052:8383":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"11:1025:8419":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"5:7393:2607":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"2:43273:3642":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"6:6505:6561":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:1578:2609":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"11:0:2447":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"17:10457:139":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"1:12066:1049":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:4570:8450":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:2730:8490":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"2:45502:7351":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"6:4909:6167":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"16:5897:5322":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"5:1525:5772":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"1:9164:187":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"18:531:4085":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"6:1526:5958":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"17:11702:4280":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"1:2979:3985":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"2:39942:2901":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"18:670:8243":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"11:2124:5505":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"17:11524:8289":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"0:362:1970":{"crate_id":0,"path":["semver","Op","Tilde"],"kind":"variant"},"5:3249:33931":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"1:11006:7318":{"crate_id":1,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"1:3234:30137":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"6:6636:6626":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"16:3014:21203":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"17:11730:4283":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"17:16050:4448":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"1:621:3340":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"1:11408:7649":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"2:30809:196":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"16:7755:5255":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"2:45906:7394":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2:37861:2837":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:35820:2833":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"0:356:1967":{"crate_id":0,"path":["semver","Op","GreaterEq"],"kind":"variant"},"17:14177:4633":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"16:2418:5224":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"6:7452:6796":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"1:8310:2890":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"5:3028:6932":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"2:46329:7437":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"6:1692:6067":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"5:7125:3948":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"6:5336:6325":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"11:1903:5773":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"6:4985:6200":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"2:21678:9626":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:10801:26741":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"9:424:21052":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"17:15168:4905":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"14:40:4436":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"6:5653:6468":{"crate_id":6,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"5:7413:6945":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"2:3912:2609":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:10108:8551":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"11:2423:2609":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"17:10759:4263":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"12:0:2448":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"1:3272:8492":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"1:3576:9452":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"1:11330:4015":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"16:3196:5213":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"17:12030:8313":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"2:3283:2839":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:10465:8495":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"7:31:21036":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"11:875:8417":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"18:706:2874":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"17:9916:22131":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"1:2654:3982":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"2:43793:7302":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"17:10018:22114":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"17:10720:35263":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"2:39921:7214":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:43322:2880":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:4573:9526":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"17:11467:4270":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"11:1887:2609":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"6:5352:6327":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"1:8583:9574":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"1:10400:4009":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"1:6726:233":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"1:2268:2365":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"2:3100:2726":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"16:6098:22063":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"17:13766:4556":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"2:40028:7223":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"5:5449:14769":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"5:2195:3915":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"2:44075:2862":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"17:11016:8267":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"1:8480:9561":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"6:6417:6511":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"1:4211:31778":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"16:872:8245":{"crate_id":16,"path":["gimli","read","endian_slice","DebugLen"],"kind":"struct"},"17:0:2452":{"crate_id":17,"path":["object"],"kind":"module"},"17:11026:22147":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"2:10196:121":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"2:2652:202":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"2:45566:7362":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"5:4148:3632":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"11:856:8415":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"6:6519:6562":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"2:9670:92":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"5:4422:264":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"15:327:8684":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"2:45306:7335":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"17:11621:4273":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"2:45274:7331":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"11:1007:5505":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"2:10417:157":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"17:15582:5029":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"16:2303:21174":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"1:1581:2607":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"2:32026:3008":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"1:8973:7566":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"17:13568:4509":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"2:40479:2803":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:12067:454":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"17:12929:4391":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"2:10200:2627":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"6:6678:6644":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:41460:7260":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"1:5133:8504":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"6:4876:6148":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"16:6802:5456":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"16:6480:5248":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"16:7590:5262":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"2:41258:7244":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"2:43251:3643":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"17:12454:4357":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"16:3810:5275":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"2:22726:6988":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"16:7473:5351":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"16:5700:5250":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:2819:256":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"1:7856:8523":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"17:13526:4494":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"2:42065:98":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:3051:3141":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"17:12863:4387":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"6:6706:6656":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"17:11898:4291":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"2:10563:3963":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"1:8568:7550":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"17:10954:22145":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"2:4206:3921":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"2:37806:2836":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"17:11115:8274":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"2:5182:867":{"crate_id":2,"path":["core","iter"],"kind":"module"},"1:12080:807":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"16:4502:5283":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"6:7546:6855":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:41420:7534":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"16:867:8244":{"crate_id":16,"path":["gimli","read","endian_slice","DebugByte"],"kind":"struct"},"5:7598:6950":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"5:6074:9035":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"6:1707:6074":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:46486:7446":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:5797:3921":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"1:8942:8539":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"2:3499:253":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"17:10622:35270":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"2:2887:126":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"2:13424:205":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"16:5927:5328":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"1:7131:4002":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"1:3351:8495":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"1:7957:7485":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"17:12089:4326":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"1:3353:8496":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"17:14788:4761":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"2:13397:33275":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"2:41546:3632":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"1:7088:8752":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"6:6409:6509":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"17:13292:4449":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"16:7769:5567":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"5:3304:5776":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:45729:7371":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"17:14599:4708":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"2:39977:7217":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"1:3501:7532":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"2:39958:2899":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:533:3979":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"1:7979:140":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"2:40295:2798":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"16:7098:5499":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:40320:2800":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"2:40219:7229":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"5:4268:3921":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"17:13187:4421":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"17:11142:4263":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"2:40263:2796":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"11:2352:8420":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"17:12711:138":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:2898:138":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"17:13877:4577":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"17:12949:4336":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"5:1478:3632":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"1:4824:9513":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"2:5892:3921":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"17:12201:8322":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"17:13412:4470":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"5:1724:3898":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"5:1534:8424":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"17:11405:8285":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"6:6657:6638":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"16:7428:22071":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"5:669:8430":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"2:22654:6979":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"17:12318:4336":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"2:40334:2801":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:4721:6784":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"function"},"2:10202:2628":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"6:5160:6249":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"6:5436:6373":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"1:10881:4014":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"16:7741:5265":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"2:7594:32087":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"2:2576:114":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"5:730:120":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"5:112:577":{"crate_id":5,"path":["alloc","alloc","dealloc"],"kind":"function"},"17:13774:4558":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"1:4822:9511":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"17:12238:8325":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"2:45391:7344":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"17:15092:4888":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"2:8060:2775":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:2456:641":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:8255:7529":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"6:1663:6056":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"17:15646:5048":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"11:2369:8429":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"6:5445:6379":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"1:2033:197":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:2029:6956":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"17:15655:5050":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"1:3815:8499":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"1:5714:3994":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"2:40251:2805":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"6:586:5936":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"11:2498:21125":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"1:12090:1711":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"2:31935:8462":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"6:1580:5995":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"11:844:9393":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"5:7656:8445":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"2:2104:189":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"17:13375:4464":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"6:5277:6304":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"17:14516:4691":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"16:5367:22060":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:23052:2329":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"type_alias"},"2:4698:2640":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"1:5046:9557":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"2:39453:3148":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"1:10786:8510":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"16:6872:5471":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"2:40201:2791":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:6152:3989":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"16:6433:5392":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"17:14284:4652":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"2:2815:257":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"1:2585:8488":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"11:811:2605":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"11:774:5771":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"2:11041:2890":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:39931:7215":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:45665:7367":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:8334:9492":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"1:3558:2237":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"2:38440:2838":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"17:14402:4670":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"6:5415:6358":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"17:12289:4331":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"2:9348:2871":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"16:7355:5536":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"2:4417:8448":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"2:21424:32796":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"2:43617:2885":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"17:12572:4263":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"6:6821:6692":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"17:10612:8261":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"17:11510:8288":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"16:7656:22072":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"17:11799:8303":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"16:7549:5558":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"16:6962:5257":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"17:10818:8264":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"17:14912:4854":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"17:13325:4455":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"6:6542:6575":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:41605:3123":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"2:21669:9454":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"17:11825:8308":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"6:5102:6244":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"2:3109:2679":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:11059:162":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"18:589:4091":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"1:903:2605":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"17:14855:4816":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:46035:7399":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"2:43637:2886":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"17:11853:8311":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"6:6874:6703":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"1:1968:3339":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"6:6689:6646":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"6:7602:6877":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"1:10974:7562":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"16:0:2451":{"crate_id":16,"path":["gimli"],"kind":"module"},"14:7:8407":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"0:319:1918":{"crate_id":0,"path":["semver","VersionReq"],"kind":"struct"},"6:7485:6812":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"5:4238:3921":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"2:31946:8463":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"1:9179:162":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"6:5031:6224":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"17:10439:4237":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"6:8328:6915":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"17:14298:4653":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"1:12081:808":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"16:3614:5273":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"17:11688:4279":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"2:43349:2882":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"17:15400:4966":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"2:4330:14754":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"17:15376:4961":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"16:7539:5260":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"11:2140:8419":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"1:6512:8517":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"6:5361:6331":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"2:39170:215":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"16:6588:5407":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"1:9174:235":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"2:22407:9454":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"2:31960:7071":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"6:7339:6759":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"17:13855:4570":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"17:15814:5090":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"17:15463:4980":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"16:6648:5419":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:32027:3146":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"6:5236:6281":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:22376:2708":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"function"},"2:10150:2237":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"1:10818:7564":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"2:44356:181":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"17:12278:8328":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"1:645:9377":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"6:1699:6070":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"6:5466:6394":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"18:491:4079":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"17:13015:4354":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"6:7359:6765":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"16:6758:5444":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:5102:32202":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"16:7727:5264":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"16:5037:5300":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"11:2536:5778":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"1:4903:9510":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"18:735:26320":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:4349:14794":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"17:15931:4421":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"17:16249:5198":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"1:836:3631":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"2:46550:7455":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"5:1062:3898":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"2:22742:31848":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"2:44103:2863":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:2447:9449":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:22362:9715":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"16:2854:5244":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"2:1915:3353":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"2:43485:2892":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"2:43671:2900":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"2:40023:107":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"5:7633:243":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"6:479:5874":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:39260:2846":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"17:16269:4470":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"1:8623:7555":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"1:7750:7480":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"16:8118:5622":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"16:6246:206":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"2:13611:6974":{"crate_id":2,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"5:1153:35218":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"17:11764:4288":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"5:7364:2601":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"2:2015:2730":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"2:40039:31835":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:15418:4970":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"16:4560:5285":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"2:44347:8470":{"crate_id":2,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"16:7144:22070":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"6:1490:5942":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"16:2788:5241":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"5:6692:2609":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"2:46387:7439":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"6:4971:6192":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:11016:3632":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"14:160:8407":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"10:36:5786":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"2:39055:2851":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"1:723:154":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:45923:7395":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"16:8301:5636":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"5:5937:2607":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"16:6066:5347":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"5:7423:33932":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"2:10452:2746":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:44091:2870":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"6:6441:6527":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:11605:1898":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"17:14986:4865":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"1:503:3915":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"17:15822:5093":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:11051:8269":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"1:10720:7485":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"17:15266:4930":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"16:6456:22066":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"16:542:5203":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"17:10185:4229":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"6:1723:6079":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"1:10174:9581":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"1:10265:9042":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"2:45796:7374":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"17:16138:5172":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"2:40150:2788":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"2:22102:9454":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"2:33425:2828":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"2:33944:2832":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:12079:810":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:44079:2865":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"2:45374:7343":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"17:12371:4391":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"16:6940:5478":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"17:16212:5192":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"2:10210:2631":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:3917:8500":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"1:9067:26563":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"17:13455:4480":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"0:395:1905":{"crate_id":0,"path":["semver","BuildMetadata"],"kind":"struct"},"5:6021:72":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"17:11313:4260":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"1:4880:3986":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"2:40708:2760":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:4717:6780":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"function"},"5:1555:8411":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"6:4959:6187":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:22704:31870":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"2:39210:216":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"2:3104:2677":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"6:8006:6884":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"1:12065:404":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"17:12464:22259":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"16:7132:5504":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"1:12050:27708":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"17:13785:4561":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"5:941:3631":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"6:7446:6794":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"16:7823:22073":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"17:2203:8251":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"11:742:8411":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"2:8557:2767":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"5:7453:6946":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"17:11674:4278":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"1:5322:203":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"1:7995:129":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"16:4614:5287":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"1:6967:4001":{"crate_id":1,"path":["std","sys","pal","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"6:1585:5997":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:44334:7324":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"18:765:26321":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"5:6053:3929":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"16:4940:5297":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"1:859:2609":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:41868:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:45441:7347":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"1:8633:3631":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"6:7389:6787":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"17:15799:5089":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"1:10987:7563":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2:46501:7447":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:9060:8542":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"17:15313:4940":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"2:39152:212":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:6244:3993":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"1:5497:8508":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"17:16105:5165":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"17:13173:4420":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"16:4531:5284":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"11:1917:5775":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"6:564:5924":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"2:31897:5782":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"6:6768:6675":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"16:6665:22067":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"5:924:3905":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"11:430:35230":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"1:10739:129":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"6:5630:6461":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"1:8006:7488":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"2:2557:104":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"2:3426:211":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"18:726:4114":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"2:43779:7299":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"2:45583:7363":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"17:11102:8273":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"5:3791:6925":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"2:10149:226":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"11:364:3888":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"2:40702:2758":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"2:42963:3651":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"2:33598:2829":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2:2939:3343":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"1:3519:8497":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"16:8259:5553":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"2:46603:7458":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"17:12342:4343":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"2:43112:8469":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"2:22670:6982":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"17:15342:4948":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:21502:9629":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"5:824:102":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"2:42452:2236":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"13:226:5763":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:46056:7400":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"17:10092:22135":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"17:12076:8316":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"6:5671:6477":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:42442:7267":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"2:2472:2709":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"2:41242:7242":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"2:10661:3971":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"6:1535:5964":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"16:4976:5298":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"5:1309:5505":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"6:6478:6541":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"2:2038:2729":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"11:2542:5779":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"6:5598:6441":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"1:4076:9500":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"16:6335:8378":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"1:7773:7481":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"2:40242:2795":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"2:39267:7080":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"2:3270:127":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"18:613:35275":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"6:5219:6272":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"16:7014:22069":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:7967:7486":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"2:22693:2680":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:9121:26491":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"2:43585:2895":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:43513:2896":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"2:44087:2866":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:11347:7596":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"17:15214:4916":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"1:4262:9523":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"2:46408:7440":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"17:13116:4408":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"2:21436:32796":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"5:6955:2613":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"6:570:5927":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"9:482:21049":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"18:0:2453":{"crate_id":18,"path":["memchr"],"kind":"module"},"11:787:5772":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"2:46527:7449":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"6:4837:6122":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"16:6849:5470":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"17:15383:4962":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"11:1051:8420":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"1:11425:7604":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"17:12851:4386":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"5:1575:8433":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"16:2660:5235":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"2:2646:195":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"16:5400:4228":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"6:1628:6031":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"6:5624:6458":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"2:25686:266":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"17:10068:22117":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"2:46466:7444":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"16:2684:5236":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"2:42959:7283":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"2:44326:7886":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"16:5846:5317":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"1:1824:8481":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"16:7857:5577":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:12717:1863":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"17:513:8247":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"1:12085:1653":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"17:11497:8287":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"1:7835:9381":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"1:10087:8483":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"16:6976:5480":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"6:5266:6296":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"1:7940:4171":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2:22811:2693":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"2:43567:2894":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"2:13701:2600":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"6:7584:6874":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:46455:7443":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"6:5617:6455":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"17:12671:8336":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"5:7381:6944":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"17:15390:4963":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"6:5390:6346":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"16:2838:5243":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"3:0:481":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"17:13272:4448":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"17:14079:4604":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:40727:2764":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"16:6160:21173":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"2:39991:14818":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"2:45968:7396":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"2:43655:2898":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"2:43309:2881":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"16:5107:5302":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"6:545:5914":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"2:3504:147":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"17:2175:22192":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"2:22454:9706":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"2:8101:166":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"2:3778:2607":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"17:10769:35268":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"6:5181:6252":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"16:2528:5229":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"17:14311:4654":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"1:3014:138":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"17:15273:4931":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"6:4891:6155":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:43957:7312":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"16:6385:5388":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:4307:111":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:46210:7434":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"5:7437:2609":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"16:5817:5313":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"6:6738:6665":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"2:45598:7364":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"2:39871:7209":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"17:3473:8256":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:3294:2359":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:22321:8992":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"16:8313:138":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"17:10573:35269":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"2:8110:2773":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:2493:2459":{"crate_id":1,"path":["std","io"],"kind":"module"},"1:4132:9505":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"17:14212:4644":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"4:0:2443":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"6:8271:6902":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"6:5581:6434":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"16:5686:5247":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"2:2781:9454":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:10248:115":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"1:9491:4008":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"1:1063:8420":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"1:9215:7575":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"2:22104:9627":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"2:45680:7368":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:9997:2649":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"2:40735:2766":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:4048:9497":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"1:8329:8535":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"6:0:892":{"crate_id":6,"path":["libc"],"kind":"module"},"1:3012:226":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"1:11649:7607":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"17:15426:4972":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"16:8093:5619":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"5:4437:3923":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"1:8497:7547":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"6:4965:6189":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:13591:3976":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"16:6047:8345":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"1:3270:8491":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"6:5320:6321":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"16:4882:5295":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"16:8188:8406":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"2:10457:2747":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"2:44107:2864":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"2:44275:219":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"2:40272:2782":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:2421:9439":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"0:352:1965":{"crate_id":0,"path":["semver","Op","Exact"],"kind":"variant"},"17:16259:4465":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"6:5536:6415":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"17:11574:5777":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"1:12073:1552":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"6:6532:6568":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"17:13922:4583":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"1:9015:9598":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"5:868:3903":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"10:44:5787":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"16:8073:5618":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"2:44272:150":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"2:45627:7365":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:4707:9500":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"6:5636:6464":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"2:46133:7433":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"17:15176:4908":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"1:12078:700":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"17:13064:4401":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"1:1072:8423":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"9:0:2445":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"17:11392:8284":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"1:2265:8487":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"1:414:185":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:42751:7280":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"17:14868:4823":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"6:6670:6642":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"17:14545:4694":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"17:11075:4248":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"16:4743:5290":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"17:14111:4608":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"2:7530:2787":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"6:5329:6324":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"1:637:8474":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"1:9095:8545":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"5:2234:6929":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"1:8001:7487":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"14:187:21143":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"17:9858:22129":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"17:16079:5159":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"2:2782:14822":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"9:357:21065":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"1:8099:8528":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"2:46642:7474":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"17:13553:4503":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"17:15944:4435":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"6:4979:6197":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"17:12792:4192":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"6:5457:6388":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"16:7397:35259":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"5:4103:3898":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"2:41554:2609":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"5:4500:3923":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"16:4468:5282":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"17:13024:22139":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"1:922:8412":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"2:31971:244":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"16:2936:21202":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"17:11242:8278":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"2:21980:3626":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:3053:119":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"5:828:3900":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"17:11547:4170":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"2:10206:2630":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"17:15434:4973":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"17:437:4178":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"2:40285:2797":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"17:11583:8297":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"17:10524:8260":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"1:9232:8548":{"crate_id":1,"path":["std","sys","pal","common","thread_local","fast_local","Key"],"kind":"struct"},"2:45779:7373":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"2:43531:2897":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"17:14012:4595":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"11:883:8418":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"19:0:1147":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"16:7711:210":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"17:11354:8283":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"18:623:35276":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"17:10419:4236":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:10839:9454":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"2:39190:214":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"17:11214:8276":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"17:11341:8282":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"17:14876:4824":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"2:10168:144":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"1:8267:9453":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"17:16223:5194":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"6:1510:5950":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"6:8294:6908":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:9318:3757":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"1:918:8411":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"17:14341:4659":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"17:15190:4911":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:8566:2771":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"2:30010:2676":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"1:8883:8538":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"2:32632:2820":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"11:123:3886":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"2:44083:2867":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"17:15368:4958":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"17:13424:4471":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"2:41712:90":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:557:8473":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"2:33111:2827":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:1054:8419":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"17:12900:4390":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"17:14235:4645":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:40066:9423":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"1:10998:30475":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"17:15992:5144":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"6:5546:6421":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:5969:2793":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"2:40679:7237":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"18:698:4106":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"6:6698:6652":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"11:1728:156":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"11:490:154":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"2:43363:2890":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"5:111:307":{"crate_id":5,"path":["alloc","alloc","alloc"],"kind":"function"},"17:15778:5086":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"16:7528:5555":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"1:3237:30138":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"1:2668:3966":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:22449:9708":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"1:5650:6690":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"2:21451:32792":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"17:12695:8338":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"2:46565:7456":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"2:39882:7210":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"2:45997:7397":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:8956:7565":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"6:1686:6066":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"1:9000:9596":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"16:6895:5472":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"2:4689:3953":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:12496:2909":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"2:43936:14783":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"2:44395:7327":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"18:598:35274":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"6:6460:6529":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:8323:8533":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"1:9108:7570":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"11:328:5768":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"2:3136:2841":{"crate_id":2,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"16:4587:5286":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"2:42223:2630":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"2:1821:3921":{"crate_id":2,"path":["core","mem","maybe_uninit","clone_from_slice","Guard"],"kind":"struct"},"2:43680:2901":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"5:7481:2609":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"11:2151:8420":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"11:2326:8419":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"2:42497:74":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"6:5122:6246":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"17:13972:4296":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"17:12887:4388":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"2:43858:7305":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"1:10730:140":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"2:4745:2641":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"16:6634:5254":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"2:21553:9454":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"2:7424:2776":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"16:6412:22065":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCacheStrategy"],"kind":"enum"},"17:11324:8279":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"2:39103:2843":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"2:32058:116":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"2:43764:7293":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"2:22533:6976":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"17:15635:5047":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"16:6231:5378":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"2:22804:7000":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:12087:1655":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"17:13344:4460":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"2:33771:2830":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:3333:2599":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"5:3244:5774":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"17:15197:4913":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"17:16176:5186":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"17:15957:5114":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"5:7473:2609":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"17:11788:8302":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"1:0:1544":{"crate_id":1,"path":["std"],"kind":"module"},"16:2374:5222":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"6:5502:6408":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"2:30836:2743":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"2:22586:6977":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"2:2610:201":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"2:43293:3641":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"11:1566:21130":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"17:15058:4876":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"2:44164:14910":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"17:10155:4227":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"5:4308:3631":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"15:306:21156":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"17:15301:4939":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"2:45885:7393":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:4062:9498":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"6:7575:6871":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"1:10505:4010":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"2:6083:2781":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2:44293:207":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"17:14271:4650":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"1:11223:8565":{"crate_id":1,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"17:11755:4287":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"1:6678:9038":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"2:11196:2888":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"18:113:26311":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"6:7537:6852":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:44111:7318":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"6:1671:6057":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"11:2383:3631":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"6:8300:6909":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"2:21470:32806":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"17:10661:8262":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"17:13986:4592":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"6:4787:6085":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"1:5721:7479":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"5:279:3898":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"2:11123:3634":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"17:13674:4521":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"6:7516:6838":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"17:10170:4228":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"18:680:4102":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:11024:7574":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"6:8351:6921":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"16:4641:5288":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"2:40114:8465":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"17:14189:4635":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"17:16032:4438":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"18:563:4090":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"1:12074:1637":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"6:8197:6897":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"16:3669:4127":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"2:10208:206":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"17:15748:5078":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"2:39984:7218":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"16:6120:22064":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:3581:2853":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"16:6263:5383":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"2:39950:2900":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"17:12175:8317":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"17:12647:8334":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"2:41594:3121":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"2:42712:7275":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"6:523:5902":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"16:6620:5417":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"1:1446:156":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"1:4018:9495":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"17:15102:4889":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"1:12071:333":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"2:40084:3954":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"5:3660:3632":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"2:43333:2884":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"6:5296:6312":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:78:1711":{"crate_id":2,"path":["core","usize"],"kind":"module"},"16:7111:5502":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"5:2087:6925":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"16:2998:5268":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"16:5756:8343":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"7:0:1701":{"crate_id":7,"path":["unwind"],"kind":"module"},"16:6813:5457":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"1:4110:9501":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"17:10218:4230":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"6:6621:6624":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"1:8421:8537":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"5:2112:8435":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"16:5307:5303":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"2:12783:2872":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:21951:9454":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"17:11557:8291":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"17:15289:4933":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"6:7314:6741":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"17:15222:4918":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"1:8015:8526":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"11:102:5764":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"5:7570:6947":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"6:5665:6475":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"6:6763:6674":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"6:6471:6537":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"1:9036:7569":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"1:8934:3631":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"2:22835:2694":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:8377:7535":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"1:12089:861":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"17:13832:4567":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"2:43885:7306":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"17:10828:35264":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"17:16235:5197":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"2:43339:2883":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"17:15249:4922":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"1:4012:9496":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"16:5415:5305":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"16:3475:5272":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"2:11234:3636":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"17:13946:4584":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"1:11380:7600":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2:44099:2869":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"17:3264:8255":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:40210:2792":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"17:4821:8258":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"2:46580:7457":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"6:5064:6242":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"17:13594:4514":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"6:6491:6550":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"17:13606:4517":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"5:3270:5775":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"16:6427:8381":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"2:22421:9707":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"2:2812:145":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"1:8447:7537":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"1:10691:7581":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"6:5052:6233":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"5:7646:6953":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"18:643:4080":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"9:178:8697":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:4561:221":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"1:2273:9436":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"2:41829:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"2:43467:2893":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"11:837:8412":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"17:14038:4598":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"17:14503:4690":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"1:5582:8510":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"9:330:5824":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"1:12068:1672":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"6:8012:6886":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"17:16165:5181":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"17:1207:8249":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"1:1574:3631":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:45516:7352":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"17:14436:4683":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"1:11285:5844":{"crate_id":1,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"2:12519:2906":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:2809:163":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:2803:78":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"17:12043:8314":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"17:11634:4275":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:37751:2835":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"17:11537:8290":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"2:8097:146":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:8023:8527":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"2:22824:2681":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"17:12107:4263":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:23286:236":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"2:7876:2755":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"17:12724:22136":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"5:1189:35219":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"6:4992:6203":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"6:6379:6484":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:40191:2790":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"2:39230:2844":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"1:11089:7592":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"1:9100:8546":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"1:5835:8514":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"16:5831:5316":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"16:6749:5443":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"6:497:5882":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"6:4864:6145":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"6:7412:6788":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"16:6532:5405":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"5:7622:3930":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"17:15356:4955":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"2:45458:7348":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"16:4424:5281":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"2:42104:8457":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"9:392:21051":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"6:5134:6247":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"1:10686:7579":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"17:11128:4217":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"16:5385:4227":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:43970:2875":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"17:14260:4649":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"6:473:5871":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"16:2902:21201":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"17:15734:5071":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"1:8545:7276":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"2:46475:7445":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:31953:2639":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"2:11802:3645":{"crate_id":2,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"2:10992:3631":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"6:7461:6800":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"1:1585:2605":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"6:6650:6637":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"2:45259:7328":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:8370:7534":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"6:7348:6760":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"1:8404:7536":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"6:5370:6337":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"17:13363:4461":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"16:7686:8402":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"5:6432:9718":{"crate_id":5,"path":["alloc","task","LocalWake"],"kind":"trait"},"17:12408:4351":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"17:13308:4453":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"6:6524:6563":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"18:80:26309":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"1:3567:31810":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"2:43381:2888":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"16:2508:5228":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"17:12362:4348":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"5:2525:6936":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"6:4897:6158":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:30355:31844":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"2:45856:7392":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"2:3141:2842":{"crate_id":2,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"17:12213:8323":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"17:14051:4600":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"2:21468:32804":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:8985:9597":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"2:11161:3647":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"11:700:2609":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"17:12328:4338":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"17:15616:5041":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"16:2548:5230":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"0:358:1968":{"crate_id":0,"path":["semver","Op","Less"],"kind":"variant"},"6:6609:6617":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"1:4826:9514":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"6:5020:6219":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"2:45712:7370":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:12084:1656":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"10:0:2446":{"crate_id":10,"path":["adler"],"kind":"module"},"11:1107:8421":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"1:4782:9552":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"1:4241:9521":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"16:6991:35251":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"1:4393:8502":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"1:8104:8529":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"15:288:21155":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"16:7006:8382":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:40233:2794":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"17:15010:4867":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"2:2806:77":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"11:1896:2605":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"17:256:8244":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"17:10710:8263":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"17:11443:4268":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"16:4856:5294":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"2:41679:2609":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"6:4916:6171":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"5:1463:3631":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"6:6775:6676":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"16:4830:5293":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"0:360:1969":{"crate_id":0,"path":["semver","Op","LessEq"],"kind":"variant"},"6:5477:6399":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"5:6774:3898":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"6:6664:6639":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"1:928:9393":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"16:2572:5231":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:3058:246":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"2:30298:31856":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"6:491:5879":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"5:7100:3944":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"16:8175:8403":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"18:521:26322":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"1:3396:9481":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"0:0:2123":{"crate_id":0,"path":["semver"],"kind":"module"},"6:5483:6400":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"17:14994:4866":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"16:2768:5240":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"1:2263:139":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"2:22639:6978":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:1945:1205":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"1:4465:8503":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"2:2470:2708":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"16:6353:5385":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"2:10629:3965":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"2:40181:2789":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:8243:7528":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"2:40493:2804":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"6:559:5922":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"17:10284:4232":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"17:11865:8312":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"16:6398:5246":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"5:1325:8420":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"5:1494:2609":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"2:39019:2854":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"2:41538:3631":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"17:14372:4664":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"2:7529:2786":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"2:22323:2708":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"function"},"1:8109:2273":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"17:11227:8277":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"1:7635:4224":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"16:7168:7570":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"16:8155:5627":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"2:1747:2326":{"crate_id":2,"path":["core","mem"],"kind":"module"},"16:5995:5337":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"17:9737:22112":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"17:13753:4554":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"2:41274:9493":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"5:3647:3631":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:4634:3952":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"2:41529:174":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:42481:5596":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"6:5212:6271":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"18:689:4105":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"17:11595:4271":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"1:1590:5773":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"2:33170:2825":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"2:33052:2823":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"6:7984:6883":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"17:11567:8292":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"1:1887:8484":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"17:10982:22146":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"17:11419:4263":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"11:710:8410":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"1:1939:3338":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"2:10409:153":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"1:11656:7607":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"1:939:8415":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"16:5781:5251":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"17:14414:4672":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"11:2304:5505":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"2:12273:3623":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:4785:9525":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"16:8226:22075":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"2:7646:2752":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"6:517:5899":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:3063:2594":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"17:13999:4593":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"6:4924:6173":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"5:1516:5771":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"2:21992:32802":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"16:5006:5299":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"1:11553:8499":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"6:4952:6184":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"17:15138:4894":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"5:3237:3631":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"1:1607:5776":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"1:8297:2802":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"17:14463:4685":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"1:6276:8516":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"2:41606:3366":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"2:42544:2637":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"1:481:3978":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"2:45473:7349":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:11317:3633":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"17:11812:8306":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"0:351:1924":{"crate_id":0,"path":["semver","Op"],"kind":"enum"},"5:7583:31835":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"6:5557:6427":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"2:45758:7372":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:41408:7258":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"2:44383:2658":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"1:5463:8505":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"17:11841:8310":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"16:2728:5238":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"18:548:153":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"17:12543:8333":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"17:12433:4354":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"17:12056:4323":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"2:4448:6960":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"16:5769:5311":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:41615:3728":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"1:3439:2760":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:10193:121":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"1:914:8410":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"1:8639:7558":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"2:21482:32798":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"5:3871:2605":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"17:15769:5084":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"17:16151:5178":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"17:16198:5188":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"17:12808:4384":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2:0:537":{"crate_id":2,"path":["core"],"kind":"module"},"2:45811:7375":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"2:45353:7338":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"17:14977:4864":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"1:8926:7564":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"1:6625:9592":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"1:9982:7255":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"17:10915:35266":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"2:22992:2328":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"type_alias"},"2:41480:194":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"2:45321:7336":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"13:0:2442":{"crate_id":13,"path":["std_detect"],"kind":"module"},"5:4073:2607":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"18:718:4111":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"16:7061:5495":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"17:15078:4884":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"2:40469:2802":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:3669:71":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"6:5588:6436":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"17:13844:4569":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"5:5211:3929":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"1:3469:3921":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"2:11303:3635":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:8388:8536":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"2:13646:152":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"2:22271:9713":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"17:15624:5042":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"1:4719:6782":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"function"},"16:7306:35261":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"2:37696:2834":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:12077:698":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:43627:2887":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"2:39130:210":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"5:0:307":{"crate_id":5,"path":["alloc"],"kind":"module"},"1:640:8476":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"1:8304:2882":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"17:12388:4349":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"1:5528:115":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"17:12264:8327":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"1:5513:8509":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"2:12573:2903":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:11879:2372":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"17:12508:4363":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"6:6746:6666":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"1:4988:9550":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"2:12763:2871":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"6:5250:6287":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:11084:2903":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"17:15760:5080":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"6:4811:6102":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"11:1142:8422":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"17:4986:8259":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"5:5445:14768":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"17:11153:8264":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"16:5075:5301":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"1:7950:7484":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"16:7580:5560":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"17:11293:22165":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"18:581:2743":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"17:12353:4347":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"1:2437:9444":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"17:14066:4603":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"1:6228:3976":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"1:12039:9382":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"2:43201:3638":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"2:13375:165":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"6:5528:6410":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"16:7604:5263":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"1:1975:713":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"14:220:5716":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"17:14752:4730":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"6:8317:6914":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"17:9984:22133":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"16:5722:5252":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:42741:7276":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"16:6574:5266":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"2:41663:3631":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"2:40121:2777":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"6:6629:6625":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"11:2554:35229":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"2:32056:3145":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"11:1923:5776":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"2:8248:179":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:22189:9711":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"6:5423:6363":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"17:14386:4666":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"1:12034:8708":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"2:42720:2748":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"5:3806:8434":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"6:6447:6528":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"11:351:35231":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"14:202:14784":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"16:2355:5216":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"17:10044:22134":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"1:6069:220":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"16:7888:5581":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"17:14325:4657":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"17:9755:22110":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"1:12088:1652":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"16:8216:5629":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"17:11042:8268":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"16:6278:8352":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"2:22777:31843":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:43283:3640":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"2:42759:7281":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"18:96:26310":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"1:880:5772":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"1:7705:4006":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"2:39280:7082":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:3119:2821":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:10864:4012":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"6:5382:6341":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"14:214:5714":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"1:5707:220":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:41946:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"6:5244:6285":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"1:893:2607":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"2:6592:2806":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:588:9374":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"2:41790:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"17:13235:4436":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"17:11189:4252":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"1:6508:2756":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"2:725:9454":{"crate_id":2,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"5:40:2604":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"1:5828:8511":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"18:507:4080":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"2:12535:2908":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:12018:7650":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"16:8202:5267":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"17:15126:4891":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"1:11041:7591":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"1:3231:27349":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"17:11269:22164":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"2:31970:3007":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"2:41688:196":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"2:22718:6987":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:4249:9522":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"5:6965:2614":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"17:12443:4356":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"2:3510:2847":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1:9169:234":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"1:1809:664":{"crate_id":1,"path":["std","env"],"kind":"module"},"5:7373:2609":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:43810:7303":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"5:3278:5773":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"16:150:3884":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"14:31:8407":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"17:11063:8270":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"6:5146:6248":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"5:1544:8410":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:39908:7213":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"6:5306:6316":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"6:5489:6402":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"2:4718:2642":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"17:12399:4350":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"2:31939:5553":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"17:10905:8266":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"2:30272:3355":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"2:30266:2596":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"2:43264:3639":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"6:1593:6002":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"1:8425:6769":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"2:8064:2774":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"17:14560:4698":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"17:9807:22118":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"17:15116:4890":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"0:354:1966":{"crate_id":0,"path":["semver","Op","Greater"],"kind":"variant"},"1:10462:8493":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"2:40686:2754":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"2:43988:2876":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"6:6880:6704":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"16:6342:35258":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"2:42729:157":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"2:42506:2236":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"5:3740:3898":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"17:15039:4875":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"1:6379:220":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"1:4313:8501":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"17:11715:4281":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"3:234:226":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"6:1503:5948":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:3516:2849":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"5:3036:9034":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"17:13538:4497":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:41985:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"2:46512:7448":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:7793:4010":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"17:9781:22128":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"1:11490:4017":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:32446:2678":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"17:13146:4412":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"2:3252:2850":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"2:12991:121":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"2:42523:138":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"16:2878:5245":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:10204:2629":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"2:11275:2893":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:10198:130":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"16:7695:5565":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"1:5862:8515":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"6:1547:5973":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"6:5191:6259":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"6:1565:5983":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"17:15836:5096":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"2:3304:143":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"17:9671:22113":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"2:42944:7282":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"11:687:3632":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:31969:237":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"16:3842:5276":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"5:3634:183":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"2:42209:2627":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:10767:30477":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"6:5677:6480":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"16:4913:5296":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"2:46429:7441":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"17:15281:4932":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"2:12772:2874":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"2:44285:227":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"6:8265:6901":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"6:5314:6320":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"17:12707:8339":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"1:9486:8524":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"2:12298:1552":{"crate_id":2,"path":["core","str"],"kind":"module"},"1:5477:8507":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"2:3298:141":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:44372:2660":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:12092:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"2:22762:31850":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:6548:3998":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"1:7241:31775":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"17:14575:4354":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"5:3025:3224":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"14:165:21136":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"1:12072:1520":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"1:11513:8498":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:41623:226":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"6:485:5877":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"1:12082:809":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"6:8247:6898":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:2030:198":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"2:33288:2826":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"2:44095:2868":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"2:41907:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"6:5400:6352":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"1:9088:2276":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"11:1160:8423":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"5:2287:34010":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"18:608:8238":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"17:10671:35265":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"16:7570:5261":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"17:15206:4914":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"17:13899:4578":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"16:2612:5233":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:40054:7224":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"2:40141:2778":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"6:4942:6181":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"2:33229:2824":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"17:10534:35267":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"2:4283:8446":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"16:6543:5406":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"1:849:3632":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"1:6439:186":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"2:30287:2236":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"5:1169:9032":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"1:9197:7574":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"6:5225:6275":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"1:5907:3988":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"2:41220:171":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"6:8306:6910":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"16:3778:5274":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"17:11915:22234":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:42704:2749":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"16:6079:5206":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"5:2756:6939":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"1:5210:204":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"17:13089:4402":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"2:3489:2845":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"2:15:2240":{"crate_id":2,"path":["core","write"],"kind":"macro"},"2:21555:9625":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"17:14489:4687":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"16:7618:5561":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"1:9054:117":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"2:10519:1520":{"crate_id":2,"path":["core","slice"],"kind":"module"},"11:2403:3632":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"1:8234:2274":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"1:9141:7573":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"5:217:3896":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"18:538:4088":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"5:5061:3921":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"17:10137:22111":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"6:8288:6907":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"1:9479:139":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"2:4295:8447":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"17:9938:22132":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"16:4771:5291":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"2:22295:9454":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"6:8029:6896":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"1:6622:8518":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"1:6692:3999":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"16:7321:3120":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"1:8382:9524":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"17:12127:4328":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"17:2234:8254":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"17:10317:4233":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"17:13509:4486":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"2:4:1130":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"6:7561:6862":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:4491:2638":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"17:11367:4248":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"17:12516:8330":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"17:12225:8324":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"1:8950:2609":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"6:5565:6429":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"17:12530:8332":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"9:53:8687":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"6:1621:6027":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"17:15678:5063":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"5:7539:9392":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"6:6562:6591":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"2:30234:2595":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"17:10997:4245":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"16:2323:21200":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"1:8396:8533":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"17:10350:4234":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"16:6442:5393":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"1:4551:9525":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"5:7056:263":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"16:7799:5253":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"2:5140:8453":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"2:22233:9712":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"2:22309:9714":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"2:32818:2822":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:43181:3629":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"1:4997:9551":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"6:6729:6662":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"1:10106:8552":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"2:6787:6966":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"17:13473:4481":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"1:4070:9499":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"7:78:21043":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"11:1582:8425":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"16:2458:5226":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"17:12621:4366":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"6:6714:6660":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"17:12824:22137":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"1:1826:8482":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2:40010:7222":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"5:1566:210":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"17:15608:5038":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"17:10877:8265":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"2:21453:32800":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"6:5472:6397":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"6:4870:6146":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"17:10399:2882":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"6:6597:6612":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"17:10251:4231":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"1:8913:7563":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"9:502:5847":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"2:9237:3122":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"2:41442:7259":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"2:45648:7366":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"13:109:35240":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"2:12778:2873":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"11:1910:5774":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"16:2438:5225":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2:43191:3637":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"11:1891:2607":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"2:41563:3120":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"17:13797:4563":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"1:12091:1264":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"16:8136:5624":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"11:1603:8426":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"5:6932:2612":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"5:7445:210":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"1:10459:8491":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"2:42202:2628":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"5:2101:8434":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"0:381:1903":{"crate_id":0,"path":["semver","Prerelease"],"kind":"struct"},"2:726:2682":{"crate_id":2,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"2:43413:2891":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:42469:32385":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"2:4565:8449":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"18:754:4119":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"6:1485:5940":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"1:7821:9380":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"14:0:2449":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"1:10778:8523":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"2:42216:2629":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"2:21414:2743":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"5:1340:8419":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"17:12993:22138":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"2:2224:2732":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"5:2205:6927":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"2:40717:2762":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"6:532:5908":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"17:13252:4438":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"17:15456:4978":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"2:6781:2783":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"1:5164:8504":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:1862:8483":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"18:481:4078":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"17:11647:4276":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"1:12083:805":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"1:10696:7484":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"17:12584:8264":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"17:261:8245":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"1:10875:4013":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"2:12757:2857":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"17:11661:4277":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"6:5039:6229":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"2:2615:135":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"2:21500:9454":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"2:8192:2772":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"17:11166:4250":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"2:41302:7251":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"17:14587:4701":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"5:5401:3898":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"1:5390:130":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"5:6611:3898":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"17:12683:8337":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"17:15473:4985":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"1:2690:8489":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"2:4922:14811":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"17:12969:4393":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"5:4467:3921":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"6:538:5911":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"11:832:8424":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"16:5802:22061":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"}},"external_crates":{"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":28}