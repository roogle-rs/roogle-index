{"root":"0:0:1597","crate_version":"0.7.2","includes_private":false,"index":{"0:276:1981":{"id":"0:276:1981","crate_id":0,"name":"size_hint","span":{"filename":"src/arrayvec.rs","begin":[950,4],"end":[952,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:490:609":{"id":"0:490:609","crate_id":0,"name":"eq","span":{"filename":"src/array_string.rs","begin":[455,4],"end":[457,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:304":{"id":"0:304","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1011,0],"end":[1020,1]},"visibility":{"restricted":{"parent":"0:31:1597","path":"::arrayvec"}},"docs":"Extend the `ArrayVec` with an iterator.\n \n***Panics*** if extending the vector exceeds its capacity.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["extend_one","extend_reserve"],"trait":{"name":"Extend","id":"2:8681:2001","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:307:2002"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10569:120":{"id":"2:10569:120","crate_id":2,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10570:665"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13705":{"id":"2:13705","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:12784:1352","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:13706:800","2:13707:1784","2:13708:2156","2:13709:59476","2:13711:59477","2:13714:57522","2:13715:59478","2:13716:309","2:13717:1719","2:13718:55616","2:13720:55617","2:13722:55618","2:13724:55619","2:13726:3618","2:13727:59479","2:13728:55638","2:13729:55639","2:13730:2147","2:13731:3953","2:13732:3623","2:13733:32198","2:13734:32188","2:13735:4667","2:13736:59480","2:13737:32183","2:13738:3122","2:13741:55655","2:13744:55656","2:13747:2847","2:13751:2812","2:13755:55646","2:13758:32066","2:13761:55649","2:13764:59481","2:13767:59482","2:13770:55651","2:13773:55653","2:13776:59483","2:13779:59484","2:13782:2237","2:13785:59485","2:13788:59486","2:13791:59487","2:13794:59488","2:13796:59489","2:13798:59490","2:13800:59491","2:13801:59492","2:13802:59493","2:13805:59494","2:13808:14985","2:13811:55657","2:13814:59495","2:13817:59496","2:13820:59497","2:13823:4131","2:13825:4329","2:13826:53513","2:13827:53514","2:13828:53515","2:13829:59498","2:13831:3579","2:13832:59499"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:848-0:223:1604":{"id":"b:5:848-0:223:1604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2883:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["5:850:2424","5:851:2864","5:852:2865"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:533:799":{"id":"0:533:799","crate_id":0,"name":"le","span":{"filename":"src/array_string.rs","begin":[538,4],"end":[538,54]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:587:927":{"id":"0:587:927","crate_id":0,"name":"new","span":{"filename":"src/errors.rs","begin":[15,4],"end":[19,5]},"visibility":"public","docs":"Create a new `CapacityError` from `element`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["element",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13811:55657":{"id":"2:13811:55657","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:15904:2283","self::pattern":"2:13331:2470"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13341:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13341:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13356:2464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3176:233":{"id":"2:3176:233","crate_id":2,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3178:128","2:3179:1429"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13773:55653":{"id":"2:13773:55653","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:15904:2283","str::splitn":"1:15910:2288","self::pattern":"2:13331:2470"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:49864:2490","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13341:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13341:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13356:2464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13717:1719":{"id":"2:13717:1719","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:15921:2297"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:0:1597":{"id":"0:0:1597","crate_id":0,"name":"arrayvec","span":{"filename":"src/lib.rs","begin":[1,0],"end":[59,53]},"visibility":"public","docs":"**arrayvec** provides the types [`ArrayVec`] and [`ArrayString`]: \narray-backed vector and string types, which store their contents inline.\n\nThe arrayvec package has the following cargo features:\n\n- `std`\n  - Optional, enabled by default\n  - Use libstd; disable to use `no_std` instead.\n\n- `serde`\n  - Optional\n  - Enable serialization for ArrayVec and ArrayString using serde 1.x\n\n## Rust Version\n\nThis version of arrayvec requires Rust 1.51 or later.\n","links":{"`ArrayVec`":"0:98:1603","`ArrayString`":"0:634:1601"},"attrs":["#![doc(html_root_url = \"https://docs.rs/arrayvec/0.7/\")]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:618","0:621","0:625","0:628","0:631"],"is_stripped":false}},"0:364":{"id":"0:364","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1169,0],"end":[1171,1]},"visibility":{"restricted":{"parent":"0:31:1597","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:367:665"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13729:55639":{"id":"2:13729:55639","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"1:15910:2288"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3102:2455":{"id":"2:3102:2455","crate_id":2,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:3101:3537","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3586:117":{"id":"2:3586:117","crate_id":2,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3587:226","2:3588:548"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10581:2515":{"id":"2:10581:2515","crate_id":2,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10582:665"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:522":{"id":"0:522","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[521,0],"end":[530,1]},"visibility":{"restricted":{"parent":"0:388:1598","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["ge","le","lt","gt"],"trait":{"name":"PartialOrd","id":"2:2962:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:524:1004","0:525:833","0:526:799","0:527:718","0:528:701"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8635:3349":{"id":"2:8635:3349","crate_id":2,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8637:2856"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:467:2088":{"id":"0:467:2088","crate_id":0,"name":"try_push_str","span":{"filename":"src/array_string.rs","begin":[279,4],"end":[291,5]},"visibility":"public","docs":"Adds the given string slice to the end of the string.\n\nReturns `Ok` if the push succeeds.\n\n**Errors** if the backing array is not large enough to fit the string.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<2>::new();\n\nstring.try_push_str(\"a\").unwrap();\nlet overflow1 = string.try_push_str(\"bc\");\nstring.try_push_str(\"d\").unwrap();\nlet overflow2 = string.try_push_str(\"ef\");\n\nassert_eq!(&string[..], \"ad\");\nassert_eq!(overflow1.unwrap_err().element(), \"bc\");\nassert_eq!(overflow2.unwrap_err().element(), \"ef\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["s",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47904:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:228":{"id":"0:228","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[852,0],"end":[871,1]},"visibility":{"restricted":{"parent":"0:31:1597","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["last","size_hint","ge","count","any","eq_by","cycle","find","le","is_partitioned","all","inspect","map","take_while","for_each","advance_by","min_by","is_sorted","min","take","cloned","find_map","array_chunks","try_fold","by_ref","map_while","filter","nth","min_by_key","is_sorted_by","sum","rev","try_find","try_for_each","try_collect","scan","filter_map","step_by","position","max","is_sorted_by_key","skip","product","rposition","fold","collect_into","flat_map","enumerate","chain","lt","zip","max_by","__iterator_get_unchecked","partial_cmp","cmp_by","unzip","reduce","partition","flatten","gt","peekable","intersperse","next_chunk","max_by_key","partial_cmp_by","collect","copied","cmp","try_reduce","eq","partition_in_place","fuse","ne","skip_while","intersperse_with"],"trait":{"name":"Iterator","id":"2:8873:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:231:1709","0:232:929","0:233:1981"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:123:1731":{"id":"0:123:1731","crate_id":0,"name":"truncate","span":{"filename":"src/arrayvec.rs","begin":[245,4],"end":[247,5]},"visibility":"public","docs":"Shortens the vector, keeping the first `len` elements and dropping\nthe rest.\n\nIf `len` is greater than the vector’s current length this has no\neffect.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3, 4, 5]);\narray.truncate(3);\nassert_eq!(&array[..], &[1, 2, 3]);\narray.truncate(4);\nassert_eq!(&array[..], &[1, 2, 3]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["new_len",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:657:420":{"id":"0:657:420","crate_id":0,"name":"cmp","span":{"filename":"src/errors.rs","begin":[8,26],"end":[8,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:37899:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:129:1860":{"id":"0:129:1860","crate_id":0,"name":"swap_remove","span":{"filename":"src/arrayvec.rs","begin":[367,4],"end":[372,5]},"visibility":"public","docs":"Remove the element at `index` and swap the last element into its place.\n\nThis operation is O(1).\n\nReturn the *element* if the index is in bounds, else panic.\n\n***Panics*** if the `index` is out of bounds.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3]);\n\nassert_eq!(array.swap_remove(0), 1);\nassert_eq!(&array[..], &[3, 2]);\n\nassert_eq!(array.swap_remove(1), 2);\nassert_eq!(&array[..], &[3]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:104":{"id":"0:104","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[48,0],"end":[54,1]},"visibility":{"restricted":{"parent":"0:31:1597","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:3610:1757","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:107:583"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13831:3579":{"id":"2:13831:3579","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:15904:2283"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:50050:2480","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3613:131":{"id":"2:3613:131","crate_id":2,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3615:381"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3616:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:241":{"id":"0:241","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[889,0],"end":[902,1]},"visibility":{"restricted":{"parent":"0:31:1597","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:3610:1757","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:244:583"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:379:718":{"id":"0:379:718","crate_id":0,"name":"gt","span":{"filename":"src/arrayvec.rs","begin":[1197,4],"end":[1199,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13732:3623":{"id":"2:13732:3623","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:49728:2194","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13707:1784":{"id":"2:13707:1784","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23137:3925":{"id":"2:23137:3925","crate_id":2,"name":"SimdUint","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23138:58476","2:23139:1237","2:23140:1238","2:23141:58477","2:23142:58478","2:23143:58479","2:23144:58480","2:23145:58481","2:23146:58482","2:23147:58483"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3373:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23150:3537","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:539:833":{"id":"0:539:833","crate_id":0,"name":"lt","span":{"filename":"src/array_string.rs","begin":[548,4],"end":[548,66]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:528:701":{"id":"0:528:701","crate_id":0,"name":"ge","span":{"filename":"src/array_string.rs","begin":[529,4],"end":[529,56]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2866:1736":{"id":"2:2866:1736","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:198":{"id":"0:198","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[775,0],"end":[789,1]},"visibility":{"restricted":{"parent":"0:31:1597","path":"::arrayvec"}},"docs":"Try to create an `ArrayVec` from a slice. This will return an error if the slice was too big to\nfit.\n\n```\nuse arrayvec::ArrayVec;\nuse std::convert::TryInto as _;\n\nlet array: ArrayVec<_, 4> = (&[1, 2, 3] as &[_]).try_into().unwrap();\nassert_eq!(array.len(), 3);\nassert_eq!(array.capacity(), 4);\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2883:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3180:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:201:128","0:202:1428"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:170:1719":{"id":"0:170:1719","crate_id":0,"name":"as_mut_ptr","span":{"filename":"src/arrayvec.rs","begin":[700,4],"end":[702,5]},"visibility":"public","docs":"Return a raw mutable pointer to the vector's buffer.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3180:232":{"id":"2:3180:232","crate_id":2,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3182:128","2:3183:1428"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:341":{"id":"0:341","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1143,0],"end":[1149,1]},"visibility":{"restricted":{"parent":"0:31:1597","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2916:185","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2916:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:344:609"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:109":{"id":"0:109","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[63,0],"end":[703,1]},"visibility":{"restricted":{"parent":"0:31:1597","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:113:927","0:114:1775","0:115:800","0:116:1784","0:117:1788","0:118:1793","0:119:1796","0:120:1722","0:121:1724","0:122:1725","0:123:1731","0:124:1730","0:126:1838","0:127:1839","0:128:1728","0:129:1860","0:131:1861","0:132:1873","0:134:1874","0:135:1888","0:156:1711","0:157:1917","0:158:1880","0:161:1947","0:163:1948","0:166:1958","0:167:1714","0:168:1717","0:169:309","0:170:1719"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:1031:3577":{"id":"1:1031:3577","crate_id":1,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:1032:2424","1:1033:4329","1:1034:53511","1:1035:53512","1:1036:53513","1:1037:53514","1:1038:53515"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:217":{"id":"0:217","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[837,0],"end":[843,1]},"visibility":{"restricted":{"parent":"0:31:1597","path":"::arrayvec"}},"docs":"Iterate the `ArrayVec` with each element by value.\n\nThe vector is consumed by this operation.\n\n```\nuse arrayvec::ArrayVec;\n\nfor elt in ArrayVec::from([1, 2, 3]) {\n    // ...\n}\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:220:1709","0:221:1604","0:222:775"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:380":{"id":"0:380","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1202,0],"end":[1206,1]},"visibility":{"restricted":{"parent":"0:31:1597","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Ord","id":"2:2952:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2952:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:383:420"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:23434:4014":{"id":"2:23434:4014","crate_id":2,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdElement","id":"2:24071:4010","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23425:3537","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:4415:3417":{"id":"1:4415:3417","crate_id":1,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4416:1729","1:4417:53916","1:4419:53917","1:4420:53918","1:4421:3418","1:4422:53919","1:4423:53376","1:4425:53920","1:4426:2836","1:4427:3623","1:4428:2820","1:4430:1958"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:543":{"id":"0:543","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[554,0],"end":[559,1]},"visibility":{"restricted":{"parent":"0:388:1598","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2952:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:545:420"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10810:147":{"id":"2:10810:147","crate_id":2,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10811:657","2:10812:1727","2:10813:3124","2:10814:3125","2:10815:3126","2:10816:3127","2:10817:3128","2:10818:3129","2:10819:3130","2:10820:3131","2:10821:3132","2:10822:3133","2:10823:3134","2:10824:3135","2:10825:3136","2:10826:1546"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:222:775":{"id":"0:222:775","crate_id":0,"name":"into_iter","span":{"filename":"src/arrayvec.rs","begin":[840,4],"end":[842,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6846:3594":{"id":"1:6846:3594","crate_id":1,"name":"TcpStreamExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6847:53553","1:6848:53554"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10436:3537","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3490:2399":{"id":"2:3490:2399","crate_id":2,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3492:183","2:3493:356"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:261":{"id":"0:261","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[936,0],"end":[936,72]},"visibility":{"restricted":{"parent":"0:31:1597","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3375:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3375:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:253:1605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:540:799":{"id":"0:540:799","crate_id":0,"name":"le","span":{"filename":"src/array_string.rs","begin":[549,4],"end":[549,67]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:455:2092":{"id":"0:455:2092","crate_id":0,"name":"from_byte_string","span":{"filename":"src/array_string.rs","begin":[120,4],"end":[130,5]},"visibility":"public","docs":"Create a new `ArrayString` from a byte string literal.\n\n**Errors** if the byte string literal is not valid UTF-8.\n\n```\nuse arrayvec::ArrayString;\n\nlet string = ArrayString::from_byte_string(b\"hello world\").unwrap();\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["b",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"CAP"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47904:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"resolved_path","inner":{"name":"Utf8Error","id":"2:49686:2063","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3211-0:642:1602":{"id":"b:2:3211-0:642:1602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3170:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3180:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3214:128","2:3215:1428"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3375:224-0:223:1604":{"id":"a:2:3375:224-0:223:1604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3375:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3375:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3500:2401":{"id":"2:3500:2401","crate_id":2,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3502:183","2:3503:361"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:4490:3421":{"id":"1:4490:3421","crate_id":1,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4491:57027","1:4492:39461","1:4493:57029","1:4494:57028"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3483:2402":{"id":"2:3483:2402","crate_id":2,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3484:183","2:3485:959"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:23174:4096":{"id":"2:23174:4096","crate_id":2,"name":"SimdPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23175:4013","2:23176:1259","2:23177:1284"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13720:55617":{"id":"2:13720:55617","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:47779:178"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11204:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11204:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13825:4329":{"id":"2:13825:4329","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3206-0:642:1602":{"id":"b:2:3206-0:642:1602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3180:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3176:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3209:128","2:3210:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3404:2543-0:223:1604":{"id":"a:2:3404:2543-0:223:1604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3404:2543","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3404:2543","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2864-0:98:1603":{"id":"b:2:2864-0:98:1603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3368:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2858:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2866:1736"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13350:2465":{"id":"2:13350:2465","crate_id":2,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13352:3946","2:13353:929","2:13354:58206","2:13355:58207"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:462:1793":{"id":"0:462:1793","crate_id":0,"name":"is_full","span":{"filename":"src/array_string.rs","begin":[175,4],"end":[175,73]},"visibility":"public","docs":"Return if the `ArrayString` is completely filled.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<1>::new();\nassert!(!string.is_full());\nstring.push_str(\"A\");\nassert!(string.is_full());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6472:3542":{"id":"1:6472:3542","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6473:57447","1:6474:7979","1:6475:7980","1:6476:7982","1:6477:7981","1:6478:7983","1:6479:7984","1:6480:7986","1:6481:6214","1:6482:7989","1:6483:7990","1:6484:7991","1:6485:7992","1:6486:7993","1:6487:7994","1:6488:7987","1:6489:7988"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2864-0:634:1601":{"id":"b:2:2864-0:634:1601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3368:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2858:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2866:1736"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6165:1959":{"id":"5:6165:1959","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:8459:220"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8459:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13341:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:466:2132":{"id":"0:466:2132","crate_id":0,"name":"push_str","span":{"filename":"src/array_string.rs","begin":[255,4],"end":[257,5]},"visibility":"public","docs":"Adds the given string slice to the end of the string.\n\n***Panics*** if the backing array is not large enough to fit the string.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<2>::new();\n\nstring.push_str(\"a\");\nstring.push_str(\"d\");\n\nassert_eq!(&string[..], \"ad\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9533:2621-0:223:1604":{"id":"a:2:9533:2621-0:223:1604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:4094:68":{"id":"2:4094:68","crate_id":2,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4095:1441"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"2:3823:229":{"id":"2:3823:229","crate_id":2,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3824:183","2:3825:2414","2:3826:691","2:3827:374"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FromResidual","id":"2:3828:138","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3823:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3170:150":{"id":"2:3170:150","crate_id":2,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3172:2807"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:461:1788":{"id":"0:461:1788","crate_id":0,"name":"capacity","span":{"filename":"src/array_string.rs","begin":[163,4],"end":[163,49]},"visibility":"public","docs":"Return the capacity of the `ArrayString`.\n\n```\nuse arrayvec::ArrayString;\n\nlet string = ArrayString::<3>::new();\nassert_eq!(string.capacity(), 3);\n```","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3167:74":{"id":"2:3167:74","crate_id":2,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3169:2030"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3368:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:13730:2147":{"id":"2:13730:2147","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:15904:2283"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49712:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:363:2030":{"id":"0:363:2030","crate_id":0,"name":"as_mut","span":{"filename":"src/arrayvec.rs","begin":[1166,4],"end":[1166,45]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9532:2622-0:223:1604":{"id":"a:2:9532:2622-0:223:1604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2864-0:223:1604":{"id":"b:2:2864-0:223:1604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3368:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2858:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2866:1736"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:114:1775":{"id":"0:114:1775","crate_id":0,"name":"new_const","span":{"filename":"src/arrayvec.rs","begin":[96,4],"end":[99,5]},"visibility":"public","docs":"Create a new empty `ArrayVec` (const fn).\n\nThe maximum capacity is given by the generic parameter `CAP`.\n\n```\nuse arrayvec::ArrayVec;\n\nstatic ARRAY: ArrayVec<u8, 1024> = ArrayVec::new_const();\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3616:132":{"id":"2:3616:132","crate_id":2,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3618:382"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3619:133","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:531:1004":{"id":"0:531:1004","crate_id":0,"name":"partial_cmp","span":{"filename":"src/array_string.rs","begin":[534,4],"end":[536,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"2:37899:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3834:2414":{"id":"2:3834:2414","crate_id":2,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3836:54895"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:24071:4010":{"id":"2:24071:4010","crate_id":2,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:24072:4013"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:24067:3537","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"2:3373:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3375:224":{"id":"2:3375:224","crate_id":2,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:472:1730":{"id":"0:472:1730","crate_id":0,"name":"clear","span":{"filename":"src/array_string.rs","begin":[384,4],"end":[388,5]},"visibility":"public","docs":"Make the string empty.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6750:3535":{"id":"1:6750:3535","crate_id":1,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6751:54114"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:848-0:642:1602":{"id":"b:5:848-0:642:1602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2883:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:850:2424","5:851:2864","5:852:2865"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3404:2543-0:253:1605":{"id":"a:2:3404:2543-0:253:1605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3404:2543","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:253:1605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3200-0:223:1604":{"id":"b:2:3200-0:223:1604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3173:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3202:686"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6224:3530":{"id":"1:6224:3530","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6225:3848","1:6226:3849","1:6227:8523","1:6228:53387","1:6230:53391","1:6232:53388","1:6233:53389","1:6235:53390"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10436:3537","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:118:1793":{"id":"0:118:1793","crate_id":0,"name":"is_full","span":{"filename":"src/arrayvec.rs","begin":[146,4],"end":[146,73]},"visibility":"public","docs":"Return true if the `ArrayVec` is completely filled to its capacity, false otherwise.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::<_, 1>::new();\nassert!(!array.is_full());\narray.push(1);\nassert!(array.is_full());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3671:2410":{"id":"2:3671:2410","crate_id":2,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3673:183","2:3674:759"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3368:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:648":{"id":"0:648","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[8,16],"end":[8,20]},"visibility":{"restricted":{"parent":"0:575:1599","path":"::errors"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::marker::Copy","id":"2:3373:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3373:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:549:2184":{"id":"0:549:2184","crate_id":0,"name":"from_str","span":{"filename":"src/array_string.rs","begin":[565,4],"end":[567,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47904:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:13270:2062","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:203":{"id":"0:203","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[803,0],"end":[807,1]},"visibility":{"restricted":{"parent":"0:31:1597","path":"::arrayvec"}},"docs":"Iterate the `ArrayVec` with references to each element.\n\n```\nuse arrayvec::ArrayVec;\n\nlet array = ArrayVec::from([1, 2, 3]);\n\nfor elt in &array {\n    // ...\n}\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}},"items":["0:207:1709","0:208:1604","0:209:775"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:359:310":{"id":"0:359:310","crate_id":0,"name":"as_ref","span":{"filename":"src/arrayvec.rs","begin":[1162,4],"end":[1162,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3441:2390":{"id":"2:3441:2390","crate_id":2,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3443:183","2:3444:899"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13744:55656":{"id":"2:13744:55656","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"self::pattern":"2:13331:2470","prim@char":"1:15904:2283"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13341:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13341:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13356:2464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13779:59484":{"id":"2:13779:59484","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13341:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13341:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13356:2464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5436:3592":{"id":"1:5436:3592","crate_id":1,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5437:5109","1:5438:57522"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10436:3537","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:660":{"id":"0:660","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[8,31],"end":[8,40]},"visibility":{"restricted":{"parent":"0:575:1599","path":"::errors"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::PartialEq","id":"2:2916:185","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2916:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:662:609"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5558:3550":{"id":"1:5558:3550","crate_id":1,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5559:57500","1:5560:57501","1:5561:57502","1:5562:57503"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3196-0:642:1602":{"id":"b:2:3196-0:642:1602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3173:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3170:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3199:2807"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13802:59493":{"id":"2:13802:59493","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"self::pattern":"2:13331:2470","prim@char":"1:15904:2283"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13341:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13341:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:13361:2462","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3452:2392":{"id":"2:3452:2392","crate_id":2,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3454:183","2:3455:1111"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3214:128":{"id":"2:3214:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:39079:2454","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:631":{"id":"0:631","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[59,46],"end":[59,51]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::arrayvec::Drain","name":"Drain","id":"0:253:1605","glob":false}},"a:2:3375:224-0:642:1602":{"id":"a:2:3375:224-0:642:1602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3375:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3375:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13706:800":{"id":"2:13706:800","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:15904:2283"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:516:1546":{"id":"0:516:1546","crate_id":0,"name":"write_str","span":{"filename":"src/array_string.rs","begin":[504,4],"end":[506,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10511:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:158:1880":{"id":"0:158:1880","crate_id":0,"name":"drain","span":{"filename":"src/arrayvec.rs","begin":[600,4],"end":[625,5]},"visibility":"public","docs":"Create a draining iterator that removes the specified range in the vector\nand yields the removed items from start to end. The element range is\nremoved even if the iterator is not consumed until the end.\n\nNote: It is unspecified how many elements are removed from the vector,\nif the `Drain` value is leaked.\n\n**Panics** if the starting point is greater than the end point or if\nthe end point is greater than the length of the vector.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut v1 = ArrayVec::from([1, 2, 3]);\nlet v2: ArrayVec<_, 3> = v1.drain(0..2).collect();\nassert_eq!(&v1[..], &[3]);\nassert_eq!(&v2[..], &[1, 2]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["range",{"kind":"generic","inner":"R"}]],"output":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:253:1605","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RangeBounds","id":"2:3742:1735","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23237:3587":{"id":"2:23237:3587","crate_id":2,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23227:3537","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:185":{"id":"0:185","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[733,0],"end":[738,1]},"visibility":{"restricted":{"parent":"0:31:1597","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"DerefMut","id":"2:3599:1734","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:188:550"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3363:215":{"id":"2:3363:215","crate_id":2,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:463:1796":{"id":"0:463:1796","crate_id":0,"name":"remaining_capacity","span":{"filename":"src/array_string.rs","begin":[186,4],"end":[188,5]},"visibility":"public","docs":"Returns the capacity left in the `ArrayString`.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<3>::from(\"abc\").unwrap();\nstring.pop();\nassert_eq!(string.remaining_capacity(), 1);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:352":{"id":"0:352","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1157,0],"end":[1159,1]},"visibility":{"restricted":{"parent":"0:31:1597","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2861:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:355:2029"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3371:222":{"id":"2:3371:222","crate_id":2,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:287":{"id":"0:287","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[968,0],"end":[988,1]},"visibility":{"restricted":{"parent":"0:31:1597","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:3610:1757","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:253:1605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:291:583"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:850:2424":{"id":"5:850:2424","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:558:128":{"id":"0:558:128","crate_id":0,"name":"Error","span":{"filename":"src/array_string.rs","begin":[632,4],"end":[632,43]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"2:48842:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:232:929":{"id":"0:232:929","crate_id":0,"name":"next","span":{"filename":"src/arrayvec.rs","begin":[855,4],"end":[865,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:158","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6183:60137":{"id":"5:6183:60137","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:8459:220"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8459:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:445":{"id":"0:445","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[40,0],"end":[46,1]},"visibility":{"restricted":{"parent":"0:388:1598","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:447:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:647:413":{"id":"0:647:413","crate_id":0,"name":"clone","span":{"filename":"src/errors.rs","begin":[8,9],"end":[8,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:621":{"id":"0:621","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[57,0],"end":[57,37]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::errors::CapacityError","name":"CapacityError","id":"0:642:1602","glob":false}},"0:453:1784":{"id":"0:453:1784","crate_id":0,"name":"is_empty","span":{"filename":"src/array_string.rs","begin":[89,4],"end":[89,60]},"visibility":"public","docs":"Returns whether the string is empty.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3906:2420":{"id":"2:3906:2420","crate_id":2,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5568:3551":{"id":"1:5568:3551","crate_id":1,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5569:53832"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13767:59482":{"id":"2:13767:59482","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:13331:2470","str::split_terminator":"1:15910:2288","str::split":"1:15910:2288","prim@char":"1:15904:2283"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:49810:2492","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13341:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13341:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13356:2464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:372":{"id":"0:372","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1180,0],"end":[1200,1]},"visibility":{"restricted":{"parent":"0:31:1597","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2962:186","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["ge","le","lt","gt"],"trait":{"name":"PartialOrd","id":"2:2962:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:375:1004","0:376:833","0:377:799","0:378:701","0:379:718"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2952:179":{"id":"2:2952:179","crate_id":2,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2953:420","2:2954:2801","2:2955:2025","2:2956:2806"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2921:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2962:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9532:2622-0:98:1603":{"id":"a:2:9532:2622-0:98:1603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:23101:4082":{"id":"2:23101:4082","crate_id":2,"name":"SimdInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23102:4013","2:23103:58476","2:23104:1237","2:23105:1238","2:23106:42450","2:23107:58519","2:23108:58520","2:23109:58521","2:23110:58522","2:23111:58523","2:23112:58477","2:23113:58478","2:23114:58479","2:23115:58480","2:23116:58481","2:23117:58482","2:23118:58483"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3373:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23150:3537","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:6344:3580":{"id":"1:6344:3580","crate_id":1,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6345:57491","1:6346:57492"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3206-0:223:1604":{"id":"b:2:3206-0:223:1604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3180:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3176:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3209:128","2:3210:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9532:2622-0:642:1602":{"id":"a:2:9532:2622-0:642:1602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:844:227":{"id":"5:844:227","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:845:2424","5:846:2864","5:847:2865"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:221:1604":{"id":"0:221:1604","crate_id":0,"name":"IntoIter","span":{"filename":"src/arrayvec.rs","begin":[839,4],"end":[839,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}},"5:6168:60135":{"id":"5:6168:60135","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:8459:220"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8459:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13341:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3529:2408":{"id":"2:3529:2408","crate_id":2,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3531:1244"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:650":{"id":"0:650","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[8,22],"end":[8,24]},"visibility":{"restricted":{"parent":"0:575:1599","path":"::errors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3372:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3534:2409":{"id":"2:3534:2409","crate_id":2,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3536:1247"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13747:2847":{"id":"2:13747:2847","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:47779:178","self::pattern":"2:13331:2470","prim@char":"1:15904:2283"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13341:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4096-0:98:1603":{"id":"b:2:4096-0:98:1603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3368:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4094:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:4098:1441"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:8676-0:223:1604":{"id":"b:2:8676-0:223:1604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:8678:1709","2:8679:1604","2:8680:775"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"a:2:9533:2621-0:98:1603":{"id":"a:2:9533:2621-0:98:1603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:618":{"id":"0:618","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[56,0],"end":[56,41]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::array_string::ArrayString","name":"ArrayString","id":"0:634:1601","glob":false}},"0:535:701":{"id":"0:535:701","crate_id":0,"name":"ge","span":{"filename":"src/array_string.rs","begin":[540,4],"end":[540,54]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5430:3590":{"id":"1:5430:3590","crate_id":1,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5431:57518","1:5432:4438"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10436:3537","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:852:2865":{"id":"5:852:2865","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3278-0:642:1602":{"id":"b:2:3278-0:642:1602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:3271:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3368:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:4145:2526","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3280:3520"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"E"}}},"0:223:1604":{"id":"0:223:1604","crate_id":0,"name":"IntoIter","span":{"filename":"src/arrayvec.rs","begin":[847,0],"end":[850,1]},"visibility":"public","docs":"By-value iterator for `ArrayVec`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3404:2543-0:223:1604","a:2:3375:224-0:223:1604","a:2:3363:215-0:223:1604","a:2:9533:2621-0:223:1604","a:2:9532:2622-0:223:1604","b:2:3206-0:223:1604","b:2:8676-0:223:1604","b:2:2864-0:223:1604","b:2:4096-0:223:1604","b:2:2867-0:223:1604","b:2:3200-0:223:1604","b:2:3211-0:223:1604","b:2:3196-0:223:1604","b:5:848-0:223:1604","0:228","0:234","0:238","0:241","0:245","0:249"]}},"0:117:1788":{"id":"0:117:1788","crate_id":0,"name":"capacity","span":{"filename":"src/arrayvec.rs","begin":[134,4],"end":[134,49]},"visibility":"public","docs":"Return the capacity of the `ArrayVec`.\n\n```\nuse arrayvec::ArrayVec;\n\nlet array = ArrayVec::from([1, 2, 3]);\nassert_eq!(array.capacity(), 3);\n```","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:469:1728":{"id":"0:469:1728","crate_id":0,"name":"pop","span":{"filename":"src/array_string.rs","begin":[308,4],"end":[318,5]},"visibility":"public","docs":"Removes the last character from the string and returns it.\n\nReturns `None` if this `ArrayString` is empty.\n\n```\nuse arrayvec::ArrayString;\n \nlet mut s = ArrayString::<3>::from(\"foo\").unwrap();\n\nassert_eq!(s.pop(), Some('o'));\nassert_eq!(s.pop(), Some('o'));\nassert_eq!(s.pop(), Some('f'));\n\nassert_eq!(s.pop(), None);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"char"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:448":{"id":"0:448","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[48,0],"end":[420,1]},"visibility":{"restricted":{"parent":"0:388:1598","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:450:927","0:451:1775","0:452:800","0:453:1784","0:454:686","0:455:2092","0:460:2099","0:461:1788","0:462:1793","0:463:1796","0:464:1722","0:465:1724","0:466:2132","0:467:2088","0:469:1728","0:470:1731","0:471:1873","0:472:1730","0:473:1711","0:474:311","0:475:2175"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:14539:2870":{"id":"2:14539:2870","crate_id":2,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14540:57575","2:14541:57576","2:14542:57577","2:14543:57578","2:14544:57579","2:14545:57580","2:14546:2836"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3200-0:642:1602":{"id":"b:2:3200-0:642:1602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3173:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3202:686"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:518":{"id":"0:518","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[509,0],"end":[519,1]},"visibility":{"restricted":{"parent":"0:388:1598","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2883:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:520:413","0:521:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5910:2469":{"id":"5:5910:2469","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5912:183","5:5913:33201"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3404:2543":{"id":"2:3404:2543","crate_id":2,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:167:1714":{"id":"0:167:1714","crate_id":0,"name":"as_slice","span":{"filename":"src/arrayvec.rs","begin":[685,4],"end":[687,5]},"visibility":"public","docs":"Return a slice containing all elements of the vector.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:555":{"id":"0:555","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[630,0],"end":[640,1]},"visibility":{"restricted":{"parent":"0:388:1598","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3180:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Arguments","id":"2:48916:73","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:558:128","0:559:1428"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:209:775":{"id":"0:209:775","crate_id":0,"name":"into_iter","span":{"filename":"src/arrayvec.rs","begin":[806,4],"end":[806,56]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8672:152","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:281:1982":{"id":"0:281:1982","crate_id":0,"name":"next_back","span":{"filename":"src/arrayvec.rs","begin":[957,4],"end":[963,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:158","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5580:3554":{"id":"1:5580:3554","crate_id":1,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5581:6172"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13356:2464":{"id":"2:13356:2464","crate_id":2,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13358:1982","2:13359:58674","2:13360:58675"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Searcher","id":"2:13350:2465","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:332":{"id":"0:332","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1127,0],"end":[1133,1]},"visibility":{"restricted":{"parent":"0:31:1597","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"2:10800:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10800:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:335:720"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13805:59494":{"id":"2:13805:59494","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:13331:2470","prim@char":"1:15904:2283"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13341:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:119:1796":{"id":"0:119:1796","crate_id":0,"name":"remaining_capacity","span":{"filename":"src/arrayvec.rs","begin":[157,4],"end":[159,5]},"visibility":"public","docs":"Returns the capacity left in the `ArrayVec`.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3]);\narray.pop();\nassert_eq!(array.remaining_capacity(), 1);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:652":{"id":"0:652","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[8,22],"end":[8,24]},"visibility":{"restricted":{"parent":"0:575:1599","path":"::errors"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::Eq","id":"2:2921:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2921:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3404:2543-0:634:1601":{"id":"a:2:3404:2543-0:634:1601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3404:2543","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:12771:4336":{"id":"2:12771:4336","crate_id":2,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12772:1709","2:12773:1714"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13827:53514":{"id":"2:13827:53514","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:330:413":{"id":"0:330:413","crate_id":0,"name":"clone","span":{"filename":"src/arrayvec.rs","begin":[1108,4],"end":[1110,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8672:152":{"id":"2:8672:152","crate_id":2,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8673:1709","2:8674:1604","2:8675:775"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:447:59":{"id":"0:447:59","crate_id":0,"name":"default","span":{"filename":"src/array_string.rs","begin":[43,4],"end":[45,5]},"visibility":"default","docs":"Return an empty `ArrayString`","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:536":{"id":"0:536","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[543,0],"end":[552,1]},"visibility":{"restricted":{"parent":"0:388:1598","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["ge","le","lt","gt"],"trait":{"name":"PartialOrd","id":"2:2962:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"primitive","inner":"str"},"items":["0:538:1004","0:539:833","0:540:799","0:541:718","0:542:701"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2858:97":{"id":"2:2858:97","crate_id":2,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2860:1736"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3368:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:13829:59498":{"id":"2:13829:59498","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"1:15904:2283"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:50041:2479","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:113:927":{"id":"0:113:927","crate_id":0,"name":"new","span":{"filename":"src/arrayvec.rs","begin":[80,4],"end":[85,5]},"visibility":"public","docs":"Create a new empty `ArrayVec`.\n\nThe maximum capacity is given by the generic parameter `CAP`.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::<_, 16>::new();\narray.push(1);\narray.push(2);\nassert_eq!(&array[..], &[1, 2]);\nassert_eq!(array.capacity(), 16);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6163":{"id":"5:6163","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5976:1352","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:6164:60134","5:6165:1959","5:6168:60135","5:6171:60136","5:6183:60137","5:6184:60138","5:6185:3341","5:6186:53511","5:6187:53512"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10800:143":{"id":"2:10800:143","crate_id":2,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10801:720","2:10803:3123"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3521:2406":{"id":"2:3521:2406","crate_id":2,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3523:359"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3196-0:253:1605":{"id":"b:2:3196-0:253:1605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3173:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3170:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:253:1605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3199:2807"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:639":{"id":"0:639","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[33,9],"end":[33,13]},"visibility":{"restricted":{"parent":"0:388:1598","path":"::array_string"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3373:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:291:583":{"id":"0:291:583","crate_id":0,"name":"drop","span":{"filename":"src/arrayvec.rs","begin":[969,4],"end":[987,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13820:59497":{"id":"2:13820:59497","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:15904:2283","self::pattern":"2:13331:2470"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13341:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13341:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13356:2464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13755:55646":{"id":"2:13755:55646","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:13331:2470","`DoubleEndedIterator`":"2:8716:121","str::rsplit":"1:15910:2288","prim@char":"1:15904:2283","str::split_whitespace":"1:15910:2288"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:49742:2489","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13341:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9533:2621-0:634:1601":{"id":"a:2:9533:2621-0:634:1601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:368":{"id":"0:368","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1173,0],"end":[1178,1]},"visibility":{"restricted":{"parent":"0:31:1597","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:371:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2864-0:253:1605":{"id":"b:2:2864-0:253:1605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3368:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2858:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:253:1605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2866:1736"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13758:32066":{"id":"2:13758:32066","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:15904:2283","self::pattern":"2:13331:2470"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:13123:2473","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13341:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:591":{"id":"0:591","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[36,0],"end":[36,42]},"visibility":{"restricted":{"parent":"0:575:1599","path":"::errors"}},"docs":"Requires `features=\"std\"`.","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Any","id":"2:4094:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["provide","source","cause","type_id","description"],"trait":{"name":"Error","id":"2:3271:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3247:116":{"id":"2:3247:116","crate_id":2,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3248:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:663":{"id":"0:663","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[8,42],"end":[8,52]},"visibility":{"restricted":{"parent":"0:575:1599","path":"::errors"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::PartialOrd","id":"2:2962:186","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ge","le","lt","gt"],"trait":{"name":"PartialOrd","id":"2:2962:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:665:1004"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:505:310":{"id":"0:505:310","crate_id":0,"name":"as_ref","span":{"filename":"src/array_string.rs","begin":[484,4],"end":[484,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:116:1784":{"id":"0:116:1784","crate_id":0,"name":"is_empty","span":{"filename":"src/arrayvec.rs","begin":[123,4],"end":[123,60]},"visibility":"public","docs":"Returns whether the `ArrayVec` is empty.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1]);\narray.pop();\nassert_eq!(array.is_empty(), true);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:375:1004":{"id":"0:375:1004","crate_id":0,"name":"partial_cmp","span":{"filename":"src/arrayvec.rs","begin":[1181,4],"end":[1183,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"2:37899:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3211-0:634:1601":{"id":"b:2:3211-0:634:1601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3170:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3180:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3214:128","2:3215:1428"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:215:1604":{"id":"0:215:1604","crate_id":0,"name":"IntoIter","span":{"filename":"src/arrayvec.rs","begin":[822,4],"end":[822,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"IterMut","id":"2:11408:1975","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}},"0:524:1004":{"id":"0:524:1004","crate_id":0,"name":"partial_cmp","span":{"filename":"src/array_string.rs","begin":[523,4],"end":[525,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"2:37899:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13798:59490":{"id":"2:13798:59490","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13726:3618":{"id":"2:13726:3618","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"crate::ops::Index":"2:3671:2410","`str`":"1:15910:2288","str::slice_mut_unchecked":"1:15910:2288"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:14455:142":{"id":"2:14455:142","crate_id":2,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14456:282","2:14457:523","2:14458:285","2:14459:1088"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:238":{"id":"0:238","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[887,0],"end":[887,68]},"visibility":{"restricted":{"parent":"0:31:1597","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"name":"ExactSizeIterator","id":"2:8741:1983","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2867-0:223:1604":{"id":"b:2:2867-0:223:1604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3368:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2861:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2869:2029"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:189":{"id":"0:189","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[750,0],"end":[761,1]},"visibility":{"restricted":{"parent":"0:31:1597","path":"::arrayvec"}},"docs":"Create an `ArrayVec` from an array.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3]);\nassert_eq!(array.len(), 3);\nassert_eq!(array.capacity(), 3);\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3173:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"CAP"}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:193:686"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3462:2394":{"id":"2:3462:2394","crate_id":2,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3464:271"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:202:1428":{"id":"0:202:1428","crate_id":0,"name":"try_from","span":{"filename":"src/arrayvec.rs","begin":[780,4],"end":[788,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["slice",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47904:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:3180:232","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:509":{"id":"0:509","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[492,0],"end":[495,1]},"visibility":{"restricted":{"parent":"0:388:1598","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10569:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:511:665"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:6185:3341":{"id":"5:6185:3341","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:8459:220"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8459:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13718:55616":{"id":"2:13718:55616","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:47779:178"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11204:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11204:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:180":{"id":"0:180","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[725,0],"end":[731,1]},"visibility":{"restricted":{"parent":"0:31:1597","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:3586:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:183:226","0:184:548"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:214:1709":{"id":"0:214:1709","crate_id":0,"name":"Item","span":{"filename":"src/arrayvec.rs","begin":[821,4],"end":[821,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"T"}}}}},"2:13751:2812":{"id":"2:13751:2812","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:47779:178","self::pattern":"2:13331:2470","prim@char":"1:15904:2283"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13341:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13341:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13356:2464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3280:3520":{"id":"2:3280:3520","crate_id":2,"name":"provide","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["demand",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Demand","id":"2:4160:2530","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3199:2807":{"id":"2:3199:2807","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3173:136"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3200-0:634:1601":{"id":"b:2:3200-0:634:1601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3173:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3202:686"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13764:59481":{"id":"2:13764:59481","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"`DoubleEndedIterator`":"2:8716:121","self::pattern":"2:13331:2470","str::split":"1:15910:2288","str::rsplit_terminator":"1:15910:2288","prim@char":"1:15904:2283"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:49792:2493","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13341:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:201:128":{"id":"0:201:128","crate_id":0,"name":"Error","span":{"filename":"src/arrayvec.rs","begin":[778,4],"end":[778,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}}}},"2:10575:2517":{"id":"2:10575:2517","crate_id":2,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10576:665"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:14056:139":{"id":"2:14056:139","crate_id":2,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:14057:183","2:14058:1020"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:11204:218":{"id":"2:11204:218","crate_id":2,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:11206:183","2:11207:55616","2:11208:55617","2:11209:55618","2:11210:55619","2:11211:759","2:11212:760"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3368:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:11195:3537","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3372:221":{"id":"2:3372:221","crate_id":2,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:488":{"id":"0:488","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[453,0],"end":[458,1]},"visibility":{"restricted":{"parent":"0:388:1598","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2916:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:490:609"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:265":{"id":"0:265","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[937,0],"end":[937,72]},"visibility":{"restricted":{"parent":"0:31:1597","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3363:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3363:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:253:1605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:545:420":{"id":"0:545:420","crate_id":0,"name":"cmp","span":{"filename":"src/array_string.rs","begin":[556,4],"end":[558,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"2:37899:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2864-0:642:1602":{"id":"b:2:2864-0:642:1602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3368:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2858:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2866:1736"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:98:1603":{"id":"0:98:1603","crate_id":0,"name":"ArrayVec","span":{"filename":"src/arrayvec.rs","begin":[42,0],"end":[46,1]},"visibility":"public","docs":"A vector with a fixed capacity.\n\nThe `ArrayVec` is a vector backed by a fixed size array. It keeps track of\nthe number of initialized elements. The `ArrayVec<T, CAP>` is parameterized\nby `T` for the element type and `CAP` for the maximum capacity.\n\n`CAP` is of type `usize` but is range limited to `u32::MAX`; attempting to create larger\narrayvecs with larger capacity will panic.\n\nThe vector is a contiguous value (storing the elements inline) that you can store directly on\nthe stack if needed.\n\nIt offers a simple API but also dereferences to a slice, so that the full slice API is\navailable. The ArrayVec can be converted into a by value iterator.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:109","a:2:3404:2543-0:98:1603","a:2:3375:224-0:98:1603","a:2:3363:215-0:98:1603","a:2:9533:2621-0:98:1603","a:2:9532:2622-0:98:1603","b:2:3206-0:98:1603","b:2:2864-0:98:1603","b:2:4096-0:98:1603","b:2:2867-0:98:1603","b:2:3200-0:98:1603","b:2:3211-0:98:1603","b:2:3196-0:98:1603","b:5:848-0:98:1603","0:104","0:180","0:185","0:189","0:198","0:203","0:210","0:217","0:304","0:322","0:327","0:332","0:337","0:341","0:345","0:348","0:352","0:356","0:360","0:364","0:368","0:372","0:380","0:384"]}},"0:534:718":{"id":"0:534:718","crate_id":0,"name":"gt","span":{"filename":"src/array_string.rs","begin":[539,4],"end":[539,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3458:2391":{"id":"2:3458:2391","crate_id":2,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3459:183","2:3460:920"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:9533:2621":{"id":"2:9533:2621","crate_id":2,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5502:3547":{"id":"1:5502:3547","crate_id":1,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5503:57123","1:5504:57125","1:5505:57124","1:5506:57126"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:345":{"id":"0:345","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1151,0],"end":[1151,65]},"visibility":{"restricted":{"parent":"0:31:1597","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2921:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2921:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:249":{"id":"0:249","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[914,0],"end":[923,1]},"visibility":{"restricted":{"parent":"0:31:1597","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:252:665"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3196-0:223:1604":{"id":"b:2:3196-0:223:1604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3173:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3170:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3199:2807"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3446:2389":{"id":"2:3446:2389","crate_id":2,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3448:183","2:3449:563"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13714:57522":{"id":"2:13714:57522","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12795:2094"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:596":{"id":"0:596","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[44,0],"end":[48,1]},"visibility":{"restricted":{"parent":"0:575:1599","path":"::errors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:598:665"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8873:158":{"id":"2:8873:158","crate_id":2,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8874:1709","2:8875:929","2:8876:2815","2:8879:1981","2:8880:500","2:8882:2816","2:8885:2817","2:8886:2818","2:8887:2819","2:8888:2820","2:8890:2235","2:8892:2821","2:8893:2822","2:8895:848","2:8898:2823","2:8905:2824","2:8907:2825","2:8910:2826","2:8911:2827","2:8912:2828","2:8914:2829","2:8916:2830","2:8919:1320","2:8920:1958","2:8921:2831","2:8925:2832","2:8928:2833","2:8929:2834","2:8930:2835","2:8932:2836","2:8933:2023","2:8935:2837","2:8938:2838","2:8940:2839","2:8950:2840","2:8965:2841","2:8967:2842","2:8971:2843","2:8980:2844","2:8983:2845","2:8985:2846","2:8988:281","2:8995:299","2:9002:2847","2:9009:2848","2:9018:2849","2:9028:1021","2:9035:2850","2:9042:2801","2:9043:2025","2:9044:2803","2:9056:2802","2:9063:2800","2:9075:2799","2:9082:2148","2:9083:2851","2:9088:2852","2:9091:2019","2:9094:2853","2:9095:2854","2:9097:2855","2:9099:2856","2:9101:420","2:9104:2857","2:9107:1004","2:9110:2858","2:9113:609","2:9116:2859","2:9119:914","2:9121:833","2:9123:799","2:9125:718","2:9127:701","2:9129:2860","2:9130:2861","2:9138:2862"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3196-0:634:1601":{"id":"b:2:3196-0:634:1601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3173:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3170:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3199:2807"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:124:1730":{"id":"0:124:1730","crate_id":0,"name":"clear","span":{"filename":"src/arrayvec.rs","begin":[250,4],"end":[252,5]},"visibility":"public","docs":"Remove all elements in the vector.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8716:121":{"id":"2:8716:121","crate_id":2,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8717:1982","2:8718:2808","2:8719:2809","2:8720:2810","2:8724:2811","2:8727:2812"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13716:309":{"id":"2:13716:309","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"`u8`":"1:15921:2297","str::as_mut_ptr":"1:15910:2288"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13731:3953":{"id":"2:13731:3953","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:15904:2283"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49718:2476","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3474:2395":{"id":"2:3474:2395","crate_id":2,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3476:564"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13735:4667":{"id":"2:13735:4667","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:49996:2482","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3200-0:98:1603":{"id":"b:2:3200-0:98:1603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3173:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3202:686"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:193:686":{"id":"0:193:686","crate_id":0,"name":"from","span":{"filename":"src/arrayvec.rs","begin":[751,4],"end":[760,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["array",{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"CAP"}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13734:32188":{"id":"2:13734:32188","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"1:15910:2288"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:50025:2472","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:474:311":{"id":"0:474:311","crate_id":0,"name":"as_str","span":{"filename":"src/array_string.rs","begin":[404,4],"end":[406,5]},"visibility":"public","docs":"Return a string slice of the whole `ArrayString`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:450:927":{"id":"0:450:927","crate_id":0,"name":"new","span":{"filename":"src/array_string.rs","begin":[62,4],"end":[67,5]},"visibility":"public","docs":"Create a new empty `ArrayString`.\n\nCapacity is inferred from the type parameter.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<16>::new();\nstring.push_str(\"foo\");\nassert_eq!(&string[..], \"foo\");\nassert_eq!(string.capacity(), 16);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:220:1709":{"id":"0:220:1709","crate_id":0,"name":"Item","span":{"filename":"src/arrayvec.rs","begin":[838,4],"end":[838,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"1:6652:3526":{"id":"1:6652:3526","crate_id":1,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6653:54083"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6578:3545":{"id":"1:6578:3545","crate_id":1,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6579:8097","1:6580:53604"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10436:3537","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10583:2516":{"id":"2:10583:2516","crate_id":2,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10584:665"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13761:55649":{"id":"2:13761:55649","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"prim@char":"1:15904:2283","str::split":"1:15910:2288","self::pattern":"2:13331:2470","`DoubleEndedIterator`":"2:8716:121"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:49760:2488","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13341:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13341:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13356:2464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:634:1601":{"id":"0:634:1601","crate_id":0,"name":"ArrayString","span":{"filename":"src/array_string.rs","begin":[34,0],"end":[38,1]},"visibility":"public","docs":"A string with a fixed capacity.\n\nThe `ArrayString` is a string backed by a fixed size array. It keeps track\nof its length, and is parameterized by `CAP` for the maximum capacity.\n\n`CAP` is of type `usize` but is range limited to `u32::MAX`; attempting to create larger\narrayvecs with larger capacity will panic.\n\nThe string is a contiguous value that you can store directly on the stack\nif needed.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:448","a:2:3404:2543-0:634:1601","a:2:3375:224-0:634:1601","a:2:3363:215-0:634:1601","a:2:9533:2621-0:634:1601","a:2:9532:2622-0:634:1601","b:2:3206-0:634:1601","b:2:2864-0:634:1601","b:2:4096-0:634:1601","b:2:2867-0:634:1601","b:2:3200-0:634:1601","b:2:3211-0:634:1601","b:2:3196-0:634:1601","b:5:6500-0:634:1601","b:5:848-0:634:1601","0:639","0:445","0:478","0:482","0:485","0:488","0:491","0:494","0:496","0:500","0:503","0:506","0:509","0:512","0:518","0:522","0:529","0:536","0:543","0:546","0:550","0:555"]}},"2:3164:75":{"id":"2:3164:75","crate_id":2,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3166:310"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3368:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:481:548":{"id":"0:481:548","crate_id":0,"name":"deref","span":{"filename":"src/array_string.rs","begin":[426,4],"end":[431,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3525:2407":{"id":"2:3525:2407","crate_id":2,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3527:362"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:331:415":{"id":"0:331:415","crate_id":0,"name":"clone_from","span":{"filename":"src/arrayvec.rs","begin":[1112,4],"end":[1124,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3215:1428":{"id":"2:3215:1428","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47904:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"2:3180:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:322":{"id":"0:322","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1094,0],"end":[1103,1]},"visibility":{"restricted":{"parent":"0:31:1597","path":"::arrayvec"}},"docs":"Create an `ArrayVec` from an iterator.\n \n***Panics*** if the number of elements in the iterator exceeds the arrayvec's capacity.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromIterator","id":"2:8668:137","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:325:689"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:658":{"id":"0:658","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[8,31],"end":[8,40]},"visibility":{"restricted":{"parent":"0:575:1599","path":"::errors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3371:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13361:2462":{"id":"2:13361:2462","crate_id":2,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13356:2464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:8676-0:253:1605":{"id":"b:2:8676-0:253:1605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:253:1605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:8678:1709","2:8679:1604","2:8680:775"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"2:13724:55619":{"id":"2:13724:55619","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11204:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11204:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:554:1428":{"id":"0:554:1428","crate_id":0,"name":"try_from","span":{"filename":"src/array_string.rs","begin":[623,4],"end":[627,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["f",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47904:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:3180:232","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13782:2237":{"id":"2:13782:2237","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"`DoubleEndedIterator`":"2:8716:121","str::matches":"1:15910:2288","prim@char":"1:15904:2283","self::pattern":"2:13331:2470"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:49946:2486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13341:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10512:2034":{"id":"2:10512:2034","crate_id":2,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10513:1546","2:10514:2181","2:10516:2196"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:115:800":{"id":"0:115:800","crate_id":0,"name":"len","span":{"filename":"src/arrayvec.rs","begin":[111,4],"end":[111,58]},"visibility":"public","docs":"Return the number of elements in the `ArrayVec`.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3]);\narray.pop();\nassert_eq!(array.len(), 2);\n```","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23762:4015":{"id":"2:23762:4015","crate_id":2,"name":"SimdPartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23763:1282","2:23764:1281","2:23765:1279","2:23766:1278"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdPartialEq","id":"2:23174:4096","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:269":{"id":"0:269","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[939,0],"end":[953,1]},"visibility":{"restricted":{"parent":"0:31:1597","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["last","size_hint","ge","count","any","eq_by","cycle","find","le","is_partitioned","all","inspect","map","take_while","for_each","advance_by","min_by","is_sorted","min","take","cloned","find_map","array_chunks","try_fold","by_ref","map_while","filter","nth","min_by_key","is_sorted_by","sum","rev","try_find","try_for_each","try_collect","scan","filter_map","step_by","position","max","is_sorted_by_key","skip","product","rposition","fold","collect_into","flat_map","enumerate","chain","lt","zip","max_by","__iterator_get_unchecked","partial_cmp","cmp_by","unzip","reduce","partition","flatten","gt","peekable","intersperse","next_chunk","max_by_key","partial_cmp_by","collect","copied","cmp","try_reduce","eq","partition_in_place","fuse","ne","skip_while","intersperse_with"],"trait":{"name":"Iterator","id":"2:8873:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:253:1605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:273:1709","0:274:929","0:276:1981"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5572:3552":{"id":"1:5572:3552","crate_id":1,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5573:53545"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10436:3537","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:107:583":{"id":"0:107:583","crate_id":0,"name":"drop","span":{"filename":"src/arrayvec.rs","begin":[49,4],"end":[53,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13709:59476":{"id":"2:13709:59476","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:593":{"id":"0:593","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[38,0],"end":[42,1]},"visibility":{"restricted":{"parent":"0:575:1599","path":"::errors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10569:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:595:665"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:377:799":{"id":"0:377:799","crate_id":0,"name":"le","span":{"filename":"src/arrayvec.rs","begin":[1189,4],"end":[1191,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:595:665":{"id":"0:595:665","crate_id":0,"name":"fmt","span":{"filename":"src/errors.rs","begin":[39,4],"end":[41,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10511:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3211-0:223:1604":{"id":"b:2:3211-0:223:1604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3170:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3180:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3214:128","2:3215:1428"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:283":{"id":"0:283","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[966,0],"end":[966,76]},"visibility":{"restricted":{"parent":"0:31:1597","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"name":"ExactSizeIterator","id":"2:8741:1983","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:253:1605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3431:2388":{"id":"2:3431:2388","crate_id":2,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3433:183","2:3434:270"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:851:2864":{"id":"5:851:2864","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8681:2001":{"id":"2:8681:2001","crate_id":2,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8683:2002","2:8685:2813","2:8686:2814"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3209:128":{"id":"2:3209:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:3180:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"0:553:128":{"id":"0:553:128","crate_id":0,"name":"Error","span":{"filename":"src/array_string.rs","begin":[621,4],"end":[621,40]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}}},"0:628":{"id":"0:628","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[59,36],"end":[59,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::arrayvec::IntoIter","name":"IntoIter","id":"0:223:1604","glob":false}},"2:3828:138":{"id":"2:3828:138","crate_id":2,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3830:692"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3823:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:4096-0:253:1605":{"id":"b:2:4096-0:253:1605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3368:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4094:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:253:1605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:4098:1441"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13808:14985":{"id":"2:13808:14985","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:15904:2283","self::pattern":"2:13331:2470"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13341:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:511:665":{"id":"0:511:665","crate_id":0,"name":"fmt","span":{"filename":"src/array_string.rs","begin":[494,4],"end":[494,76]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10511:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:156:1711":{"id":"0:156:1711","crate_id":0,"name":"set_len","span":{"filename":"src/arrayvec.rs","begin":[540,4],"end":[544,5]},"visibility":"public","docs":"Set the vector’s length without dropping or moving out elements\n\nThis method is `unsafe` because it changes the notion of the\nnumber of “valid” elements in the vector. Use with care.\n\nThis method uses *debug assertions* to check that `length` is\nnot greater than the capacity.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["length",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:487:609":{"id":"0:487:609","crate_id":0,"name":"eq","span":{"filename":"src/array_string.rs","begin":[448,4],"end":[450,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3404:2543-0:642:1602":{"id":"a:2:3404:2543-0:642:1602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3404:2543","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3404:2543","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3196-0:98:1603":{"id":"b:2:3196-0:98:1603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3173:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3170:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3199:2807"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3505:2403":{"id":"2:3505:2403","crate_id":2,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3507:183","2:3508:1243"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:231:1709":{"id":"0:231:1709","crate_id":0,"name":"Item","span":{"filename":"src/arrayvec.rs","begin":[853,4],"end":[853,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"b:2:3211-0:98:1603":{"id":"b:2:3211-0:98:1603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3170:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3180:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3214:128","2:3215:1428"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:252:665":{"id":"0:252:665","crate_id":0,"name":"fmt","span":{"filename":"src/arrayvec.rs","begin":[918,4],"end":[922,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10511:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:210":{"id":"0:210","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[820,0],"end":[824,1]},"visibility":{"restricted":{"parent":"0:31:1597","path":"::arrayvec"}},"docs":"Iterate the `ArrayVec` with mutable references to each element.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3]);\n\nfor elt in &mut array {\n    // ...\n}\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}},"items":["0:214:1709","0:215:1604","0:216:775"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:512":{"id":"0:512","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[498,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:388:1598","path":"::array_string"}},"docs":"`Write` appends written data to the end of the string.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["write_fmt","write_char"],"trait":{"name":"Write","id":"2:10512:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:514:2181","0:516:1546"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3436:2393":{"id":"2:3436:2393","crate_id":2,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3438:183","2:3439:1367"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:367:665":{"id":"0:367:665","crate_id":0,"name":"fmt","span":{"filename":"src/arrayvec.rs","begin":[1170,4],"end":[1170,76]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10511:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8741:1983":{"id":"2:8741:1983","crate_id":2,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8742:800","2:8743:1784"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:132:1873":{"id":"0:132:1873","crate_id":0,"name":"remove","span":{"filename":"src/arrayvec.rs","begin":[415,4],"end":[420,5]},"visibility":"public","docs":"Remove the element at `index` and shift down the following elements.\n\nThe `index` must be strictly less than the length of the vector.\n\n***Panics*** if the `index` is out of bounds.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3]);\n\nlet removed_elt = array.remove(0);\nassert_eq!(removed_elt, 1);\nassert_eq!(&array[..], &[2, 3]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3478:2397":{"id":"2:3478:2397","crate_id":2,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3480:1112"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:665:1004":{"id":"0:665:1004","crate_id":0,"name":"partial_cmp","span":{"filename":"src/errors.rs","begin":[8,42],"end":[8,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::option::Option","id":"2:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:37899:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5524:3542":{"id":"1:5524:3542","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5525:7633","1:5526:53832","1:5527:6172","1:5528:53833","1:5529:3848","1:5530:3849","1:5531:53834","1:5532:1316","1:5533:53835","1:5534:53836","1:5535:53837","1:5536:53838","1:5537:53839","1:5538:53840","1:5539:53841","1:5540:53842"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:325:689":{"id":"0:325:689","crate_id":0,"name":"from_iter","span":{"filename":"src/arrayvec.rs","begin":[1098,4],"end":[1102,5]},"visibility":"default","docs":"Create an `ArrayVec` from an iterator.\n \n***Panics*** if the number of elements in the iterator exceeds the arrayvec's capacity.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["iter",{"kind":"generic","inner":"I"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"T"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6246:3533":{"id":"1:6246:3533","crate_id":1,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6247:57289","1:6248:8057","1:6249:57290","1:6250:57291","1:6251:57292","1:6252:57293"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10436:3537","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9533:2621-0:253:1605":{"id":"a:2:9533:2621-0:253:1605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:253:1605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:274:929":{"id":"0:274:929","crate_id":0,"name":"next","span":{"filename":"src/arrayvec.rs","begin":[942,4],"end":[948,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:158","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:121:1724":{"id":"0:121:1724","crate_id":0,"name":"try_push","span":{"filename":"src/arrayvec.rs","begin":[201,4],"end":[203,5]},"visibility":"public","docs":"Push `element` to the end of the vector.\n\nReturn `Ok` if the push succeeds, or return an error if the vector\nis already full.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::<_, 2>::new();\n\nlet push1 = array.try_push(1);\nlet push2 = array.try_push(2);\n\nassert!(push1.is_ok());\nassert!(push2.is_ok());\n\nassert_eq!(&array[..], &[1, 2]);\n\nlet overflow = array.try_push(3);\n\nassert!(overflow.is_err());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["element",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47904:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6164:60134":{"id":"5:6164:60134","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:444:2467","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8204:2871","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:444:2467","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8204:2871","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:207:1709":{"id":"0:207:1709","crate_id":0,"name":"Item","span":{"filename":"src/arrayvec.rs","begin":[804,4],"end":[804,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"T"}}}}},"0:500":{"id":"0:500","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[477,0],"end":[480,1]},"visibility":{"restricted":{"parent":"0:388:1598","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2858:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:502:1736"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3610:1757":{"id":"2:3610:1757","crate_id":2,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3611:583"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:525:833":{"id":"0:525:833","crate_id":0,"name":"lt","span":{"filename":"src/array_string.rs","begin":[526,4],"end":[526,55]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3211-0:253:1605":{"id":"b:2:3211-0:253:1605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3170:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3180:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:253:1605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3214:128","2:3215:1428"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:4145:2526":{"id":"2:4145:2526","crate_id":2,"name":"Provider","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4146:3520"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2962:186":{"id":"2:2962:186","crate_id":2,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2964:1004","2:2965:833","2:2966:799","2:2967:718","2:2968:701"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3368:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2916:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:4096-0:642:1602":{"id":"b:2:4096-0:642:1602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3368:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4094:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:4098:1441"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4096-0:223:1604":{"id":"b:2:4096-0:223:1604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3368:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4094:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:4098:1441"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:542:701":{"id":"0:542:701","crate_id":0,"name":"ge","span":{"filename":"src/array_string.rs","begin":[551,4],"end":[551,67]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:480:226":{"id":"0:480:226","crate_id":0,"name":"Target","span":{"filename":"src/array_string.rs","begin":[424,4],"end":[424,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"str"}}},"0:550":{"id":"0:550","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[619,0],"end":[628,1]},"visibility":{"restricted":{"parent":"0:388:1598","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3180:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:553:128","0:554:1428"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:161:1947":{"id":"0:161:1947","crate_id":0,"name":"into_inner","span":{"filename":"src/arrayvec.rs","begin":[652,4],"end":[658,5]},"visibility":"public","docs":"Return the inner fixed size array, if it is full to its capacity.\n\nReturn an `Ok` value with the array if length equals capacity,\nreturn an `Err` with self otherwise.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47904:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"CAP"}}},{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13270:2062":{"id":"2:13270:2062","crate_id":2,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13271:127","2:13272:2184"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13727:59479":{"id":"2:13727:59479","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"str::slice_unchecked":"1:15910:2288","crate::ops::IndexMut":"2:3675:2411","`str`":"1:15910:2288"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:13722:55618":{"id":"2:13722:55618","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11204:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11204:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:471:1873":{"id":"0:471:1873","crate_id":0,"name":"remove","span":{"filename":"src/array_string.rs","begin":[366,4],"end":[381,5]},"visibility":"public","docs":"Removes a `char` from this `ArrayString` at a byte position and returns it.\n\nThis is an `O(n)` operation, as it requires copying every element in the\narray.\n\n***Panics*** if `idx` is larger than or equal to the `ArrayString`’s length,\nor if it does not lie on a `char` boundary.\n\n```\nuse arrayvec::ArrayString;\n \nlet mut s = ArrayString::<3>::from(\"foo\").unwrap();\n\nassert_eq!(s.remove(0), 'f');\nassert_eq!(s.remove(1), 'o');\nassert_eq!(s.remove(0), 'o');\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["idx",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"char"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:493:609":{"id":"0:493:609","crate_id":0,"name":"eq","span":{"filename":"src/array_string.rs","begin":[462,4],"end":[464,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2861:98":{"id":"2:2861:98","crate_id":2,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2863:2029"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3368:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2858:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:2883:105":{"id":"2:2883:105","crate_id":2,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2884:413","2:2885:415"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3375:224-0:634:1601":{"id":"a:2:3375:224-0:634:1601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3375:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13738:3122":{"id":"2:13738:3122","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:15904:2283","self::pattern":"2:13331:2470"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13341:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13817:59496":{"id":"2:13817:59496","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:13331:2470","prim@char":"1:15904:2283"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13341:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8196:3333":{"id":"2:8196:3333","crate_id":2,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8197:58361","2:8198:58362","2:8199:58359","2:8200:58355","2:8201:58363","2:8202:58360","2:8203:58358"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2883:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2962:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:4098:1441":{"id":"2:4098:1441","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:46307:2524","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13828:53515":{"id":"2:13828:53515","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13737:32183":{"id":"2:13737:32183","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:50034:2471","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:163:1948":{"id":"0:163:1948","crate_id":0,"name":"into_inner_unchecked","span":{"filename":"src/arrayvec.rs","begin":[664,4],"end":[669,5]},"visibility":"public","docs":"Return the inner fixed size array.\n\nSafety:\nThis operation is safe if and only if length equals capacity.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"CAP"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:3271:128":{"id":"2:3271:128","crate_id":2,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3272:2509","2:3274:3518","2:3275:3519","2:3276:3520"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Display","id":"2:10569:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:526:799":{"id":"0:526:799","crate_id":0,"name":"le","span":{"filename":"src/array_string.rs","begin":[527,4],"end":[527,56]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6184:60138":{"id":"5:6184:60138","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:444:2467","`String`":"5:8459:220"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:444:2467","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8204:2871","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8459:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3368:2445":{"id":"2:3368:2445","crate_id":2,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10571:2511":{"id":"2:10571:2511","crate_id":2,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10572:665"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2867-0:253:1605":{"id":"b:2:2867-0:253:1605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3368:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2861:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:253:1605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2869:2029"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:491":{"id":"0:491","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[460,0],"end":[465,1]},"visibility":{"restricted":{"parent":"0:388:1598","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2916:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"primitive","inner":"str"},"items":["0:493:609"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:337":{"id":"0:337","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1135,0],"end":[1141,1]},"visibility":{"restricted":{"parent":"0:31:1597","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2916:185","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2916:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:340:609"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3202:686":{"id":"2:3202:686","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:183:226":{"id":"0:183:226","crate_id":0,"name":"Target","span":{"filename":"src/arrayvec.rs","begin":[726,4],"end":[726,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}},"0:340:609":{"id":"0:340:609","crate_id":0,"name":"eq","span":{"filename":"src/arrayvec.rs","begin":[1138,4],"end":[1140,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:7607:3740":{"id":"1:7607:3740","crate_id":1,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7608:53322"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:120:1722":{"id":"0:120:1722","crate_id":0,"name":"push","span":{"filename":"src/arrayvec.rs","begin":[175,4],"end":[177,5]},"visibility":"public","docs":"Push `element` to the end of the vector.\n\n***Panics*** if the vector is already full.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::<_, 2>::new();\n\narray.push(1);\narray.push(2);\n\nassert_eq!(&array[..], &[1, 2]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["element",{"kind":"generic","inner":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10845:2426":{"id":"2:10845:2426","crate_id":2,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10846:147","2:10847:33403","2:10848:54222"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:208:1604":{"id":"0:208:1604","crate_id":0,"name":"IntoIter","span":{"filename":"src/arrayvec.rs","begin":[805,4],"end":[805,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11384:1972","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}},"0:498:720":{"id":"0:498:720","crate_id":0,"name":"hash","span":{"filename":"src/array_string.rs","begin":[472,4],"end":[474,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["h",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Hasher","id":"2:10810:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:335:720":{"id":"0:335:720","crate_id":0,"name":"hash","span":{"filename":"src/arrayvec.rs","begin":[1130,4],"end":[1132,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Hasher","id":"2:10810:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13715:59478":{"id":"2:13715:59478","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:13785:59485":{"id":"2:13785:59485","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"prim@char":"1:15904:2283","str::matches":"1:15910:2288","self::pattern":"2:13331:2470","`DoubleEndedIterator`":"2:8716:121"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:49964:2487","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13341:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13341:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13356:2464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3517:2405":{"id":"2:3517:2405","crate_id":2,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3519:357"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:473:1711":{"id":"0:473:1711","crate_id":0,"name":"set_len","span":{"filename":"src/array_string.rs","begin":[397,4],"end":[401,5]},"visibility":"public","docs":"Set the strings’s length.\n\nThis function is `unsafe` because it changes the notion of the\nnumber of “valid” bytes in the string. Use with care.\n\nThis method uses *debug assertions* to check the validity of `length`\nand may use other debug assertions.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["length",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:3466:2398":{"id":"2:3466:2398","crate_id":2,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3468:1368"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:273:1709":{"id":"0:273:1709","crate_id":0,"name":"Item","span":{"filename":"src/arrayvec.rs","begin":[940,4],"end":[940,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"2:13341:2463":{"id":"2:13341:2463","crate_id":2,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13343:2465","2:13344:59221","2:13345:59222","2:13346:59223","2:13347:59225","2:13348:59224","2:13349:59226"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2869:2029":{"id":"2:2869:2029","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:478":{"id":"0:478","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[422,0],"end":[432,1]},"visibility":{"restricted":{"parent":"0:388:1598","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:3586:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:480:226","0:481:548"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:585":{"id":"0:585","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[13,0],"end":[30,1]},"visibility":{"restricted":{"parent":"0:575:1599","path":"::errors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:587:927","0:588:1723","0:589:2185"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:541:718":{"id":"0:541:718","crate_id":0,"name":"gt","span":{"filename":"src/array_string.rs","begin":[550,4],"end":[550,66]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:475:2175":{"id":"0:475:2175","crate_id":0,"name":"as_mut_str","span":{"filename":"src/array_string.rs","begin":[409,4],"end":[411,5]},"visibility":"public","docs":"Return a mutable string slice of the whole `ArrayString`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:494":{"id":"0:494","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[467,0],"end":[468,3]},"visibility":{"restricted":{"parent":"0:388:1598","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2921:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:371:59":{"id":"0:371:59","crate_id":0,"name":"default","span":{"filename":"src/arrayvec.rs","begin":[1175,4],"end":[1177,5]},"visibility":"default","docs":"Return an empty array","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:233:1981":{"id":"0:233:1981","crate_id":0,"name":"size_hint","span":{"filename":"src/arrayvec.rs","begin":[867,4],"end":[870,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:589:2185":{"id":"0:589:2185","crate_id":0,"name":"simplify","span":{"filename":"src/errors.rs","begin":[27,4],"end":[29,5]},"visibility":"public","docs":"Convert into a `CapacityError` that does not carry an element.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13736:59480":{"id":"2:13736:59480","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:50006:2483","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:135:1888":{"id":"0:135:1888","crate_id":0,"name":"retain","span":{"filename":"src/arrayvec.rs","begin":[459,4],"end":[531,5]},"visibility":"public","docs":"Retains only the elements specified by the predicate.\n\nIn other words, remove all elements `e` such that `f(&mut e)` returns false.\nThis method operates in place and preserves the order of the retained\nelements.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3, 4]);\narray.retain(|x| *x & 1 != 0 );\nassert_eq!(&array[..], &[1, 3]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3616:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3206-0:634:1601":{"id":"b:2:3206-0:634:1601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3180:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3176:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3209:128","2:3210:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:520:413":{"id":"0:520:413","crate_id":0,"name":"clone","span":{"filename":"src/array_string.rs","begin":[511,4],"end":[513,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:386:1727":{"id":"0:386:1727","crate_id":0,"name":"write","span":{"filename":"src/arrayvec.rs","begin":[1213,4],"end":[1218,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["data",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:3801:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:496":{"id":"0:496","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[470,0],"end":[475,1]},"visibility":{"restricted":{"parent":"0:388:1598","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10800:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:498:720"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13823:4131":{"id":"2:13823:4131","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:13270:2062","`FromStr`":"2:13270:2062"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47904:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:13270:2062","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:13270:2062","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6502:1409":{"id":"5:6502:1409","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8459:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4757:3561":{"id":"1:4757:3561","crate_id":1,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4758:1972","1:4759:54124"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:645":{"id":"0:645","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[8,9],"end":[8,14]},"visibility":{"restricted":{"parent":"0:575:1599","path":"::errors"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2883:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2883:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:647:413"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:470:1731":{"id":"0:470:1731","crate_id":0,"name":"truncate","span":{"filename":"src/array_string.rs","begin":[336,4],"end":[347,5]},"visibility":"public","docs":"Shortens this `ArrayString` to the specified length.\n\nIf `new_len` is greater than the string’s current length, this has no\neffect.\n\n***Panics*** if `new_len` does not lie on a `char` boundary.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<6>::from(\"foobar\").unwrap();\nstring.truncate(3);\nassert_eq!(&string[..], \"foo\");\nstring.truncate(4);\nassert_eq!(&string[..], \"foo\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["new_len",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:188:550":{"id":"0:188:550","crate_id":0,"name":"deref_mut","span":{"filename":"src/arrayvec.rs","begin":[735,4],"end":[737,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:3586:117","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2916:185":{"id":"2:2916:185","crate_id":2,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2918:609","2:2919:914"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3368:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:10577:2518":{"id":"2:10577:2518","crate_id":2,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10578:665"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:548:127":{"id":"0:548:127","crate_id":0,"name":"Err","span":{"filename":"src/array_string.rs","begin":[563,4],"end":[563,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}}}},"0:598:665":{"id":"0:598:665","crate_id":0,"name":"fmt","span":{"filename":"src/errors.rs","begin":[45,4],"end":[47,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10511:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:248:413":{"id":"0:248:413","crate_id":0,"name":"clone","span":{"filename":"src/arrayvec.rs","begin":[907,4],"end":[911,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3811:2412":{"id":"2:3811:2412","crate_id":2,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3368:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"RangeBounds","id":"2:3742:1735","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:527:718":{"id":"0:527:718","crate_id":0,"name":"gt","span":{"filename":"src/array_string.rs","begin":[528,4],"end":[528,55]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:14071:151":{"id":"2:14071:151","crate_id":2,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:14072:183","2:14073:151","2:14074:774"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:559:1428":{"id":"0:559:1428","crate_id":0,"name":"try_from","span":{"filename":"src/array_string.rs","begin":[634,4],"end":[639,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["f",{"kind":"resolved_path","inner":{"name":"fmt::Arguments","id":"2:48916:73","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47904:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:3180:232","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13832:59499":{"id":"2:13832:59499","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:15904:2283"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:50059:2481","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13711:59477":{"id":"2:13711:59477","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"1:15910:2288"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6581:3530":{"id":"1:6581:3530","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6582:8524"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10436:3537","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:237:1982":{"id":"0:237:1982","crate_id":0,"name":"next_back","span":{"filename":"src/arrayvec.rs","begin":[874,4],"end":[884,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:158","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:6500-0:642:1602":{"id":"b:5:6500-0:642:1602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10569:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3368:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6498:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:6502:1409"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:327":{"id":"0:327","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1105,0],"end":[1125,1]},"visibility":{"restricted":{"parent":"0:31:1597","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2883:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2883:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:330:413","0:331:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:277":{"id":"0:277","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[955,0],"end":[964,1]},"visibility":{"restricted":{"parent":"0:31:1597","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["advance_back_by","try_rfold","rfind","nth_back","rfold"],"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:253:1605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:281:1982"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:521:415":{"id":"0:521:415","crate_id":0,"name":"clone_from","span":{"filename":"src/array_string.rs","begin":[514,4],"end":[518,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:662:609":{"id":"0:662:609","crate_id":0,"name":"eq","span":{"filename":"src/errors.rs","begin":[8,31],"end":[8,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13770:55651":{"id":"2:13770:55651","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"self::pattern":"2:13331:2470","str::rsplitn":"1:15910:2288","prim@char":"1:15904:2283"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:49846:2491","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13341:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:127:1839":{"id":"0:127:1839","crate_id":0,"name":"try_insert","span":{"filename":"src/arrayvec.rs","begin":[304,4],"end":[328,5]},"visibility":"public","docs":"Insert `element` at position `index`.\n\nShift up all elements after `index`; the `index` must be less than\nor equal to the length.\n\nReturns an error if vector is already at full capacity.\n\n***Panics*** `index` is out of bounds.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::<_, 2>::new();\n\nassert!(array.try_insert(0, \"x\").is_ok());\nassert!(array.try_insert(0, \"y\").is_ok());\nassert!(array.try_insert(0, \"z\").is_err());\nassert_eq!(&array[..], &[\"y\", \"x\"]);\n\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}],["element",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47904:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3173:136":{"id":"2:3173:136","crate_id":2,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3175:686"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13776:59483":{"id":"2:13776:59483","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13341:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9532:2622":{"id":"2:9532:2622","crate_id":2,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3375:224-0:98:1603":{"id":"a:2:3375:224-0:98:1603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3375:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3375:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:10579:191":{"id":"2:10579:191","crate_id":2,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10580:665"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9532:2622-0:253:1605":{"id":"a:2:9532:2622-0:253:1605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:253:1605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3619:133":{"id":"2:3619:133","crate_id":2,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3621:183","2:3622:383"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13728:55638":{"id":"2:13728:55638","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"1:15910:2288"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:348":{"id":"0:348","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1153,0],"end":[1155,1]},"visibility":{"restricted":{"parent":"0:31:1597","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2858:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:351:1736"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5906:2468":{"id":"5:5906:2468","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5908:183","5:5909:437"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3368:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:482":{"id":"0:482","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[434,0],"end":[444,1]},"visibility":{"restricted":{"parent":"0:388:1598","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"DerefMut","id":"2:3599:1734","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:484:550"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:529":{"id":"0:529","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[532,0],"end":[541,1]},"visibility":{"restricted":{"parent":"0:388:1598","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["ge","le","lt","gt"],"trait":{"name":"PartialOrd","id":"2:2962:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:531:1004","0:532:833","0:533:799","0:534:718","0:535:701"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:514:2181":{"id":"0:514:2181","crate_id":0,"name":"write_char","span":{"filename":"src/array_string.rs","begin":[500,4],"end":[502,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["c",{"kind":"primitive","inner":"char"}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10511:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:454:686":{"id":"0:454:686","crate_id":0,"name":"from","span":{"filename":"src/array_string.rs","begin":[105,4],"end":[109,5]},"visibility":"public","docs":"Create a new `ArrayString` from a `str`.\n\nCapacity is inferred from the type parameter.\n\n**Errors** if the backing array is not large enough to fit the string.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<3>::from(\"foo\").unwrap();\nassert_eq!(&string[..], \"foo\");\nassert_eq!(string.len(), 3);\nassert_eq!(string.capacity(), 3);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47904:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:387:2037":{"id":"0:387:2037","crate_id":0,"name":"flush","span":{"filename":"src/arrayvec.rs","begin":[1219,4],"end":[1219,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:3801:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3495:2400":{"id":"2:3495:2400","crate_id":2,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3497:183","2:3498:358"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3470:2396":{"id":"2:3470:2396","crate_id":2,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3472:900"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:360":{"id":"0:360","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1165,0],"end":[1167,1]},"visibility":{"restricted":{"parent":"0:31:1597","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsMut","id":"2:3167:74","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:363:2030"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:6186:53511":{"id":"5:6186:53511","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:15910:2288"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8459:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9153:2461":{"id":"2:9153:2461","crate_id":2,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:9156:3295":{"id":"2:9156:3295","crate_id":2,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:184:548":{"id":"0:184:548","crate_id":0,"name":"deref","span":{"filename":"src/arrayvec.rs","begin":[728,4],"end":[730,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:3586:117","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5510:3548":{"id":"1:5510:3548","crate_id":1,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5511:6172","1:5512:57851","1:5513:57852"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:502:1736":{"id":"0:502:1736","crate_id":0,"name":"borrow","span":{"filename":"src/array_string.rs","begin":[479,4],"end":[479,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:4895:4094":{"id":"2:4895:4094","crate_id":2,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4896:1709","2:4897:58064","2:4898:1981"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:452:800":{"id":"0:452:800","crate_id":0,"name":"len","span":{"filename":"src/array_string.rs","begin":[85,4],"end":[85,58]},"visibility":"public","docs":"Return the length of the string.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3363:215-0:634:1601":{"id":"a:2:3363:215-0:634:1601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3363:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:23386:16469":{"id":"2:23386:16469","crate_id":2,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23387:5707","2:23388:58461","2:23389:58462"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23379:3537","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13796:59489":{"id":"2:13796:59489","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:131:1861":{"id":"0:131:1861","crate_id":0,"name":"swap_pop","span":{"filename":"src/arrayvec.rs","begin":[391,4],"end":[398,5]},"visibility":"public","docs":"Remove the element at `index` and swap the last element into its place.\n\nThis is a checked version of `.swap_remove`.  \nThis operation is O(1).\n\nReturn `Some(` *element* `)` if the index is in bounds, else `None`.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3]);\n\nassert_eq!(array.swap_pop(0), Some(1));\nassert_eq!(&array[..], &[3, 2]);\n\nassert_eq!(array.swap_pop(10), None);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8679:1604":{"id":"2:8679:1604","crate_id":2,"name":"IntoIter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"I"}}},"2:13733:32198":{"id":"2:13733:32198","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"1:15910:2288"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:50016:2474","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:169:309":{"id":"0:169:309","crate_id":0,"name":"as_ptr","span":{"filename":"src/arrayvec.rs","begin":[695,4],"end":[697,5]},"visibility":"public","docs":"Return a raw pointer to the vector's buffer.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:464:1722":{"id":"0:464:1722","crate_id":0,"name":"push","span":{"filename":"src/array_string.rs","begin":[204,4],"end":[206,5]},"visibility":"public","docs":"Adds the given char to the end of the string.\n\n***Panics*** if the backing array is not large enough to fit the additional char.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<2>::new();\n\nstring.push('a');\nstring.push('b');\n\nassert_eq!(&string[..], \"ab\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["c",{"kind":"primitive","inner":"char"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3206-0:98:1603":{"id":"b:2:3206-0:98:1603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3180:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3176:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3209:128","2:3210:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:355:2029":{"id":"0:355:2029","crate_id":0,"name":"borrow_mut","span":{"filename":"src/arrayvec.rs","begin":[1158,4],"end":[1158,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2921:125":{"id":"2:2921:125","crate_id":2,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2916:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:503":{"id":"0:503","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[482,0],"end":[485,1]},"visibility":{"restricted":{"parent":"0:388:1598","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsRef","id":"2:3164:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:505:310"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13800:59491":{"id":"2:13800:59491","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3742:1735":{"id":"2:3742:1735","crate_id":2,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3744:1934","2:3745:1938","2:3746:3122"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3368:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"5:6187:53512":{"id":"5:6187:53512","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:15910:2288"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8459:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:484:550":{"id":"0:484:550","crate_id":0,"name":"deref_mut","span":{"filename":"src/array_string.rs","begin":[437,4],"end":[443,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13741:55655":{"id":"2:13741:55655","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:15904:2283","self::pattern":"2:13331:2470"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13341:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:253:1605":{"id":"0:253:1605","crate_id":0,"name":"Drain","span":{"filename":"src/arrayvec.rs","begin":[926,0],"end":[934,1]},"visibility":"public","docs":"A draining iterator for `ArrayVec`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3404:2543-0:253:1605","a:2:9533:2621-0:253:1605","a:2:9532:2622-0:253:1605","b:2:3206-0:253:1605","b:2:8676-0:253:1605","b:2:2864-0:253:1605","b:2:4096-0:253:1605","b:2:2867-0:253:1605","b:2:3200-0:253:1605","b:2:3211-0:253:1605","b:2:3196-0:253:1605","0:261","0:265","0:269","0:277","0:283","0:287"]}},"2:3675:2411":{"id":"2:3675:2411","crate_id":2,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3677:760"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3368:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Index","id":"2:3671:2410","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:157:1917":{"id":"0:157:1917","crate_id":0,"name":"try_extend_from_slice","span":{"filename":"src/arrayvec.rs","begin":[564,4],"end":[580,5]},"visibility":"public","docs":"Copy all elements from the slice and append to the `ArrayVec`.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut vec: ArrayVec<usize, 10> = ArrayVec::new();\nvec.push(1);\nvec.try_extend_from_slice(&[2, 3]).unwrap();\nassert_eq!(&vec[..], &[1, 2, 3]);\n```\n\n# Errors\n\nThis method will return an error if the capacity left (see\n[`remaining_capacity`]) is smaller then the length of the provided\nslice.\n\n[`remaining_capacity`]: #method.remaining_capacity","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47904:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3373:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:128:1728":{"id":"0:128:1728","crate_id":0,"name":"pop","span":{"filename":"src/arrayvec.rs","begin":[344,4],"end":[346,5]},"visibility":"public","docs":"Remove the last element in the vector and return it.\n\nReturn `Some(` *element* `)` if the vector is non-empty, else `None`.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::<_, 2>::new();\n\narray.push(1);\n\nassert_eq!(array.pop(), Some(1));\nassert_eq!(array.pop(), None);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13791:59487":{"id":"2:13791:59487","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"str::match_indices":"1:15910:2288","prim@char":"1:15904:2283","`DoubleEndedIterator`":"2:8716:121","self::pattern":"2:13331:2470"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:49910:2485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13341:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13341:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13356:2464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3869:2419":{"id":"2:3869:2419","crate_id":2,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3368:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"a:2:3363:215-0:223:1604":{"id":"a:2:3363:215-0:223:1604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3363:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3363:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:485":{"id":"0:485","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[446,0],"end":[451,1]},"visibility":{"restricted":{"parent":"0:388:1598","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2916:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:487:609"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:378:701":{"id":"0:378:701","crate_id":0,"name":"ge","span":{"filename":"src/arrayvec.rs","begin":[1193,4],"end":[1195,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:234":{"id":"0:234","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[873,0],"end":[885,1]},"visibility":{"restricted":{"parent":"0:31:1597","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["advance_back_by","try_rfold","rfind","nth_back","rfold"],"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:237:1982"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:356":{"id":"0:356","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1161,0],"end":[1163,1]},"visibility":{"restricted":{"parent":"0:31:1597","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsRef","id":"2:3164:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:359:310"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13788:59486":{"id":"2:13788:59486","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:13331:2470","str::rmatch_indices":"1:15910:2288","`DoubleEndedIterator`":"2:8716:121","prim@char":"1:15904:2283"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:49892:2484","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13341:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10562:110":{"id":"2:10562:110","crate_id":2,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10563:665"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:538:1004":{"id":"0:538:1004","crate_id":0,"name":"partial_cmp","span":{"filename":"src/array_string.rs","begin":[545,4],"end":[547,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"2:37899:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:307:2002":{"id":"0:307:2002","crate_id":0,"name":"extend","span":{"filename":"src/arrayvec.rs","begin":[1015,4],"end":[1019,5]},"visibility":"default","docs":"Extend the `ArrayVec` with an iterator.\n \n***Panics*** if extending the vector exceeds its capacity.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["iter",{"kind":"generic","inner":"I"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"T"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:451:1775":{"id":"0:451:1775","crate_id":0,"name":"new_const","span":{"filename":"src/array_string.rs","begin":[78,4],"end":[81,5]},"visibility":"public","docs":"Create a new empty `ArrayString` (const fn).\n\nCapacity is inferred from the type parameter.\n\n```\nuse arrayvec::ArrayString;\n\nstatic ARRAY: ArrayString<1024> = ArrayString::new_const();\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:126:1838":{"id":"0:126:1838","crate_id":0,"name":"insert","span":{"filename":"src/arrayvec.rs","begin":[280,4],"end":[282,5]},"visibility":"public","docs":"Insert `element` at position `index`.\n\nShift up all elements after `index`.\n\nIt is an error if the index is greater than the length or if the\narrayvec is full.\n\n***Panics*** if the array is full or the `index` is out of bounds. See\n`try_insert` for fallible version.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::<_, 2>::new();\n\narray.insert(0, \"x\");\narray.insert(0, \"y\");\nassert_eq!(&array[..], &[\"y\", \"x\"]);\n\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}],["element",{"kind":"generic","inner":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:506":{"id":"0:506","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[487,0],"end":[490,1]},"visibility":{"restricted":{"parent":"0:388:1598","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:508:665"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2867-0:642:1602":{"id":"b:2:2867-0:642:1602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3368:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2861:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2869:2029"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3363:215-0:98:1603":{"id":"a:2:3363:215-0:98:1603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3363:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3363:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:6498:228":{"id":"5:6498:228","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6499:1409"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6650:3525":{"id":"1:6650:3525","crate_id":1,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6651:53290"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9532:2622-0:634:1601":{"id":"a:2:9532:2622-0:634:1601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2867-0:98:1603":{"id":"b:2:2867-0:98:1603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3368:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2861:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2869:2029"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:625":{"id":"0:625","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[59,26],"end":[59,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::arrayvec::ArrayVec","name":"ArrayVec","id":"0:98:1603","glob":false}},"2:23767:16488":{"id":"2:23767:16488","crate_id":2,"name":"SimdOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23768:58238","2:23769:58239","2:23770:58240"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdPartialOrd","id":"2:23762:4015","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:6171:60136":{"id":"5:6171:60136","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:8459:220"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8459:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6654:3522":{"id":"1:6654:3522","crate_id":1,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6655:57112"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:532:833":{"id":"0:532:833","crate_id":0,"name":"lt","span":{"filename":"src/array_string.rs","begin":[537,4],"end":[537,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:216:775":{"id":"0:216:775","crate_id":0,"name":"into_iter","span":{"filename":"src/arrayvec.rs","begin":[823,4],"end":[823,60]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8672:152","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:848-0:634:1601":{"id":"b:5:848-0:634:1601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2883:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["5:850:2424","5:851:2864","5:852:2865"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:465:1724":{"id":"0:465:1724","crate_id":0,"name":"try_push","span":{"filename":"src/array_string.rs","begin":[226,4],"end":[239,5]},"visibility":"public","docs":"Adds the given char to the end of the string.\n\nReturns `Ok` if the push succeeds.\n\n**Errors** if the backing array is not large enough to fit the additional char.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<2>::new();\n\nstring.try_push('a').unwrap();\nstring.try_push('b').unwrap();\nlet overflow = string.try_push('c');\n\nassert_eq!(&string[..], \"ab\");\nassert_eq!(overflow.unwrap_err().element(), 'c');\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["c",{"kind":"primitive","inner":"char"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47904:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"char"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3373:107":{"id":"2:3373:107","crate_id":2,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2883:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13801:59492":{"id":"2:13801:59492","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:351:1736":{"id":"0:351:1736","crate_id":0,"name":"borrow","span":{"filename":"src/arrayvec.rs","begin":[1154,4],"end":[1154,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:166:1958":{"id":"0:166:1958","crate_id":0,"name":"take","span":{"filename":"src/arrayvec.rs","begin":[680,4],"end":[682,5]},"visibility":"public","docs":"Returns the ArrayVec, replacing the original with a new empty ArrayVec.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut v = ArrayVec::from([0, 1, 2, 3]);\nassert_eq!([0, 1, 2, 3], v.take().into_inner().unwrap());\nassert!(v.is_empty());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23048:4095":{"id":"2:23048:4095","crate_id":2,"name":"SimdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23049:4013","2:23050:58476","2:23051:58702","2:23052:58703","2:23053:58704","2:23054:42450","2:23055:58705","2:23056:58706","2:23057:58707","2:23058:58708","2:23059:58709","2:23060:58710","2:23061:58711","2:23062:58712","2:23063:58713","2:23064:58714","2:23065:58523","2:23066:58715","2:23067:58239","2:23068:58238","2:23069:58240","2:23070:58477","2:23071:58478","2:23072:58479","2:23073:58480"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3373:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23150:3537","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3210:1429":{"id":"2:3210:1429","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47904:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:3180:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:508:665":{"id":"0:508:665","crate_id":0,"name":"fmt","span":{"filename":"src/array_string.rs","begin":[489,4],"end":[489,76]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10511:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13814:59495":{"id":"2:13814:59495","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:13331:2470","prim@char":"1:15904:2283"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13341:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13341:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13356:2464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:848-0:98:1603":{"id":"b:5:848-0:98:1603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2883:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["5:850:2424","5:851:2864","5:852:2865"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:6500-0:634:1601":{"id":"b:5:6500-0:634:1601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10569:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3368:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6498:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["5:6502:1409"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2867-0:634:1601":{"id":"b:2:2867-0:634:1601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3368:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2861:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2869:2029"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:245":{"id":"0:245","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[904,0],"end":[912,1]},"visibility":{"restricted":{"parent":"0:31:1597","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2883:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2883:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:248:413"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3404:2543-0:98:1603":{"id":"a:2:3404:2543-0:98:1603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3404:2543","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3404:2543","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:4096-0:634:1601":{"id":"b:2:4096-0:634:1601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3368:2445","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4094:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:4098:1441"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8631:3350":{"id":"2:8631:3350","crate_id":2,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8633:2855"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3511:2404":{"id":"2:3511:2404","crate_id":2,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3513:183","2:3514:1246"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:384":{"id":"0:384","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1212,0],"end":[1220,1]},"visibility":{"restricted":{"parent":"0:31:1597","path":"::arrayvec"}},"docs":"`Write` appends written data to the end of the vector.\n\nRequires `features=\"std\"`.","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["by_ref","write_all","is_write_vectored","write_fmt","write_all_vectored","write_vectored"],"trait":{"name":"Write","id":"1:4472:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1603","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:386:1727","0:387:2037"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5518:3549":{"id":"1:5518:3549","crate_id":1,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5519:6172","1:5520:8363"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:344:609":{"id":"0:344:609","crate_id":0,"name":"eq","span":{"filename":"src/arrayvec.rs","begin":[1146,4],"end":[1148,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4497:3424":{"id":"1:4497:3424","crate_id":1,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4498:57313","1:4499:57314","1:4500:57315","1:4502:3423","1:4503:57316","1:4505:55646","1:4506:4667"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"1:4415:3417","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:8678:1709":{"id":"2:8678:1709","crate_id":2,"name":"Item","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:8680:775":{"id":"2:8680:775","crate_id":2,"name":"into_iter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:122:1725":{"id":"0:122:1725","crate_id":0,"name":"push_unchecked","span":{"filename":"src/arrayvec.rs","begin":[226,4],"end":[228,5]},"visibility":"public","docs":"Push `element` to the end of the vector without checking the capacity.\n\nIt is up to the caller to ensure the capacity of the vector is\nsufficiently large.\n\nThis method uses *debug assertions* to check that the arrayvec is not full.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::<_, 2>::new();\n\nif array.len() + 2 <= array.capacity() {\n    unsafe {\n        array.push_unchecked(1);\n        array.push_unchecked(2);\n    }\n}\n\nassert_eq!(&array[..], &[1, 2]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["element",{"kind":"generic","inner":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:244:583":{"id":"0:244:583","crate_id":0,"name":"drop","span":{"filename":"src/arrayvec.rs","begin":[890,4],"end":[901,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:655":{"id":"0:655","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[8,26],"end":[8,29]},"visibility":{"restricted":{"parent":"0:575:1599","path":"::errors"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::Ord","id":"2:2952:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2952:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:657:420"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:4472:2034":{"id":"1:4472:2034","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4473:1727","1:4474:3459","1:4476:3460","1:4477:2037","1:4478:3461","1:4479:3462","1:4480:2196","1:4489:2836"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:168:1717":{"id":"0:168:1717","crate_id":0,"name":"as_mut_slice","span":{"filename":"src/arrayvec.rs","begin":[690,4],"end":[692,5]},"visibility":"public","docs":"Return a mutable slice containing all elements of the vector.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:642:1602":{"id":"0:642:1602","crate_id":0,"name":"CapacityError","span":{"filename":"src/errors.rs","begin":[9,0],"end":[11,1]},"visibility":"public","docs":"Error value indicating insufficient capacity","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:585","a:2:3404:2543-0:642:1602","a:2:3375:224-0:642:1602","a:2:3363:215-0:642:1602","a:2:9533:2621-0:642:1602","a:2:9532:2622-0:642:1602","b:2:3206-0:642:1602","b:2:2864-0:642:1602","b:2:4096-0:642:1602","b:2:2867-0:642:1602","b:2:3200-0:642:1602","b:2:3211-0:642:1602","b:2:3278-0:642:1602","b:2:3196-0:642:1602","b:5:6500-0:642:1602","b:5:848-0:642:1602","0:645","0:648","0:650","0:652","0:655","0:658","0:660","0:663","0:591","0:593","0:596"]}},"2:13826:53513":{"id":"2:13826:53513","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10573:2510":{"id":"2:10573:2510","crate_id":2,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10574:665"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:588:1723":{"id":"0:588:1723","crate_id":0,"name":"element","span":{"filename":"src/errors.rs","begin":[22,4],"end":[24,5]},"visibility":"public","docs":"Extract the overflowing element","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3599:1734":{"id":"2:3599:1734","crate_id":2,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3600:550"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Deref","id":"2:3586:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9533:2621-0:642:1602":{"id":"a:2:9533:2621-0:642:1602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13794:59488":{"id":"2:13794:59488","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3200-0:253:1605":{"id":"b:2:3200-0:253:1605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3173:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:253:1605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3202:686"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:9155:3584":{"id":"1:9155:3584","crate_id":1,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9156:57870","1:9157:57871","1:9158:57872","1:9159:57873","1:9160:57874","1:9161:39052","1:9162:57869"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10436:3537","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:383:420":{"id":"0:383:420","crate_id":0,"name":"cmp","span":{"filename":"src/arrayvec.rs","begin":[1203,4],"end":[1205,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"2:37899:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13708:2156":{"id":"2:13708:2156","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:460:2099":{"id":"0:460:2099","crate_id":0,"name":"zero_filled","span":{"filename":"src/array_string.rs","begin":[142,4],"end":[152,5]},"visibility":"public","docs":"Create a new `ArrayString` value fully filled with ASCII NULL characters (`\\0`). Useful\nto be used as a buffer to collect external data or as a buffer for intermediate processing.\n\n```\nuse arrayvec::ArrayString;\n\nlet string = ArrayString::<16>::zero_filled();\nassert_eq!(string.len(), 16);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3653:2417":{"id":"2:3653:2417","crate_id":2,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3655:242","2:3656:208","2:3657:58277"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3363:215-0:642:1602":{"id":"a:2:3363:215-0:642:1602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3363:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3363:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1602","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8668:137":{"id":"2:8668:137","crate_id":2,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8670:689"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:9160:3348":{"id":"2:9160:3348","crate_id":2,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Step","id":"2:8196:3333","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3206-0:253:1605":{"id":"b:2:3206-0:253:1605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3180:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3176:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:253:1605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3209:128","2:3210:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:376:833":{"id":"0:376:833","crate_id":0,"name":"lt","span":{"filename":"src/arrayvec.rs","begin":[1185,4],"end":[1187,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:546":{"id":"0:546","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[561,0],"end":[568,1]},"visibility":{"restricted":{"parent":"0:388:1598","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:13270:2062","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1601","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:548:127","0:549:2184"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:134:1874":{"id":"0:134:1874","crate_id":0,"name":"pop_at","span":{"filename":"src/arrayvec.rs","begin":[438,4],"end":[444,5]},"visibility":"public","docs":"Remove the element at `index` and shift down the following elements.\n\nThis is a checked version of `.remove(index)`. Returns `None` if there\nis no element at `index`. Otherwise, return the element inside `Some`.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3]);\n\nassert!(array.pop_at(0).is_some());\nassert_eq!(&array[..], &[2, 3]);\n\nassert!(array.pop_at(2).is_none());\nassert!(array.pop_at(10).is_none());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"paths":{"6:6902:8108":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"16:3199:4981":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"6:5974:7945":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"1:4259:3439":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"2:24919:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"12:2280:3638":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"2:5705:11271":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"17:10082:5145":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"2:46574:4155":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"2:49101:147":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"17:13369:6653":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"2:53610:4023":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"16:5443:4764":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"12:2404:60746":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"3:321:207":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"5:4709:5271":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"17:11234:5122":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"2:3840:2416":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"2:14539:2870":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"2:8196:3333":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"1:11054:3565":{"crate_id":1,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"17:12585:6407":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"1:11361:2610":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"1:7067:8512":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"5:5388:202":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"1:11980:1604":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"5:3395:1972":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"17:12431:6383":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"2:52254:4062":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"6:4116:7577":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"12:559:144":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"2:53747:8310":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"5:8453:8130":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"1:15926:2302":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"2:11626:2892":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:2326:605":{"crate_id":1,"path":["std","env"],"kind":"module"},"6:4493:7709":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:14106:57987":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"5:8481:4341":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"17:13507:6692":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"17:11314:5052":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"1:6224:3530":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"16:7379:4737":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"1:8550:3863":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"6:1558:7310":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"17:12700:6427":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"17:13271:6628":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"1:11527:3704":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"5:853:109":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"17:12318:6348":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"2:10850:2427":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"2:49742:2489":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"17:10913:5866":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"2:53572:4058":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"16:6310:4790":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"2:46663:2480":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:32573:1738":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"14:47:8481":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"17:9676:60752":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"2:46646:4319":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"17:12383:6378":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"1:14087:3439":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"1:10531:11268":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"16:3478:4985":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"19:0:1001":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"1:11308:3544":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"1:4433:3419":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:48553:2517":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"16:4803:6869":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"5:5910:2469":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"2:10575:2517":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"5:1547:3639":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"6:3981:7510":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"9:157:4504":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"16:5685:4773":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"1:3085:1737":{"crate_id":1,"path":["std","io"],"kind":"module"},"5:1710:3627":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:46772:4277":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"17:9004:46614":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"2:50469:4229":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"17:9206:46619":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"1:1456:3630":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"6:1694:7407":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"17:13961:6826":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"2:11408:1975":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"17:10166:6109":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"6:1662:7384":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"2:10800:143":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:8873:158":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:48842:128":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"2:52332:4050":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"2:52120:8262":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:11914:53286":{"crate_id":1,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"18:896:5172":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"6:4148:7591":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"17:10899:8449":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"6:5247:7787":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"17:13495:6689":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"16:4439:6858":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"1:1031:3577":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"2:53762:8311":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"6:1727:7423":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"16:6277:4789":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"16:5902:4779":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"2:11588:2488":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"2:3167:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"5:1663:1972":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"6:5488:7901":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"17:9064:46616":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"12:399:4622":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"16:5887:4958":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"2:47904:207":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"17:11945:6286":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"17:10422:5856":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"1:14668:53287":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"17:10489:6110":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"16:6679:5014":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"16:7295:4720":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"16:3051:5035":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"5:7358:5266":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"1:4481:9292":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"2:4997:4161":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"17:10115:5148":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"16:4628:6863":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"1:15902:2281":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"1:8005:5293":{"crate_id":1,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"17:12003:6295":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"1:7839:3776":{"crate_id":1,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"16:6557:4797":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"5:2376:4470":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"1:7787:5293":{"crate_id":1,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"6:4256:7607":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:51643:4017":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"17:2512:5132":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"5:2328:4451":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"16:3243:4983":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"2:46819:5283":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"17:542:4687":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"1:6846:3594":{"crate_id":1,"path":["std","os","net","tcp","TcpStreamExt"],"kind":"trait"},"2:49084:8246":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"17:11017:128":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"5:1152:5266":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"1:12107:3668":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:49550:2884":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:46626:4325":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"16:7100:4807":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"2:24460:38764":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:14686:3737":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"2:22878:59066":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:49996:2482":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"2:3610:1757":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"0:0:1597":{"crate_id":0,"path":["arrayvec"],"kind":"module"},"16:3129:4988":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"2:52644:4037":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"17:13708:6757":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"6:4485:7707":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"12:1162:4616":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"1:4490:3421":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"5:1729:3629":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"1:15044:3612":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2:46095:2418":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"12:2052:3598":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"1:10723:3806":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"6:6931:8115":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"8:0:2254":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"1:2481:2536":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"2:47836:1604":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:47066:3374":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:12327:5289":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"5:1055:4390":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"2:2501:2997":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"5:1296:4449":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"6:1588:7330":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:51754:4049":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"17:9836:60749":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"17:13549:6703":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"2:3675:2411":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"17:11628:5455":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"2:14182:8499":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"2:8668:137":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:14907:53568":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"2:2764:584":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"17:11102:46621":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"17:10622:6112":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"6:4048:7542":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"17:11797:6263":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"17:12183:6326":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"1:14399:3546":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"2:49327:2875":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"5:3407:4382":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2:47014:3370":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:4261:3440":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"1:12018:3661":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"2:49760:2488":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"2:24985:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:11042:3564":{"crate_id":1,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"5:1626:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"9:1020:4554":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"6:6896:8107":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:4488:1604":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"17:10598:8447":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"6:6057:7996":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:49633:2888":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"16:6858:5018":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"1:10993:3374":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"17:11579:6217":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"2:2952:179":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"1:15903:2282":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"14:231:4343":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"6:586:7267":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"6:5311:7821":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:11312:7978":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"5:8204:2871":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"2:51976:4018":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"16:6190:4788":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"2:52828:4043":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:1447:3628":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:3505:2403":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"2:2916:185":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"2:13559:110":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"16:3007:4977":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"14:250:7100":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"6:4208:7603":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"6:4081:7558":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:6344:3580":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"6:1740:7426":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"1:13948:5317":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"17:13463:6678":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"1:1405:3626":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"2:49323:4327":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"17:11457:6189":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"12:928:3628":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"6:4067:7550":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"16:2792:4700":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"16:7868:128":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"2:3869:2419":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:50238:3937":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"16:5649:4771":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"12:379:4623":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"17:13763:6776":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"1:12097:213":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"2:14147:189":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"6:4526:7722":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"1:15904:2283":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"6:4410:7675":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:56630:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"6:4332:7637":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"1:15274:3834":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"1:10934:3335":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:47086:3376":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"5:1518:3638":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:15191:3570":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"17:10545:5857":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"16:3265:4984":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"6:6016:7969":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"2:3742:1735":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:53648:5479":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:1397:1604":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:48207:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"17:10291:5043":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"14:11:8481":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"17:4157:5106":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"17:10988:8455":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"1:11334:3536":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"2:46756:4276":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:10093:5146":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"2:49481:4216":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:15086:3620":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"2:22846:58826":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"2:3363:215":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"17:3743:5099":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:2055:3409":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"3:0:435":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"17:13539:6700":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"12:1183:4617":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"2:23762:4015":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"16:3340:4961":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:6716:3354":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:15920:2296":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"2:5146:4163":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"2:23386:16469":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"2:51708:4061":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:3058:3793":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"16:6873:2618":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"1:10675:3786":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"17:12892:6446":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"17:10851:6146":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"2:49910:2485":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:49652:2889":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:7744:8589":{"crate_id":1,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"1:14457:130":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"1:15911:2289":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"2:3369:2541":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"2:48779:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"2:24347:8136":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"17:10464:5064":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"2:3490:2399":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"5:2005:3597":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"6:3972:7505":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"14:0:2259":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"2:48546:2511":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:11538:3705":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:5726:4097":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"6:539:7235":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"5:1751:196":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"17:13147:6599":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"2:46966:3367":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"17:9756:60751":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"1:6652:3526":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"1:10537:3606":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"2:3368:2445":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"2:23961:3586":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"6:6250:8084":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"18:712:2798":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"13:121:44933":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"6:4075:7555":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"1:1113:11269":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"17:13755:6775":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"17:13129:6594":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"1:6578:3545":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"2:10033:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"6:161:39423":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"1:15924:2300":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"17:11671:6230":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"2:50680:4237":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"17:11031:46620":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"2:24310:8134":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"16:7323:4736":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"2:3436:2393":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:4472:2034":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"2:50050:2480":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"9:0:2255":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"17:9646:60757":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"6:5582:7938":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"1:5735:3901":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"16:7079:4805":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"1:8300:3658":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"2:10569:120":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"17:11282:46622":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"16:2937:4998":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"2:51421:4027":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:8458:3854":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"1:2130:3597":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"2:32673:57923":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"17:12469:6388":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"5:8295:1604":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"2:53628:5468":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"11:54:4607":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"1:14084:3443":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"2:3599:1734":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"16:7238:4734":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"5:7551:5266":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:3534:2409":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:12587:5316":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"2:46565:8232":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"5:6340:4372":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"16:7637:4814":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"6:4532:7724":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"1:12087:164":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"1:973:3776":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"2:52568:4030":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"6:6114:8004":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:46925:3363":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:57905:8320":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"6:1912:40729":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"2:10845:2426":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:15910:2288":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"1:13433:5901":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"2:51806:4056":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"16:4411:6857":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"17:13016:6549":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:8681:2001":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"6:4098:7568":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"1:15909:2287":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:46829:5365":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"2:47302:3346":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"5:1673:1975":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"16:6504:4796":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:23436:4013":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"17:10198:8441":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"6:4061:7547":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"1:0:1343":{"crate_id":1,"path":["std"],"kind":"module"},"2:10583:2516":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"12:1147:3638":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"6:6671:8096":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:53364:4035":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"16:6907:4801":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"2:5268:4170":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:5713:3899":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"2:46559:2480":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"2:49892:2484":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"9:809:3699":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"17:12770:6444":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"6:6943:8117":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"1:6654:3522":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"16:7063:4804":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"17:10801:5102":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"16:3297:5037":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"16:7792:4751":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"1:15409:4648":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"2:46068:2421":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:15917:2293":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"2:5297:2547":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"18:801:5164":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"16:4660:6864":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"6:4373:7660":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"1:14480:3420":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"6:6135:8011":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"1:7489:3732":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:14071:151":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"2:8631:3350":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:7607:3740":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"2:51952:4036":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"17:9259:6097":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"17:10147:6108":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"17:0:2262":{"crate_id":17,"path":["object"],"kind":"module"},"2:3173:136":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"5:6739:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"2:23048:4095":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"16:6026:4710":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"1:9439:8590":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"5:1740:3630":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"5:8236:4392":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"2:50034:2471":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"2:51375:4047":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:46142:198":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:14800:5318":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"1:14952:3668":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"1:9279:9283":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"16:7741:4816":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"1:3405:3426":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"6:4160:7600":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"1:9545:3822":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"2:8672:152":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"5:6851:3409":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"2:10717:8498":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"2:9532:2622":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"17:13774:6780":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"17:12093:6314":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"1:11216:3829":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"17:11514:6205":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"6:6153:8022":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"2:3653:2417":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"2:47896:190":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"17:13873:6804":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"2:25519:4146":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"17:10394:5131":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"14:194:44961":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"16:6468:4794":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"1:2911:3785":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:9153:2461":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"2:8716:121":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"6:1576:7321":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"1:7475:3731":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"17:10445:6060":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"5:3436:3598":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"1:5156:3826":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"16:2861:4974":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"16:7025:4706":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"1:5743:3902":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"5:3905:5266":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"16:7208:4813":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"17:299:8435":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"17:13785:6781":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"1:783:5311":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"16:6433:4793":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"2:49131:8251":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"17:13037:6558":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"5:5682:1321":{"crate_id":5,"path":["alloc","slice"],"kind":"module"},"2:53637:5471":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"2:50041:2479":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"16:5998:4733":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:53683:5480":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:3372:221":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"17:10925:8453":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"2:49642:2891":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"17:12196:6327":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"12:815:3630":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"2:24820:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"1:6728:3527":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"6:4446:7689":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"6:5204:7770":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"17:13306:6638":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"1:4356:3342":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:12194:2886":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"2:51483:4048":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:11874:3735":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"7:0:1494":{"crate_id":7,"path":["unwind"],"kind":"module"},"17:9131:46618":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"2:46638:2481":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"2:5151:4164":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:7739:3775":{"crate_id":1,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"12:940:3632":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"5:8244:59297":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"6:1733:3840":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"17:9466:6103":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"6:4315:7628":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"1:12145:3677":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"2:53488:4020":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"16:3908:6851":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"6:5541:7912":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"1:14414:8357":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"2:2276:3991":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"6:5229:7775":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"12:933:3631":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"6:5447:7891":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:53785:8312":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:11154:8335":{"crate_id":1,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"1:4146:3813":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"1:14437:8364":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"2:47811:1709":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:47273:3340":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"17:10266:5040":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"2:3373:107":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"2:22880:59062":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"17:12170:6324":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"17:12130:6319":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"1:4497:3424":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"16:7721:4726":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"2:46975:3377":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"17:13452:6674":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"1:8872:3861":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"2:24414:8144":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"16:5516:4951":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"5:8376:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:56617:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:51505:4052":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"17:13215:6614":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"6:6979:8124":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"6:4516:7717":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"17:13747:6772":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"16:5460:4765":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"1:10819:3435":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"1:1601:3638":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"17:2314:5134":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"2:53034:4063":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"12:2059:3599":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"1:2909:129":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"2:46986:3368":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:7441:3729":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"2:12795:2094":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"16:5217:4964":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2:46268:1733":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"2:50645:192":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"1:2119:1972":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"16:4716:6866":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"2:2883:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:8741:1983":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:21:677":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"1:9155:3584":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"2:32433:4301":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"1:12248:5899":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"2:24331:4138":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"5:4372:1975":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"17:10304:5046":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"16:6075:4714":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"2:4864:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:3431:2388":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"5:5962:5277":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"2:50016:2474":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:51309:8256":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"17:13612:6719":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"5:4281:1605":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"16:6407:4792":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"17:13138:6598":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"17:13529:6697":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"1:2510:2537":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"1:15360:8371":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"1:4415:3417":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"2:53732:5481":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:14883:3735":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:24067:3537":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"2:56578:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:12543:6399":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"2:3828:138":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"18:739:8433":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"2:48803:134":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"2:56604:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"5:1760:4446":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"2:49964:2487":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:8651:8513":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"2:46341:3173":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"5:69:4367":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"16:5427:4763":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"2:47972:180":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"6:1634:7359":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"1:10814:3725":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:53534:4038":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:47055:3357":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"17:11381:6170":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"5:8219:4391":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"18:694:5179":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"6:1621:7352":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"5:4694:240":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:39079:2454":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"1:15654:5321":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"1:4036:3447":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"2:10577:2518":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"6:5547:7913":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"16:5698:4774":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"16:6141:4786":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"17:12262:6336":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"6:4198:7602":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"2:11695:2894":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"16:4351:6855":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"6:88:39356":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"2:24526:4268":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"2:23767:16488":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"12:1103:3636":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"5:6775:4411":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"17:12282:6342":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"9:776:4534":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"1:10663:3784":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"6:527:7233":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"18:766:6022":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"18:152:5834":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"2:3500:2401":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:3247:116":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"2:3478:2397":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"16:2813:4992":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"2:53176:4031":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"17:10455:5065":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"1:11068:3567":{"crate_id":1,"path":["std","net","ip","IpAddr"],"kind":"enum"},"17:9786:5845":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"1:2361:5897":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2:49541:2880":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"12:1784:5264":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"5:7878:239":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"1:7544:3734":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:51554:4040":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:11284:3828":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"6:6229:8072":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:11515:2885":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"17:13917:6819":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"6:607:7278":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"12:787:3629":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"16:2754:4962":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"16:7369:4716":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"5:3825:1972":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:48375:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:11221:3830":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"2:49864:2490":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"2:52073:8261":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:11964:1972":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"2:46744:4275":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"5:4509:1972":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"1:11197:3893":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"5:3366:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"1:8451:3852":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"6:4088:7561":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"16:6130:4785":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"1:1431:1605":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"17:10364:5133":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"2:25018:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"6:6027:7974":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"6:5274:7807":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"2:2858:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"5:3554:3597":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"1:4388:3409":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"17:11591:6220":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"5:8407:4276":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:8293:3657":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"2:5033:4162":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"6:5998:7962":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"17:10503:5070":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"6:6937:8116":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:2397:5898":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"2:13350:2465":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"2:10522:135":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"1:3803:128":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"1:15875:11270":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"1:10574:4457":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"18:857:5169":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"1:15059:3613":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"12:843:3626":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"1:1483:3634":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"17:13247:6626":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"1:9446:5308":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"2:13088:4221":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"2:13361:2462":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"5:7740:4373":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"5:7922:1891":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"5:8553:4368":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"6:1544:7305":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:3671:2410":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"1:7427:3728":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"1:11910:8356":{"crate_id":1,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"17:10586:5860":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"12:1682:4631":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"17:10390:5067":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"18:774:6011":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"2:32613:2446":{"crate_id":2,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"16:4316:6854":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"16:5745:4776":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"1:1477:3633":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"2:46934:3364":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:6899:58159":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"17:10058:5151":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"17:12157:6323":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"1:11452:3700":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:46995:3355":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"17:10937:5868":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"16:6381:4727":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"6:513:5883":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"6:4464:7700":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"17:13196:6613":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"1:15336:8370":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"2:46874:3360":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"2:32773:57911":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"12:2269:3637":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"12:750:1972":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"1:2654:181":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"6:4392:7668":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"16:6604:4798":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"17:9275:6098":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2:10244:4202":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:3823:229":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"6:626:7288":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"2:7935:2235":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"16:5941:4781":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"6:5426:7885":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:37899:180":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:46905:3361":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:11972:3656":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"6:1606:7340":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"16:6980:4802":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"17:12620:6419":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"6:4362:7652":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"17:12348:6367":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"1:6750:3535":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"1:5502:3547":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"1:15921:2297":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:25150:4254":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:10448:53601":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"17:9948:5848":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"5:8301:1604":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"5:1909:5266":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"18:645:5176":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"1:1374:1972":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"1:5983:3844":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"5:4017:3597":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"18:885:5171":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:47963:1604":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:51584:4028":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"2:46616:4324":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"17:10975:5870":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"17:12746:6434":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"5:5609:4399":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"17:13938:6822":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:2180:583":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"6:4230:7605":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"5:3441:4383":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"17:9988:46666":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"1:9451:8591":{"crate_id":1,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"2:9654:2463":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"2:10512:2034":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"12:162:4620":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"17:2484:46704":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"1:13414:5898":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"1:6929:2609":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"5:3462:3601":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:50514:3679":{"crate_id":2,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"6:5390:7870":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"1:8192:3776":{"crate_id":1,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"2:10249:4203":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"2:3529:2408":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:47828:1975":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"1:11521:1972":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:2861:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"2:23379:3537":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"1:15907:2285":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"1:6105:3845":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"2:3391:2542":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"6:5178:7755":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"1:10488:3148":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:49581:2874":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"17:2543:5062":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"16:4271:6853":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"16:5566:4768":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"6:6967:8122":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"17:11212:5124":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"17:9746:5844":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"5:2284:4385":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"16:4743:6867":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"1:14473:119":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"6:5439:7889":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:50627:203":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"5:1701:3626":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"17:10660:46804":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"14:189:8481":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"16:6931:5021":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"18:637:6011":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"16:6656:5012":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"2:46943:5890":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"16:5948:4972":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"17:10558:8445":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"2:51900:4029":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"16:0:2261":{"crate_id":16,"path":["gimli"],"kind":"module"},"16:5326:4757":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"17:10949:5869":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"1:15253:3827":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"17:9361:6100":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"1:15092:3621":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"6:5567:7927":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"18:611:5174":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"6:6954:8121":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:24512:4306":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:9673:5311":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"18:811:5165":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"6:6908:8109":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"17:13735:6769":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"5:3814:161":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"17:9561:5059":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"17:13573:6707":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"1:10715:119":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"18:744:60758":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"2:49810:2492":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"18:829:5167":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"1:4143:3812":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"1:5764:3905":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"1:15213:3826":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:32969:2447":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"2:3164:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"6:6268:8087":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"5:8459:220":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:46896:3353":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"16:4599:6862":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"5:5166:665":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"17:11494:6204":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"1:15922:2298":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"2:4:986":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"16:5721:4775":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"17:13257:6627":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:24952:3779":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"2:22899:59064":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"6:4402:7671":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"1:6246:3533":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"5:3106:8126":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"5:2266:5268":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"18:782:6011":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"1:12034:3662":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"2:53286:4051":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:14455:142":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"2:49792:2493":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:1610:3639":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"12:472:5880":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"1:7253:187":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:47023:3371":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:13627:3742":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"1:11174:3892":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"12:0:2258":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"1:1108:8507":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:56591:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:10565:110":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"17:13975:6829":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"1:12616:8518":{"crate_id":1,"path":["std","sys","unix","fs","TimespecDebugAdapter"],"kind":"struct"},"16:6050:4782":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"2:50526:4289":{"crate_id":2,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"1:10516:11266":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"12:2412:7148":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"1:7604:3738":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"5:1684:1604":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"16:6060:4754":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"16:5605:4769":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"6:4218:7604":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"16:3576:6031":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"5:2396:4450":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"1:11986:3659":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"2:48039:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"5:4581:4425":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"16:5273:6098":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"17:9930:60753":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"2:50122:3928":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"17:11985:6294":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"4:0:2253":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"17:11689:6231":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:51523:8258":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:39155:2544":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"17:13180:6610":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"1:5430:3590":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"16:3494:6027":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"1:1387:1975":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"17:11615:5449":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"16:2839:4973":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"6:4038:7539":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"1:8986:8513":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"17:13522:6696":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"17:10476:5069":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:46224:199":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"16:3155:4979":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"2:52614:4034":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"6:4425:7679":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"2:51353:4059":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"2:11553:2895":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"2:24476:38773":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:50316:3940":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"2:11384:1972":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"17:11409:6174":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"16:4381:6856":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:3811:2412":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:3060:3794":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"17:11653:6221":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"9:469:9036":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"16:6089:4783":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"6:4110:7574":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"17:9517:2194":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"1:10570:8517":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"2:25084:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:11108:3569":{"crate_id":1,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"2:8432:5895":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"18:0:2263":{"crate_id":18,"path":["memchr"],"kind":"module"},"16:6518:4729":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"1:2141:3599":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"2:47997:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"17:12406:6379":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:11433:2489":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:5213:4169":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"2:50493:122":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"18:169:5837":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"1:15870:9054":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"2:46849:2872":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:15919:2295":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"6:4454:7694":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:39119:4083":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"16:7051:4803":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"16:547:4953":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"17:10788:8448":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"1:14651:8517":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"2:50489:4227":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"5:8348:3604":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"17:10104:5147":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"2:48900:3163":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"6:4416:7676":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:56195:4078":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"1:15074:3614":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"14:216:9290":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"16:7200:4732":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"16:4198:6852":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"16:6099:4784":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"1:2126:1605":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"1:15928:2304":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"6:3883:7442":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"6:5982:7950":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"6:6914:8110":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"16:3077:5036":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"2:46725:4160":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"2:51329:8257":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"12:1703:4632":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"1:859:3755":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"2:48864:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"2:47291:3344":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2:9534:2620":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"6:5455:7893":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"6:4340:7641":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"1:14822:5320":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"2:8375:3335":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"6:571:7258":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"1:14915:3676":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"2:46307:2524":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"6:4012:7528":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"17:9431:6102":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"17:9326:5048":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"17:12222:6331":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"2:3446:2389":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"15:269:4644":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"1:10809:3724":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"2:47947:1972":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"2:24387:4133":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:14989:3744":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:23434:4014":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"6:3920:7469":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"16:7309:4718":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"6:3966:7503":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"16:4467:6859":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"16:7471:4711":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"17:13515:6695":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"6:6856:8106":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"12:432:4621":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"16:3029:4978":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:24439:38772":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"11:0:2257":{"crate_id":11,"path":["adler"],"kind":"module"},"7:38:44284":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"2:2285:2993":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"5:3960:4442":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"17:12573:6405":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"5:0:282":{"crate_id":5,"path":["alloc"],"kind":"module"},"1:11000:2194":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"6:4356:7649":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:12578:129":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"2:25051:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"17:12687:6426":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"17:10015:8438":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"17:13352:6650":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"6:3987:7512":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:49570:2883":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"2:51453:4060":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:8200:3699":{"crate_id":1,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"6:6184:8048":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"6:618:7283":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"6:545:7238":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"2:3511:2404":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"17:13428:6667":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"2:52678:4019":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"5:8258:1604":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"17:12417:6381":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"1:7944:3776":{"crate_id":1,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"6:5405:7872":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:51606:4032":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:50718:4076":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:1489:3635":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"1:4757:3561":{"crate_id":1,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"1:13764:3732":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"1:11125:3673":{"crate_id":1,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"1:3042:2966":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"16:7702:4724":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"1:2135:3598":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"6:5260:7796":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"16:6331:4636":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"2:11195:3537":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"17:10814:5103":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"2:49712:2477":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"1:6486:7993":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"2:48812:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"2:3521:2406":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"9:686:4485":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"2:57926:8321":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"5:8423:4436":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"17:12442:6384":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"17:13094:6593":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"2:8021:3359":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"16:7264:196":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"2:13331:2470":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"16:4903:6872":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"1:10298:5312":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"2:4840:3921":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"17:10530:6150":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"16:3221:4982":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"2:48333:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:50190:3936":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:51399:4039":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"6:6243:8081":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"2:14:1727":{"crate_id":2,"path":["core","write"],"kind":"macro"},"17:10068:5040":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"17:12209:6329":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"1:15918:2294":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"1:10685:3560":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"5:8393:4435":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"5:7312:1605":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"2:46739:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"6:1712:7414":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:3462:2394":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"16:5530:4767":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"2:47076:3375":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"17:9539:5121":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"6:6925:8114":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"1:11290:3847":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"1:2123:1604":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"5:4665:5269":{"crate_id":5,"path":["alloc","collections","vec_deque","spec_extend","spec_extend","WrapAddOnDrop"],"kind":"struct"},"17:12250:6335":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"16:6159:4717":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"1:10739:3434":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"16:5412:4762":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"2:50059:2481":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"17:8929:46613":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"5:1502:3636":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"2:2187:2442":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"17:10039:8439":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"2:14056:139":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"16:5959:4705":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"6:5149:7731":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"17:13377:6655":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"6:4434:7685":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"17:11530:6209":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"5:3110:8605":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"17:12716:6429":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"6:580:7264":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"6:4386:7665":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"1:14162:3148":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"16:5498:4766":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"2:49728:2194":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"17:10127:5068":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"17:13660:6756":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"1:1452:3629":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"1:14449:3786":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"5:8213:1604":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"17:13557:6704":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"16:7110:4808":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"5:383:4417":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"2:50465:4230":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"5:4765:5271":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"17:12731:6433":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"9:1075:4555":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"2:49846:2491":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"12:2392:7146":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"16:5869:191":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"9:963:4552":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"1:11210:3828":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"1:12585:3784":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"16:3314:4960":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"17:12957:6497":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"2:46202:200":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"6:4346:7643":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:3271:128":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"1:14419:8359":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"18:678:143":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"16:4495:6860":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"2:50637:8255":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"2:14368:4239":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"5:5976:1352":{"crate_id":5,"path":["alloc","str"],"kind":"module"},"1:14816:5319":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"16:6035:4753":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"1:15929:2305":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"2:51661:8260":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:6581:3530":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"9:692:4487":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"2:11204:218":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"17:13887:6811":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"1:4220:3443":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"1:4181:3441":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"12:2398:5707":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"1:8875:3719":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"1:15925:2301":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"6:3960:7502":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"16:6286:4637":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:13270:2062":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"17:11085:5126":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"18:704:6011":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"16:3743:6849":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:50481:4232":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"2:5320:3176":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"6:5419:7883":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"2:50159:3932":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"2:50730:4074":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"13:0:2252":{"crate_id":13,"path":["std_detect"],"kind":"module"},"2:46182:197":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"2:32621:57921":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"2:56565:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:10436:3537":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:46915:3362":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"17:13440:6673":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"5:844:227":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"16:7281:4719":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"17:294:8434":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"16:5855:4778":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"2:10562:110":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"6:1626:7354":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"1:11925:53377":{"crate_id":1,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"17:12527:6398":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"17:10028:5849":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"2:53694:5470":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"16:4573:6861":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"12:114:5875":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"1:2917:3418":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"12:1256:3639":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"2:49560:2882":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:10983:3360":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"1:1088:2538":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"1:11006:2489":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"12:2072:3601":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"2:24505:8156":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:10658:3543":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2:5223:3173":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"11:46:7150":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"14:56:6189":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"2:50144:3929":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:5510:3548":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"1:6484:7991":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"16:5176:6875":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"2:3495:2400":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"6:4028:7533":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"2:48165:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:9160:3348":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:11469:3701":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"6:5186:7757":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"16:3177:4980":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"1:3044:3789":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"5:5948:5275":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"2:2921:125":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"5:3402:3599":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:53657:5469":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"17:11956:6289":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"2:13341:2463":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"17:12482:6389":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"17:10643:6114":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"12:1666:4630":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"2:8635:3349":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:2359:5896":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"2:8448:3338":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"17:10253:5094":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"1:1441:3597":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"18:668:5178":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:2262:2994":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"2:24787:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"1:12005:3660":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"17:9883:60750":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"2:24363:8139":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"2:10573:2510":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"17:9183:5056":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"16:6482:5007":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"2:49113:3699":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"17:10775:5863":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"1:11270:3903":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"2:50457:4225":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"2:50350:2494":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"2:49607:2872":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"17:12360:6369":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"6:1551:7307":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"2:48539:2510":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"17:9087:46617":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"2:24399:4134":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"17:9873:5846":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"6:3896:7451":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:10806:143":{"crate_id":2,"path":["core","hash","macros","Hash"],"kind":"proc_derive"},"17:11474:6194":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"16:2883:4993":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"2:23101:4082":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"18:729:60761":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:24886:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"17:9920:5847":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"2:47264:3146":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"2:24853:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"1:11276:3839":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"2:4160:2530":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"2:48417:4280":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"17:9396:6101":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"17:11713:6235":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"18:820:5166":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"6:4127:7582":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"5:8266:196":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"2:3616:132":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"2:47878:2619":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"6:4509:7714":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"2:3613:131":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"5:3948:3434":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"2:24538:4267":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:5524:3542":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"2:32607:1739":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:6482:7989":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"1:3381:5291":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"5:3838:1975":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"17:11563:6216":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"6:4277:7608":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"17:12143:6119":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"16:7355:4715":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"1:1592:3637":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"1:7461:3730":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"5:8228:1605":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"6:1704:7413":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:3176:233":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"1:12050:3663":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"1:8101:3776":{"crate_id":1,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"5:7477:1604":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"2:11681:2490":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"17:13472:6681":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"1:15908:2286":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"2:49718:2476":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"6:5288:7808":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"6:1526:7297":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:3852:3994":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"16:6342:4791":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"18:837:2465":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"17:12026:6298":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"1:5558:3550":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:49700:2478":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:14655:3593":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"2:46887:3352":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"18:661:5177":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"1:3459:3433":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"6:4379:7663":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"6:593:7270":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"17:11305:6434":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"6:0:805":{"crate_id":6,"path":["libc"],"kind":"module"},"17:12117:6316":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:56552:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:10323:5314":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"6:6007:7968":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"17:11013:5872":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"6:3907:7459":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"1:14490:53570":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"2:52490:4042":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"2:46706:4323":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"18:720:6013":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"5:1719:3628":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"1:11862:183":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"1:1991:146":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"9:722:4488":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"2:5077:3172":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"12:1881:146":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"17:13481:6682":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:11667:2491":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:11265:3900":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"16:7090:4806":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"17:11907:6275":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"1:3371:3431":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"6:1721:7420":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"16:3366:4990":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"2:49123:8250":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"5:4036:5266":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:7319:120":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"2:3466:2398":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"6:3993:7515":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"1:10962:3422":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"2:13356:2464":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:4222:3444":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"17:11784:6259":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"6:1669:7388":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"1:8720:3146":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"2:53426:4055":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"5:984:4389":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"17:681:6168":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"2:22833:2798":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"6:1748:7430":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:51930:4033":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"2:11709:2893":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"17:13565:6706":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"9:1056:4547":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"17:8954:5058":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"1:10941:3446":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"1:7098:8512":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:9958:60748":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"5:4308:5266":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"6:5240:7783":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"6:6688:8105":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"6:4308:7627":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:4895:4094":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"6:6120:8006":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:46669:4320":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"2:12771:4336":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"16:7169:4730":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"17:9796:60754":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"17:11002:5871":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"6:6665:8094":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"2:10810:147":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"17:10048:8440":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"17:13794:6783":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"17:13073:6588":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"1:10237:6168":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"1:10668:3559":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"2:23973:58829":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"6:4179:7601":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"12:2040:1605":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"6:5331:7837":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"17:11547:6211":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"2:46386:4115":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"16:6630:5010":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"1:4149:3814":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"12:869:1605":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"1:5283:3834":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"2:3180:232":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"2:3458:2391":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"2:23290:4013":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"17:10187:5852":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"15:230:4639":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"2:46699:4322":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"16:6490:4795":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"17:12758:6437":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"17:9160:5123":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"17:12015:6297":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"16:7415:4735":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:13012:4218":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:10547:3640":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"1:12126:3676":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"1:15915:2291":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"2:50688:4238":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:3834:2414":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:50173:3935":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:47004:3369":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"6:601:7275":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"17:13908:6817":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"2:50461:4228":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"2:49662:2890":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"2:9533:2621":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:10248:8526":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"2:22861:58826":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"6:4242:7606":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"17:10340:5135":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"1:5580:3554":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"16:7659:4815":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"15:248:4640":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"9:603:9046":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:3375:224":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"1:8951:2614":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"16:5639:4770":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"2:50337:3942":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:3070:3799":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"1:15923:2299":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"16:4840:6870":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"6:4287:7615":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"17:12455:6386":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"18:651:5173":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"16:5396:4761":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"1:1418:3627":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"1:8502:3855":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"17:11769:6253":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"16:3461:4986":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"6:6643:8093":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"2:49092:2429":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:11019:3563":{"crate_id":1,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"12:2045:3597":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"2:47779:178":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"2:10581:2515":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:2420:5899":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"5:444:2467":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"6:4055:7545":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:11256:6165":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"1:5568:3551":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"5:6759:4399":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"2:23174:4096":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"17:13421:6666":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"18:136:5833":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"1:11856:3733":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"2:53709:5473":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"6:1531:7299":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"17:12070:6308":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"1:10458:3760":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"6:5216:7774":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"12:353:5876":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"2:47845:2618":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:4782:3409":{"crate_id":2,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"2:10511:207":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"2:3517:2405":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"2:5528:4316":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"17:9291:6099":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:5277:3175":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"2:51624:8259":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"5:1072:1972":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"2:51854:4041":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"2:48291:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"2:49532:2881":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"17:11168:6162":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"6:6097:7999":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"17:13029:6556":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"16:4775:6868":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"17:9826:5068":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"2:48830:108":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"2:46246:201":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"6:4296:7620":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"5:3104:2424":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"2:24239:4251":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"17:11130:6160":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"2:14252:57985":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"2:2962:186":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"17:13602:6714":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"12:2253:3636":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"17:9579:129":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"6:5210:7773":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:50473:4233":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"6:4270:3846":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"16:7826:2052":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"2:2911:420":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"6:5433:7886":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:3441:2390":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"6:1600:7338":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"6:4142:7589":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"6:1567:7315":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"17:11754:6247":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:22901:59067":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:14081:3441":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"2:10038:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:50327:3941":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"16:5374:4760":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"1:12092:3865":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"2:53824:8313":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"15:0:2260":{"crate_id":15,"path":["addr2line"],"kind":"module"},"17:11335:5051":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"17:8849:5120":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"5:777:8486":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"2:12227:2887":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"16:7184:5023":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"16:6643:5011":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"12:880:3597":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"17:12048:6307":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"2:3619:133":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2:50025:2472":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"7:85:44291":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"1:8737:3873":{"crate_id":1,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"17:11968:6291":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"17:12646:6421":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"1:3755:3727":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"1:2914:1729":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"12:466:5879":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"1:1460:3631":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"1:11258:3563":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"17:10516:6111":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"16:6549:4731":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"9:900:7199":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"2:5752:786":{"crate_id":2,"path":["core","iter"],"kind":"module"},"18:754:60759":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:50701:159":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"2:46334:4093":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"6:6205:8062":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"17:1236:5851":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"5:1256:5885":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"17:10136:5846":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:46586:4156":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"6:5293:7809":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"17:12660:6422":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"5:7207:1891":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"12:1203:4618":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"1:6472:3542":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"16:4871:6871":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"18:790:5163":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"5:8536:3597":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"2:53668:5472":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"5:7718:4372":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"17:11725:6236":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"2:48123:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"2:50302:3939":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"17:13233:6622":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"5:1276:4448":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"6:4440:7686":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"6:4135:7587":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"9:27:4536":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"2:48081:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:13803:3734":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"2:24071:4010":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"2:47257:3337":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"17:11068:5057":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"2:49686:2063":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"16:7155:4812":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"2:3525:2407":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:15905:2284":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"18:621:6010":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"1:13265:3841":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"1:9530:3821":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"17:10831:5068":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:4145:2526":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"16:7131:4810":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"2:47035:3372":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"17:13859:6802":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"17:10435:5066":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"6:4020:7530":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"17:10240:5091":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"17:10962:8454":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"16:5668:4772":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"17:10318:5068":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"17:13953:6823":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"1:5865:3836":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"1:9583:5310":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockWriteGuard"],"kind":"struct"},"2:51998:4021":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:853:3754":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"17:13584:6711":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"2:3170:150":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"17:10874:6147":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"17:12512:6394":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"1:11888:3736":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"9:749:4489":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"2:9156:3295":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"2:23137:3925":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"1:696:3750":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"1:14933:5536":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"2:3404:2543":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"17:11354:5050":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:46300:2413":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"2:3906:2420":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"2:14419:203":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"16:3770:6850":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"1:1578:3636":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"16:3103:4989":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"2:24422:8145":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"12:777:1604":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"1:13781:8592":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"16:5238:45037":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"6:1764:7435":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"17:13293:6632":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"16:7141:4811":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"17:9587:60756":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"2:25117:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"2:37923:2798":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"16:7121:4809":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"2:23237:3587":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"12:2066:3600":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"6:6080:7997":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"1:15345:53603":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"17:13404:6659":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"16:4689:6865":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"12:952:3633":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"1:14981:8367":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"2:50370:2495":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"2:5142:3174":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"17:12302:6343":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"16:5348:4758":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"2:50477:4231":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"16:7754:4817":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"2:50485:4226":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"5:981:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"1:11932:5367":{"crate_id":1,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"6:3933:7479":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"2:50265:3938":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"2:47820:1972":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"2:48560:2518":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"6:4321:7631":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"6:521:7230":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"17:11937:6284":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"16:7768:4721":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"2:23231:3585":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:1146:8586":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"1:12073:3860":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:47887:2679":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:10731:3432":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"5:8274:4347":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"1:997:3583":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"1:11091:3568":{"crate_id":1,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"18:849:5168":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"2:3474:2395":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"6:1680:7396":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"12:2032:1972":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"6:4538:7727":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"1:11379:3689":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"5:1533:3637":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"17:11742:6244":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"17:11640:5454":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"2:4852:3922":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:8785:3686":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"1:11511:3702":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"1:12102:214":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"5:3114:8606":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"1:2147:3600":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"10:0:2256":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"2:8126:4100":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"2:28329:4071":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"17:12237:6334":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"1:5518:3549":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"17:8902:46612":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"16:7684:4725":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:6639:3365":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"16:7247:4748":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"1:3801:207":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"16:5784:4777":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"5:5488:3409":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"17:12607:6418":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"17:12634:6420":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"17:13155:6600":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"2:23425:3537":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"17:12557:6401":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"17:13323:6643":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"16:3402:4701":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"17:13817:6796":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"6:6214:8065":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"5:3105:59474":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"17:4008:5865":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"1:2422:5900":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"2:47045:3373":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"9:234:4512":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"5:6562:1605":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"12:764:1975":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:46327:2052":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"2:10571:2511":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"17:12496:6392":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"17:13721:6763":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"17:11890:6269":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"2:50006:2483":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"9:41:4537":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"6:1537:7302":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:24168:4249":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"2:48797:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"12:979:3635":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"17:12921:6466":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"1:9578:5309":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockReadGuard"],"kind":"struct"},"2:3101:3537":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"2:11476:2473":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"6:5366:7858":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"6:157:39422":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"2:13049:4219":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"2:46602:4158":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"16:6012:4712":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"1:9406:5307":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"17:13595:6712":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"2:52408:4057":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"16:2905:4975":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"1:5159:3827":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"2:3381:2050":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"2:3586:117":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"17:13840:6797":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"2:23150:3537":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"1:10950:3420":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"2:49076:2430":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"16:6533:5005":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"17:11603:5453":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"5:5861:5266":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"16:2959:4976":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"12:971:3634":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"6:565:7255":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"17:10211:5853":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"12:1238:4619":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"1:7144:188":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"16:5303:4756":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"16:5257:6097":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"1:10554:12272":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"1:11902:3737":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"1:1466:3632":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"1:11013:2482":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"16:7449:4723":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"12:856:3627":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"17:13167:6605":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"16:5289:4713":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"2:39115:4457":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"16:3521:6847":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"1:15886:53289":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"2:10579:191":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"13:233:7145":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:14358:4067":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"12:2036:1604":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"5:5906:2468":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"1:4834:3674":{"crate_id":1,"path":["std","net","ip","display_buffer","IpDisplayBuffer"],"kind":"struct"},"5:2843:4453":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"1:1261:144":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"17:11810:6264":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"6:672:39755":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"1:14895:3736":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"1:5641:3896":{"crate_id":1,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"17:11181:6164":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"12:183:4624":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"5:2619:4454":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"1:4183:3442":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"1:2152:3601":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"16:6717:4800":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"2:47282:3342":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"12:1121:3637":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"14:244:7098":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"1:13501:3688":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"1:10463:3774":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"16:4975:6874":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"18:866:5170":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:46865:3351":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"16:2981:4987":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"1:14424:3559":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"17:9636:5841":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:47955:1975":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"2:49620:2873":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:3483:2402":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"16:7782:4722":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"5:8470:4340":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"17:11922:6279":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"16:5923:4780":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"17:10571:5105":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"17:13361:6651":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"2:13072:4220":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"17:13281:6629":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"6:612:7280":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"17:11822:6267":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"6:5478:7899":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"17:11433:6188":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"1:13879:3733":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"6:6129:8010":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:1937:1592":{"crate_id":2,"path":["core","mem"],"kind":"module"},"17:12674:6425":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"2:46685:2479":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"16:6173:4787":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"17:10610:5862":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"1:11429:3699":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"2:3470:2396":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"16:3686:6848":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"2:49946:2486":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"2:52378:4054":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"2:46957:3366":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:15916:2292":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"5:3428:3600":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"6:3877:7441":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"6:6034:7978":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"17:10407:5130":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"5:7947:5280":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"2:51784:4053":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"2:3371:222":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:5572:3552":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:52174:8264":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"6:634:7293":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"1:10922:3448":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"6:5398:7871":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"16:6595:4728":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"1:1105:8505":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"2:48916:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"1:8615:163":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"16:2772:4999":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"17:11142:6161":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"17:607:8437":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"2:3102:2455":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"2:46692:4321":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"17:510:8436":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"1:15927:2303":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"2:7158:3378":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:6650:3525":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"1:5436:3592":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"6:5301:7814":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"6:5378:7863":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:4094:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"16:5362:4759":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:13123:2473":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:3284:3430":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"17:9240:5047":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"2:52151:8263":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"2:2390:2996":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"12:895:4615":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"1:10437:3751":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"5:6498:228":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"6:533:5533":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"5:8436:4437":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"1:8222:4441":{"crate_id":1,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"2:48249:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"17:13899:6813":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"1:15398:4648":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"17:13345:6648":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"17:10223:5061":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"16:2733:4963":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2:13407:3931":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"2:3452:2392":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:2212:1057":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"17:9716:60755":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"16:6949:5022":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"2:0:493":{"crate_id":2,"path":["core"],"kind":"module"},"1:10698:130":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"9:996:4553":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"16:4942:6873":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"6:4005:7524":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"9:927:44388":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"2:46158:196":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"5:8360:3643":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"12:2419:3604":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"17:9706:5843":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"17:13331:6646":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"1:15914:2290":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"1:5751:3904":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"6:4474:7701":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:23227:3537":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:8286:204":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:52022:4022":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"16:6691:4799":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"1:2651:182":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"17:9033:46615":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"5:7048:4338":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"17:11701:6234":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"17:1311:5152":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"}},"external_crates":{"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":18}