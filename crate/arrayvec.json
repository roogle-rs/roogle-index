{"root":"0:0:1587","crate_version":"0.7.2","includes_private":false,"index":{"5:6498:224":{"id":"5:6498:224","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6499:1400"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:23208:3570":{"id":"2:23208:3570","crate_id":2,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23198:3524","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3655:2400":{"id":"2:3655:2400","crate_id":2,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3657:181","2:3658:755"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"b:2:3262-0:642:1592":{"id":"b:2:3262-0:642:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:3255:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:4129:2516","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3264:3510"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"E"}}},"2:3160:229":{"id":"2:3160:229","crate_id":2,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3162:127","2:3163:1420"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2867:104":{"id":"2:2867:104","crate_id":2,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2868:409","2:2869:411"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3151:74":{"id":"2:3151:74","crate_id":2,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3153:2021"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:469:1718":{"id":"0:469:1718","crate_id":0,"name":"pop","span":{"filename":"src/array_string.rs","begin":[308,4],"end":[318,5]},"visibility":"public","docs":"Removes the last character from the string and returns it.\n\nReturns `None` if this `ArrayString` is empty.\n\n```\nuse arrayvec::ArrayString;\n \nlet mut s = ArrayString::<3>::from(\"foo\").unwrap();\n\nassert_eq!(s.pop(), Some('o'));\nassert_eq!(s.pop(), Some('o'));\nassert_eq!(s.pop(), Some('f'));\n\nassert_eq!(s.pop(), None);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"char"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13794:4133":{"id":"2:13794:4133","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"`FromStr`":"2:13241:2053","FromStr::Err":"2:13241:2053"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47875:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:13241:2053","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:13241:2053","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:467:2079":{"id":"0:467:2079","crate_id":0,"name":"try_push_str","span":{"filename":"src/array_string.rs","begin":[279,4],"end":[291,5]},"visibility":"public","docs":"Adds the given string slice to the end of the string.\n\nReturns `Ok` if the push succeeds.\n\n**Errors** if the backing array is not large enough to fit the string.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<2>::new();\n\nstring.try_push_str(\"a\").unwrap();\nlet overflow1 = string.try_push_str(\"bc\");\nstring.try_push_str(\"d\").unwrap();\nlet overflow2 = string.try_push_str(\"ef\");\n\nassert_eq!(&string[..], \"ad\");\nassert_eq!(overflow1.unwrap_err().element(), \"bc\");\nassert_eq!(overflow2.unwrap_err().element(), \"ef\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["s",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47875:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6246:3512":{"id":"1:6246:3512","crate_id":1,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6247:57231","1:6248:8048","1:6249:57232","1:6250:57233","1:6251:57234","1:6252:57235"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10355:3524","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:533:794":{"id":"0:533:794","crate_id":0,"name":"le","span":{"filename":"src/array_string.rs","begin":[538,4],"end":[538,54]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:452:795":{"id":"0:452:795","crate_id":0,"name":"len","span":{"filename":"src/array_string.rs","begin":[85,4],"end":[85,58]},"visibility":"public","docs":"Return the length of the string.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:470:1721":{"id":"0:470:1721","crate_id":0,"name":"truncate","span":{"filename":"src/array_string.rs","begin":[336,4],"end":[347,5]},"visibility":"public","docs":"Shortens this `ArrayString` to the specified length.\n\nIf `new_len` is greater than the string’s current length, this has no\neffect.\n\n***Panics*** if `new_len` does not lie on a `char` boundary.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<6>::from(\"foobar\").unwrap();\nstring.truncate(3);\nassert_eq!(&string[..], \"foo\");\nstring.truncate(4);\nassert_eq!(&string[..], \"foo\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["new_len",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:543":{"id":"0:543","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[554,0],"end":[559,1]},"visibility":{"restricted":{"parent":"0:388:1588","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["min","clamp","max"],"trait":{"name":"Ord","id":"2:2936:177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:545:416"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3190-0:642:1592":{"id":"b:2:3190-0:642:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3160:229","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3193:127","2:3194:1420"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13796:4323":{"id":"2:13796:4323","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13788:59380":{"id":"2:13788:59380","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:13302:2460","prim@char":"1:15744:2273"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2453","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13765:59372":{"id":"2:13765:59372","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13800:59382":{"id":"2:13800:59382","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"1:15744:2273"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:50012:2469","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:180":{"id":"0:180","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[725,0],"end":[731,1]},"visibility":{"restricted":{"parent":"0:31:1587","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:3570:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:183:222","0:184:544"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:6183:60021":{"id":"5:6183:60021","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:8455:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3183:2797":{"id":"2:3183:2797","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3157:135"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:368":{"id":"0:368","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1173,0],"end":[1178,1]},"visibility":{"restricted":{"parent":"0:31:1587","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3231:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:371:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:375:999":{"id":"0:375:999","crate_id":0,"name":"partial_cmp","span":{"filename":"src/arrayvec.rs","begin":[1181,4],"end":[1183,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"2:37870:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:231:1699":{"id":"0:231:1699","crate_id":0,"name":"Item","span":{"filename":"src/arrayvec.rs","begin":[853,4],"end":[853,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:207:1699":{"id":"0:207:1699","crate_id":0,"name":"Item","span":{"filename":"src/arrayvec.rs","begin":[804,4],"end":[804,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"T"}}}}},"2:8602:3340":{"id":"2:8602:3340","crate_id":2,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8604:2845"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:281:1973":{"id":"0:281:1973","crate_id":0,"name":"next_back","span":{"filename":"src/arrayvec.rs","begin":[957,4],"end":[963,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8844:157","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:496":{"id":"0:496","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[470,0],"end":[475,1]},"visibility":{"restricted":{"parent":"0:388:1588","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10771:142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:498:716"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2905:124":{"id":"2:2905:124","crate_id":2,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2900:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:508:661":{"id":"0:508:661","crate_id":0,"name":"fmt","span":{"filename":"src/array_string.rs","begin":[489,4],"end":[489,76]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10493:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10482:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3184-0:634:1591":{"id":"b:2:3184-0:634:1591","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3157:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3186:682"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5906:2458":{"id":"5:5906:2458","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5908:181","5:5909:433"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:2900:183":{"id":"2:2900:183","crate_id":2,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2902:605","2:2903:909"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"b:2:3195-0:634:1591":{"id":"b:2:3195-0:634:1591","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3154:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3198:127","2:3199:1419"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:198":{"id":"0:198","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[775,0],"end":[789,1]},"visibility":{"restricted":{"parent":"0:31:1587","path":"::arrayvec"}},"docs":"Try to create an `ArrayVec` from a slice. This will return an error if the slice was too big to\nfit.\n\n```\nuse arrayvec::ArrayVec;\nuse std::convert::TryInto as _;\n\nlet array: ArrayVec<_, 4> = (&[1, 2, 3] as &[_]).try_into().unwrap();\nassert_eq!(array.len(), 3);\nassert_eq!(array.capacity(), 4);\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2867:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:201:127","0:202:1419"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:6472:3540":{"id":"1:6472:3540","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6473:57307","1:6474:7970","1:6475:7971","1:6476:7973","1:6477:7972","1:6478:7974","1:6479:7975","1:6480:7977","1:6481:6205","1:6482:7980","1:6483:7981","1:6484:7982","1:6485:7983","1:6486:7984","1:6487:7985","1:6488:7978","1:6489:7979"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:465:1714":{"id":"0:465:1714","crate_id":0,"name":"try_push","span":{"filename":"src/array_string.rs","begin":[226,4],"end":[239,5]},"visibility":"public","docs":"Adds the given char to the end of the string.\n\nReturns `Ok` if the push succeeds.\n\n**Errors** if the backing array is not large enough to fit the additional char.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<2>::new();\n\nstring.try_push('a').unwrap();\nstring.try_push('b').unwrap();\nlet overflow = string.try_push('c');\n\nassert_eq!(&string[..], \"ab\");\nassert_eq!(overflow.unwrap_err().element(), 'c');\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["c",{"kind":"primitive","inner":"char"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47875:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"char"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:248:409":{"id":"0:248:409","crate_id":0,"name":"clone","span":{"filename":"src/arrayvec.rs","begin":[907,4],"end":[911,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1594","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3388:2533-0:98:1593":{"id":"a:2:3388:2533-0:98:1593","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3388:2533","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3388:2533","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3495:2394":{"id":"2:3495:2394","crate_id":2,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3497:181","2:3498:1239"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:167:1704":{"id":"0:167:1704","crate_id":0,"name":"as_slice","span":{"filename":"src/arrayvec.rs","begin":[685,4],"end":[687,5]},"visibility":"public","docs":"Return a slice containing all elements of the vector.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23145:4002":{"id":"2:23145:4002","crate_id":2,"name":"SimdPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23146:4000","2:23147:1250","2:23148:1275"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2848-0:98:1593":{"id":"b:2:2848-0:98:1593","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2842:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2850:1726"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23072:4075":{"id":"2:23072:4075","crate_id":2,"name":"SimdInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23073:4000","2:23074:58770","2:23075:1230","2:23076:1231","2:23077:42414","2:23078:58815","2:23079:58816","2:23080:58817","2:23081:58818","2:23082:58819","2:23083:58771","2:23084:58772","2:23085:58773","2:23086:58774","2:23087:58775","2:23088:58776","2:23089:58777"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3357:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23121:3524","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:473:1701":{"id":"0:473:1701","crate_id":0,"name":"set_len","span":{"filename":"src/array_string.rs","begin":[397,4],"end":[401,5]},"visibility":"public","docs":"Set the strings’s length.\n\nThis function is `unsafe` because it changes the notion of the\nnumber of “valid” bytes in the string. Use with care.\n\nThis method uses *debug assertions* to check the validity of `length`\nand may use other debug assertions.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["length",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:13241:2053":{"id":"2:13241:2053","crate_id":2,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13242:126","2:13243:2175"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3415:2378":{"id":"2:3415:2378","crate_id":2,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3417:181","2:3418:266"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:541:714":{"id":"0:541:714","crate_id":0,"name":"gt","span":{"filename":"src/array_string.rs","begin":[550,4],"end":[550,66]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23738:16453":{"id":"2:23738:16453","crate_id":2,"name":"SimdOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23739:58184","2:23740:58185","2:23741:58186"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdPartialOrd","id":"2:23733:4003","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13726:53357":{"id":"2:13726:53357","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"str::split_whitespace":"1:15750:2278","`DoubleEndedIterator`":"2:8687:120","prim@char":"1:15744:2273","str::rsplit":"1:15750:2278","self::pattern":"2:13302:2460"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:49713:2479","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2453","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:253:1595":{"id":"0:253:1595","crate_id":0,"name":"Drain","span":{"filename":"src/arrayvec.rs","begin":[926,0],"end":[934,1]},"visibility":"public","docs":"A draining iterator for `ArrayVec`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3388:2533-0:253:1595","a:2:9503:2612-0:253:1595","a:2:9504:2611-0:253:1595","b:2:8647-0:253:1595","b:2:3195-0:253:1595","b:2:3184-0:253:1595","b:2:4080-0:253:1595","b:2:2851-0:253:1595","b:2:3180-0:253:1595","b:2:3190-0:253:1595","b:2:2848-0:253:1595","0:261","0:265","0:269","0:277","0:283","0:287"]}},"2:13332:2452":{"id":"2:13332:2452","crate_id":2,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:2454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:327":{"id":"0:327","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1105,0],"end":[1125,1]},"visibility":{"restricted":{"parent":"0:31:1587","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2867:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2867:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:330:409","0:331:411"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3505:2396":{"id":"2:3505:2396","crate_id":2,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3507:355"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:116:1775":{"id":"0:116:1775","crate_id":0,"name":"is_empty","span":{"filename":"src/arrayvec.rs","begin":[123,4],"end":[123,60]},"visibility":"public","docs":"Returns whether the `ArrayVec` is empty.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1]);\narray.pop();\nassert_eq!(array.is_empty(), true);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:509":{"id":"0:509","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[492,0],"end":[495,1]},"visibility":{"restricted":{"parent":"0:388:1588","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10540:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:511:661"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:598:661":{"id":"0:598:661","crate_id":0,"name":"fmt","span":{"filename":"src/errors.rs","begin":[45,4],"end":[47,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10493:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10482:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3359:220-0:642:1592":{"id":"a:2:3359:220-0:642:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3359:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3359:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13785:59379":{"id":"2:13785:59379","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:13302:2460","prim@char":"1:15744:2273"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2453","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:2453","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:2454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:304":{"id":"0:304","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1011,0],"end":[1020,1]},"visibility":{"restricted":{"parent":"0:31:1587","path":"::arrayvec"}},"docs":"Extend the `ArrayVec` with an iterator.\n \n***Panics*** if extending the vector exceeds its capacity.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["extend_reserve","extend_one"],"trait":{"name":"Extend","id":"2:8652:1992","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:307:1993"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:8647-0:223:1594":{"id":"b:2:8647-0:223:1594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8844:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8643:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1594","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:8649:1699","2:8650:1594","2:8651:770"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:525:828":{"id":"0:525:828","crate_id":0,"name":"lt","span":{"filename":"src/array_string.rs","begin":[526,4],"end":[526,55]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3180-0:253:1595":{"id":"b:2:3180-0:253:1595","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3157:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3154:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:253:1595","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3183:2797"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13702:3983":{"id":"2:13702:3983","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:15744:2273"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49689:2466","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13682:59361":{"id":"2:13682:59361","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"1:15750:2278"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:665:999":{"id":"0:665:999","crate_id":0,"name":"partial_cmp","span":{"filename":"src/errors.rs","begin":[8,42],"end":[8,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::option::Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:37870:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:546":{"id":"0:546","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[561,0],"end":[568,1]},"visibility":{"restricted":{"parent":"0:388:1588","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:13241:2053","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:548:126","0:549:2175"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:126:1829":{"id":"0:126:1829","crate_id":0,"name":"insert","span":{"filename":"src/arrayvec.rs","begin":[280,4],"end":[282,5]},"visibility":"public","docs":"Insert `element` at position `index`.\n\nShift up all elements after `index`.\n\nIt is an error if the index is greater than the length or if the\narrayvec is full.\n\n***Panics*** if the array is full or the `index` is out of bounds. See\n`try_insert` for fallible version.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::<_, 2>::new();\n\narray.insert(0, \"x\");\narray.insert(0, \"y\");\nassert_eq!(&array[..], &[\"y\", \"x\"]);\n\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}],["element",{"kind":"generic","inner":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2848-0:642:1592":{"id":"b:2:2848-0:642:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2842:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2850:1726"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13680:59360":{"id":"2:13680:59360","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9504:2611-0:642:1592":{"id":"a:2:9504:2611-0:642:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9504:2611","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9504:2611","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:645":{"id":"0:645","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[8,9],"end":[8,14]},"visibility":{"restricted":{"parent":"0:575:1589","path":"::errors"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2867:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2867:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:647:409"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3347:211":{"id":"2:3347:211","crate_id":2,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:589:2176":{"id":"0:589:2176","crate_id":0,"name":"simplify","span":{"filename":"src/errors.rs","begin":[27,4],"end":[29,5]},"visibility":"public","docs":"Convert into a `CapacityError` that does not carry an element.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3194:1420":{"id":"2:3194:1420","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47875:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:0:1587":{"id":"0:0:1587","crate_id":0,"name":"arrayvec","span":{"filename":"src/lib.rs","begin":[1,0],"end":[59,53]},"visibility":"public","docs":"**arrayvec** provides the types [`ArrayVec`] and [`ArrayString`]: \narray-backed vector and string types, which store their contents inline.\n\nThe arrayvec package has the following cargo features:\n\n- `std`\n  - Optional, enabled by default\n  - Use libstd; disable to use `no_std` instead.\n\n- `serde`\n  - Optional\n  - Enable serialization for ArrayVec and ArrayString using serde 1.x\n\n## Rust Version\n\nThis version of arrayvec requires Rust 1.51 or later.\n","links":{"`ArrayString`":"0:634:1591","`ArrayVec`":"0:98:1593"},"attrs":["#![doc(html_root_url = \"https://docs.rs/arrayvec/0.7/\")]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:618","0:621","0:625","0:628","0:631"],"is_stripped":false}},"2:9131:3338":{"id":"2:9131:3338","crate_id":2,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Step","id":"2:8167:3323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:5432:3579":{"id":"1:5432:3579","crate_id":1,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5433:53636","1:5434:4424"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10355:3524","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3462:2387":{"id":"2:3462:2387","crate_id":2,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3464:1106"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:454:682":{"id":"0:454:682","crate_id":0,"name":"from","span":{"filename":"src/array_string.rs","begin":[105,4],"end":[109,5]},"visibility":"public","docs":"Create a new `ArrayString` from a `str`.\n\nCapacity is inferred from the type parameter.\n\n**Errors** if the backing array is not large enough to fit the string.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<3>::from(\"foo\").unwrap();\nassert_eq!(&string[..], \"foo\");\nassert_eq!(string.len(), 3);\nassert_eq!(string.capacity(), 3);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47875:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6577:3515":{"id":"1:6577:3515","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6578:8510"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10355:3524","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:625":{"id":"0:625","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[59,26],"end":[59,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::arrayvec::ArrayVec","name":"ArrayVec","id":"0:98:1593","glob":false}},"0:104":{"id":"0:104","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[48,0],"end":[54,1]},"visibility":{"restricted":{"parent":"0:31:1587","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:3594:1748","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:107:579"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2946:184":{"id":"2:2946:184","crate_id":2,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2948:999","2:2949:828","2:2950:794","2:2951:714","2:2952:697"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2900:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:344:605":{"id":"0:344:605","crate_id":0,"name":"eq","span":{"filename":"src/arrayvec.rs","begin":[1146,4],"end":[1148,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:223:1594":{"id":"0:223:1594","crate_id":0,"name":"IntoIter","span":{"filename":"src/arrayvec.rs","begin":[847,0],"end":[850,1]},"visibility":"public","docs":"By-value iterator for `ArrayVec`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3388:2533-0:223:1594","a:2:3347:211-0:223:1594","a:2:3359:220-0:223:1594","a:2:9503:2612-0:223:1594","a:2:9504:2611-0:223:1594","b:2:8647-0:223:1594","b:2:3195-0:223:1594","b:2:3184-0:223:1594","b:2:4080-0:223:1594","b:2:2851-0:223:1594","b:2:3180-0:223:1594","b:2:3190-0:223:1594","b:2:2848-0:223:1594","b:5:848-0:223:1594","0:228","0:234","0:238","0:241","0:245","0:249"]}},"0:228":{"id":"0:228","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[852,0],"end":[871,1]},"visibility":{"restricted":{"parent":"0:31:1587","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["enumerate","chain","max_by","__iterator_get_unchecked","skip","cmp_by","unzip","reduce","partition","ne","flatten","gt","peekable","intersperse","next_chunk","zip","max_by_key","cmp","partial_cmp_by","copied","eq","try_reduce","le","partition_in_place","map","fuse","skip_while","intersperse_with","ge","last","count","any","eq_by","collect","cycle","find","all","is_partitioned","inspect","take_while","for_each","advance_by","size_hint","min_by","is_sorted","array_chunks","find_map","try_fold","by_ref","map_while","filter","nth","position","min_by_key","is_sorted_by","min","take","cloned","try_find","sum","try_for_each","try_collect","scan","filter_map","lt","step_by","max","partial_cmp","is_sorted_by_key","product","rev","rposition","fold","collect_into","flat_map"],"trait":{"name":"Iterator","id":"2:8844:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1594","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:231:1699","0:232:924","0:233:1972"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:337":{"id":"0:337","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1135,0],"end":[1141,1]},"visibility":{"restricted":{"parent":"0:31:1587","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2900:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2900:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:340:605"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:6574:3573":{"id":"1:6574:3573","crate_id":1,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6575:8088","1:6576:56805"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10355:3524","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3352:2435":{"id":"2:3352:2435","crate_id":2,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13753:2228":{"id":"2:13753:2228","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"str::matches":"1:15750:2278","`DoubleEndedIterator`":"2:8687:120","self::pattern":"2:13302:2460","prim@char":"1:15744:2273"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:49917:2476","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2453","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:595:661":{"id":"0:595:661","crate_id":0,"name":"fmt","span":{"filename":"src/errors.rs","begin":[39,4],"end":[41,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10493:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10482:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3355:218":{"id":"2:3355:218","crate_id":2,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9503:2612-0:642:1592":{"id":"a:2:9503:2612-0:642:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9503:2612","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9503:2612","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:5504:3537":{"id":"1:5504:3537","crate_id":1,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5505:53248","1:5506:53250","1:5507:53249","1:5508:53251"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3600:131":{"id":"2:3600:131","crate_id":2,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3602:378"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3603:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:203":{"id":"0:203","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[803,0],"end":[807,1]},"visibility":{"restricted":{"parent":"0:31:1587","path":"::arrayvec"}},"docs":"Iterate the `ArrayVec` with references to each element.\n\n```\nuse arrayvec::ArrayVec;\n\nlet array = ArrayVec::from([1, 2, 3]);\n\nfor elt in &array {\n    // ...\n}\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8643:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}},"items":["0:207:1699","0:208:1594","0:209:770"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13722:2802":{"id":"2:13722:2802","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"self::pattern":"2:13302:2460","`None`":"2:47750:176","prim@char":"1:15744:2273"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2453","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:2453","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:2454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10816:2416":{"id":"2:10816:2416","crate_id":2,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10817:146","2:10818:33368","2:10819:55077"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:265":{"id":"0:265","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[937,0],"end":[937,72]},"visibility":{"restricted":{"parent":"0:31:1587","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3347:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3347:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:253:1595","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13695:55157":{"id":"2:13695:55157","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11175:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11175:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"1:5582:3544":{"id":"1:5582:3544","crate_id":1,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5583:6163"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3388:2533-0:223:1594":{"id":"a:2:3388:2533-0:223:1594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3388:2533","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3388:2533","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1594","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:484:546":{"id":"0:484:546","crate_id":0,"name":"deref_mut","span":{"filename":"src/array_string.rs","begin":[437,4],"end":[443,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:24042:4001":{"id":"2:24042:4001","crate_id":2,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:24043:4000"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:24038:3524","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"2:3357:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10781:146":{"id":"2:10781:146","crate_id":2,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10782:653","2:10783:1717","2:10784:3114","2:10785:3115","2:10786:3116","2:10787:3117","2:10788:3118","2:10789:3119","2:10790:3120","2:10791:3121","2:10792:3122","2:10793:3123","2:10794:3124","2:10795:3125","2:10796:3126","2:10797:1536"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:471:1864":{"id":"0:471:1864","crate_id":0,"name":"remove","span":{"filename":"src/array_string.rs","begin":[366,4],"end":[381,5]},"visibility":"public","docs":"Removes a `char` from this `ArrayString` at a byte position and returns it.\n\nThis is an `O(n)` operation, as it requires copying every element in the\narray.\n\n***Panics*** if `idx` is larger than or equal to the `ArrayString`’s length,\nor if it does not lie on a `char` boundary.\n\n```\nuse arrayvec::ArrayString;\n \nlet mut s = ArrayString::<3>::from(\"foo\").unwrap();\n\nassert_eq!(s.remove(0), 'f');\nassert_eq!(s.remove(1), 'o');\nassert_eq!(s.remove(0), 'o');\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["idx",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"char"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:209:770":{"id":"0:209:770","crate_id":0,"name":"into_iter","span":{"filename":"src/arrayvec.rs","begin":[806,4],"end":[806,56]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8643:151","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:360":{"id":"0:360","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1165,0],"end":[1167,1]},"visibility":{"restricted":{"parent":"0:31:1587","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsMut","id":"2:3151:74","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:363:2021"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10533:109":{"id":"2:10533:109","crate_id":2,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10534:661"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:4429:3407":{"id":"1:4429:3407","crate_id":1,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4430:1719","1:4431:56939","1:4433:56940","1:4434:56941","1:4435:3408","1:4436:56942","1:4437:56723","1:4439:56943","1:4440:2826","1:4441:3663","1:4442:2810","1:4444:1949"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:341":{"id":"0:341","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1143,0],"end":[1149,1]},"visibility":{"restricted":{"parent":"0:31:1587","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2900:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2900:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:344:605"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3347:211-0:98:1593":{"id":"a:2:3347:211-0:98:1593","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3347:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3347:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:356":{"id":"0:356","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1161,0],"end":[1163,1]},"visibility":{"restricted":{"parent":"0:31:1587","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsRef","id":"2:3148:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:359:306"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:538:999":{"id":"0:538:999","crate_id":0,"name":"partial_cmp","span":{"filename":"src/array_string.rs","begin":[545,4],"end":[547,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"2:37870:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13705:32153":{"id":"2:13705:32153","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"1:15750:2278"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:49996:2462","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13699:55176":{"id":"2:13699:55176","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"1:15750:2278"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9503:2612-0:223:1594":{"id":"a:2:9503:2612-0:223:1594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9503:2612","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9503:2612","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1594","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13744:55190":{"id":"2:13744:55190","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"self::pattern":"2:13302:2460","prim@char":"1:15744:2273","str::splitn":"1:15750:2278"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:49835:2480","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2453","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:2453","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:2454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3255:127":{"id":"2:3255:127","crate_id":2,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3256:2499","2:3258:3508","2:3259:3509","2:3260:3510"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10533:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Display","id":"2:10540:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3518:2399":{"id":"2:3518:2399","crate_id":2,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3520:1240"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3807:225":{"id":"2:3807:225","crate_id":2,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3808:181","2:3809:2404","2:3810:687","2:3811:370"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FromResidual","id":"2:3812:137","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3807:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:529":{"id":"0:529","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[532,0],"end":[541,1]},"visibility":{"restricted":{"parent":"0:388:1588","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["le","gt","lt","ge"],"trait":{"name":"PartialOrd","id":"2:2946:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:531:999","0:532:828","0:533:794","0:534:714","0:535:697"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13803:59383":{"id":"2:13803:59383","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:15744:2273"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:50030:2471","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3795:2402":{"id":"2:3795:2402","crate_id":2,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"RangeBounds","id":"2:3726:1725","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:522":{"id":"0:522","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[521,0],"end":[530,1]},"visibility":{"restricted":{"parent":"0:388:1588","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["le","gt","lt","ge"],"trait":{"name":"PartialOrd","id":"2:2946:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:524:999","0:525:828","0:526:794","0:527:714","0:528:697"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:249":{"id":"0:249","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[914,0],"end":[923,1]},"visibility":{"restricted":{"parent":"0:31:1587","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10533:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10533:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1594","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:252:661"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:6646:3518":{"id":"1:6646:3518","crate_id":1,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6647:55016"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:4080-0:98:1593":{"id":"b:2:4080-0:98:1593","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4078:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:4082:1432"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:330:409":{"id":"0:330:409","crate_id":0,"name":"clone","span":{"filename":"src/arrayvec.rs","begin":[1108,4],"end":[1110,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3195-0:642:1592":{"id":"b:2:3195-0:642:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3154:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3198:127","2:3199:1419"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:472:1720":{"id":"0:472:1720","crate_id":0,"name":"clear","span":{"filename":"src/array_string.rs","begin":[384,4],"end":[388,5]},"visibility":"public","docs":"Make the string empty.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5520:3539":{"id":"1:5520:3539","crate_id":1,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5521:6163","1:5522:8355"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2853:2020":{"id":"2:2853:2020","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13715:55193":{"id":"2:13715:55193","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:15744:2273","self::pattern":"2:13302:2460"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2453","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:2453","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:2454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:844:223":{"id":"5:844:223","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:845:2414","5:846:2854","5:847:2855"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:261":{"id":"0:261","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[936,0],"end":[936,72]},"visibility":{"restricted":{"parent":"0:31:1587","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3359:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3359:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:253:1595","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5574:3542":{"id":"1:5574:3542","crate_id":1,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5575:56791"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10355:3524","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:121:1714":{"id":"0:121:1714","crate_id":0,"name":"try_push","span":{"filename":"src/arrayvec.rs","begin":[201,4],"end":[203,5]},"visibility":"public","docs":"Push `element` to the end of the vector.\n\nReturn `Ok` if the push succeeds, or return an error if the vector\nis already full.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::<_, 2>::new();\n\nlet push1 = array.try_push(1);\nlet push2 = array.try_push(2);\n\nassert!(push1.is_ok());\nassert!(push2.is_ok());\n\nassert_eq!(&array[..], &[1, 2]);\n\nlet overflow = array.try_push(3);\n\nassert!(overflow.is_err());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["element",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47875:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:345":{"id":"0:345","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1151,0],"end":[1151,65]},"visibility":{"restricted":{"parent":"0:31:1587","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2905:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2905:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:23733:4003":{"id":"2:23733:4003","crate_id":2,"name":"SimdPartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23734:1273","2:23735:1272","2:23736:1270","2:23737:1269"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdPartialEq","id":"2:23145:4002","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3388:2533-0:634:1591":{"id":"a:2:3388:2533-0:634:1591","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3388:2533","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3501:2395":{"id":"2:3501:2395","crate_id":2,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3503:353"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3148:75":{"id":"2:3148:75","crate_id":2,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3150:306"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:474:307":{"id":"0:474:307","crate_id":0,"name":"as_str","span":{"filename":"src/array_string.rs","begin":[404,4],"end":[406,5]},"visibility":"public","docs":"Return a string slice of the whole `ArrayString`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3484:2391":{"id":"2:3484:2391","crate_id":2,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3486:181","2:3487:357"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13712:55192":{"id":"2:13712:55192","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"self::pattern":"2:13302:2460","prim@char":"1:15744:2273"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2453","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:252:661":{"id":"0:252:661","crate_id":0,"name":"fmt","span":{"filename":"src/arrayvec.rs","begin":[918,4],"end":[922,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10493:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10482:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:631":{"id":"0:631","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[59,46],"end":[59,51]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::arrayvec::Drain","name":"Drain","id":"0:253:1595","glob":false}},"b:2:3180-0:98:1593":{"id":"b:2:3180-0:98:1593","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3157:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3154:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3183:2797"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:6500-0:642:1592":{"id":"b:5:6500-0:642:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10540:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6498:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:6502:1400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:852:2855":{"id":"5:852:2855","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3388:2533-0:642:1592":{"id":"a:2:3388:2533-0:642:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3388:2533","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3388:2533","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:367:661":{"id":"0:367:661","crate_id":0,"name":"fmt","span":{"filename":"src/arrayvec.rs","begin":[1170,4],"end":[1170,76]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10493:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10482:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:585":{"id":"0:585","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[13,0],"end":[30,1]},"visibility":{"restricted":{"parent":"0:575:1589","path":"::errors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:587:922","0:588:1713","0:589:2176"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:478":{"id":"0:478","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[422,0],"end":[432,1]},"visibility":{"restricted":{"parent":"0:388:1588","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:3570:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:480:222","0:481:544"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13772:59376":{"id":"2:13772:59376","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4486:2025":{"id":"1:4486:2025","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4487:1717","1:4488:3449","1:4490:3450","1:4491:2028","1:4492:3451","1:4493:3452","1:4494:2187","1:4503:2826"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:480:222":{"id":"0:480:222","crate_id":0,"name":"Target","span":{"filename":"src/array_string.rs","begin":[424,4],"end":[424,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"str"}}},"0:98:1593":{"id":"0:98:1593","crate_id":0,"name":"ArrayVec","span":{"filename":"src/arrayvec.rs","begin":[42,0],"end":[46,1]},"visibility":"public","docs":"A vector with a fixed capacity.\n\nThe `ArrayVec` is a vector backed by a fixed size array. It keeps track of\nthe number of initialized elements. The `ArrayVec<T, CAP>` is parameterized\nby `T` for the element type and `CAP` for the maximum capacity.\n\n`CAP` is of type `usize` but is range limited to `u32::MAX`; attempting to create larger\narrayvecs with larger capacity will panic.\n\nThe vector is a contiguous value (storing the elements inline) that you can store directly on\nthe stack if needed.\n\nIt offers a simple API but also dereferences to a slice, so that the full slice API is\navailable. The ArrayVec can be converted into a by value iterator.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:109","a:2:3388:2533-0:98:1593","a:2:3347:211-0:98:1593","a:2:3359:220-0:98:1593","a:2:9503:2612-0:98:1593","a:2:9504:2611-0:98:1593","b:2:3195-0:98:1593","b:2:3184-0:98:1593","b:2:4080-0:98:1593","b:2:2851-0:98:1593","b:2:3180-0:98:1593","b:2:3190-0:98:1593","b:2:2848-0:98:1593","b:5:848-0:98:1593","0:104","0:180","0:185","0:189","0:198","0:203","0:210","0:217","0:304","0:322","0:327","0:332","0:337","0:341","0:345","0:348","0:352","0:356","0:360","0:364","0:368","0:372","0:380","0:384"]}},"0:134:1865":{"id":"0:134:1865","crate_id":0,"name":"pop_at","span":{"filename":"src/arrayvec.rs","begin":[438,4],"end":[444,5]},"visibility":"public","docs":"Remove the element at `index` and shift down the following elements.\n\nThis is a checked version of `.remove(index)`. Returns `None` if there\nis no element at `index`. Otherwise, return the element inside `Some`.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3]);\n\nassert!(array.pop_at(0).is_some());\nassert_eq!(&array[..], &[2, 3]);\n\nassert!(array.pop_at(2).is_none());\nassert!(array.pop_at(10).is_none());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:642:1592":{"id":"0:642:1592","crate_id":0,"name":"CapacityError","span":{"filename":"src/errors.rs","begin":[9,0],"end":[11,1]},"visibility":"public","docs":"Error value indicating insufficient capacity","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:585","a:2:3388:2533-0:642:1592","a:2:3347:211-0:642:1592","a:2:3359:220-0:642:1592","a:2:9503:2612-0:642:1592","a:2:9504:2611-0:642:1592","b:2:3195-0:642:1592","b:2:3184-0:642:1592","b:2:4080-0:642:1592","b:2:2851-0:642:1592","b:2:3180-0:642:1592","b:2:3190-0:642:1592","b:2:2848-0:642:1592","b:2:3262-0:642:1592","b:5:6500-0:642:1592","b:5:848-0:642:1592","0:645","0:648","0:650","0:652","0:655","0:658","0:660","0:663","0:591","0:593","0:596"]}},"2:3359:220":{"id":"2:3359:220","crate_id":2,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:170:1709":{"id":"0:170:1709","crate_id":0,"name":"as_mut_ptr","span":{"filename":"src/arrayvec.rs","begin":[700,4],"end":[702,5]},"visibility":"public","docs":"Return a raw mutable pointer to the vector's buffer.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3659:2401":{"id":"2:3659:2401","crate_id":2,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3661:756"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Index","id":"2:3655:2400","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:500":{"id":"0:500","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[477,0],"end":[480,1]},"visibility":{"restricted":{"parent":"0:388:1588","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2842:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:502:1726"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:287":{"id":"0:287","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[968,0],"end":[988,1]},"visibility":{"restricted":{"parent":"0:31:1587","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:3594:1748","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:253:1595","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:291:579"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9503:2612-0:634:1591":{"id":"a:2:9503:2612-0:634:1591","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9503:2612","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13771:59375":{"id":"2:13771:59375","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:120:1712":{"id":"0:120:1712","crate_id":0,"name":"push","span":{"filename":"src/arrayvec.rs","begin":[175,4],"end":[177,5]},"visibility":"public","docs":"Push `element` to the end of the vector.\n\n***Panics*** if the vector is already full.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::<_, 2>::new();\n\narray.push(1);\narray.push(2);\n\nassert_eq!(&array[..], &[1, 2]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["element",{"kind":"generic","inner":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3193:127":{"id":"2:3193:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"1:6650:3521":{"id":"1:6650:3521","crate_id":1,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6651:53317"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3513:2398":{"id":"2:3513:2398","crate_id":2,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3515:1237"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:237:1973":{"id":"0:237:1973","crate_id":0,"name":"next_back","span":{"filename":"src/arrayvec.rs","begin":[874,4],"end":[884,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8844:157","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4771:3551":{"id":"1:4771:3551","crate_id":1,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4772:1963","1:4773:57254"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6184:60022":{"id":"5:6184:60022","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:444:2457","`String`":"5:8455:216"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:444:2457","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8200:2861","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8844:157":{"id":"2:8844:157","crate_id":2,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8845:1699","2:8846:924","2:8847:2805","2:8850:1972","2:8851:496","2:8853:2806","2:8856:2807","2:8857:2808","2:8858:2809","2:8859:2810","2:8861:2226","2:8863:2811","2:8864:2812","2:8866:843","2:8869:2813","2:8876:2814","2:8878:2815","2:8881:2816","2:8882:2817","2:8883:2818","2:8885:2819","2:8887:2820","2:8890:1311","2:8891:1949","2:8892:2821","2:8896:2822","2:8899:2823","2:8900:2824","2:8901:2825","2:8903:2826","2:8904:2014","2:8906:2827","2:8909:2828","2:8911:2829","2:8921:2830","2:8936:2831","2:8938:2832","2:8942:2833","2:8951:2834","2:8954:2835","2:8956:2836","2:8959:277","2:8966:295","2:8973:2837","2:8980:2838","2:8989:2839","2:8999:1016","2:9006:2840","2:9013:2791","2:9014:2016","2:9015:2793","2:9027:2792","2:9034:2790","2:9046:2789","2:9053:2139","2:9054:2841","2:9059:2842","2:9062:2010","2:9065:2843","2:9066:2844","2:9068:2845","2:9070:2846","2:9072:416","2:9075:2847","2:9078:999","2:9081:2848","2:9084:605","2:9087:2849","2:9090:909","2:9092:828","2:9094:794","2:9096:714","2:9098:697","2:9100:2850","2:9101:2851","2:9109:2852"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:244:579":{"id":"0:244:579","crate_id":0,"name":"drop","span":{"filename":"src/arrayvec.rs","begin":[890,4],"end":[901,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6746:3517":{"id":"1:6746:3517","crate_id":1,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6747:57279"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:593":{"id":"0:593","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[38,0],"end":[42,1]},"visibility":{"restricted":{"parent":"0:575:1589","path":"::errors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10540:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:595:661"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:245":{"id":"0:245","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[904,0],"end":[912,1]},"visibility":{"restricted":{"parent":"0:31:1587","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2867:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2867:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1594","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:248:409"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3479:2390":{"id":"2:3479:2390","crate_id":2,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3481:181","2:3482:354"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:4080-0:642:1592":{"id":"b:2:4080-0:642:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4078:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:4082:1432"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:348":{"id":"0:348","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1153,0],"end":[1155,1]},"visibility":{"restricted":{"parent":"0:31:1587","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2842:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:351:1726"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:536":{"id":"0:536","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[543,0],"end":[552,1]},"visibility":{"restricted":{"parent":"0:388:1588","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["le","gt","lt","ge"],"trait":{"name":"PartialOrd","id":"2:2946:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"primitive","inner":"str"},"items":["0:538:999","0:539:828","0:540:794","0:541:714","0:542:697"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:618":{"id":"0:618","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[56,0],"end":[56,41]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::array_string::ArrayString","name":"ArrayString","id":"0:634:1591","glob":false}},"1:6648:3520":{"id":"1:6648:3520","crate_id":1,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6649:57181"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:378:697":{"id":"0:378:697","crate_id":0,"name":"ge","span":{"filename":"src/arrayvec.rs","begin":[1193,4],"end":[1195,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:848-0:642:1592":{"id":"b:5:848-0:642:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2867:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:850:2414","5:851:2854","5:852:2855"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:307:1993":{"id":"0:307:1993","crate_id":0,"name":"extend","span":{"filename":"src/arrayvec.rs","begin":[1015,4],"end":[1019,5]},"visibility":"default","docs":"Extend the `ArrayVec` with an iterator.\n \n***Panics*** if extending the vector exceeds its capacity.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["iter",{"kind":"generic","inner":"I"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8643:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"T"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:14027:138":{"id":"2:14027:138","crate_id":2,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:14028:181","2:14029:1015"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:663":{"id":"0:663","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[8,42],"end":[8,52]},"visibility":{"restricted":{"parent":"0:575:1589","path":"::errors"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::PartialOrd","id":"2:2946:184","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["le","gt","lt","ge"],"trait":{"name":"PartialOrd","id":"2:2946:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:665:999"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5526:3540":{"id":"1:5526:3540","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5527:7624","1:5528:56865","1:5529:6163","1:5530:56866","1:5531:3841","1:5532:3842","1:5533:56867","1:5534:1307","1:5535:56868","1:5536:56869","1:5537:56870","1:5538:56871","1:5539:56872","1:5540:56873","1:5541:56874","1:5542:56875"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:532:828":{"id":"0:532:828","crate_id":0,"name":"lt","span":{"filename":"src/array_string.rs","begin":[537,4],"end":[537,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3388:2533-0:253:1595":{"id":"a:2:3388:2533-0:253:1595","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3388:2533","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:253:1595","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13685:53614":{"id":"2:13685:53614","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12766:2085"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3442:2381":{"id":"2:3442:2381","crate_id":2,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3443:181","2:3444:915"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:527:714":{"id":"0:527:714","crate_id":0,"name":"gt","span":{"filename":"src/array_string.rs","begin":[528,4],"end":[528,55]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:291:579":{"id":"0:291:579","crate_id":0,"name":"drop","span":{"filename":"src/arrayvec.rs","begin":[969,4],"end":[987,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:490:605":{"id":"0:490:605","crate_id":0,"name":"eq","span":{"filename":"src/array_string.rs","begin":[455,4],"end":[457,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3180-0:223:1594":{"id":"b:2:3180-0:223:1594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3157:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3154:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1594","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3183:2797"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:555":{"id":"0:555","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[630,0],"end":[640,1]},"visibility":{"restricted":{"parent":"0:388:1588","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Arguments","id":"2:48887:73","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:558:127","0:559:1419"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10544:2500":{"id":"2:10544:2500","crate_id":2,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10545:661"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:558:127":{"id":"0:558:127","crate_id":0,"name":"Error","span":{"filename":"src/array_string.rs","begin":[632,4],"end":[632,43]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"2:48813:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:505:306":{"id":"0:505:306","crate_id":0,"name":"as_ref","span":{"filename":"src/array_string.rs","begin":[484,4],"end":[484,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13718:2837":{"id":"2:13718:2837","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"prim@char":"1:15744:2273","self::pattern":"2:13302:2460","`None`":"2:47750:176"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2453","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13687:305":{"id":"2:13687:305","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"`u8`":"1:15761:2287","str::as_mut_ptr":"1:15750:2278"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3420:2383":{"id":"2:3420:2383","crate_id":2,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3422:181","2:3423:1358"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3474:2389":{"id":"2:3474:2389","crate_id":2,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3476:181","2:3477:352"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:355:2020":{"id":"0:355:2020","crate_id":0,"name":"borrow_mut","span":{"filename":"src/arrayvec.rs","begin":[1158,4],"end":[1158,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:550":{"id":"0:550","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[619,0],"end":[628,1]},"visibility":{"restricted":{"parent":"0:388:1588","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:553:127","0:554:1419"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13698:59363":{"id":"2:13698:59363","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:15750:2278","crate::ops::IndexMut":"2:3659:2401","str::slice_unchecked":"1:15750:2278"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:528:697":{"id":"0:528:697","crate_id":0,"name":"ge","span":{"filename":"src/array_string.rs","begin":[529,4],"end":[529,56]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3430:2379":{"id":"2:3430:2379","crate_id":2,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3432:181","2:3433:559"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:521:411":{"id":"0:521:411","crate_id":0,"name":"clone_from","span":{"filename":"src/array_string.rs","begin":[514,4],"end":[518,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:4129:2516":{"id":"2:4129:2516","crate_id":2,"name":"Provider","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4130:3510"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:377:794":{"id":"0:377:794","crate_id":0,"name":"le","span":{"filename":"src/arrayvec.rs","begin":[1189,4],"end":[1191,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:639":{"id":"0:639","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[33,9],"end":[33,13]},"visibility":{"restricted":{"parent":"0:388:1588","path":"::array_string"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3357:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3359:220-0:223:1594":{"id":"a:2:3359:220-0:223:1594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3359:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3359:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1594","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:273:1699":{"id":"0:273:1699","crate_id":0,"name":"Item","span":{"filename":"src/arrayvec.rs","begin":[940,4],"end":[940,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"2:13709:3112":{"id":"2:13709:3112","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"self::pattern":"2:13302:2460","prim@char":"1:15744:2273"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2453","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3467:2392":{"id":"2:3467:2392","crate_id":2,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3468:181","2:3469:954"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:216:770":{"id":"0:216:770","crate_id":0,"name":"into_iter","span":{"filename":"src/arrayvec.rs","begin":[823,4],"end":[823,60]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8643:151","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:520:409":{"id":"0:520:409","crate_id":0,"name":"clone","span":{"filename":"src/array_string.rs","begin":[511,4],"end":[513,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:115:795":{"id":"0:115:795","crate_id":0,"name":"len","span":{"filename":"src/arrayvec.rs","begin":[111,4],"end":[111,58]},"visibility":"public","docs":"Return the number of elements in the `ArrayVec`.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3]);\narray.pop();\nassert_eq!(array.len(), 2);\n```","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:208:1594":{"id":"0:208:1594","crate_id":0,"name":"IntoIter","span":{"filename":"src/arrayvec.rs","begin":[805,4],"end":[805,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11355:1963","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}},"2:3454:2386":{"id":"2:3454:2386","crate_id":2,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3456:895"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5560:3536":{"id":"1:5560:3536","crate_id":1,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5561:53618","1:5562:53619","1:5563:53620","1:5564:53621"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:232:924":{"id":"0:232:924","crate_id":0,"name":"next","span":{"filename":"src/arrayvec.rs","begin":[855,4],"end":[865,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8844:157","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3425:2380":{"id":"2:3425:2380","crate_id":2,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3427:181","2:3428:894"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9504:2611-0:98:1593":{"id":"a:2:9504:2611-0:98:1593","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9504:2611","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9504:2611","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3818:2404":{"id":"2:3818:2404","crate_id":2,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3820:54306"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:621":{"id":"0:621","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[57,0],"end":[57,37]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::errors::CapacityError","name":"CapacityError","id":"0:642:1592","glob":false}},"0:371:59":{"id":"0:371:59","crate_id":0,"name":"default","span":{"filename":"src/arrayvec.rs","begin":[1175,4],"end":[1177,5]},"visibility":"default","docs":"Return an empty array","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13773:59377":{"id":"2:13773:59377","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"self::pattern":"2:13302:2460","prim@char":"1:15744:2273"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2453","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:2453","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:13332:2452","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:169:305":{"id":"0:169:305","crate_id":0,"name":"as_ptr","span":{"filename":"src/arrayvec.rs","begin":[695,4],"end":[697,5]},"visibility":"public","docs":"Return a raw pointer to the vector's buffer.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4080-0:634:1591":{"id":"b:2:4080-0:634:1591","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4078:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:4082:1432"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3184-0:223:1594":{"id":"b:2:3184-0:223:1594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3157:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1594","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3186:682"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13738:59366":{"id":"2:13738:59366","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"str::split":"1:15750:2278","prim@char":"1:15744:2273","self::pattern":"2:13302:2460","str::split_terminator":"1:15750:2278"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:49781:2482","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2453","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:2453","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:2454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:591":{"id":"0:591","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[36,0],"end":[36,42]},"visibility":{"restricted":{"parent":"0:575:1589","path":"::errors"}},"docs":"Requires `features=\"std\"`.","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Any","id":"2:4078:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["type_id","cause","description","provide","source"],"trait":{"name":"Error","id":"2:3255:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8712:1974":{"id":"2:8712:1974","crate_id":2,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8713:795","2:8714:1775"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8844:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3603:132":{"id":"2:3603:132","crate_id":2,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3605:181","2:3606:379"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:448":{"id":"0:448","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[48,0],"end":[420,1]},"visibility":{"restricted":{"parent":"0:388:1588","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:450:922","0:451:1766","0:452:795","0:453:1775","0:454:682","0:455:2083","0:460:2090","0:461:1779","0:462:1784","0:463:1787","0:464:1712","0:465:1714","0:466:2123","0:467:2079","0:469:1718","0:470:1721","0:471:1864","0:472:1720","0:473:1701","0:474:307","0:475:2166"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:540:794":{"id":"0:540:794","crate_id":0,"name":"le","span":{"filename":"src/array_string.rs","begin":[549,4],"end":[549,67]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13691:55155":{"id":"2:13691:55155","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:47750:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11175:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11175:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6224:3515":{"id":"1:6224:3515","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6225:3841","1:6226:3842","1:6227:8509","1:6228:53499","1:6230:53503","1:6232:53500","1:6233:53501","1:6235:53502"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10355:3524","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:494":{"id":"0:494","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[467,0],"end":[468,3]},"visibility":{"restricted":{"parent":"0:388:1588","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2905:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13708:32148":{"id":"2:13708:32148","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:50005:2461","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:379:714":{"id":"0:379:714","crate_id":0,"name":"gt","span":{"filename":"src/arrayvec.rs","begin":[1197,4],"end":[1199,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8639:136":{"id":"2:8639:136","crate_id":2,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8641:685"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:445":{"id":"0:445","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[40,0],"end":[46,1]},"visibility":{"restricted":{"parent":"0:388:1588","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3231:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:447:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:634:1591":{"id":"0:634:1591","crate_id":0,"name":"ArrayString","span":{"filename":"src/array_string.rs","begin":[34,0],"end":[38,1]},"visibility":"public","docs":"A string with a fixed capacity.\n\nThe `ArrayString` is a string backed by a fixed size array. It keeps track\nof its length, and is parameterized by `CAP` for the maximum capacity.\n\n`CAP` is of type `usize` but is range limited to `u32::MAX`; attempting to create larger\narrayvecs with larger capacity will panic.\n\nThe string is a contiguous value that you can store directly on the stack\nif needed.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:448","a:2:3388:2533-0:634:1591","a:2:3347:211-0:634:1591","a:2:3359:220-0:634:1591","a:2:9503:2612-0:634:1591","a:2:9504:2611-0:634:1591","b:2:3195-0:634:1591","b:2:3184-0:634:1591","b:2:4080-0:634:1591","b:2:2851-0:634:1591","b:2:3180-0:634:1591","b:2:3190-0:634:1591","b:2:2848-0:634:1591","b:5:6500-0:634:1591","b:5:848-0:634:1591","0:639","0:445","0:478","0:482","0:485","0:488","0:491","0:494","0:496","0:500","0:503","0:506","0:509","0:512","0:518","0:522","0:529","0:536","0:543","0:546","0:550","0:555"]}},"0:188:546":{"id":"0:188:546","crate_id":0,"name":"deref_mut","span":{"filename":"src/arrayvec.rs","begin":[735,4],"end":[737,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:3570:116","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:8647-0:253:1595":{"id":"b:2:8647-0:253:1595","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8844:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8643:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:253:1595","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:8649:1699","2:8650:1594","2:8651:770"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:498:716":{"id":"0:498:716","crate_id":0,"name":"hash","span":{"filename":"src/array_string.rs","begin":[472,4],"end":[474,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["h",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Hasher","id":"2:10781:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:156:1701":{"id":"0:156:1701","crate_id":0,"name":"set_len","span":{"filename":"src/arrayvec.rs","begin":[540,4],"end":[544,5]},"visibility":"public","docs":"Set the vector’s length without dropping or moving out elements\n\nThis method is `unsafe` because it changes the notion of the\nnumber of “valid” elements in the vector. Use with care.\n\nThis method uses *debug assertions* to check that `length` is\nnot greater than the capacity.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["length",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:549:2175":{"id":"0:549:2175","crate_id":0,"name":"from_str","span":{"filename":"src/array_string.rs","begin":[565,4],"end":[567,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47875:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:13241:2053","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:331:411":{"id":"0:331:411","crate_id":0,"name":"clone_from","span":{"filename":"src/arrayvec.rs","begin":[1112,4],"end":[1124,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10552:2505":{"id":"2:10552:2505","crate_id":2,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10553:661"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13756:59369":{"id":"2:13756:59369","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"str::matches":"1:15750:2278","self::pattern":"2:13302:2460","`DoubleEndedIterator`":"2:8687:120","prim@char":"1:15744:2273"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:49935:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2453","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:2453","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:2454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:851:2854":{"id":"5:851:2854","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:512":{"id":"0:512","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[498,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:388:1588","path":"::array_string"}},"docs":"`Write` appends written data to the end of the string.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["write_char","write_fmt"],"trait":{"name":"Write","id":"2:10483:2025","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:514:2172","0:516:1536"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:554:1419":{"id":"0:554:1419","crate_id":0,"name":"try_from","span":{"filename":"src/array_string.rs","begin":[623,4],"end":[627,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["f",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47875:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:3164:228","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13735:59365":{"id":"2:13735:59365","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:13302:2460","str::split":"1:15750:2278","str::rsplit_terminator":"1:15750:2278","`DoubleEndedIterator`":"2:8687:120","prim@char":"1:15744:2273"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:49763:2483","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2453","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:453:1775":{"id":"0:453:1775","crate_id":0,"name":"is_empty","span":{"filename":"src/array_string.rs","begin":[89,4],"end":[89,60]},"visibility":"public","docs":"Returns whether the string is empty.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13321:2455":{"id":"2:13321:2455","crate_id":2,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13323:3976","2:13324:924","2:13325:58151","2:13326:58152"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8687:120":{"id":"2:8687:120","crate_id":2,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8688:1973","2:8689:2798","2:8690:2799","2:8691:2800","2:8695:2801","2:8698:2802"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8844:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:376:828":{"id":"0:376:828","crate_id":0,"name":"lt","span":{"filename":"src/arrayvec.rs","begin":[1185,4],"end":[1187,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:588:1713":{"id":"0:588:1713","crate_id":0,"name":"element","span":{"filename":"src/errors.rs","begin":[22,4],"end":[24,5]},"visibility":"public","docs":"Extract the overflowing element","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6164:60018":{"id":"5:6164:60018","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:444:2457","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8200:2861","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:444:2457","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8200:2861","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13706:4653":{"id":"2:13706:4653","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:49967:2472","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3812:137":{"id":"2:3812:137","crate_id":2,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3814:688"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3807:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6185:3331":{"id":"5:6185:3331","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:8455:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23357:16434":{"id":"2:23357:16434","crate_id":2,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23358:5693","2:23359:58598","2:23360:58599"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23350:3524","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13776:59378":{"id":"2:13776:59378","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:13302:2460","prim@char":"1:15744:2273"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2453","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13688:1709":{"id":"2:13688:1709","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:15761:2287"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:380":{"id":"0:380","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1202,0],"end":[1206,1]},"visibility":{"restricted":{"parent":"0:31:1587","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Ord","id":"2:2936:177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["min","clamp","max"],"trait":{"name":"Ord","id":"2:2936:177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:383:416"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:31:1587":{"id":"0:31:1587","crate_id":0,"name":"arrayvec","span":{"filename":"src/arrayvec.rs","begin":[2,0],"end":[1267,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:98:1593","0:223:1594","0:253:1595"],"is_stripped":true}},"2:13677:795":{"id":"2:13677:795","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:15744:2273"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3190-0:634:1591":{"id":"b:2:3190-0:634:1591","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3160:229","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3193:127","2:3194:1420"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3180-0:642:1592":{"id":"b:2:3180-0:642:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3157:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3154:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3183:2797"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6163":{"id":"5:6163","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5976:1343","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:6164:60018","5:6165:1950","5:6168:60019","5:6171:60020","5:6183:60021","5:6184:60022","5:6185:3331","5:6186:55043","5:6187:55044"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:596":{"id":"0:596","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[44,0],"end":[48,1]},"visibility":{"restricted":{"parent":"0:575:1589","path":"::errors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10533:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:598:661"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3264:3510":{"id":"2:3264:3510","crate_id":2,"name":"provide","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["req",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Demand","id":"2:4144:2520","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3199:1419":{"id":"2:3199:1419","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47875:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2842:97":{"id":"2:2842:97","crate_id":2,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2844:1726"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:3357:106":{"id":"2:3357:106","crate_id":2,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2867:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:388:1588":{"id":"0:388:1588","crate_id":0,"name":"array_string","span":{"filename":"src/array_string.rs","begin":[1,0],"end":[640,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:634:1591"],"is_stripped":true}},"b:2:3190-0:98:1593":{"id":"b:2:3190-0:98:1593","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3160:229","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3193:127","2:3194:1420"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3458:2385":{"id":"2:3458:2385","crate_id":2,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3460:560"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8643:151":{"id":"2:8643:151","crate_id":2,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8644:1699","2:8645:1594","2:8646:770"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:352":{"id":"0:352","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1157,0],"end":[1159,1]},"visibility":{"restricted":{"parent":"0:31:1587","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2845:1727","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:355:2020"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:6186:55043":{"id":"5:6186:55043","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:15750:2278"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:359:306":{"id":"0:359:306","crate_id":0,"name":"as_ref","span":{"filename":"src/arrayvec.rs","begin":[1162,4],"end":[1162,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2850:1726":{"id":"2:2850:1726","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:238":{"id":"0:238","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[887,0],"end":[887,68]},"visibility":{"restricted":{"parent":"0:31:1587","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:8712:1974","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1594","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:493:605":{"id":"0:493:605","crate_id":0,"name":"eq","span":{"filename":"src/array_string.rs","begin":[462,4],"end":[464,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:363:2021":{"id":"0:363:2021","crate_id":0,"name":"as_mut","span":{"filename":"src/arrayvec.rs","begin":[1166,4],"end":[1166,45]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10550:189":{"id":"2:10550:189","crate_id":2,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10551:661"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10483:2025":{"id":"2:10483:2025","crate_id":2,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10484:1536","2:10485:2172","2:10487:2187"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13798:55046":{"id":"2:13798:55046","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3489:2393":{"id":"2:3489:2393","crate_id":2,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3491:181","2:3492:1236"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10542:2501":{"id":"2:10542:2501","crate_id":2,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10543:661"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13797:55045":{"id":"2:13797:55045","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9504:2611-0:634:1591":{"id":"a:2:9504:2611-0:634:1591","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9504:2611","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3190-0:253:1595":{"id":"b:2:3190-0:253:1595","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3160:229","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:253:1595","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3193:127","2:3194:1420"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:325:685":{"id":"0:325:685","crate_id":0,"name":"from_iter","span":{"filename":"src/arrayvec.rs","begin":[1098,4],"end":[1102,5]},"visibility":"default","docs":"Create an `ArrayVec` from an iterator.\n \n***Panics*** if the number of elements in the iterator exceeds the arrayvec's capacity.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["iter",{"kind":"generic","inner":"I"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8643:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"T"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2845:1727":{"id":"2:2845:1727","crate_id":2,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2847:2020"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2842:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3450:2388":{"id":"2:3450:2388","crate_id":2,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3452:1359"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:372":{"id":"0:372","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1180,0],"end":[1200,1]},"visibility":{"restricted":{"parent":"0:31:1587","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2946:184","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["le","gt","lt","ge"],"trait":{"name":"PartialOrd","id":"2:2946:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:375:999","0:376:828","0:377:794","0:378:697","0:379:714"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:662:605":{"id":"0:662:605","crate_id":0,"name":"eq","span":{"filename":"src/errors.rs","begin":[8,31],"end":[8,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3186:682":{"id":"2:3186:682","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8650:1594":{"id":"2:8650:1594","crate_id":2,"name":"IntoIter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"I"}}},"2:3853:2409":{"id":"2:3853:2409","crate_id":2,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:210":{"id":"0:210","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[820,0],"end":[824,1]},"visibility":{"restricted":{"parent":"0:31:1587","path":"::arrayvec"}},"docs":"Iterate the `ArrayVec` with mutable references to each element.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3]);\n\nfor elt in &mut array {\n    // ...\n}\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8643:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}},"items":["0:214:1699","0:215:1594","0:216:770"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:335:716":{"id":"0:335:716","crate_id":0,"name":"hash","span":{"filename":"src/arrayvec.rs","begin":[1130,4],"end":[1132,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Hasher","id":"2:10781:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:384":{"id":"0:384","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1212,0],"end":[1220,1]},"visibility":{"restricted":{"parent":"0:31:1587","path":"::arrayvec"}},"docs":"`Write` appends written data to the end of the vector.\n\nRequires `features=\"std\"`.","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["write_fmt","is_write_vectored","by_ref","write_all_vectored","write_vectored","write_all"],"trait":{"name":"Write","id":"1:4486:2025","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:386:1717","0:387:2028"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2848-0:634:1591":{"id":"b:2:2848-0:634:1591","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2842:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2850:1726"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:276:1972":{"id":"0:276:1972","crate_id":0,"name":"size_hint","span":{"filename":"src/arrayvec.rs","begin":[950,4],"end":[952,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:545:416":{"id":"0:545:416","crate_id":0,"name":"cmp","span":{"filename":"src/array_string.rs","begin":[556,4],"end":[558,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"2:37870:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:14042:150":{"id":"2:14042:150","crate_id":2,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:14043:181","2:14044:150","2:14045:769"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:4078:68":{"id":"2:4078:68","crate_id":2,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4079:1432"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"2:8651:770":{"id":"2:8651:770","crate_id":2,"name":"into_iter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:4082:1432":{"id":"2:4082:1432","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:46278:2514","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3583:1724":{"id":"2:3583:1724","crate_id":2,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3584:546"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Deref","id":"2:3570:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:503":{"id":"0:503","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[482,0],"end":[485,1]},"visibility":{"restricted":{"parent":"0:388:1588","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsRef","id":"2:3148:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:505:306"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:386:1717":{"id":"0:386:1717","crate_id":0,"name":"write","span":{"filename":"src/arrayvec.rs","begin":[1213,4],"end":[1218,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["data",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:3839:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:466:2123":{"id":"0:466:2123","crate_id":0,"name":"push_str","span":{"filename":"src/array_string.rs","begin":[255,4],"end":[257,5]},"visibility":"public","docs":"Adds the given string slice to the end of the string.\n\n***Panics*** if the backing array is not large enough to fit the string.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<2>::new();\n\nstring.push_str(\"a\");\nstring.push_str(\"d\");\n\nassert_eq!(&string[..], \"ad\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:487:605":{"id":"0:487:605","crate_id":0,"name":"eq","span":{"filename":"src/array_string.rs","begin":[448,4],"end":[450,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:322":{"id":"0:322","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1094,0],"end":[1103,1]},"visibility":{"restricted":{"parent":"0:31:1587","path":"::arrayvec"}},"docs":"Create an `ArrayVec` from an iterator.\n \n***Panics*** if the number of elements in the iterator exceeds the arrayvec's capacity.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromIterator","id":"2:8639:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:325:685"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13703:3663":{"id":"2:13703:3663","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:49699:2185","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4511:3414":{"id":"1:4511:3414","crate_id":1,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4512:53353","1:4513:53354","1:4514:53355","1:4516:3413","1:4517:53356","1:4519:53357","1:4520:4653"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"1:4429:3407","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2851-0:642:1592":{"id":"b:2:2851-0:642:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2845:1727","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2853:2020"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3347:211-0:634:1591":{"id":"a:2:3347:211-0:634:1591","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3347:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:132:1864":{"id":"0:132:1864","crate_id":0,"name":"remove","span":{"filename":"src/arrayvec.rs","begin":[415,4],"end":[420,5]},"visibility":"public","docs":"Remove the element at `index` and shift down the following elements.\n\nThe `index` must be strictly less than the length of the vector.\n\n***Panics*** if the `index` is out of bounds.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3]);\n\nlet removed_elt = array.remove(0);\nassert_eq!(removed_elt, 1);\nassert_eq!(&array[..], &[2, 3]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:14426:141":{"id":"2:14426:141","crate_id":2,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14427:278","2:14428:519","2:14429:281","2:14430:1082"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:475:2166":{"id":"0:475:2166","crate_id":0,"name":"as_mut_str","span":{"filename":"src/array_string.rs","begin":[409,4],"end":[411,5]},"visibility":"public","docs":"Return a mutable string slice of the whole `ArrayString`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:14510:2860":{"id":"2:14510:2860","crate_id":2,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14511:57120","2:14512:57121","2:14513:57122","2:14514:57123","2:14515:57124","2:14516:57125","2:14517:2826"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:9127:3285":{"id":"2:9127:3285","crate_id":2,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8844:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:450:922":{"id":"0:450:922","crate_id":0,"name":"new","span":{"filename":"src/array_string.rs","begin":[62,4],"end":[67,5]},"visibility":"public","docs":"Create a new empty `ArrayString`.\n\nCapacity is inferred from the type parameter.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<16>::new();\nstring.push_str(\"foo\");\nassert_eq!(&string[..], \"foo\");\nassert_eq!(string.capacity(), 16);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:184:544":{"id":"0:184:544","crate_id":0,"name":"deref","span":{"filename":"src/arrayvec.rs","begin":[728,4],"end":[730,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:3570:116","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:277":{"id":"0:277","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[955,0],"end":[964,1]},"visibility":{"restricted":{"parent":"0:31:1587","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:8687:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:253:1595","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:281:1973"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3086:2445":{"id":"2:3086:2445","crate_id":2,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:3085:3524","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:23019:3998":{"id":"2:23019:3998","crate_id":2,"name":"SimdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23020:4000","2:23021:58770","2:23022:59014","2:23023:59015","2:23024:59016","2:23025:42414","2:23026:59017","2:23027:59018","2:23028:59019","2:23029:59020","2:23030:59021","2:23031:59022","2:23032:59023","2:23033:59024","2:23034:59025","2:23035:59026","2:23036:58819","2:23037:59027","2:23038:58185","2:23039:58184","2:23040:58186","2:23041:58771","2:23042:58772","2:23043:58773","2:23044:58774"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3357:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23121:3524","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:518":{"id":"0:518","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[509,0],"end":[519,1]},"visibility":{"restricted":{"parent":"0:388:1588","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2867:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:520:409","0:521:411"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3231:115":{"id":"2:3231:115","crate_id":2,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3232:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:464:1712":{"id":"0:464:1712","crate_id":0,"name":"push","span":{"filename":"src/array_string.rs","begin":[204,4],"end":[206,5]},"visibility":"public","docs":"Adds the given char to the end of the string.\n\n***Panics*** if the backing array is not large enough to fit the additional char.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<2>::new();\n\nstring.push('a');\nstring.push('b');\n\nassert_eq!(&string[..], \"ab\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["c",{"kind":"primitive","inner":"char"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:202:1419":{"id":"0:202:1419","crate_id":0,"name":"try_from","span":{"filename":"src/arrayvec.rs","begin":[780,4],"end":[788,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["slice",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47875:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:3164:228","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3195-0:253:1595":{"id":"b:2:3195-0:253:1595","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3154:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:253:1595","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3198:127","2:3199:1419"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:127:1830":{"id":"0:127:1830","crate_id":0,"name":"try_insert","span":{"filename":"src/arrayvec.rs","begin":[304,4],"end":[328,5]},"visibility":"public","docs":"Insert `element` at position `index`.\n\nShift up all elements after `index`; the `index` must be less than\nor equal to the length.\n\nReturns an error if vector is already at full capacity.\n\n***Panics*** `index` is out of bounds.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::<_, 2>::new();\n\nassert!(array.try_insert(0, \"x\").is_ok());\nassert!(array.try_insert(0, \"y\").is_ok());\nassert!(array.try_insert(0, \"z\").is_err());\nassert_eq!(&array[..], &[\"y\", \"x\"]);\n\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}],["element",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47875:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:128:1718":{"id":"0:128:1718","crate_id":0,"name":"pop","span":{"filename":"src/arrayvec.rs","begin":[344,4],"end":[346,5]},"visibility":"public","docs":"Remove the last element in the vector and return it.\n\nReturn `Some(` *element* `)` if the vector is non-empty, else `None`.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::<_, 2>::new();\n\narray.push(1);\n\nassert_eq!(array.pop(), Some(1));\nassert_eq!(array.pop(), None);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:535:697":{"id":"0:535:697","crate_id":0,"name":"ge","span":{"filename":"src/array_string.rs","begin":[540,4],"end":[540,54]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13767:59373":{"id":"2:13767:59373","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:7582:3711":{"id":"1:7582:3711","crate_id":1,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7583:57611"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:4866:4074":{"id":"2:4866:4074","crate_id":2,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4867:1699","2:4868:57972","2:4869:1972"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3157:135":{"id":"2:3157:135","crate_id":2,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3159:682"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:23405:4023":{"id":"2:23405:4023","crate_id":2,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdElement","id":"2:24042:4001","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23396:3524","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:5:6500-0:634:1591":{"id":"b:5:6500-0:634:1591","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10540:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6498:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["5:6502:1400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:274:924":{"id":"0:274:924","crate_id":0,"name":"next","span":{"filename":"src/arrayvec.rs","begin":[942,4],"end":[948,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8844:157","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2851-0:98:1593":{"id":"b:2:2851-0:98:1593","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2845:1727","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2853:2020"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:123:1721":{"id":"0:123:1721","crate_id":0,"name":"truncate","span":{"filename":"src/arrayvec.rs","begin":[245,4],"end":[247,5]},"visibility":"public","docs":"Shortens the vector, keeping the first `len` elements and dropping\nthe rest.\n\nIf `len` is greater than the vector’s current length this has no\neffect.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3, 4, 5]);\narray.truncate(3);\nassert_eq!(&array[..], &[1, 2, 3]);\narray.truncate(4);\nassert_eq!(&array[..], &[1, 2, 3]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["new_len",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6168:60019":{"id":"5:6168:60019","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:8455:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2453","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:539:828":{"id":"0:539:828","crate_id":0,"name":"lt","span":{"filename":"src/array_string.rs","begin":[548,4],"end":[548,66]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:650":{"id":"0:650","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[8,22],"end":[8,24]},"visibility":{"restricted":{"parent":"0:575:1589","path":"::errors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3356:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9504:2611-0:223:1594":{"id":"a:2:9504:2611-0:223:1594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9504:2611","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9504:2611","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1594","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:647:409":{"id":"0:647:409","crate_id":0,"name":"clone","span":{"filename":"src/errors.rs","begin":[8,9],"end":[8,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:848-0:98:1593":{"id":"b:5:848-0:98:1593","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2867:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["5:850:2414","5:851:2854","5:852:2855"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23108:4076":{"id":"2:23108:4076","crate_id":2,"name":"SimdUint","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23109:58770","2:23110:1230","2:23111:1231","2:23112:58771","2:23113:58772","2:23114:58773","2:23115:58774","2:23116:58775","2:23117:58776","2:23118:58777"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3357:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23121:3524","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:135:1879":{"id":"0:135:1879","crate_id":0,"name":"retain","span":{"filename":"src/arrayvec.rs","begin":[459,4],"end":[531,5]},"visibility":"public","docs":"Retains only the elements specified by the predicate.\n\nIn other words, remove all elements `e` such that `f(&mut e)` returns false.\nThis method operates in place and preserves the order of the retained\nelements.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3, 4]);\narray.retain(|x| *x & 1 != 0 );\nassert_eq!(&array[..], &[1, 3]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3600:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:652":{"id":"0:652","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[8,22],"end":[8,24]},"visibility":{"restricted":{"parent":"0:575:1589","path":"::errors"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::Eq","id":"2:2905:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2905:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:157:1908":{"id":"0:157:1908","crate_id":0,"name":"try_extend_from_slice","span":{"filename":"src/arrayvec.rs","begin":[564,4],"end":[580,5]},"visibility":"public","docs":"Copy all elements from the slice and append to the `ArrayVec`.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut vec: ArrayVec<usize, 10> = ArrayVec::new();\nvec.push(1);\nvec.try_extend_from_slice(&[2, 3]).unwrap();\nassert_eq!(&vec[..], &[1, 2, 3]);\n```\n\n# Errors\n\nThis method will return an error if the capacity left (see\n[`remaining_capacity`]) is smaller then the length of the provided\nslice.\n\n[`remaining_capacity`]: #method.remaining_capacity","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47875:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3357:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:340:605":{"id":"0:340:605","crate_id":0,"name":"eq","span":{"filename":"src/arrayvec.rs","begin":[1138,4],"end":[1140,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:657:416":{"id":"0:657:416","crate_id":0,"name":"cmp","span":{"filename":"src/errors.rs","begin":[8,26],"end":[8,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:37870:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3195-0:223:1594":{"id":"b:2:3195-0:223:1594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3154:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1594","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3198:127","2:3199:1419"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:114:1766":{"id":"0:114:1766","crate_id":0,"name":"new_const","span":{"filename":"src/arrayvec.rs","begin":[96,4],"end":[99,5]},"visibility":"public","docs":"Create a new empty `ArrayVec` (const fn).\n\nThe maximum capacity is given by the generic parameter `CAP`.\n\n```\nuse arrayvec::ArrayVec;\n\nstatic ARRAY: ArrayVec<u8, 1024> = ArrayVec::new_const();\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:201:127":{"id":"0:201:127","crate_id":0,"name":"Error","span":{"filename":"src/arrayvec.rs","begin":[778,4],"end":[778,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}}}},"1:4504:3411":{"id":"1:4504:3411","crate_id":1,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4505:57617","1:4506:39425","1:4507:57619","1:4508:57618"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6187:55044":{"id":"5:6187:55044","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:15750:2278"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3597:130":{"id":"2:3597:130","crate_id":2,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3599:377"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3600:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9503:2612-0:98:1593":{"id":"a:2:9503:2612-0:98:1593","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9503:2612","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9503:2612","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:122:1715":{"id":"0:122:1715","crate_id":0,"name":"push_unchecked","span":{"filename":"src/arrayvec.rs","begin":[226,4],"end":[228,5]},"visibility":"public","docs":"Push `element` to the end of the vector without checking the capacity.\n\nIt is up to the caller to ensure the capacity of the vector is\nsufficiently large.\n\nThis method uses *debug assertions* to check that the arrayvec is not full.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::<_, 2>::new();\n\nif array.len() + 2 <= array.capacity() {\n    unsafe {\n        array.push_unchecked(1);\n        array.push_unchecked(2);\n    }\n}\n\nassert_eq!(&array[..], &[1, 2]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["element",{"kind":"generic","inner":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:516:1536":{"id":"0:516:1536","crate_id":0,"name":"write_str","span":{"filename":"src/array_string.rs","begin":[504,4],"end":[506,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10482:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10546:2507":{"id":"2:10546:2507","crate_id":2,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10547:661"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13791:59381":{"id":"2:13791:59381","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:13302:2460","prim@char":"1:15744:2273"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2453","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:2453","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:2454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:514:2172":{"id":"0:514:2172","crate_id":0,"name":"write_char","span":{"filename":"src/array_string.rs","begin":[500,4],"end":[502,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["c",{"kind":"primitive","inner":"char"}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10482:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3446:2384":{"id":"2:3446:2384","crate_id":2,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3448:267"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:241":{"id":"0:241","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[889,0],"end":[902,1]},"visibility":{"restricted":{"parent":"0:31:1587","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:3594:1748","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1594","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:244:579"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:233:1972":{"id":"0:233:1972","crate_id":0,"name":"size_hint","span":{"filename":"src/arrayvec.rs","begin":[867,4],"end":[870,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:463:1787":{"id":"0:463:1787","crate_id":0,"name":"remaining_capacity","span":{"filename":"src/array_string.rs","begin":[186,4],"end":[188,5]},"visibility":"public","docs":"Returns the capacity left in the `ArrayString`.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<3>::from(\"abc\").unwrap();\nstring.pop();\nassert_eq!(string.remaining_capacity(), 1);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3726:1725":{"id":"2:3726:1725","crate_id":2,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3728:1925","2:3729:1929","2:3730:3112"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:491":{"id":"0:491","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[460,0],"end":[465,1]},"visibility":{"restricted":{"parent":"0:388:1588","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2900:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"primitive","inner":"str"},"items":["0:493:605"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:163:1939":{"id":"0:163:1939","crate_id":0,"name":"into_inner_unchecked","span":{"filename":"src/arrayvec.rs","begin":[664,4],"end":[669,5]},"visibility":"public","docs":"Return the inner fixed size array.\n\nSafety:\nThis operation is safe if and only if length equals capacity.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"CAP"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:481:544":{"id":"0:481:544","crate_id":0,"name":"deref","span":{"filename":"src/array_string.rs","begin":[426,4],"end":[431,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:548:126":{"id":"0:548:126","crate_id":0,"name":"Err","span":{"filename":"src/array_string.rs","begin":[563,4],"end":[563,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}}}},"0:217":{"id":"0:217","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[837,0],"end":[843,1]},"visibility":{"restricted":{"parent":"0:31:1587","path":"::arrayvec"}},"docs":"Iterate the `ArrayVec` with each element by value.\n\nThe vector is consumed by this operation.\n\n```\nuse arrayvec::ArrayVec;\n\nfor elt in ArrayVec::from([1, 2, 3]) {\n    // ...\n}\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8643:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:220:1699","0:221:1594","0:222:770"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3184-0:98:1593":{"id":"b:2:3184-0:98:1593","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3157:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3186:682"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:542:697":{"id":"0:542:697","crate_id":0,"name":"ge","span":{"filename":"src/array_string.rs","begin":[551,4],"end":[551,67]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:587:922":{"id":"0:587:922","crate_id":0,"name":"new","span":{"filename":"src/errors.rs","begin":[15,4],"end":[19,5]},"visibility":"public","docs":"Create a new `CapacityError` from `element`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["element",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:193:682":{"id":"0:193:682","crate_id":0,"name":"from","span":{"filename":"src/arrayvec.rs","begin":[751,4],"end":[760,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["array",{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"CAP"}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:485":{"id":"0:485","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[446,0],"end":[451,1]},"visibility":{"restricted":{"parent":"0:388:1588","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2900:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:487:605"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13676":{"id":"2:13676","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:12755:1343","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:13677:795","2:13678:1775","2:13679:2147","2:13680:59360","2:13682:59361","2:13685:53614","2:13686:59362","2:13687:305","2:13688:1709","2:13689:55154","2:13691:55155","2:13693:55156","2:13695:55157","2:13697:3658","2:13698:59363","2:13699:55176","2:13700:55177","2:13701:2138","2:13702:3983","2:13703:3663","2:13704:32163","2:13705:32153","2:13706:4653","2:13707:59364","2:13708:32148","2:13709:3112","2:13712:55192","2:13715:55193","2:13718:2837","2:13722:2802","2:13726:53357","2:13729:32031","2:13732:55186","2:13735:59365","2:13738:59366","2:13741:55188","2:13744:55190","2:13747:59367","2:13750:59368","2:13753:2228","2:13756:59369","2:13759:59370","2:13762:59371","2:13765:59372","2:13767:59373","2:13769:59374","2:13771:59375","2:13772:59376","2:13773:59377","2:13776:59378","2:13779:14950","2:13782:55194","2:13785:59379","2:13788:59380","2:13791:59381","2:13794:4133","2:13796:4323","2:13797:55045","2:13798:55046","2:13799:55047","2:13800:59382","2:13802:3583","2:13803:59383"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2851-0:253:1595":{"id":"b:2:2851-0:253:1595","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2845:1727","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:253:1595","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2853:2020"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5512:3538":{"id":"1:5512:3538","crate_id":1,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5513:6163","1:5514:54900","1:5515:54901"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8167:3323":{"id":"2:8167:3323","crate_id":2,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8168:58285","2:8169:58286","2:8170:58283","2:8171:58281","2:8172:58287","2:8173:58284","2:8174:58282"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2867:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2946:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13707:59364":{"id":"2:13707:59364","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:49977:2473","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:158:1871":{"id":"0:158:1871","crate_id":0,"name":"drain","span":{"filename":"src/arrayvec.rs","begin":[600,4],"end":[625,5]},"visibility":"public","docs":"Create a draining iterator that removes the specified range in the vector\nand yields the removed items from start to end. The element range is\nremoved even if the iterator is not consumed until the end.\n\nNote: It is unspecified how many elements are removed from the vector,\nif the `Drain` value is leaked.\n\n**Panics** if the starting point is greater than the end point or if\nthe end point is greater than the length of the vector.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut v1 = ArrayVec::from([1, 2, 3]);\nlet v2: ArrayVec<_, 3> = v1.drain(0..2).collect();\nassert_eq!(&v1[..], &[3]);\nassert_eq!(&v2[..], &[1, 2]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["range",{"kind":"generic","inner":"R"}]],"output":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:253:1595","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RangeBounds","id":"2:3726:1725","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:109":{"id":"0:109","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[63,0],"end":[703,1]},"visibility":{"restricted":{"parent":"0:31:1587","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:113:922","0:114:1766","0:115:795","0:116:1775","0:117:1779","0:118:1784","0:119:1787","0:120:1712","0:121:1714","0:122:1715","0:123:1721","0:124:1720","0:126:1829","0:127:1830","0:128:1718","0:129:1851","0:131:1852","0:132:1864","0:134:1865","0:135:1879","0:156:1701","0:157:1908","0:158:1871","0:161:1938","0:163:1939","0:166:1949","0:167:1704","0:168:1707","0:169:305","0:170:1709"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3154:149":{"id":"2:3154:149","crate_id":2,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3156:2797"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:269":{"id":"0:269","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[939,0],"end":[953,1]},"visibility":{"restricted":{"parent":"0:31:1587","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["enumerate","chain","max_by","__iterator_get_unchecked","skip","cmp_by","unzip","reduce","partition","ne","flatten","gt","peekable","intersperse","next_chunk","zip","max_by_key","cmp","partial_cmp_by","copied","eq","try_reduce","le","partition_in_place","map","fuse","skip_while","intersperse_with","ge","last","count","any","eq_by","collect","cycle","find","all","is_partitioned","inspect","take_while","for_each","advance_by","size_hint","min_by","is_sorted","array_chunks","find_map","try_fold","by_ref","map_while","filter","nth","position","min_by_key","is_sorted_by","min","take","cloned","try_find","sum","try_for_each","try_collect","scan","filter_map","lt","step_by","max","partial_cmp","is_sorted_by_key","product","rev","rposition","fold","collect_into","flat_map"],"trait":{"name":"Iterator","id":"2:8844:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:253:1595","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:273:1699","0:274:924","0:276:1972"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13802:3583":{"id":"2:13802:3583","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:15744:2273"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:50021:2470","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3359:220-0:634:1591":{"id":"a:2:3359:220-0:634:1591","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3359:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:506":{"id":"0:506","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[487,0],"end":[490,1]},"visibility":{"restricted":{"parent":"0:388:1588","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10533:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:508:661"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8652:1992":{"id":"2:8652:1992","crate_id":2,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8654:1993","2:8656:2803","2:8657:2804"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5570:3541":{"id":"1:5570:3541","crate_id":1,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5571:56865"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5438:3577":{"id":"1:5438:3577","crate_id":1,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5439:5068","1:5440:53614"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10355:3524","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:387:2028":{"id":"0:387:2028","crate_id":0,"name":"flush","span":{"filename":"src/arrayvec.rs","begin":[1219,4],"end":[1219,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:3839:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:166:1949":{"id":"0:166:1949","crate_id":0,"name":"take","span":{"filename":"src/arrayvec.rs","begin":[680,4],"end":[682,5]},"visibility":"public","docs":"Returns the ArrayVec, replacing the original with a new empty ArrayVec.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut v = ArrayVec::from([0, 1, 2, 3]);\nassert_eq!([0, 1, 2, 3], v.take().into_inner().unwrap());\nassert!(v.is_empty());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3180-0:634:1591":{"id":"b:2:3180-0:634:1591","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3157:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3154:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3183:2797"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:214:1699":{"id":"0:214:1699","crate_id":0,"name":"Item","span":{"filename":"src/arrayvec.rs","begin":[821,4],"end":[821,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"T"}}}}},"0:332":{"id":"0:332","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1127,0],"end":[1133,1]},"visibility":{"restricted":{"parent":"0:31:1587","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"2:10771:142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10771:142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:335:716"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13701:2138":{"id":"2:13701:2138","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:15744:2273"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49683:2467","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:848-0:634:1591":{"id":"b:5:848-0:634:1591","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2867:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["5:850:2414","5:851:2854","5:852:2855"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13732:55186":{"id":"2:13732:55186","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"prim@char":"1:15744:2273","str::split":"1:15750:2278","`DoubleEndedIterator`":"2:8687:120","self::pattern":"2:13302:2460"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:49731:2478","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2453","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:2453","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:2454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10554:2506":{"id":"2:10554:2506","crate_id":2,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10555:661"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:131:1852":{"id":"0:131:1852","crate_id":0,"name":"swap_pop","span":{"filename":"src/arrayvec.rs","begin":[391,4],"end":[398,5]},"visibility":"public","docs":"Remove the element at `index` and swap the last element into its place.\n\nThis is a checked version of `.swap_remove`.  \nThis operation is O(1).\n\nReturn `Some(` *element* `)` if the index is in bounds, else `None`.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3]);\n\nassert_eq!(array.swap_pop(0), Some(1));\nassert_eq!(&array[..], &[3, 2]);\n\nassert_eq!(array.swap_pop(10), None);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:364":{"id":"0:364","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1169,0],"end":[1171,1]},"visibility":{"restricted":{"parent":"0:31:1587","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10533:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10533:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:367:661"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11175:214":{"id":"2:11175:214","crate_id":2,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:11177:181","2:11178:55154","2:11179:55155","2:11180:55156","2:11181:55157","2:11182:755","2:11183:756"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:11166:3524","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:553:127":{"id":"0:553:127","crate_id":0,"name":"Error","span":{"filename":"src/array_string.rs","begin":[621,4],"end":[621,40]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}}},"5:6502:1400":{"id":"5:6502:1400","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:482":{"id":"0:482","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[434,0],"end":[444,1]},"visibility":{"restricted":{"parent":"0:388:1588","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"DerefMut","id":"2:3583:1724","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:484:546"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13747:59367":{"id":"2:13747:59367","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2453","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:648":{"id":"0:648","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[8,16],"end":[8,20]},"visibility":{"restricted":{"parent":"0:575:1589","path":"::errors"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::marker::Copy","id":"2:3357:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3357:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:113:922":{"id":"0:113:922","crate_id":0,"name":"new","span":{"filename":"src/arrayvec.rs","begin":[80,4],"end":[85,5]},"visibility":"public","docs":"Create a new empty `ArrayVec`.\n\nThe maximum capacity is given by the generic parameter `CAP`.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::<_, 16>::new();\narray.push(1);\narray.push(2);\nassert_eq!(&array[..], &[1, 2]);\nassert_eq!(array.capacity(), 16);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:850:2414":{"id":"5:850:2414","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"2:3890:2410":{"id":"2:3890:2410","crate_id":2,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:455:2083":{"id":"0:455:2083","crate_id":0,"name":"from_byte_string","span":{"filename":"src/array_string.rs","begin":[120,4],"end":[130,5]},"visibility":"public","docs":"Create a new `ArrayString` from a byte string literal.\n\n**Errors** if the byte string literal is not valid UTF-8.\n\n```\nuse arrayvec::ArrayString;\n\nlet string = ArrayString::from_byte_string(b\"hello world\").unwrap();\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["b",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"CAP"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47875:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"resolved_path","inner":{"name":"Utf8Error","id":"2:49657:2054","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3184-0:642:1592":{"id":"b:2:3184-0:642:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3157:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3186:682"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13678:1775":{"id":"2:13678:1775","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:189":{"id":"0:189","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[750,0],"end":[761,1]},"visibility":{"restricted":{"parent":"0:31:1587","path":"::arrayvec"}},"docs":"Create an `ArrayVec` from an array.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3]);\nassert_eq!(array.len(), 3);\nassert_eq!(array.capacity(), 3);\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3157:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"CAP"}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:193:682"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:221:1594":{"id":"0:221:1594","crate_id":0,"name":"IntoIter","span":{"filename":"src/arrayvec.rs","begin":[839,4],"end":[839,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1594","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}},"b:2:2851-0:223:1594":{"id":"b:2:2851-0:223:1594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2845:1727","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1594","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2853:2020"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5910:2459":{"id":"5:5910:2459","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5912:181","5:5913:33166"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:524:999":{"id":"0:524:999","crate_id":0,"name":"partial_cmp","span":{"filename":"src/array_string.rs","begin":[523,4],"end":[525,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"2:37870:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6165:1950":{"id":"5:6165:1950","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:8455:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2453","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3388:2533":{"id":"2:3388:2533","crate_id":2,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:526:794":{"id":"0:526:794","crate_id":0,"name":"le","span":{"filename":"src/array_string.rs","begin":[527,4],"end":[527,56]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:575:1589":{"id":"0:575:1589","crate_id":0,"name":"errors","span":{"filename":"src/errors.rs","begin":[1,0],"end":[48,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:642:1592"],"is_stripped":true}},"0:460:2090":{"id":"0:460:2090","crate_id":0,"name":"zero_filled","span":{"filename":"src/array_string.rs","begin":[142,4],"end":[152,5]},"visibility":"public","docs":"Create a new `ArrayString` value fully filled with ASCII NULL characters (`\\0`). Useful\nto be used as a buffer to collect external data or as a buffer for intermediate processing.\n\n```\nuse arrayvec::ArrayString;\n\nlet string = ArrayString::<16>::zero_filled();\nassert_eq!(string.len(), 16);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13782:55194":{"id":"2:13782:55194","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:15744:2273","self::pattern":"2:13302:2460"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2453","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:2453","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:2454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:447:59":{"id":"0:447:59","crate_id":0,"name":"default","span":{"filename":"src/array_string.rs","begin":[43,4],"end":[45,5]},"visibility":"default","docs":"Return an empty `ArrayString`","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13700:55177":{"id":"2:13700:55177","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"1:15750:2278"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13729:32031":{"id":"2:13729:32031","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"self::pattern":"2:13302:2460","prim@char":"1:15744:2273"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:13094:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2453","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:451:1766":{"id":"0:451:1766","crate_id":0,"name":"new_const","span":{"filename":"src/array_string.rs","begin":[78,4],"end":[81,5]},"visibility":"public","docs":"Create a new empty `ArrayString` (const fn).\n\nCapacity is inferred from the type parameter.\n\n```\nuse arrayvec::ArrayString;\n\nstatic ARRAY: ArrayString<1024> = ArrayString::new_const();\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3347:211-0:642:1592":{"id":"a:2:3347:211-0:642:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3347:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3347:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3164:228":{"id":"2:3164:228","crate_id":2,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3166:127","2:3167:1419"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13762:59371":{"id":"2:13762:59371","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:13302:2460","prim@char":"1:15744:2273","str::match_indices":"1:15750:2278","`DoubleEndedIterator`":"2:8687:120"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:49881:2475","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2453","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:2453","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:2454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3570:116":{"id":"2:3570:116","crate_id":2,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3571:222","2:3572:544"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:161:1938":{"id":"0:161:1938","crate_id":0,"name":"into_inner","span":{"filename":"src/arrayvec.rs","begin":[652,4],"end":[658,5]},"visibility":"public","docs":"Return the inner fixed size array, if it is full to its capacity.\n\nReturn an `Ok` value with the array if length equals capacity,\nreturn an `Err` with self otherwise.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47875:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"array","inner":{"type":{"kind":"generic","inner":"T"},"len":"CAP"}}},{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3347:211-0:223:1594":{"id":"a:2:3347:211-0:223:1594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3347:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3347:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1594","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3436:2382":{"id":"2:3436:2382","crate_id":2,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3438:181","2:3439:1105"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:215:1594":{"id":"0:215:1594","crate_id":0,"name":"IntoIter","span":{"filename":"src/arrayvec.rs","begin":[822,4],"end":[822,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"IterMut","id":"2:11379:1966","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}},"0:119:1787":{"id":"0:119:1787","crate_id":0,"name":"remaining_capacity","span":{"filename":"src/arrayvec.rs","begin":[157,4],"end":[159,5]},"visibility":"public","docs":"Returns the capacity left in the `ArrayVec`.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3]);\narray.pop();\nassert_eq!(array.remaining_capacity(), 1);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:488":{"id":"0:488","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[453,0],"end":[458,1]},"visibility":{"restricted":{"parent":"0:388:1588","path":"::array_string"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2900:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:490:605"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:168:1707":{"id":"0:168:1707","crate_id":0,"name":"as_mut_slice","span":{"filename":"src/arrayvec.rs","begin":[690,4],"end":[692,5]},"visibility":"public","docs":"Return a mutable slice containing all elements of the vector.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6344:3532":{"id":"1:6344:3532","crate_id":1,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6345:57300","1:6346:57301"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:12742:4319":{"id":"2:12742:4319","crate_id":2,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12743:1699","2:12744:1704"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13741:55188":{"id":"2:13741:55188","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:15744:2273","str::rsplitn":"1:15750:2278","self::pattern":"2:13302:2460"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:49817:2481","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2453","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:183:222":{"id":"0:183:222","crate_id":0,"name":"Target","span":{"filename":"src/arrayvec.rs","begin":[726,4],"end":[726,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}},"2:13686:59362":{"id":"2:13686:59362","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:9503:2612":{"id":"2:9503:2612","crate_id":2,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:4080-0:253:1595":{"id":"b:2:4080-0:253:1595","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4078:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:253:1595","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:4082:1432"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9503:2612-0:253:1595":{"id":"a:2:9503:2612-0:253:1595","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9504:2611","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9503:2612","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:253:1595","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:6171:60020":{"id":"5:6171:60020","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:8455:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13769:59374":{"id":"2:13769:59374","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3594:1748":{"id":"2:3594:1748","crate_id":2,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3595:579"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:234":{"id":"0:234","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[873,0],"end":[885,1]},"visibility":{"restricted":{"parent":"0:31:1587","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:8687:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1594","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:237:1973"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:124:1720":{"id":"0:124:1720","crate_id":0,"name":"clear","span":{"filename":"src/arrayvec.rs","begin":[250,4],"end":[252,5]},"visibility":"public","docs":"Remove all elements in the vector.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10771:142":{"id":"2:10771:142","crate_id":2,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10772:716","2:10774:3113"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2936:177":{"id":"2:2936:177","crate_id":2,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2937:416","2:2938:2791","2:2939:2016","2:2940:2796"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2905:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2946:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:658":{"id":"0:658","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[8,31],"end":[8,40]},"visibility":{"restricted":{"parent":"0:575:1589","path":"::errors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3355:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13693:55156":{"id":"2:13693:55156","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11175:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11175:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"1:9130:3567":{"id":"1:9130:3567","crate_id":1,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9131:57590","1:9132:57591","1:9133:57592","1:9134:57593","1:9135:57594","1:9136:39015","1:9137:57589"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10355:3524","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3184-0:253:1595":{"id":"b:2:3184-0:253:1595","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3157:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:253:1595","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3186:682"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:220:1699":{"id":"0:220:1699","crate_id":0,"name":"Item","span":{"filename":"src/arrayvec.rs","begin":[838,4],"end":[838,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"b:2:2848-0:223:1594":{"id":"b:2:2848-0:223:1594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2842:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1594","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2850:1726"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13697:3658":{"id":"2:13697:3658","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"crate::ops::Index":"2:3655:2400","str::slice_mut_unchecked":"1:15750:2278","`str`":"1:15750:2278"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2851-0:634:1591":{"id":"b:2:2851-0:634:1591","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2845:1727","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayString","id":"0:634:1591","args":{"angle_bracketed":{"args":[{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2853:2020"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13679:2147":{"id":"2:13679:2147","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:502:1726":{"id":"0:502:1726","crate_id":0,"name":"borrow","span":{"filename":"src/array_string.rs","begin":[479,4],"end":[479,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13327:2454":{"id":"2:13327:2454","crate_id":2,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13329:1973","2:13330:58985","2:13331:58986"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Searcher","id":"2:13321:2455","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10548:2508":{"id":"2:10548:2508","crate_id":2,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10549:661"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:628":{"id":"0:628","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[59,36],"end":[59,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::arrayvec::IntoIter","name":"IntoIter","id":"0:223:1594","glob":false}},"0:129:1851":{"id":"0:129:1851","crate_id":0,"name":"swap_remove","span":{"filename":"src/arrayvec.rs","begin":[367,4],"end":[372,5]},"visibility":"public","docs":"Remove the element at `index` and swap the last element into its place.\n\nThis operation is O(1).\n\nReturn the *element* if the index is in bounds, else panic.\n\n***Panics*** if the `index` is out of bounds.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3]);\n\nassert_eq!(array.swap_remove(0), 1);\nassert_eq!(&array[..], &[3, 2]);\n\nassert_eq!(array.swap_remove(1), 2);\nassert_eq!(&array[..], &[3]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13689:55154":{"id":"2:13689:55154","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:47750:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11175:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11175:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:461:1779":{"id":"0:461:1779","crate_id":0,"name":"capacity","span":{"filename":"src/array_string.rs","begin":[163,4],"end":[163,49]},"visibility":"public","docs":"Return the capacity of the `ArrayString`.\n\n```\nuse arrayvec::ArrayString;\n\nlet string = ArrayString::<3>::new();\nassert_eq!(string.capacity(), 3);\n```","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:185":{"id":"0:185","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[733,0],"end":[738,1]},"visibility":{"restricted":{"parent":"0:31:1587","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"DerefMut","id":"2:3583:1724","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:188:546"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9504:2611-0:253:1595":{"id":"a:2:9504:2611-0:253:1595","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9504:2611","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9504:2611","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:253:1595","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3356:217":{"id":"2:3356:217","crate_id":2,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:351:1726":{"id":"0:351:1726","crate_id":0,"name":"borrow","span":{"filename":"src/arrayvec.rs","begin":[1154,4],"end":[1154,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:531:999":{"id":"0:531:999","crate_id":0,"name":"partial_cmp","span":{"filename":"src/array_string.rs","begin":[534,4],"end":[536,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"2:37870:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:1075:3581":{"id":"1:1075:3581","crate_id":1,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:1076:2414","1:1077:4323","1:1078:55043","1:1079:55044","1:1080:55045","1:1081:55046","1:1082:55047"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:4080-0:223:1594":{"id":"b:2:4080-0:223:1594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4078:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1594","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:4082:1432"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:462:1784":{"id":"0:462:1784","crate_id":0,"name":"is_full","span":{"filename":"src/array_string.rs","begin":[175,4],"end":[175,73]},"visibility":"public","docs":"Return if the `ArrayString` is completely filled.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<1>::new();\nassert!(!string.is_full());\nstring.push_str(\"A\");\nassert!(string.is_full());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9504:2611":{"id":"2:9504:2611","crate_id":2,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:534:714":{"id":"0:534:714","crate_id":0,"name":"gt","span":{"filename":"src/array_string.rs","begin":[539,4],"end":[539,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13704:32163":{"id":"2:13704:32163","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"1:15750:2278"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:49987:2464","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3198:127":{"id":"2:3198:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:39050:2444","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:2848-0:253:1595":{"id":"b:2:2848-0:253:1595","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2842:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:253:1595","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2850:1726"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:848-0:223:1594":{"id":"b:5:848-0:223:1594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2867:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1594","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["5:850:2414","5:851:2854","5:852:2855"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3637:2407":{"id":"2:3637:2407","crate_id":2,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3639:238","2:3640:206","2:3641:59142"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3195-0:98:1593":{"id":"b:2:3195-0:98:1593","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3154:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3198:127","2:3199:1419"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:283":{"id":"0:283","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[966,0],"end":[966,76]},"visibility":{"restricted":{"parent":"0:31:1587","path":"::arrayvec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:8712:1974","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Drain","id":"0:253:1595","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13799:55047":{"id":"2:13799:55047","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3359:220-0:98:1593":{"id":"a:2:3359:220-0:98:1593","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3359:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3359:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ArrayVec","id":"0:98:1593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:222:770":{"id":"0:222:770","crate_id":0,"name":"into_iter","span":{"filename":"src/arrayvec.rs","begin":[840,4],"end":[842,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1594","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:107:579":{"id":"0:107:579","crate_id":0,"name":"drop","span":{"filename":"src/arrayvec.rs","begin":[49,4],"end":[53,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:383:416":{"id":"0:383:416","crate_id":0,"name":"cmp","span":{"filename":"src/arrayvec.rs","begin":[1203,4],"end":[1205,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"2:37870:178","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:660":{"id":"0:660","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[8,31],"end":[8,40]},"visibility":{"restricted":{"parent":"0:575:1589","path":"::errors"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::PartialEq","id":"2:2900:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2900:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:662:605"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13750:59368":{"id":"2:13750:59368","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2453","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:2453","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:2454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:118:1784":{"id":"0:118:1784","crate_id":0,"name":"is_full","span":{"filename":"src/arrayvec.rs","begin":[146,4],"end":[146,73]},"visibility":"public","docs":"Return true if the `ArrayVec` is completely filled to its capacity, false otherwise.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::<_, 1>::new();\nassert!(!array.is_full());\narray.push(1);\nassert!(array.is_full());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13759:59370":{"id":"2:13759:59370","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"prim@char":"1:15744:2273","self::pattern":"2:13302:2460","str::rmatch_indices":"1:15750:2278","`DoubleEndedIterator`":"2:8687:120"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:49863:2474","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2453","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10540:119":{"id":"2:10540:119","crate_id":2,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10541:661"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:559:1419":{"id":"0:559:1419","crate_id":0,"name":"try_from","span":{"filename":"src/array_string.rs","begin":[634,4],"end":[639,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["f",{"kind":"resolved_path","inner":{"name":"fmt::Arguments","id":"2:48887:73","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47875:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:3164:228","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3509:2397":{"id":"2:3509:2397","crate_id":2,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3511:358"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8649:1699":{"id":"2:8649:1699","crate_id":2,"name":"Item","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8844:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:3190-0:223:1594":{"id":"b:2:3190-0:223:1594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3160:229","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:223:1594","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3193:127","2:3194:1420"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:117:1779":{"id":"0:117:1779","crate_id":0,"name":"capacity","span":{"filename":"src/arrayvec.rs","begin":[134,4],"end":[134,49]},"visibility":"public","docs":"Return the capacity of the `ArrayVec`.\n\n```\nuse arrayvec::ArrayVec;\n\nlet array = ArrayVec::from([1, 2, 3]);\nassert_eq!(array.capacity(), 3);\n```","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13312:2453":{"id":"2:13312:2453","crate_id":2,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13314:2455","2:13315:57828","2:13316:57829","2:13317:57830","2:13318:57832","2:13319:57831","2:13320:57833"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:511:661":{"id":"0:511:661","crate_id":0,"name":"fmt","span":{"filename":"src/array_string.rs","begin":[494,4],"end":[494,76]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10493:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10482:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13779:14950":{"id":"2:13779:14950","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:15744:2273","self::pattern":"2:13302:2460"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:2453","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9124:2451":{"id":"2:9124:2451","crate_id":2,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8844:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:655":{"id":"0:655","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[8,26],"end":[8,29]},"visibility":{"restricted":{"parent":"0:575:1589","path":"::errors"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::Ord","id":"2:2936:177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["min","clamp","max"],"trait":{"name":"Ord","id":"2:2936:177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CapacityError","id":"0:642:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:657:416"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8606:3339":{"id":"2:8606:3339","crate_id":2,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8608:2846"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}}},"paths":{"2:53005:4071":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:46557:4110":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"16:3243:4970":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"1:14315:8349":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"1:11037:3697":{"crate_id":1,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"1:7294:119":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"17:11956:6280":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"2:51614:4025":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"17:12585:6398":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"6:5488:7892":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"17:11754:6238":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:50115:3959":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"5:7943:5267":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"2:3353:2531":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"1:11196:3821":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"2:47926:1966":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"1:1017:3767":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"17:11907:6266":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"6:3907:7450":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"12:787:3625":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"1:2525:2526":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"1:6904:2599":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"1:3497:3423":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"5:4509:1963":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"1:15751:2279":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"1:9558:5296":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockWriteGuard"],"kind":"struct"},"1:11423:3682":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"16:5217:4954":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"16:4381:6847":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"6:5419:7874":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"17:12417:6372":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"16:7369:4702":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"5:444:2457":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"2:10533:109":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:48346:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:3157:135":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"16:5605:4755":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"2:24824:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"1:2196:3589":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"17:10253:5032":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"17:12209:6320":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"12:2280:3634":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"17:12070:6299":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2:8346:3325":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:15755:2281":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"12:1881:145":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:49996:2462":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"2:5048:3162":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"6:6243:8072":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"17:10318:5106":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:46066:2408":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"2:11680:2883":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"14:56:6180":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"6:545:7229":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"16:6286:4623":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:24370:4136":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"18:678:142":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"16:4975:6865":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"6:1712:7405":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:12014:3728":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"16:4660:6855":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"16:5348:4744":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"1:1132:2528":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"5:7205:1882":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"6:3966:7494":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"17:13138:6589":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"17:10291:5095":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"17:10058:5138":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"2:46039:2411":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:9648:5297":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"1:11246:3519":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"17:11031:46584":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"1:8850:3730":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"17:13612:6710":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:11559:2478":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"2:51901:4041":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"2:24431:38727":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"17:10187:5839":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"16:4439:6849":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"2:10220:4189":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"2:53628:5456":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"17:9706:5830":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2:47006:3362":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"6:5398:7862":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"12:777:1594":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"17:13428:6658":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"6:1558:7301":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"17:10304:5094":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"17:13529:6688":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"17:12302:6334":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"17:12957:6488":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"2:2487:2987":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"2:2271:2983":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"17:9561:5085":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"1:14374:118":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"1:10435:11250":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"1:13853:5303":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"6:1531:7290":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:13332:2452":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:23108:4076":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"2:46536:8223":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"6:3877:7432":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"17:11494:6195":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"2:47253:3332":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:12766:2085":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"1:15071:3560":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:48813:127":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"1:11999:3735":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"5:7714:4372":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"1:15742:2271":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"2:51324:4067":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"16:4351:6846":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"2:47849:2609":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:11291:3669":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"17:11797:6254":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"2:47858:2669":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"2:53795:8304":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:2179:3586":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"2:5113:3164":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"17:10115:5135":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"2:22870:59210":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"6:6643:8084":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"6:5547:7904":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:47799:1966":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"19:117:5997":{"crate_id":19,"path":["panic_unwind","dwarf","eh","EHContext"],"kind":"struct"},"2:2845:1727":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:8175:3679":{"crate_id":1,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"17:13495:6680":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"2:46545:4109":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:11946:3612":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"1:3839:205":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"16:2883:4980":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"6:5210:7764":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"16:3077:5023":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"6:1704:7404":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"1:10456:3594":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"2:47273:3336":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:15754:2280":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"5:3814:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"17:13440:6664":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"17:10937:5855":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"1:2953:128":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"5:3436:3586":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"5:8262:194":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"2:48768:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"17:13281:6620":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"1:15223:53338":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"17:9930:60689":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"2:24281:8125":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"1:6574:3573":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"2:28300:3952":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"16:3494:6018":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"11:46:7141":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"2:3450:2388":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"2:47047:3365":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"2:5239:4156":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"9:1020:4540":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"6:5293:7800":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"2:9131:3338":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"2:48871:3153":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"1:15238:4634":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"16:7131:4796":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"6:634:7284":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"2:5291:3166":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"2:48774:133":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"2:9625:2453":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"2:50456:4212":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"5:8389:4421":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"1:15766:2292":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"1:13342:5888":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"6:1634:7350":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"16:4942:6864":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"17:11689:6222":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:5004:4148":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:2466:5887":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"12:815:3626":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"16:3478:4972":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"17:12431:6374":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"2:24385:8135":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"2:24042:4001":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:11177:3887":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"1:11381:3681":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"2:3795:2402":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"2:12298:5275":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"9:0:2246":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"5:5962:5264":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"2:46305:4085":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"12:432:4608":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"1:900:3746":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"16:5443:4750":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"5:3428:3588":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"12:764:1966":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"17:8902:46576":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"2:56549:237":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:12746:6425":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"2:32404:4287":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"1:10594:3778":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"17:12607:6409":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"6:3883:7433":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:9579:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"17:10586:5847":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"2:53639:5459":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"16:5176:6866":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"1:11439:3684":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"6:4208:7594":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"17:10394:5092":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:50672:158":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"17:9064:46580":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:52379:4065":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2:11486:2875":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"2:46677:4309":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"2:48010:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:14391:53348":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"17:9087:46581":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"1:6646:3518":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"16:6381:4713":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"2:50497:4275":{"crate_id":2,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"17:11335:5056":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"18:0:2254":{"crate_id":18,"path":["memchr"],"kind":"module"},"1:15767:2293":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"2:49817:2481":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"2:49094:8241":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"18:694:5166":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"6:4402:7662":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"18:774:6002":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"2:50608:8246":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"17:11168:6153":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"16:2813:4979":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"12:2253:3632":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"12:0:2249":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"2:2376:2986":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"17:10240:5029":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"2:0:489":{"crate_id":2,"path":["core"],"kind":"module"},"6:1912:40693":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"6:4067:7541":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:24509:4253":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:15152:3827":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"2:11379:1966":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"5:0:278":{"crate_id":5,"path":["alloc"],"kind":"module"},"1:4370:3332":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"16:6012:4698":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"1:11892:1594":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"17:12646:6412":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"16:2839:4960":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"18:811:5152":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"2:25490:4100":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"2:53608:5458":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"17:13573:6698":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"1:1654:3635":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2:13378:3961":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"2:32578:1730":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"2:50448:4217":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"6:4532:7715":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"17:9746:5831":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"1:11109:8332":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"2:50428:4211":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"12:2040:1595":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"17:10925:8440":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"5:8432:4423":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:49689:2466":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"6:6688:8096":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"9:27:4522":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"18:885:5158":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:52349:4062":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"16:6482:4994":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"16:7169:4716":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"5:7547:5253":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"6:4434:7676":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"17:11922:6270":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"17:10851:6137":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"6:4135:7578":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"16:6130:4771":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"1:11786:3706":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"17:11628:5441":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"2:23208:3570":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:6106:3838":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"12:971:3630":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"5:3441:4335":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:23738:16453":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"6:5455:7884":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"5:4694:236":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"17:9948:5835":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"2:13043:4206":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:47037:3364":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"5:2005:3585":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"2:46640:4306":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"2:50436:4216":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:2961:3408":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"12:2392:7137":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"16:5784:4763":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"2:53680:5460":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"2:46914:5877":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:12490:128":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"2:32940:2437":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"9:722:4474":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"2:48094:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"2:10493:134":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"1:8525:3856":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"6:6229:8063":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"1:7073:8499":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:6724:3522":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"16:4599:6853":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"2:14510:2860":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"5:8344:3592":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"5:1256:5872":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"12:1103:3632":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"6:612:7271":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"1:5643:3883":{"crate_id":1,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"6:5288:7799":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"1:10905:3364":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"2:3415:2378":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"17:11547:6202":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"5:6562:1595":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"16:6190:4774":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"2:5723:781":{"crate_id":2,"path":["core","iter"],"kind":"module"},"2:3594:1748":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:3659:2401":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:11220:3572":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"2:3160:229":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"17:13421:6657":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"2:10771:142":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:3352:2435":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"18:611:5161":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"6:6153:8013":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"17:12674:6416":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"1:14942:3653":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"18:829:5154":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"1:5512:3538":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"2:3347:211":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"5:3395:1963":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"16:4716:6857":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"17:9826:5106":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"1:14766:3706":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"16:7637:4800":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"17:11985:6285":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"17:4157:5063":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"6:0:800":{"crate_id":6,"path":["libc"],"kind":"module"},"16:7415:4721":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:7129:3368":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:11355:1963":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"16:2959:4963":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"16:3177:4967":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"1:11224:7969":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"2:53665:5457":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"6:618:7274":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"12:843:3622":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"2:50651:4223":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"17:11068:5059":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"18:645:5163":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"6:3933:7470":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"1:10912:2185":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"2:53397:4063":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"12:2059:3587":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"12:2419:3592":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"16:3461:4973":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"16:6679:5001":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"2:3505:2396":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"2:3501:2395":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"18:754:60699":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"6:4142:7580":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"5:4581:4411":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"2:13094:2463":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"18:782:6002":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"2:10536:109":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"2:11166:3524":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"17:10147:6099":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"17:12634:6411":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"1:8426:3845":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"2:24497:4254":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"12:1183:4604":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"18:651:5160":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"17:11085:5086":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"5:2619:4442":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"2:48304:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"13:233:7136":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"6:4028:7524":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"2:53581:4031":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"11:0:2248":{"crate_id":11,"path":["adler"],"kind":"module"},"2:8687:120":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"16:4743:6858":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"16:3103:4976":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"6:6007:7959":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"6:5204:7761":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"1:2185:3587":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"16:2754:4953":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"5:8232:4344":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"6:4110:7565":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"6:4098:7559":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"7:0:1484":{"crate_id":7,"path":["unwind"],"kind":"module"},"5:3110:8591":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"1:10466:3636":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"17:9883:60694":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"6:6931:8106":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"16:7721:4712":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"1:7582:3711":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"1:1636:3633":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"2:4129:2516":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"2:25121:4240":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"2:50444:4219":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:24956:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"16:7659:4801":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"2:50273:3969":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"13:0:2243":{"crate_id":13,"path":["std_detect"],"kind":"module"},"16:4467:6850":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"17:11305:6425":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"17:13859:6793":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"2:3255:127":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:23350:3524":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"1:8167:3767":{"crate_id":1,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"6:1537:7293":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"6:4392:7659":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:13327:2454":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"6:3993:7506":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"6:6184:8039":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:48801:107":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"17:10476:5124":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:49084:3679":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"2:25055:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:9414:8576":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"1:14320:8351":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"2:50616:190":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"1:3443:3416":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"5:1684:1594":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"17:13452:6665":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"6:4356:7640":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:14067:3138":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"1:7402:3699":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"5:1663:1963":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:46975:3359":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"12:1162:4603":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"2:48220:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"19:0:996":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"12:750:1963":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"2:23944:59191":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"2:46656:2469":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"16:5427:4749":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"2:3812:137":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:10355:3524":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:46994:3361":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:11822:8348":{"crate_id":1,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"15:269:4630":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"2:3356:217":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"1:14300:3574":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"16:7184:5010":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"1:3102:3786":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"1:783:5297":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"1:11202:3840":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"17:11002:5858":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:8602:3340":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:13673:3703":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"17:13908:6808":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"1:2958:1719":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"2:51725:4057":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"16:5721:4761":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"2:49657:2054":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"6:1662:7375":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:1521:3629":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"17:9004:46578":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"5:6775:4384":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"1:11182:3890":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"17:10422:5843":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"12:1121:3633":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"2:5697:4086":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"2:46663:4307":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"17:11234:5081":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"6:3960:7493":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"12:399:4609":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"16:3340:4952":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"14:244:7089":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"17:9786:5832":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"2:8643:151":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:9130:3567":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"12:2032:1963":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"6:571:7249":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"12:1238:4606":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"16:7826:2043":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"17:13708:6748":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"5:8532:3585":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"6:5582:7929":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"1:7980:5279":{"crate_id":1,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"6:6925:8105":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"17:12687:6417":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"2:3151:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:5676:11255":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"1:8760:3668":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"5:2266:5255":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"17:13155:6591":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"2:46710:100":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"17:13515:6686":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"2:24410:38735":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:3127:1728":{"crate_id":1,"path":["std","io"],"kind":"module"},"1:10450:11252":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"1:1500:3626":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"17:12512:6385":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"5:3462:3589":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:49967:2472":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"2:8606:3339":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"17:9396:6092":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"16:7121:4795":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"2:14027:138":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"16:6050:4768":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"6:4198:7593":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"5:1547:3635":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"2:3726:1725":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:10540:119":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"12:2412:7139":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"18:621:6001":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"2:10009:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"16:4198:6843":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"2:46153:195":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"17:11937:6275":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"17:12892:6437":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"1:2554:2527":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"2:24447:38736":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:11175:214":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"17:10489:6101":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"1:14957:3654":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"7:85:44255":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"2:3824:2406":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"2:50598:201":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"2:51280:8247":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:13410:3719":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"2:53459:4028":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"2:48517:2501":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"18:637:6002":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"1:10407:3138":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:46957:3358":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"5:1760:4434":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"1:5285:3827":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"1:6650:3521":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"1:8926:2604":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"17:10435:5040":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"2:53543:4066":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"2:3570:116":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:9505:3813":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"6:5260:7787":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"17:13602:6705":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"2:13020:4205":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"12:979:3631":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"2:46217:199":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"16:5685:4759":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"1:5745:3889":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"2:2905:124":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"16:4903:6863":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"16:6656:4999":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"2:3086:2445":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:2955:3777":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"17:9958:60688":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"1:8275:3608":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"2:53257:4059":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"17:10407:5091":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"12:1682:4617":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"17:13481:6673":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"1:12528:8505":{"crate_id":1,"path":["std","sys","unix","fs","TimespecDebugAdapter"],"kind":"struct"},"2:4866:4074":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"6:5390:7861":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:49591:2863":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:24318:8127":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"2:3355:218":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"2:49072:146":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"16:2733:4937":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2:2900:183":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"17:12360:6360":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"16:3221:4969":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"2:47750:176":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"6:539:7226":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"5:69:4368":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"17:10093:5133":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"2:51392:4035":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"2:39050:2444":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:10781:146":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"6:5567:7918":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"16:6549:4717":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:5117:4149":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"14:194:44925":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"16:6691:4785":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"1:1449:3622":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"16:5948:4959":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"17:11256:6156":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"2:46634:2470":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"16:5530:4753":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"17:12469:6379":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"17:299:8422":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"17:9033:46579":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"5:2376:4456":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"6:1551:7298":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"2:9505:2610":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"16:6518:4715":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"6:565:7246":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"6:6250:8075":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:57897:8312":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"17:2484:46668":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"1:7519:3705":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"16:3770:6841":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"1:9426:8577":{"crate_id":1,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"5:7048:4332":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"2:2041:3399":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"6:4230:7596":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"6:4416:7667":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"1:15726:53337":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"1:10617:129":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"6:4179:7592":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"1:8433:3847":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"16:3402:4687":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"2:6610:3355":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:11826:53352":{"crate_id":1,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"2:53703:5468":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"6:601:7266":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:49671:2468":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"2:47791:1963":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"5:2284:4337":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"6:1606:7331":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:3458:2385":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"17:9431:6093":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"17:2314:5097":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"1:15756:2282":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"18:136:5819":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"17:10571:5062":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"5:8403:4262":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:9183:5058":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"2:49881:2475":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"6:5378:7854":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"17:13522:6687":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"1:15757:2283":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"1:11170:3553":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"2:5499:4302":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"17:13565:6697":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"17:13215:6605":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"17:12196:6318":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"16:4411:6848":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"17:10068:5104":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"1:5438:3577":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"17:10127:5106":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"17:11314:5120":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"6:4464:7691":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"16:5923:4766":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"17:10530:6141":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"2:32584:2436":{"crate_id":2,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"2:47244:3330":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"2:24791:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"5:3554:3585":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"16:6980:4788":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"12:379:4610":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"1:7919:3767":{"crate_id":1,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"16:6099:4770":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"5:981:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"17:9636:5827":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"1:11917:3610":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"5:8240:59264":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"2:51947:4026":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:46836:3341":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"17:11142:6152":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"2:9124:2451":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"6:6057:7987":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:46800:5351":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"2:46298:2043":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"6:533:5519":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"5:1055:4342":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"1:15764:2290":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"16:6407:4778":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"2:14:1717":{"crate_id":2,"path":["core","write"],"kind":"macro"},"17:13785:6772":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"2:24989:165":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:32744:58919":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"2:10544:2500":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"2:51424:4068":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:7450:3702":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"6:4242:7597":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"6:4362:7643":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"1:1441:1594":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:50209:3967":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"5:3960:4430":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"16:7741:4802":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"12:2036:1594":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"1:14381:3410":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"16:4628:6854":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"6:4493:7700":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:51632:8251":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"12:559:143":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"17:10445:6051":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"1:10242:5300":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"6:6120:7997":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"6:4386:7656":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"1:15744:2273":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"2:8652:1992":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"6:1544:7296":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:10548:2508":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:14338:8356":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"14:216:9276":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:39126:2534":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"5:4036:5253":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:1485:3585":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"16:6277:4775":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"16:3521:6838":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"1:15494:5307":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"6:4454:7685":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:4968:4147":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:4771:3551":{"crate_id":1,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"2:23405:4023":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:4236:3434":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"17:13293:6623":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"16:4803:6860":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"2:3509:2397":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"9:927:44352":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"2:50012:2469":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"17:13539:6691":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"2:23396:3524":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"17:10988:8442":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"17:11579:6208":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"1:11188:3832":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"2:8167:3323":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"12:895:4595":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"1:10650:3422":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"2:37894:2788":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"1:1645:3634":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"16:5516:4942":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"2:32592:58922":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"1:15760:2286":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"17:10455:5123":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"2:52091:8253":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:46966:3345":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"6:1740:7417":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"16:4271:6844":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"1:11876:1963":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"1:10658:3424":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"1:2441:5885":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"16:6026:4696":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"1:4511:3414":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"17:12026:6289":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"5:1751:194":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"17:9240:5033":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"6:626:7279":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"2:49047:2420":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"16:6557:4783":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"17:12130:6310":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"1:0:1334":{"crate_id":1,"path":["std"],"kind":"module"},"16:3576:6022":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"18:820:5153":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:5248:3165":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"1:6486:7984":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"17:8849:5079":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"1:11341:3679":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"12:952:3629":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"2:24139:4235":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"2:49633:2880":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:1622:3632":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"2:47867:188":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"17:13306:6629":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"6:1600:7329":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"6:586:7258":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"2:50287:3970":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"17:10266:5104":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"2:10554:2506":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"17:8929:46577":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"6:527:7224":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"1:8076:3767":{"crate_id":1,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"1:14927:3652":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"17:13660:6747":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"12:928:3624":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"16:7449:4709":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"17:11474:6185":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"2:32544:1729":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"6:161:39387":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:10546:2507":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:8261:202":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"17:11563:6207":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"1:10356:3742":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"17:9920:5834":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"2:51755:4061":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"6:5433:7877":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"1:10954:3554":{"crate_id":1,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"2:10483:2025":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"1:1041:3535":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"1:7042:8499":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:47782:1699":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"1:8626:8500":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"2:51300:8248":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:5526:3540":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"6:4296:7611":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"9:686:4471":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"2:47816:2608":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"1:9553:5295":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockReadGuard"],"kind":"struct"},"17:12348:6358":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"16:3265:4971":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"6:4081:7549":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"2:10552:2505":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"5:4017:3585":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"17:9539:5080":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"1:7719:8575":{"crate_id":1,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"1:6746:3517":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"1:4234:3433":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"17:10975:5857":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"16:7110:4794":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"1:11844:5353":{"crate_id":1,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"17:13953:6814":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"1:3112:3791":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:53335:4043":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"2:46587:4310":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:23019:3998":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"1:1190:8572":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"5:383:4403":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"6:6671:8087":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"16:5698:4760":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"2:52585:4042":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"17:13747:6763":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"17:11653:6212":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"5:6340:4372":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"1:14350:3778":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"17:10788:8435":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"12:933:3627":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"6:5149:7722":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:23121:3524":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"17:10390:5102":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"17:9291:6090":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"1:894:3745":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"2:51476:4060":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:5737:3888":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"2:46239:1723":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"17:9676:60693":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"2:23733:4003":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"2:12198:2877":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"1:8590:162":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"17:11822:6258":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"17:13345:6639":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"17:13180:6601":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"2:14390:201":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"17:12406:6370":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"5:5861:5253":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"2:46113:196":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:11450:3685":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"6:5331:7828":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"2:49623:2879":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"12:162:4607":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"2:50485:3647":{"crate_id":2,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"16:6141:4772":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"2:53619:5466":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:2405:5884":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"17:10801:5053":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"2:3154:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"17:10516:6102":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"5:8224:1595":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"17:13817:6787":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"16:5362:4745":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"1:10493:4445":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"6:4148:7582":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"5:8254:1594":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"1:696:3741":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:46886:3352":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"2:49503:2871":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"6:6665:8085":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"16:6342:4777":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"2:49977:2473":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"17:11409:6165":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"2:4823:3909":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"12:1666:4616":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"2:46858:3342":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:8712:1974":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:49063:2419":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"17:542:4673":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"1:10895:3350":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"9:1056:4533":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"1:11086:53347":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"2:3430:2379":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"2:2248:2984":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"2:11652:2480":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"5:2328:4439":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"16:6533:4992":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"2:52303:4058":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"17:13595:6703":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"1:14699:5305":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"17:9206:46583":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"1:15093:3819":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:49781:2482":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"2:49298:2865":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"17:10082:5132":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"2:51993:4030":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"17:12770:6435":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"16:6490:4781":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"1:12004:3858":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"17:13763:6767":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"17:11102:46585":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"18:720:6004":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"2:51871:4037":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"17:10039:8426":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"2:52225:4070":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"2:3600:131":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"5:8270:4331":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"16:6173:4773":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:46271:2403":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"5:4765:5258":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"17:11725:6227":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"9:1075:4541":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"2:23202:3568":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"2:53718:8301":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"6:4538:7718":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"6:1721:7411":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"7:38:44248":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"18:704:6002":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"6:6016:7960":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"17:10831:5106":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"17:12282:6333":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"6:1526:7288":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:23072:4075":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"17:13975:6820":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"17:11701:6225":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"6:1748:7421":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"6:4379:7654":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"5:6739:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"16:3129:4975":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"1:9254:9269":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"1:12009:3727":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"9:692:4473":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"2:13059:4207":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"17:9326:5119":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"12:1203:4605":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"17:9873:5833":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"1:1527:3630":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"16:5326:4743":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"9:41:4523":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"5:3948:3424":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"1:6484:7982":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"6:607:7269":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"2:3467:2392":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"5:984:4341":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:53756:8303":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"17:9160:5082":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"1:14358:129":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"2:14077:57971":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:13536:3713":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"1:1475:1595":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"2:4835:102":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"1:5715:3886":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"1:14816:5522":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"16:3686:6839":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"16:6630:4997":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"5:7473:1594":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"5:5976:1343":{"crate_id":5,"path":["alloc","str"],"kind":"module"},"2:4811:3908":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:15745:2274":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"17:13755:6766":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"6:5301:7805":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"1:4063:3437":{"crate_id":1,"path":["std","io","readbuf","ReadBuf"],"kind":"struct"},"5:6851:3399":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"2:49683:2467":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"1:1533:3631":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"2:47228:3327":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"18:729:60700":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"16:5941:4767":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:47943:178":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"2:56166:4080":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"17:11181:6155":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"1:15249:4634":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"2:3637:2407":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"15:248:4626":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"1:4504:3411":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"2:47026:3347":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:24334:8130":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"5:4709:5258":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"6:4012:7519":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:52461:4050":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"16:7051:4789":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"12:1147:3634":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"16:7379:4723":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"17:12700:6418":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"6:6856:8097":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"1:14835:3618":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"6:580:7255":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:3890:2410":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"16:5238:45001":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"1:11884:3606":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"2:48750:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"1:10846:3325":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"1:4273:3429":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"5:4281:1595":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"1:10217:5298":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"2:47875:205":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"5:6759:4383":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"17:13196:6604":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"1:11837:56728":{"crate_id":1,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"5:5948:5262":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"2:49917:2476":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"17:8954:5060":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"1:1075:3581":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"17:13917:6810":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"16:7355:4701":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"17:12015:6288":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"2:46985:3360":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"2:46129:194":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"17:9131:46582":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"1:10931:3553":{"crate_id":1,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"17:9517:2185":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"6:5426:7876":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:24758:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"5:844:223":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"16:4775:6859":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"5:777:8473":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"17:2512:5093":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:46617:4305":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"6:1733:3833":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"1:15749:2277":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:52799:4051":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"2:46696:4114":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"5:8455:216":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"17:13323:6634":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"6:6214:8056":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"3:0:431":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"16:7025:4692":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"5:1701:3622":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"2:46727:4262":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"9:776:4520":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"1:5984:3837":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"2:49578:2862":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"3:321:205":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"2:49521:2874":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"17:13887:6802":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"16:6858:5005":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"18:866:5157":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"5:1740:3626":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"17:13247:6617":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"1:13177:3834":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"2:48388:4266":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"17:9259:6088":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"2:22849:59215":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"16:6949:5009":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"17:10962:8441":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"2:39086:4445":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"1:10382:3765":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"2:14426:141":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"1:7228:185":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:3495:2394":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"16:3199:4968":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"5:1518:3634":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"2:7906:2226":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:10918:2479":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:13321:2455":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"8:0:2245":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"17:13404:6650":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"6:4526:7713":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"5:1072:1963":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"2:46670:4308":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"12:880:3585":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"2:50005:2461":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"5:3366:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"12:1703:4618":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"1:10733:3723":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"18:790:5150":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:10738:3425":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"2:3836:3912":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"17:10545:5844":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"2:48835:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"5:8291:1594":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"17:13557:6695":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"16:5668:4758":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"16:7281:4705":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"16:7768:4707":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"1:15765:2291":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"17:11615:5435":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"1:1491:3624":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"15:230:4625":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"5:8356:3639":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"1:1496:3625":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"2:3597:130":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"17:11530:6200":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"2:22851:59212":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"17:11212:5083":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"2:9127:3285":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"6:4474:7692":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"1:8477:3848":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"2:10821:2417":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:2370:601":{"crate_id":1,"path":["std","env"],"kind":"module"},"2:49613:2881":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"9:963:4538":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"17:13840:6788":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"16:5902:4765":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"2:48524:2507":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"2:2842:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"16:5303:4742":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"1:7416:3700":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"17:1236:5838":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"6:6937:8107":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"16:7295:4706":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"6:4160:7591":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"1:6648:3520":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"16:7684:4711":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:9503:2612":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:9421:5294":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"16:5289:4699":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"2:3388:2533":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"1:10966:3555":{"crate_id":1,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"17:11457:6180":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"16:6331:4622":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"1:10587:3549":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"2:56562:237":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:46312:3163":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"2:3518:2399":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:10634:118":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"1:3793:3725":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"1:2174:3585":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"16:6931:5008":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"2:3085:3524":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"2:50341:2485":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"17:11282:46586":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"1:5504:3537":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"2:52649:4027":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:6472:3540":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"17:9466:6094":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"1:4163:3806":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"2:3164:228":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"17:13899:6804":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:47016:3363":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"5:8372:101":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"5:853:108":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"2:11404:2479":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:11597:2882":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"5:3104:2414":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"1:10167:8512":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"2:47057:3366":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"6:4116:7568":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"17:11671:6221":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"5:3106:8117":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"17:12093:6305":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"6:5240:7774":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"17:12758:6428":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"16:7264:194":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"1:3419:5277":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"16:7238:4720":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:23145:4002":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"17:12557:6392":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"1:14325:3549":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"2:47235:3136":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"2:3454:2386":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:14790:53350":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"1:15710:9040":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"9:234:4498":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"17:10610:5849":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"2:48136:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:10728:3722":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"16:6075:4700":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"17:11354:5055":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:50144:3965":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"17:10949:5856":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"6:4440:7677":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:37870:178":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:3365:2041":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"2:6687:3344":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:5520:3539":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"5:3114:8592":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"1:2698:179":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"17:13167:6596":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"17:13463:6669":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"2:48510:2500":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"17:10503:5125":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"6:1680:7387":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"1:4486:2025":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"16:7200:4718":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"2:24210:4237":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"17:11514:6196":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"1:5766:3892":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"17:12250:6326":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:8844:157":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:11524:2885":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"5:4665:5256":{"crate_id":5,"path":["alloc","collections","vec_deque","spec_extend","spec_extend","WrapAddOnDrop"],"kind":"struct"},"17:0:2253":{"crate_id":17,"path":["object"],"kind":"module"},"17:10775:5850":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"2:46790:5269":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"6:5439:7880":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"6:88:39320":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"6:1576:7312":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:4144:2520":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"2:3231:115":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"17:10558:8432":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"17:11603:5439":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"17:12731:6424":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"18:152:5820":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"17:1311:5139":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:10688:8485":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"16:0:2252":{"crate_id":16,"path":["gimli"],"kind":"module"},"2:50659:4224":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:50464:121":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"9:900:7190":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"12:2398:5693":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:2946:184":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"6:5478:7890":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"2:8419:3328":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"2:4753:3399":{"crate_id":2,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"17:9836:60691":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"17:13584:6702":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"6:1694:7398":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:10482:205":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"1:11364:3680":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"17:607:8424":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"17:13721:6754":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"16:6717:4786":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"16:2772:4986":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"1:8268:3607":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"17:13016:6540":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"6:6114:7995":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:46820:2862":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"17:12383:6369":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"15:0:2251":{"crate_id":15,"path":["addr2line"],"kind":"module"},"2:3357:106":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"2:53654:5467":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"17:2543:5121":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"17:11381:6161":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"2:49055:8237":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:1462:3623":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"16:5869:189":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"1:9381:5293":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"2:50452:4218":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"5:7351:5253":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"2:51370:4047":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2:46597:4311":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"17:10028:5836":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"2:9504:2611":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"2:5268:2537":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"5:1626:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"2:7992:3349":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"2:24476:8147":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:15743:2272":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"5:1909:5253":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"2:8097:3942":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"6:5216:7765":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"16:7471:4697":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"17:10364:5096":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"5:1502:3632":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"5:5609:4383":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"2:5122:4150":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:8695:3136":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"9:996:4539":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"6:5274:7798":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"2:46946:3367":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"16:5498:4752":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"2:2166:579":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"1:10925:2472":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"17:11945:6277":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"6:1727:7414":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"6:1621:7343":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"1:14975:3661":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"1:7762:5279":{"crate_id":1,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"5:7874:235":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"1:8197:4429":{"crate_id":1,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"2:51525:4048":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"16:5855:4764":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"5:1729:3625":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"1:5560:3536":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"9:749:4475":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"16:4573:6852":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"1:1431:1966":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"17:10211:5840":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"18:801:5151":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"1:11814:3708":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"5:8215:4343":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"2:10777:142":{"crate_id":2,"path":["core","hash","macros","Hash"],"kind":"proc_derive"},"5:8209:1594":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"1:15763:2289":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"6:6914:8101":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"18:661:5164":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:52044:8252":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2:3436:2382":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"6:6908:8100":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"16:7702:4710":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"6:6135:8002":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"6:513:5870":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"9:809:3679":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"2:50093:3958":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"2:49531:2872":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:9520:3814":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"2:56601:237":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:15762:2288":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"17:11130:6151":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"5:1533:3633":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"12:869:1595":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"17:11784:6250":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"1:13711:3705":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"17:11013:5859":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"10:0:2247":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"4:0:2244":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"1:820:5297":{"crate_id":1,"path":["std","thread","local","os","Key"],"kind":"struct"},"2:13530:109":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:11433:1963":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"12:1784:5251":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"16:6060:4740":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"14:47:8468":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"17:10913:5853":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"6:4446:7680":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:49731:2478":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"17:10622:6103":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"1:5582:3544":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"6:6097:7990":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"1:13689:8578":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"2:12742:4319":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"12:353:5863":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"17:12143:6110":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"1:12160:5886":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"5:5910:2459":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"17:12117:6307":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"1:11962:3613":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"16:2981:4974":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"12:2269:3633":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2:3425:2380":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"17:510:8423":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"17:12183:6317":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"5:8549:4369":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"17:12620:6410":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"2:39090:3350":{"crate_id":2,"path":["core","error","Chain"],"kind":"struct"},"2:3853:2409":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"17:11968:6282":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"2:50130:3962":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"2:53599:5455":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"17:3743:5050":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"17:13271:6619":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:4078:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"6:672:39719":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"1:14556:3580":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"16:4689:6856":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"1:7579:3709":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"6:4075:7546":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:49294:4321":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"2:50236:3968":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"16:7247:4734":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"1:2035:145":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"17:10660:46768":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:48531:2508":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:1504:3627":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"6:4485:7698":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"16:3155:4966":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"2:8403:5882":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"6:6129:8001":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"12:114:5862":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"17:11890:6260":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"6:4061:7538":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"5:3825:1963":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"5:7736:4373":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"2:50440:4215":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"17:13961:6817":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"16:4495:6851":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"16:6504:4782":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"1:15761:2287":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"18:896:5159":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"12:2404:60685":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"1:13323:5885":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"16:3743:6840":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"16:6595:4714":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"1:3322:3420":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"16:6089:4769":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"2:46357:4090":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:23261:4000":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"17:10464:5122":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"6:6205:8053":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:14329:3956":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"6:4315:7619":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:49713:2479":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"6:5311:7812":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:12499:5302":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"1:14778:3707":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2:10542:2501":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"1:3841:127":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"2:1923:1582":{"crate_id":2,"path":["core","mem"],"kind":"module"},"9:157:4490":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"1:5574:3542":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"1:13989:3433":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"2:24038:3524":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"17:12543:6390":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"1:2167:1594":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"2:46173:198":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"17:12716:6420":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"2:11638:2481":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:3583:1724":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"16:5412:4748":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"16:7100:4793":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"2:24358:4135":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:2170:1595":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"2:3420:2383":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"2:46896:3353":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"17:11591:6211":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"17:10223:5038":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"17:10048:8427":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"16:5745:4762":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:2173:2432":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"12:183:4611":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"1:4197:3432":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"16:547:4944":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"2:2867:104":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:14223:57969":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"2:6870:58135":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"1:6577:3515":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"2:13312:2453":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"2:5184:4155":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"16:7079:4791":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"17:12455:6377":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"16:6035:4739":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"18:849:5155":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"1:15715:11254":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"1:13784:3704":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"12:940:3628":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"1:3409:3421":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"6:4287:7606":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"2:23198:3524":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"17:10136:5833":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"6:4321:7622":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"6:4088:7552":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:7464:3703":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"17:11769:6244":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"6:5447:7882":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:50298:3971":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"2:48262:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"6:6268:8078":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"16:5887:4949":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"2:4459:1594":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"16:3297:5024":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"6:5541:7903":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"17:10874:6138":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"1:1157:11253":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"1:3084:2956":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"2:53505:4046":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"5:8419:4422":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"6:5405:7863":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"17:12442:6375":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:13302:2460":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"16:3007:4964":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"1:2191:3588":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"16:6433:4779":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"16:5460:4751":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"1:6224:3515":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"2:3818:2404":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:51969:4029":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:46609:2471":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:10156:6159":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"2:57876:8311":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"1:13992:3429":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"5:8297:1594":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"12:2072:3589":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"17:11810:6255":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"16:5566:4754":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"1:2464:5886":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"1:11800:3707":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"1:4429:3407":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"2:3359:220":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"2:50161:3966":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"17:13233:6613":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"2:53147:4039":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"2:49863:2474":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"17:12496:6383":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"6:6954:8112":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"1:11930:3611":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"2:2262:3953":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"6:4425:7670":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"17:9361:6091":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"1:1149:8492":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"16:7155:4798":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"2:48783:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"12:472:5867":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"17:13472:6672":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"1:15131:3820":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"13:121:44897":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"16:6907:4787":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"12:466:5866":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"5:5488:3399":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"18:668:5165":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"16:4316:6845":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"17:9275:6089":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"6:4038:7530":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"16:7309:4704":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"1:13986:3431":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"17:10899:8436":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"6:5366:7849":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:50460:4213":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"5:3838:1966":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"16:3029:4965":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"6:4346:7634":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:10816:2416":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:49699:2185":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"17:10643:6105":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"2:5194:3163":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"2:3489:2393":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"2:24302:4140":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:10862:3410":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"6:3981:7501":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"1:10577:3576":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"14:231:4327":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"2:49835:2480":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"16:6310:4776":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"1:12057:3645":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"16:7868:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"2:50021:2470":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"6:1567:7306":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:47968:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"6:5229:7766":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:2748:580":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:2895:416":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"6:4308:7618":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"17:13037:6549":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"5:5166:661":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"1:4495:9278":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"1:15747:2275":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"2:51494:8249":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:15214:8361":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"17:12921:6457":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"6:1626:7345":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"6:4516:7708":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"0:0:1587":{"crate_id":0,"path":["arrayvec"],"kind":"module"},"1:1510:3628":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"17:12482:6380":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"6:5247:7778":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:10473:12256":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"1:11122:3821":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"9:469:9022":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"2:3148:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"1:4848:3698":{"crate_id":1,"path":["std","net","ip","display_buffer","IpDisplayBuffer"],"kind":"struct"},"17:9646:60692":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"17:12237:6325":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"16:5998:4719":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"17:10598:8434":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"12:1256:3635":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"2:46867:3343":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"16:3366:4977":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"1:10853:3436":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"2:51454:4056":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"16:5959:4691":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"1:10367:53336":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"2:24857:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"16:2792:4686":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"2:3603:132":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"6:6902:8099":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"17:13938:6813":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"1:6246:3512":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"6:4127:7573":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"2:51923:4044":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"5:2843:4441":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"2:25088:164":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"2:3375:2532":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"14:250:7091":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"2:49604:2878":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"17:9756:60695":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"1:15758:2284":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"5:3402:3587":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"18:837:2455":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"18:766:6013":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"1:15768:2294":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"1:10377:3751":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"2:3513:2398":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:5432:3579":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:3462:2387":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:15750:2278":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"17:11017:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"5:5906:2458":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:3807:225":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:11774:181":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"2:12165:2876":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"6:1669:7379":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:50689:3949":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"2:32644:58920":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"1:11768:3704":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"1:4402:3399":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"5:8466:4324":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"1:2403:5883":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"5:3905:5253":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:3655:2400":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"1:1305:143":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:22817:59187":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"2:46743:4263":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"2:3484:2391":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"17:11713:6226":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"1:6344:3532":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"2:14042:150":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"6:593:7261":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"17:13094:6584":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"2:10004:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:22804:2788":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"17:13361:6642":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"1:11898:3609":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"17:11640:5440":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"16:5273:6089":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"6:1588:7321":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:49102:8242":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:14569:3708":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"1:15769:2295":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"2:23357:16434":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"16:5374:4746":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"12:856:3623":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"5:4308:5253":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"2:47807:1594":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"14:0:2250":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"2:49763:2483":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"6:5982:7941":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"16:4871:6862":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"17:12262:6327":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2:48178:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:14969:3660":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"1:5570:3541":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"17:13129:6585":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"16:5257:6088":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"6:4218:7595":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"16:2937:4985":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"17:9716:60687":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"2:52145:8255":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:4195:3431":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"2:24483:4292":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:12497:3776":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"1:6482:7980":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"16:3051:5022":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"1:8847:3854":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"2:13241:2053":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"6:157:39386":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"2:52539:4038":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"5:1673:1966":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2:12983:4204":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"6:4277:7599":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"6:6034:7969":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:46937:3357":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"2:4:981":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"17:10015:8425":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"2:51825:4049":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"17:13369:6644":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"2:50030:2471":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:47262:3334":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:10874:3412":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"5:3407:4334":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"17:13774:6771":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"1:7714:3766":{"crate_id":1,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"6:4332:7628":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"6:4373:7651":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"5:5682:1312":{"crate_id":5,"path":["alloc","slice"],"kind":"module"},"1:12038:3644":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"2:51346:4055":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:46876:3351":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"18:712:2788":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"6:3896:7442":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:53733:8302":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"12:2045:3585":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"17:10814:5054":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"5:1710:3623":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:56588:237":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"6:521:7221":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"18:739:8420":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"12:2052:3586":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"17:12660:6413":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"1:4157:3804":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"5:7306:1595":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"1:1152:8494":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"16:6468:4780":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"2:22872:59214":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"5:7918:1882":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"16:4840:6861":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:49552:2864":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:49512:2870":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"17:12048:6298":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"16:6604:4784":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"14:11:8468":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"16:6159:4703":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"6:4005:7515":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"16:6873:2608":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"1:5161:3820":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"16:5639:4756":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"2:51577:4040":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"5:6498:224":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"11:54:4593":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"5:1719:3624":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"2:46278:2514":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"17:13735:6760":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"16:3908:6842":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"17:13377:6646":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"5:3105:59355":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"1:5867:3829":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"2:25022:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"6:3920:7460":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"16:7792:4737":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"2:50308:3972":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:14864:8358":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"6:6943:8108":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"14:189:8468":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"5:1296:4437":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"17:12527:6389":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"5:8449:8121":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"1:2163:1963":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"1:7436:3701":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"6:6080:7988":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:23407:4000":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"6:6967:8113":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"6:6896:8098":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:4275:3430":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"5:1276:4436":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"1:1418:1963":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"5:5388:200":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"16:7141:4797":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"1:11066:8326":{"crate_id":1,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"1:10642:3798":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:10215:4188":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"6:4048:7533":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:46195:197":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"6:4410:7666":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:3442:2381":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"2:24923:3770":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"16:5649:4757":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"2:10550:189":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"17:10340:5098":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"17:12222:6322":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"2:46715:4261":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"2:51777:4064":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"2:49541:2873":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"2:11666:2884":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:8639:136":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:49452:4202":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"2:46905:3354":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"6:6027:7965":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:46845:3350":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"16:7323:4722":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"6:5178:7746":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"6:4509:7705":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"5:8200:2861":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"2:56575:237":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"6:1764:7426":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:2198:1052":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"6:4055:7536":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"1:10980:3557":{"crate_id":1,"path":["std","net","ip","IpAddr"],"kind":"enum"},"1:7814:3767":{"crate_id":1,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"2:47934:1594":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"1:12019:3618":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"1:4160:3805":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"2:14339:4225":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"1:15759:2285":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"2:11447:2463":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:11128:3822":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"17:13873:6795":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"6:5974:7936":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"16:3314:4951":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"17:13029:6547":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"5:1152:5253":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"17:13352:6641":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"2:51555:4036":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"17:12003:6286":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"17:13257:6618":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:52615:4045":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"17:12573:6396":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"2:56536:237":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:11742:6235":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"2:14153:8486":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"18:857:5156":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"9:603:9032":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:21:673":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"1:8961:8500":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"1:8712:3866":{"crate_id":1,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"16:7090:4792":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"1:10582:3776":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"1:14683:5304":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"16:2861:4961":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"5:2396:4438":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"2:52122:8254":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"2:46573:4112":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:48052:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"16:6643:4998":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"1:14798:3644":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"1:3086:3781":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"6:6979:8115":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"17:12318:6339":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"17:12170:6315":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"2:46530:2470":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"2:49935:2477":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"6:5998:7953":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"6:5186:7748":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"16:7754:4803":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"1:11985:3853":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"17:13073:6579":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"17:10166:6100":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"1:5158:3819":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"2:46928:3356":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"6:4340:7632":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"18:744:60698":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"5:8477:4325":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"2:49987:2464":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:3474:2389":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"2:14118:187":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"17:10104:5134":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"17:9587:60696":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"16:2905:4962":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"6:4256:7598":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:23932:3569":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:15748:2276":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"17:294:8421":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"17:11433:6179":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"1:10604:3550":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"16:5396:4747":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"6:4270:3839":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"2:51595:8250":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:24393:8136":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:24890:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:11133:3823":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"17:681:6159":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"2:51679:4069":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:14705:5306":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"17:13507:6683":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"2:50321:2484":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"1:10489:8504":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"16:7063:4790":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"1:7119:186":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"12:2066:3588":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"2:22832:59187":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"17:13147:6590":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"6:3987:7503":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:5753:3891":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"17:9796:60690":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"2:2936:177":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"1:14552:8504":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"16:7208:4799":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"6:3972:7496":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"17:13331:6637":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"2:3446:2384":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"17:13549:6694":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"2:48887:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"17:13794:6774":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"1:11020:3559":{"crate_id":1,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"17:4008:5852":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:47918:1963":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"1:3100:3785":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"1:11003:3558":{"crate_id":1,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"2:50432:4214":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:4447:3409":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"6:4020:7521":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"1:11273:2600":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"1:2695:180":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"17:10198:8428":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"2:3479:2390":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2:50701:3947":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"1:14872:3715":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"5:4372:1966":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"17:12157:6314":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"18:169:5823":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:56523:237":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:9988:46630":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"16:7782:4708":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"}},"external_crates":{"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":18}