{"root":"0:0:1641","crate_version":"0.7.2","includes_private":false,"index":{"b:5:5643-0:536:1646":{"id":"b:5:5643-0:536:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9150:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2689:2491","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5641:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["5:5645:1449"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:448:844":{"id":"0:448:844","crate_id":0,"name":"lt","span":{"filename":"src/array_string.rs","begin":[537,4],"end":[537,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8252:2647-0:528:1645":{"id":"a:2:8252:2647-0:528:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8252:2647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:407":{"id":"0:407","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[460,0],"end":[465,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2310:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"primitive":"str"},"items":["0:409:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:397:552":{"id":"0:397:552","crate_id":0,"name":"deref","span":{"filename":"src/array_string.rs","begin":[426,4],"end":[431,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2546-0:50:1647":{"id":"b:2:2546-0:50:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2520:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2516:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2549:128","2:2550:1472"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:312":{"id":"0:312","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1165,0],"end":[1167,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsMut","id":"2:2507:74","args":{"angle_bracketed":{"args":[{"type":{"slice":{"generic":"T"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:315:2081"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12125:34445":{"id":"2:12125:34445","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11878:419","self::pattern":"2:11715:2509"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:469:128":{"id":"0:469:128","crate_id":0,"name":"Error","span":{"filename":"src/array_string.rs","begin":[621,4],"end":[621,40]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}}}}},"2:12081:28480":{"id":"2:12081:28480","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:11878:419","str::splitn":"2:12078:28478","self::pattern":"2:11715:2509"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43453:2529","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11720:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11735:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:304":{"id":"0:304","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1157,0],"end":[1159,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2243:98","args":{"angle_bracketed":{"args":[{"type":{"slice":{"generic":"T"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:307:2080"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:320":{"id":"0:320","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1173,0],"end":[1178,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2587:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:323:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:70:1841":{"id":"0:70:1841","crate_id":0,"name":"is_full","span":{"filename":"src/arrayvec.rs","begin":[146,4],"end":[146,73]},"visibility":"public","docs":"Return true if the `ArrayVec` is completely filled to its capacity, false otherwise.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::<_, 1>::new();\nassert!(!array.is_full());\narray.push(1);\nassert!(array.is_full());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:73:1773":{"id":"0:73:1773","crate_id":0,"name":"try_push","span":{"filename":"src/arrayvec.rs","begin":[201,4],"end":[203,5]},"visibility":"public","docs":"Push `element` to the end of the vector.\n\nReturn `Ok` if the push succeeds, or return an error if the vector\nis already full.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::<_, 2>::new();\n\nlet push1 = array.try_push(1);\nlet push2 = array.try_push(2);\n\nassert!(push1.is_ok());\nassert!(push2.is_ok());\n\nassert_eq!(&array[..], &[1, 2]);\n\nlet overflow = array.try_push(3);\n\nassert!(overflow.is_err());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["element",{"generic":"T"}]],"output":{"resolved_path":{"name":"Result","id":"2:41512:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12013":{"id":"2:12013","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12014:811","2:12015:1832","2:12016:2207","2:12017:34424","2:12019:34425","2:12022:28279","2:12023:34426","2:12024:314","2:12025:1768","2:12026:28440","2:12028:28441","2:12030:28442","2:12032:28443","2:12034:34427","2:12035:34428","2:12036:28465","2:12037:28466","2:12038:2198","2:12039:7502","2:12040:3800","2:12041:31373","2:12042:31361","2:12043:4439","2:12044:34429","2:12045:31356","2:12046:3130","2:12049:28482","2:12052:28483","2:12055:2864","2:12059:2829","2:12063:26496","2:12066:28474","2:12069:28476","2:12072:34430","2:12075:34431","2:12078:28478","2:12081:28480","2:12084:34432","2:12087:34433","2:12090:2288","2:12093:34434","2:12096:34435","2:12099:34436","2:12102:34437","2:12104:34438","2:12106:34439","2:12108:34440","2:12109:34441","2:12110:34442","2:12113:34443","2:12116:25909","2:12119:28484","2:12122:34444","2:12125:34445","2:12128:34446","2:12131:34447","2:12133:28369","2:12134:28370","2:12135:28372","2:12136:28373","2:12137:28374","2:12138:34448","2:12140:9075","2:12141:34449"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:115:1997":{"id":"0:115:1997","crate_id":0,"name":"into_inner_unchecked","span":{"filename":"src/arrayvec.rs","begin":[664,4],"end":[669,5]},"visibility":"public","docs":"Return the inner fixed size array.\n\nSafety:\nThis operation is safe if and only if length equals capacity.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"array":{"type":{"generic":"T"},"len":"CAP"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2739:2567-0:50:1647":{"id":"a:2:2739:2567-0:50:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2739:2567","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2739:2567","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:66:941":{"id":"0:66:941","crate_id":0,"name":"new_const","span":{"filename":"src/arrayvec.rs","begin":[96,4],"end":[99,5]},"visibility":"public","docs":"Create a new empty `ArrayVec` (const fn).\n\nThe maximum capacity is given by the generic parameter `CAP`.\n\n```\nuse arrayvec::ArrayVec;\n\nstatic ARRAY: ArrayVec<u8, 1024> = ArrayVec::new_const();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:459":{"id":"0:459","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[554,0],"end":[559,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2346:182","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:461:430"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12106:34439":{"id":"2:12106:34439","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:217":{"id":"0:217","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[937,0],"end":[937,72]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2682:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2682:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:371:2143":{"id":"0:371:2143","crate_id":0,"name":"from_byte_string","span":{"filename":"src/array_string.rs","begin":[120,4],"end":[130,5]},"visibility":"public","docs":"Create a new `ArrayString` from a byte string literal.\n\n**Errors** if the byte string literal is not valid UTF-8.\n\n```\nuse arrayvec::ArrayString;\n\nlet string = ArrayString::from_byte_string(b\"hello world\").unwrap();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["b",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"array":{"type":{"primitive":"u8"},"len":"CAP"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41512:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Utf8Error","id":"2:43275:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8252:2647-0:205:1649":{"id":"a:2:8252:2647-0:205:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8253:2646","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8252:2647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:386:1780":{"id":"0:386:1780","crate_id":0,"name":"truncate","span":{"filename":"src/array_string.rs","begin":[336,4],"end":[347,5]},"visibility":"public","docs":"Shortens this `ArrayString` to the specified length.\n\nIf `new_len` is greater than the string’s current length, this has no\neffect.\n\n***Panics*** if `new_len` does not lie on a `char` boundary.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<6>::from(\"foobar\").unwrap();\nstring.truncate(3);\nassert_eq!(&string[..], \"foo\");\nstring.truncate(4);\nassert_eq!(&string[..], \"foo\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["new_len",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5398:35102":{"id":"5:5398:35102","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7254:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7254:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:527-0:205:1649":{"id":"0:527-0:205:1649","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[59,46],"end":[59,51]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::arrayvec::Drain","name":"Drain","id":"0:205:1649","glob":false}}},"0:159:1758":{"id":"0:159:1758","crate_id":0,"name":"Item","span":{"filename":"src/arrayvec.rs","begin":[804,4],"end":[804,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}}},"0:76:1779":{"id":"0:76:1779","crate_id":0,"name":"clear","span":{"filename":"src/arrayvec.rs","begin":[250,4],"end":[252,5]},"visibility":"public","docs":"Remove all elements in the vector.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:68:1832":{"id":"0:68:1832","crate_id":0,"name":"is_empty","span":{"filename":"src/arrayvec.rs","begin":[123,4],"end":[123,60]},"visibility":"public","docs":"Returns whether the `ArrayVec` is empty.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1]);\narray.pop();\nassert_eq!(array.is_empty(), true);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2536-0:50:1647":{"id":"b:2:2536-0:50:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2513:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2510:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2539:2824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:110:1928":{"id":"0:110:1928","crate_id":0,"name":"drain","span":{"filename":"src/arrayvec.rs","begin":[600,4],"end":[625,5]},"visibility":"public","docs":"Create a draining iterator that removes the specified range in the vector\nand yields the removed items from start to end. The element range is\nremoved even if the iterator is not consumed until the end.\n\nNote: It is unspecified how many elements are removed from the vector,\nif the `Drain` value is leaked.\n\n**Panics** if the starting point is greater than the end point or if\nthe end point is greater than the length of the vector.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut v1 = ArrayVec::from([1, 2, 3]);\nlet v2: ArrayVec<_, 3> = v1.drain(0..2).collect();\nassert_eq!(&v1[..], &[3]);\nassert_eq!(&v2[..], &[1, 2]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["range",{"generic":"R"}]],"output":{"resolved_path":{"name":"Drain","id":"0:205:1649","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RangeBounds","id":"2:3076:1784","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12025:1768":{"id":"2:12025:1768","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:11895:1493"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:174:784":{"id":"0:174:784","crate_id":0,"name":"into_iter","span":{"filename":"src/arrayvec.rs","begin":[840,4],"end":[842,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"IntoIter","id":"0:175:1648","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2249-0:205:1649":{"id":"b:2:2249-0:205:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2689:2491","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2243:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2251:2080"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:390:316":{"id":"0:390:316","crate_id":0,"name":"as_str","span":{"filename":"src/array_string.rs","begin":[404,4],"end":[406,5]},"visibility":"public","docs":"Return a string slice of the whole `ArrayString`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5399:35103":{"id":"5:5399:35103","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:280:2506","`String`":"5:7254:224"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:280:2506","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7003:2888","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7254:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:155":{"id":"0:155","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[803,0],"end":[807,1]},"visibility":"default","docs":"Iterate the `ArrayVec` with references to each element.\n\n```\nuse arrayvec::ArrayVec;\n\nlet array = ArrayVec::from([1, 2, 3]);\n\nfor elt in &array {\n    // ...\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7205:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}},"items":["0:159:1758","0:160:1648","0:161:784"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:78:1886":{"id":"0:78:1886","crate_id":0,"name":"insert","span":{"filename":"src/arrayvec.rs","begin":[280,4],"end":[282,5]},"visibility":"public","docs":"Insert `element` at position `index`.\n\nShift up all elements after `index`.\n\nIt is an error if the index is greater than the length or if the\narrayvec is full.\n\n***Panics*** if the array is full or the `index` is out of bounds. See\n`try_insert` for fallible version.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::<_, 2>::new();\n\narray.insert(0, \"x\");\narray.insert(0, \"y\");\nassert_eq!(&array[..], &[\"y\", \"x\"]);\n\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}],["element",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:311:315":{"id":"0:311:315","crate_id":0,"name":"as_ref","span":{"filename":"src/arrayvec.rs","begin":[1162,4],"end":[1162,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"generic":"T"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2249-0:536:1646":{"id":"b:2:2249-0:536:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2689:2491","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2243:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2251:2080"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:141":{"id":"0:141","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[750,0],"end":[761,1]},"visibility":"default","docs":"Create an `ArrayVec` from an array.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3]);\nassert_eq!(array.len(), 3);\nassert_eq!(array.capacity(), 3);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2513:133","args":{"angle_bracketed":{"args":[{"type":{"array":{"type":{"generic":"T"},"len":"CAP"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:145:694"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12063:26496":{"id":"2:12063:26496","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:11715:2509","`DoubleEndedIterator`":"2:7243:121","prim@char":"1:11878:419","str::split_whitespace":"2:12041:31373","str::rsplit":"2:12069:28476"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43331:2528","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2246-0:205:1649":{"id":"b:2:2246-0:205:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2689:2491","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2240:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2248:1785"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:185:2031":{"id":"0:185:2031","crate_id":0,"name":"size_hint","span":{"filename":"src/arrayvec.rs","begin":[867,4],"end":[870,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"2:41368:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2699:228-0:175:1648":{"id":"a:2:2699:228-0:175:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2699:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2699:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1648","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:221":{"id":"0:221","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[939,0],"end":[953,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["max","is_sorted","array_chunks","find_map","zip","try_fold","by_ref","map_while","filter","gt","nth","max_by","is_sorted_by","sum","try_find","size_hint","try_for_each","try_collect","scan","filter_map","take","step_by","collect","ge","max_by_key","is_sorted_by_key","product","rposition","fold","collect_into","flat_map","enumerate","chain","lt","__iterator_get_unchecked","cmp_by","unzip","reduce","cmp","partition","eq","flatten","peekable","position","intersperse","min","next_chunk","cloned","min_by","partial_cmp_by","count","copied","try_reduce","partition_in_place","fuse","skip_while","all","intersperse_with","skip","last","rev","partial_cmp","ne","min_by_key","eq_by","cycle","any","find","is_partitioned","le","inspect","take_while","map","for_each","advance_by"],"trait":{"name":"Iterator","id":"2:7321:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:225:1758","0:226:953","0:228:2031"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:366:939":{"id":"0:366:939","crate_id":0,"name":"new","span":{"filename":"src/array_string.rs","begin":[62,4],"end":[67,5]},"visibility":"public","docs":"Create a new empty `ArrayString`.\n\nCapacity is inferred from the type parameter.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<16>::new();\nstring.push_str(\"foo\");\nassert_eq!(&string[..], \"foo\");\nassert_eq!(string.capacity(), 16);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:551:430":{"id":"0:551:430","crate_id":0,"name":"cmp","span":{"filename":"src/errors.rs","begin":[8,26],"end":[8,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30835:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:160:1648":{"id":"0:160:1648","crate_id":0,"name":"IntoIter","span":{"filename":"src/arrayvec.rs","begin":[805,4],"end":[805,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Iter","id":"2:9964:2022","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}}}}},"0:235":{"id":"0:235","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[966,0],"end":[966,76]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:7266:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:61":{"id":"0:61","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[63,0],"end":[703,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:65:939","0:66:941","0:67:811","0:68:1832","0:69:1836","0:70:1841","0:71:1844","0:72:1771","0:73:1773","0:74:1774","0:75:1780","0:76:1779","0:78:1886","0:79:1887","0:80:1777","0:81:1908","0:83:1909","0:84:1921","0:86:1922","0:87:1936","0:108:1760","0:109:1966","0:110:1928","0:113:1996","0:115:1997","0:118:2007","0:119:1763","0:120:1766","0:121:314","0:122:1768"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:184:953":{"id":"0:184:953","crate_id":0,"name":"next","span":{"filename":"src/arrayvec.rs","begin":[855,4],"end":[865,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41368:181","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:7321:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:69:1836":{"id":"0:69:1836","crate_id":0,"name":"capacity","span":{"filename":"src/arrayvec.rs","begin":[134,4],"end":[134,49]},"visibility":"public","docs":"Return the capacity of the `ArrayVec`.\n\n```\nuse arrayvec::ArrayVec;\n\nlet array = ArrayVec::from([1, 2, 3]);\nassert_eq!(array.capacity(), 3);\n```","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:462":{"id":"0:462","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[561,0],"end":[568,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:11675:2113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:464:127","0:465:2235"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2540-0:528:1645":{"id":"b:2:2540-0:528:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2513:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2542:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:684-0:175:1648":{"id":"b:5:684-0:175:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2262:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1648","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["5:686:2471","5:687:2881","5:688:2882"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:363:60":{"id":"0:363:60","crate_id":0,"name":"default","span":{"filename":"src/array_string.rs","begin":[43,4],"end":[45,5]},"visibility":"default","docs":"Return an empty `ArrayString`","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:292:613":{"id":"0:292:613","crate_id":0,"name":"eq","span":{"filename":"src/arrayvec.rs","begin":[1138,4],"end":[1140,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2682:220-0:536:1646":{"id":"a:2:2682:220-0:536:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2682:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2682:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2551-0:50:1647":{"id":"b:2:2551-0:50:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2510:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2520:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2554:128","2:2555:1471"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:296:613":{"id":"0:296:613","crate_id":0,"name":"eq","span":{"filename":"src/arrayvec.rs","begin":[1146,4],"end":[1148,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"generic":"T"}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:121:314":{"id":"0:121:314","crate_id":0,"name":"as_ptr","span":{"filename":"src/arrayvec.rs","begin":[695,4],"end":[697,5]},"visibility":"public","docs":"Return a raw pointer to the vector's buffer.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3316-0:205:1649":{"id":"b:2:3316-0:205:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2689:2491","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3314:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3318:1485"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:557":{"id":"0:557","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[8,42],"end":[8,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::PartialOrd","id":"2:2352:189","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ge","le","lt","gt"],"trait":{"name":"PartialOrd","id":"2:2352:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:559:1035"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:536:1646":{"id":"0:536:1646","crate_id":0,"name":"CapacityError","span":{"filename":"src/errors.rs","begin":[9,0],"end":[11,1]},"visibility":"public","docs":"Error value indicating insufficient capacity","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":{"tuple":[]},"synthetic":false}}}],"where_predicates":[]},"impls":["0:493","a:2:2699:228-0:536:1646","a:2:8252:2647-0:536:1646","a:2:2739:2567-0:536:1646","a:2:8253:2646-0:536:1646","a:2:2682:220-0:536:1646","b:2:2246-0:536:1646","b:2:2608-0:536:1646","b:2:2536-0:536:1646","b:2:2551-0:536:1646","b:2:2249-0:536:1646","b:2:3316-0:536:1646","b:2:2546-0:536:1646","b:2:2540-0:536:1646","b:5:684-0:536:1646","b:5:5643-0:536:1646","0:549","0:546","0:499","0:504","0:552","0:542","0:544","0:539","0:501","0:554","0:557"]}}},"0:449:810":{"id":"0:449:810","crate_id":0,"name":"le","span":{"filename":"src/array_string.rs","begin":[538,4],"end":[538,54]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:153:128":{"id":"0:153:128","crate_id":0,"name":"Error","span":{"filename":"src/arrayvec.rs","begin":[778,4],"end":[778,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}}},"b:2:2551-0:205:1649":{"id":"b:2:2551-0:205:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2510:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2520:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2554:128","2:2555:1471"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2549:128":{"id":"2:2549:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2520:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:428":{"id":"0:428","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[498,0],"end":[507,1]},"visibility":"default","docs":"`Write` appends written data to the end of the string.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["write_char","write_fmt"],"trait":{"name":"Write","id":"2:9110:2085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:430:2232","0:432:1590"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:440:1035":{"id":"0:440:1035","crate_id":0,"name":"partial_cmp","span":{"filename":"src/array_string.rs","begin":[523,4],"end":[525,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41368:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"2:30835:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:137":{"id":"0:137","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[733,0],"end":[738,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"DerefMut","id":"2:2908:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:140:554"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:376:2150":{"id":"0:376:2150","crate_id":0,"name":"zero_filled","span":{"filename":"src/array_string.rs","begin":[142,4],"end":[152,5]},"visibility":"public","docs":"Create a new `ArrayString` value fully filled with ASCII NULL characters (`\\0`). Useful\nto be used as a buffer to collect external data or as a buffer for intermediate processing.\n\n```\nuse arrayvec::ArrayString;\n\nlet string = ArrayString::<16>::zero_filled();\nassert_eq!(string.len(), 16);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12019:34425":{"id":"2:12019:34425","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12017:34424"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3316-0:536:1646":{"id":"b:2:3316-0:536:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2689:2491","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3314:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3318:1485"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:50:1647":{"id":"0:50:1647","crate_id":0,"name":"ArrayVec","span":{"filename":"src/arrayvec.rs","begin":[42,0],"end":[46,1]},"visibility":"public","docs":"A vector with a fixed capacity.\n\nThe `ArrayVec` is a vector backed by a fixed size array. It keeps track of\nthe number of initialized elements. The `ArrayVec<T, CAP>` is parameterized\nby `T` for the element type and `CAP` for the maximum capacity.\n\n`CAP` is of type `usize` but is range limited to `u32::MAX`; attempting to create larger\narrayvecs with larger capacity will panic.\n\nThe vector is a contiguous value (storing the elements inline) that you can store directly on\nthe stack if needed.\n\nIt offers a simple API but also dereferences to a slice, so that the full slice API is\navailable. The ArrayVec can be converted into a by value iterator.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"impls":["0:61","a:2:2699:228-0:50:1647","a:2:8252:2647-0:50:1647","a:2:2739:2567-0:50:1647","a:2:8253:2646-0:50:1647","a:2:2682:220-0:50:1647","b:2:2246-0:50:1647","b:2:2536-0:50:1647","b:2:2551-0:50:1647","b:2:2249-0:50:1647","b:2:3316-0:50:1647","b:2:2546-0:50:1647","b:2:2540-0:50:1647","b:5:684-0:50:1647","0:320","0:300","0:162","0:293","0:308","0:284","0:141","0:155","0:332","0:336","0:297","0:256","0:324","0:279","0:274","0:137","0:289","0:169","0:56","0:150","0:304","0:132","0:316","0:312"]}}},"0:213":{"id":"0:213","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[936,0],"end":[936,72]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2699:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2699:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:436:423":{"id":"0:436:423","crate_id":0,"name":"clone","span":{"filename":"src/array_string.rs","begin":[511,4],"end":[513,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:552":{"id":"0:552","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[8,31],"end":[8,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2692:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12022:28279":{"id":"2:12022:28279","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11282:2145"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12040:3800":{"id":"2:12040:3800","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43317:2245","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12038:2198":{"id":"2:12038:2198","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:11878:419"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43301:2516","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12049:28482":{"id":"2:12049:28482","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:11878:419","self::pattern":"2:11715:2509"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:226:953":{"id":"0:226:953","crate_id":0,"name":"next","span":{"filename":"src/arrayvec.rs","begin":[942,4],"end":[948,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41368:181","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:7321:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:391:2226":{"id":"0:391:2226","crate_id":0,"name":"as_mut_str","span":{"filename":"src/array_string.rs","begin":[409,4],"end":[411,5]},"visibility":"public","docs":"Return a mutable string slice of the whole `ArrayString`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:452":{"id":"0:452","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[543,0],"end":[552,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["ge","le","lt","gt"],"trait":{"name":"PartialOrd","id":"2:2352:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"primitive":"str"},"items":["0:454:1035","0:455:844","0:456:810","0:457:726","0:458:709"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12014:811":{"id":"2:12014:811","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:11878:419"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:150":{"id":"0:150","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[775,0],"end":[789,1]},"visibility":"default","docs":"Try to create an `ArrayVec` from a slice. This will return an error if the slice was too big to\nfit.\n\n```\nuse arrayvec::ArrayVec;\nuse std::convert::TryInto as _;\n\nlet array: ArrayVec<_, 4> = (&[1, 2, 3] as &[_]).try_into().unwrap();\nassert_eq!(array.len(), 3);\nassert_eq!(array.capacity(), 4);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2262:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2520:237","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"generic":"T"}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:153:128","0:154:1471"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12119:28484":{"id":"2:12119:28484","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11878:419","self::pattern":"2:11715:2509"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41368:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11720:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11735:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2540-0:175:1648":{"id":"b:2:2540-0:175:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2513:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1648","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2542:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:109:1966":{"id":"0:109:1966","crate_id":0,"name":"try_extend_from_slice","span":{"filename":"src/arrayvec.rs","begin":[564,4],"end":[580,5]},"visibility":"public","docs":"Copy all elements from the slice and append to the `ArrayVec`.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut vec: ArrayVec<usize, 10> = ArrayVec::new();\nvec.push(1);\nvec.try_extend_from_slice(&[2, 3]).unwrap();\nassert_eq!(&vec[..], &[1, 2, 3]);\n```\n\n# Errors\n\nThis method will return an error if the capacity left (see\n[`remaining_capacity`]) is smaller then the length of the provided\nslice.\n\n[`remaining_capacity`]: #method.remaining_capacity","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"generic":"T"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41512:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:2694:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:183:1758":{"id":"0:183:1758","crate_id":0,"name":"Item","span":{"filename":"src/arrayvec.rs","begin":[853,4],"end":[853,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"2:12140:9075":{"id":"2:12140:9075","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4539:9075"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:43639:2519","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:370:694":{"id":"0:370:694","crate_id":0,"name":"from","span":{"filename":"src/array_string.rs","begin":[105,4],"end":[109,5]},"visibility":"public","docs":"Create a new `ArrayString` from a `str`.\n\nCapacity is inferred from the type parameter.\n\n**Errors** if the backing array is not large enough to fit the string.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<3>::from(\"foo\").unwrap();\nassert_eq!(&string[..], \"foo\");\nassert_eq!(string.len(), 3);\nassert_eq!(string.capacity(), 3);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41512:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:475:1471":{"id":"0:475:1471","crate_id":0,"name":"try_from","span":{"filename":"src/array_string.rs","begin":[634,4],"end":[639,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["f",{"resolved_path":{"name":"fmt::Arguments","id":"2:42472:73","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41512:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:2520:237","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5383:35099":{"id":"5:5383:35099","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:280:2506","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7003:2888","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:280:2506","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}},{"type":{"resolved_path":{"name":"Global","id":"5:7003:2888","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2540-0:205:1649":{"id":"b:2:2540-0:205:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2513:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2542:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:549":{"id":"0:549","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[8,26],"end":[8,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::Ord","id":"2:2346:182","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2346:182","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:551:430"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:438":{"id":"0:438","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[521,0],"end":[530,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["ge","le","lt","gt"],"trait":{"name":"PartialOrd","id":"2:2352:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:440:1035","0:441:844","0:442:810","0:443:726","0:444:709"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:175:1648":{"id":"0:175:1648","crate_id":0,"name":"IntoIter","span":{"filename":"src/arrayvec.rs","begin":[847,0],"end":[850,1]},"visibility":"public","docs":"By-value iterator for `ArrayVec`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"impls":["a:2:2699:228-0:175:1648","a:2:8252:2647-0:175:1648","a:2:2739:2567-0:175:1648","a:2:8253:2646-0:175:1648","a:2:2682:220-0:175:1648","b:2:2246-0:175:1648","b:2:2536-0:175:1648","b:2:2551-0:175:1648","b:2:2249-0:175:1648","b:2:3316-0:175:1648","b:2:7209-0:175:1648","b:2:2546-0:175:1648","b:2:2540-0:175:1648","b:5:684-0:175:1648","0:180","0:193","0:197","0:190","0:201","0:186"]}}},"2:12042:31361":{"id":"2:12042:31361","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12041:31373"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:43614:2511","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12059:2829":{"id":"2:12059:2829","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41370:179","prim@char":"1:11878:419","self::pattern":"2:11715:2509"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41368:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11720:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11735:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12137:28374":{"id":"2:12137:28374","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12134:28370":{"id":"2:12134:28370","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39526:28365","Self::is_ascii":"2:12133:28369"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41368:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39526:28365","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:233:2032":{"id":"0:233:2032","crate_id":0,"name":"next_back","span":{"filename":"src/arrayvec.rs","begin":[957,4],"end":[963,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41368:181","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:7321:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8252:2647-0:50:1647":{"id":"a:2:8252:2647-0:50:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8252:2647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8252:2647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:335:430":{"id":"0:335:430","crate_id":0,"name":"cmp","span":{"filename":"src/arrayvec.rs","begin":[1203,4],"end":[1205,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"cmp::Ordering","id":"2:30835:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:421:315":{"id":"0:421:315","crate_id":0,"name":"as_ref","span":{"filename":"src/array_string.rs","begin":[484,4],"end":[484,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:441:844":{"id":"0:441:844","crate_id":0,"name":"lt","span":{"filename":"src/array_string.rs","begin":[526,4],"end":[526,55]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:279":{"id":"0:279","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1105,0],"end":[1125,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2262:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2262:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:282:423","0:283:425"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:454:1035":{"id":"0:454:1035","crate_id":0,"name":"partial_cmp","span":{"filename":"src/array_string.rs","begin":[545,4],"end":[547,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41368:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"2:30835:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12102:34437":{"id":"2:12102:34437","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12113:34443":{"id":"2:12113:34443","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11878:419","self::pattern":"2:11715:2509"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2699:228-0:50:1647":{"id":"a:2:2699:228-0:50:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2699:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2699:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:466":{"id":"0:466","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[619,0],"end":[628,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2520:237","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:469:128","0:470:1471"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5401:29663":{"id":"5:5401:29663","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12136:28373"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7254:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12016:2207":{"id":"2:12016:2207","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2739:2567-0:205:1649":{"id":"a:2:2739:2567-0:205:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2739:2567","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:506:668":{"id":"0:506:668","crate_id":0,"name":"fmt","span":{"filename":"src/errors.rs","begin":[45,4],"end":[47,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9120:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9109:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12023:34426":{"id":"2:12023:34426","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:367:941":{"id":"0:367:941","crate_id":0,"name":"new_const","span":{"filename":"src/array_string.rs","begin":[78,4],"end":[81,5]},"visibility":"public","docs":"Create a new empty `ArrayString` (const fn).\n\nCapacity is inferred from the type parameter.\n\n```\nuse arrayvec::ArrayString;\n\nstatic ARRAY: ArrayString<1024> = ArrayString::new_const();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:533":{"id":"0:533","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[33,9],"end":[33,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2694:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:83:1909":{"id":"0:83:1909","crate_id":0,"name":"swap_pop","span":{"filename":"src/arrayvec.rs","begin":[391,4],"end":[398,5]},"visibility":"public","docs":"Remove the element at `index` and swap the last element into its place.\n\nThis is a checked version of `.swap_remove`.  \nThis operation is O(1).\n\nReturn `Some(` *element* `)` if the index is in bounds, else `None`.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3]);\n\nassert_eq!(array.swap_pop(0), Some(1));\nassert_eq!(&array[..], &[3, 2]);\n\nassert_eq!(array.swap_pop(10), None);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:41368:181","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2246-0:50:1647":{"id":"b:2:2246-0:50:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2689:2491","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2240:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2248:1785"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:284":{"id":"0:284","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1127,0],"end":[1133,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"2:9365:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9365:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:287:729"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12015:1832":{"id":"2:12015:1832","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:396:230":{"id":"0:396:230","crate_id":0,"name":"Target","span":{"filename":"src/array_string.rs","begin":[424,4],"end":[424,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"str"}}}},"b:2:2249-0:528:1645":{"id":"b:2:2249-0:528:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2689:2491","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2243:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2251:2080"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:168:784":{"id":"0:168:784","crate_id":0,"name":"into_iter","span":{"filename":"src/arrayvec.rs","begin":[823,4],"end":[823,60]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:7205:152","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:364":{"id":"0:364","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[48,0],"end":[420,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:366:939","0:367:941","0:368:811","0:369:1832","0:370:694","0:371:2143","0:376:2150","0:377:1836","0:378:1841","0:379:1844","0:380:1771","0:381:1773","0:382:2183","0:383:2139","0:385:1777","0:386:1780","0:387:1921","0:388:1779","0:389:1760","0:390:316","0:391:2226"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2739:2567-0:536:1646":{"id":"a:2:2739:2567-0:536:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2739:2567","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2739:2567","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:84:1921":{"id":"0:84:1921","crate_id":0,"name":"remove","span":{"filename":"src/arrayvec.rs","begin":[415,4],"end":[420,5]},"visibility":"public","docs":"Remove the element at `index` and shift down the following elements.\n\nThe `index` must be strictly less than the length of the vector.\n\n***Panics*** if the `index` is out of bounds.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3]);\n\nlet removed_elt = array.remove(0);\nassert_eq!(removed_elt, 1);\nassert_eq!(&array[..], &[2, 3]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:457:726":{"id":"0:457:726","crate_id":0,"name":"gt","span":{"filename":"src/array_string.rs","begin":[550,4],"end":[550,66]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2546-0:536:1646":{"id":"b:2:2546-0:536:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2520:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2516:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2549:128","2:2550:1472"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:388:1779":{"id":"0:388:1779","crate_id":0,"name":"clear","span":{"filename":"src/array_string.rs","begin":[384,4],"end":[388,5]},"visibility":"public","docs":"Make the string empty.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2546-0:528:1645":{"id":"b:2:2546-0:528:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2520:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2516:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2549:128","2:2550:1472"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:307:2080":{"id":"0:307:2080","crate_id":0,"name":"borrow_mut","span":{"filename":"src/arrayvec.rs","begin":[1158,4],"end":[1158,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"generic":"T"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:409:613":{"id":"0:409:613","crate_id":0,"name":"eq","span":{"filename":"src/array_string.rs","begin":[462,4],"end":[464,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:319:668":{"id":"0:319:668","crate_id":0,"name":"fmt","span":{"filename":"src/arrayvec.rs","begin":[1170,4],"end":[1170,76]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9120:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9109:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2682:220-0:50:1647":{"id":"a:2:2682:220-0:50:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2682:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2682:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12026:28440":{"id":"2:12026:28440","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41370:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41368:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9816:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9816:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:447:1035":{"id":"0:447:1035","crate_id":0,"name":"partial_cmp","span":{"filename":"src/array_string.rs","begin":[534,4],"end":[536,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41368:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"2:30835:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12041:31373":{"id":"2:12041:31373","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12042:31361"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:43605:2513","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12044:34429":{"id":"2:12044:34429","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:43595:2522","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:380:1771":{"id":"0:380:1771","crate_id":0,"name":"push","span":{"filename":"src/array_string.rs","begin":[204,4],"end":[206,5]},"visibility":"public","docs":"Adds the given char to the end of the string.\n\n***Panics*** if the backing array is not large enough to fit the additional char.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<2>::new();\n\nstring.push('a');\nstring.push('b');\n\nassert_eq!(&string[..], \"ab\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["c",{"primitive":"char"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12128:34446":{"id":"2:12128:34446","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11878:419","self::pattern":"2:11715:2509"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11720:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11735:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2550:1472":{"id":"2:2550:1472","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41512:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2520:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2248:1785":{"id":"2:2248:1785","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:332":{"id":"0:332","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1202,0],"end":[1206,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Ord","id":"2:2346:182","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2346:182","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:335:430"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:120:1766":{"id":"0:120:1766","crate_id":0,"name":"as_mut_slice","span":{"filename":"src/arrayvec.rs","begin":[690,4],"end":[692,5]},"visibility":"public","docs":"Return a mutable slice containing all elements of the vector.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"generic":"T"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8252:2647-0:175:1648":{"id":"a:2:8252:2647-0:175:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8252:2647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8252:2647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1648","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8253:2646-0:528:1645":{"id":"a:2:8253:2646-0:528:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8253:2646","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:169":{"id":"0:169","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[837,0],"end":[843,1]},"visibility":"default","docs":"Iterate the `ArrayVec` with each element by value.\n\nThe vector is consumed by this operation.\n\n```\nuse arrayvec::ArrayVec;\n\nfor elt in ArrayVec::from([1, 2, 3]) {\n    // ...\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7205:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:172:1758","0:173:1648","0:174:784"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:186":{"id":"0:186","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[873,0],"end":[885,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["rfind","nth_back","rfold","advance_back_by","try_rfold"],"trait":{"name":"DoubleEndedIterator","id":"2:7243:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1648","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:189:2032"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:330:709":{"id":"0:330:709","crate_id":0,"name":"ge","span":{"filename":"src/arrayvec.rs","begin":[1193,4],"end":[1195,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:398":{"id":"0:398","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[434,0],"end":[444,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"DerefMut","id":"2:2908:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:400:554"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:501":{"id":"0:501","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[38,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9150:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:503:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12099:34436":{"id":"2:12099:34436","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:11715:2509","`DoubleEndedIterator`":"2:7243:121","prim@char":"1:11878:419","str::match_indices":"2:12096:34435"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:43499:2524","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11720:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11735:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:289":{"id":"0:289","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1135,0],"end":[1141,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2310:188","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2310:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:292:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:424:668":{"id":"0:424:668","crate_id":0,"name":"fmt","span":{"filename":"src/array_string.rs","begin":[489,4],"end":[489,76]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9120:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9109:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:197":{"id":"0:197","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[904,0],"end":[912,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2262:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2262:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1648","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:200:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8253:2646-0:50:1647":{"id":"a:2:8253:2646-0:50:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8253:2646","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8253:2646","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:136:552":{"id":"0:136:552","crate_id":0,"name":"deref","span":{"filename":"src/arrayvec.rs","begin":[728,4],"end":[730,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:2895:117","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:225:1758":{"id":"0:225:1758","crate_id":0,"name":"Item","span":{"filename":"src/arrayvec.rs","begin":[940,4],"end":[940,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"b:2:2246-0:175:1648":{"id":"b:2:2246-0:175:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2689:2491","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2240:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1648","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2248:1785"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:7211:1758":{"id":"2:7211:1758","crate_id":2,"name":"Item","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"Iterator","id":"2:7321:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"0:369:1832":{"id":"0:369:1832","crate_id":0,"name":"is_empty","span":{"filename":"src/array_string.rs","begin":[89,4],"end":[89,60]},"visibility":"public","docs":"Returns whether the string is empty.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:432:1590":{"id":"0:432:1590","crate_id":0,"name":"write_str","span":{"filename":"src/array_string.rs","begin":[504,4],"end":[506,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9109:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:381:1773":{"id":"0:381:1773","crate_id":0,"name":"try_push","span":{"filename":"src/array_string.rs","begin":[226,4],"end":[239,5]},"visibility":"public","docs":"Adds the given char to the end of the string.\n\nReturns `Ok` if the push succeeds.\n\n**Errors** if the backing array is not large enough to fit the additional char.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<2>::new();\n\nstring.try_push('a').unwrap();\nstring.try_push('b').unwrap();\nlet overflow = string.try_push('c');\n\nassert_eq!(&string[..], \"ab\");\nassert_eq!(overflow.unwrap_err().element(), 'c');\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["c",{"primitive":"char"}]],"output":{"resolved_path":{"name":"Result","id":"2:41512:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"primitive":"char"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:161:784":{"id":"0:161:784","crate_id":0,"name":"into_iter","span":{"filename":"src/arrayvec.rs","begin":[806,4],"end":[806,56]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:7205:152","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:382:2183":{"id":"0:382:2183","crate_id":0,"name":"push_str","span":{"filename":"src/array_string.rs","begin":[255,4],"end":[257,5]},"visibility":"public","docs":"Adds the given string slice to the end of the string.\n\n***Panics*** if the backing array is not large enough to fit the string.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<2>::new();\n\nstring.push_str(\"a\");\nstring.push_str(\"d\");\n\nassert_eq!(&string[..], \"ad\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2542:694":{"id":"2:2542:694","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:239":{"id":"0:239","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[968,0],"end":[988,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:2919:1806","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:243:588"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2246-0:528:1645":{"id":"b:2:2246-0:528:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2689:2491","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2240:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2248:1785"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:471":{"id":"0:471","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[630,0],"end":[640,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2520:237","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Arguments","id":"2:42472:73","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:474:128","0:475:1471"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:430:2232":{"id":"0:430:2232","crate_id":0,"name":"write_char","span":{"filename":"src/array_string.rs","begin":[500,4],"end":[502,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["c",{"primitive":"char"}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9109:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:442:810":{"id":"0:442:810","crate_id":0,"name":"le","span":{"filename":"src/array_string.rs","begin":[527,4],"end":[527,56]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:496:1772":{"id":"0:496:1772","crate_id":0,"name":"element","span":{"filename":"src/errors.rs","begin":[22,4],"end":[24,5]},"visibility":"public","docs":"Extract the overflowing element","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:541:423":{"id":"0:541:423","crate_id":0,"name":"clone","span":{"filename":"src/errors.rs","begin":[8,9],"end":[8,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:300":{"id":"0:300","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1153,0],"end":[1155,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2240:97","args":{"angle_bracketed":{"args":[{"type":{"slice":{"generic":"T"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:303:1785"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2551-0:175:1648":{"id":"b:2:2551-0:175:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2510:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2520:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1648","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2554:128","2:2555:1471"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:389:1760":{"id":"0:389:1760","crate_id":0,"name":"set_len","span":{"filename":"src/array_string.rs","begin":[397,4],"end":[401,5]},"visibility":"public","docs":"Set the strings’s length.\n\nThis function is `unsafe` because it changes the notion of the\nnumber of “valid” bytes in the string. Use with care.\n\nThis method uses *debug assertions* to check the validity of `length`\nand may use other debug assertions.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["length",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:329:810":{"id":"0:329:810","crate_id":0,"name":"le","span":{"filename":"src/arrayvec.rs","begin":[1189,4],"end":[1191,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:526-0:175:1648":{"id":"0:526-0:175:1648","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[59,36],"end":[59,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::arrayvec::IntoIter","name":"IntoIter","id":"0:175:1648","glob":false}}},"2:2554:128":{"id":"2:2554:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32019:2495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:12035:34428":{"id":"2:12035:34428","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:11884:1395","crate::ops::IndexMut":"2:2982:2458","str::slice_unchecked":"2:12034:34427"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12055:2864":{"id":"2:12055:2864","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41370:179","prim@char":"1:11878:419","self::pattern":"2:11715:2509"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41368:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12066:28474":{"id":"2:12066:28474","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:11878:419","self::pattern":"2:11715:2509"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:11538:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:118:2007":{"id":"0:118:2007","crate_id":0,"name":"take","span":{"filename":"src/arrayvec.rs","begin":[680,4],"end":[682,5]},"visibility":"public","docs":"Returns the ArrayVec, replacing the original with a new empty ArrayVec.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut v = ArrayVec::from([0, 1, 2, 3]);\nassert_eq!([0, 1, 2, 3], v.take().into_inner().unwrap());\nassert!(v.is_empty());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:451:709":{"id":"0:451:709","crate_id":0,"name":"ge","span":{"filename":"src/array_string.rs","begin":[540,4],"end":[540,54]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:687:2881":{"id":"5:687:2881","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:297":{"id":"0:297","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1151,0],"end":[1151,65]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2315:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2315:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:201":{"id":"0:201","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[914,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9145:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9145:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1648","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:204:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:416":{"id":"0:416","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[477,0],"end":[480,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2240:97","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:418:1785"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:75:1780":{"id":"0:75:1780","crate_id":0,"name":"truncate","span":{"filename":"src/arrayvec.rs","begin":[245,4],"end":[247,5]},"visibility":"public","docs":"Shortens the vector, keeping the first `len` elements and dropping\nthe rest.\n\nIf `len` is greater than the vector’s current length this has no\neffect.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3, 4, 5]);\narray.truncate(3);\nassert_eq!(&array[..], &[1, 2, 3]);\narray.truncate(4);\nassert_eq!(&array[..], &[1, 2, 3]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["new_len",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12030:28442":{"id":"2:12030:28442","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9816:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9816:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12138:34448":{"id":"2:12138:34448","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4538:34448"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:43630:2518","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2536-0:536:1646":{"id":"b:2:2536-0:536:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2513:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2510:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2539:2824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:336":{"id":"0:336","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1212,0],"end":[1220,1]},"visibility":"default","docs":"`Write` appends written data to the end of the vector.\n\nRequires `features=\"std\"`.","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["write_all","by_ref","write_fmt","is_write_vectored","write_all_vectored","write_vectored"],"trait":{"name":"Write","id":"1:3439:2085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:338:1776","0:339:2088"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5645:1449":{"id":"5:5645:1449","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7254:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2699:228-0:536:1646":{"id":"a:2:2699:228-0:536:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2699:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2699:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:504":{"id":"0:504","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[44,0],"end":[48,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9145:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:506:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12087:34433":{"id":"2:12087:34433","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41368:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11720:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11735:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:283:425":{"id":"0:283:425","crate_id":0,"name":"clone_from","span":{"filename":"src/arrayvec.rs","begin":[1112,4],"end":[1124,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:465:2235":{"id":"0:465:2235","crate_id":0,"name":"from_str","span":{"filename":"src/array_string.rs","begin":[565,4],"end":[567,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41512:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:11675:2113","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:243:588":{"id":"0:243:588","crate_id":0,"name":"drop","span":{"filename":"src/arrayvec.rs","begin":[969,4],"end":[987,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:379:1844":{"id":"0:379:1844","crate_id":0,"name":"remaining_capacity","span":{"filename":"src/array_string.rs","begin":[186,4],"end":[188,5]},"visibility":"public","docs":"Returns the capacity left in the `ArrayString`.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<3>::from(\"abc\").unwrap();\nstring.pop();\nassert_eq!(string.remaining_capacity(), 1);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:401":{"id":"0:401","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[446,0],"end":[451,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2310:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:403:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12024:314":{"id":"2:12024:314","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12025:1768","`u8`":"1:11895:1493"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2739:2567-0:528:1645":{"id":"a:2:2739:2567-0:528:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2739:2567","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2246-0:536:1646":{"id":"b:2:2246-0:536:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2689:2491","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2240:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2248:1785"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12034:34427":{"id":"2:12034:34427","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:11884:1395","str::slice_mut_unchecked":"2:12035:34428","crate::ops::Index":"2:2978:2457"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12116:25909":{"id":"2:12116:25909","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11878:419","self::pattern":"2:11715:2509"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41368:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2536-0:175:1648":{"id":"b:2:2536-0:175:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2513:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2510:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1648","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2539:2824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12141:34449":{"id":"2:12141:34449","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4536:34449"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:43648:2520","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5387:35100":{"id":"5:5387:35100","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7254:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7254:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5402:29664":{"id":"5:5402:29664","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12137:28374"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7254:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:140:554":{"id":"0:140:554","crate_id":0,"name":"deref_mut","span":{"filename":"src/arrayvec.rs","begin":[735,4],"end":[737,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:2895:117","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3318:1485":{"id":"2:3318:1485","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39315:2559","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3316-0:50:1647":{"id":"b:2:3316-0:50:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2689:2491","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3314:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3318:1485"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:277:697":{"id":"0:277:697","crate_id":0,"name":"from_iter","span":{"filename":"src/arrayvec.rs","begin":[1098,4],"end":[1102,5]},"visibility":"default","docs":"Create an `ArrayVec` from an iterator.\n \n***Panics*** if the number of elements in the iterator exceeds the arrayvec's capacity.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["iter",{"generic":"I"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:7205:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8253:2646-0:175:1648":{"id":"a:2:8253:2646-0:175:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8253:2646","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8253:2646","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1648","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:193":{"id":"0:193","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[889,0],"end":[902,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:2919:1806","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1648","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:196:588"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:113:1996":{"id":"0:113:1996","crate_id":0,"name":"into_inner","span":{"filename":"src/arrayvec.rs","begin":[652,4],"end":[658,5]},"visibility":"public","docs":"Return the inner fixed size array, if it is full to its capacity.\n\nReturn an `Ok` value with the array if length equals capacity,\nreturn an `Err` with self otherwise.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41512:210","args":{"angle_bracketed":{"args":[{"type":{"array":{"type":{"generic":"T"},"len":"CAP"}}},{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:205:1649":{"id":"0:205:1649","crate_id":0,"name":"Drain","span":{"filename":"src/arrayvec.rs","begin":[926,0],"end":[934,1]},"visibility":"public","docs":"A draining iterator for `ArrayVec`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"impls":["a:2:8252:2647-0:205:1649","a:2:2739:2567-0:205:1649","a:2:8253:2646-0:205:1649","b:2:2246-0:205:1649","b:2:2536-0:205:1649","b:2:2551-0:205:1649","b:2:2249-0:205:1649","b:2:3316-0:205:1649","b:2:7209-0:205:1649","b:2:2546-0:205:1649","b:2:2540-0:205:1649","0:235","0:221","0:229","0:213","0:217","0:239"]}}},"0:385:1777":{"id":"0:385:1777","crate_id":0,"name":"pop","span":{"filename":"src/array_string.rs","begin":[308,4],"end":[318,5]},"visibility":"public","docs":"Removes the last character from the string and returns it.\n\nReturns `None` if this `ArrayString` is empty.\n\n```\nuse arrayvec::ArrayString;\n \nlet mut s = ArrayString::<3>::from(\"foo\").unwrap();\n\nassert_eq!(s.pop(), Some('o'));\nassert_eq!(s.pop(), Some('o'));\nassert_eq!(s.pop(), Some('f'));\n\nassert_eq!(s.pop(), None);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41368:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"char"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2551-0:528:1645":{"id":"b:2:2551-0:528:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2510:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2520:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2554:128","2:2555:1471"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2540-0:536:1646":{"id":"b:2:2540-0:536:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2513:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2542:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:686:2471":{"id":"5:686:2471","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:172:1758":{"id":"0:172:1758","crate_id":0,"name":"Item","span":{"filename":"src/arrayvec.rs","begin":[838,4],"end":[838,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:400:554":{"id":"0:400:554","crate_id":0,"name":"deref_mut","span":{"filename":"src/array_string.rs","begin":[437,4],"end":[443,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:119:1763":{"id":"0:119:1763","crate_id":0,"name":"as_slice","span":{"filename":"src/arrayvec.rs","begin":[685,4],"end":[687,5]},"visibility":"public","docs":"Return a slice containing all elements of the vector.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"generic":"T"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2546-0:175:1648":{"id":"b:2:2546-0:175:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2520:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2516:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1648","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2549:128","2:2550:1472"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:684-0:528:1645":{"id":"b:5:684-0:528:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2262:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["5:686:2471","5:687:2881","5:688:2882"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:556:613":{"id":"0:556:613","crate_id":0,"name":"eq","span":{"filename":"src/errors.rs","begin":[8,31],"end":[8,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12052:28483":{"id":"2:12052:28483","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:11878:419","self::pattern":"2:11715:2509"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11720:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11735:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:542":{"id":"0:542","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[8,16],"end":[8,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::marker::Copy","id":"2:2694:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2694:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12136:28373":{"id":"2:12136:28373","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8253:2646-0:536:1646":{"id":"a:2:8253:2646-0:536:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8253:2646","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8253:2646","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:132":{"id":"0:132","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[725,0],"end":[731,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:2895:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:135:230","0:136:552"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:450:726":{"id":"0:450:726","crate_id":0,"name":"gt","span":{"filename":"src/array_string.rs","begin":[539,4],"end":[539,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3316-0:175:1648":{"id":"b:2:3316-0:175:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2689:2491","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3314:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1648","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3318:1485"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:308":{"id":"0:308","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1161,0],"end":[1163,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsRef","id":"2:2504:75","args":{"angle_bracketed":{"args":[{"type":{"slice":{"generic":"T"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:311:315"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:324":{"id":"0:324","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1180,0],"end":[1200,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2352:189","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["ge","le","lt","gt"],"trait":{"name":"PartialOrd","id":"2:2352:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:327:1035","0:328:844","0:329:810","0:330:709","0:331:726"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12046:3130":{"id":"2:12046:3130","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:11878:419","self::pattern":"2:11715:2509"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12093:34434":{"id":"2:12093:34434","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:11715:2509","`DoubleEndedIterator`":"2:7243:121","prim@char":"1:11878:419","str::matches":"2:12090:2288"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:43553:2526","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11720:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11735:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:196:588":{"id":"0:196:588","crate_id":0,"name":"drop","span":{"filename":"src/arrayvec.rs","begin":[890,4],"end":[901,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2536-0:205:1649":{"id":"b:2:2536-0:205:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2513:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2510:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2539:2824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:56":{"id":"0:56","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[48,0],"end":[54,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:2919:1806","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:59:588"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:316":{"id":"0:316","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1169,0],"end":[1171,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9145:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9145:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:319:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:528:1645":{"id":"0:528:1645","crate_id":0,"name":"ArrayString","span":{"filename":"src/array_string.rs","begin":[34,0],"end":[38,1]},"visibility":"public","docs":"A string with a fixed capacity.\n\nThe `ArrayString` is a string backed by a fixed size array. It keeps track\nof its length, and is parameterized by `CAP` for the maximum capacity.\n\n`CAP` is of type `usize` but is range limited to `u32::MAX`; attempting to create larger\narrayvecs with larger capacity will panic.\n\nThe string is a contiguous value that you can store directly on the stack\nif needed.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"impls":["0:364","a:2:2699:228-0:528:1645","a:2:8252:2647-0:528:1645","a:2:2739:2567-0:528:1645","a:2:8253:2646-0:528:1645","a:2:2682:220-0:528:1645","b:2:2246-0:528:1645","b:2:2536-0:528:1645","b:2:2551-0:528:1645","b:2:2249-0:528:1645","b:2:3316-0:528:1645","b:2:2546-0:528:1645","b:2:2540-0:528:1645","b:5:684-0:528:1645","b:5:5643-0:528:1645","0:471","0:416","0:422","0:398","0:459","0:428","0:462","0:434","0:452","0:404","0:401","0:361","0:425","0:419","0:445","0:410","0:407","0:533","0:438","0:394","0:466","0:412"]}}},"2:2610:3476":{"id":"2:2610:3476","crate_id":2,"name":"provide","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["demand",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Demand","id":"2:3379:2555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:7209-0:205:1649":{"id":"b:2:7209-0:205:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7321:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7205:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:7211:1758","2:7212:1648","2:7213:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"2:12036:28465":{"id":"2:12036:28465","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:12037:28466"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:403:613":{"id":"0:403:613","crate_id":0,"name":"eq","span":{"filename":"src/array_string.rs","begin":[448,4],"end":[450,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:412":{"id":"0:412","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[470,0],"end":[475,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9365:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:414:729"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12072:34430":{"id":"2:12072:34430","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:11715:2509","str::split":"2:12063:26496","prim@char":"1:11878:419","`DoubleEndedIterator`":"2:7243:121","str::rsplit_terminator":"2:12075:34431"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43381:2532","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:204:668":{"id":"0:204:668","crate_id":0,"name":"fmt","span":{"filename":"src/arrayvec.rs","begin":[918,4],"end":[922,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9120:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9109:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:445":{"id":"0:445","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[532,0],"end":[541,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["ge","le","lt","gt"],"trait":{"name":"PartialOrd","id":"2:2352:189","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:447:1035","0:448:844","0:449:810","0:450:726","0:451:709"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:154:1471":{"id":"0:154:1471","crate_id":0,"name":"try_from","span":{"filename":"src/arrayvec.rs","begin":[780,4],"end":[788,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["slice",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"generic":"T"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41512:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:2520:237","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12069:28476":{"id":"2:12069:28476","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:11715:2509","`DoubleEndedIterator`":"2:7243:121","prim@char":"1:11878:419","str::split":"2:12063:26496"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43349:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11720:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11735:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:81:1908":{"id":"0:81:1908","crate_id":0,"name":"swap_remove","span":{"filename":"src/arrayvec.rs","begin":[367,4],"end":[372,5]},"visibility":"public","docs":"Remove the element at `index` and swap the last element into its place.\n\nThis operation is O(1).\n\nReturn the *element* if the index is in bounds, else panic.\n\n***Panics*** if the `index` is out of bounds.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3]);\n\nassert_eq!(array.swap_remove(0), 1);\nassert_eq!(&array[..], &[3, 2]);\n\nassert_eq!(array.swap_remove(1), 2);\nassert_eq!(&array[..], &[3]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:228:2031":{"id":"0:228:2031","crate_id":0,"name":"size_hint","span":{"filename":"src/arrayvec.rs","begin":[950,4],"end":[952,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"2:41368:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:87:1936":{"id":"0:87:1936","crate_id":0,"name":"retain","span":{"filename":"src/arrayvec.rs","begin":[459,4],"end":[531,5]},"visibility":"public","docs":"Retains only the elements specified by the predicate.\n\nIn other words, remove all elements `e` such that `f(&mut e)` returns false.\nThis method operates in place and preserves the order of the retained\nelements.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3, 4]);\narray.retain(|x| *x & 1 != 0 );\nassert_eq!(&array[..], &[1, 3]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["f",{"generic":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:2926:1938","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:259:2053":{"id":"0:259:2053","crate_id":0,"name":"extend","span":{"filename":"src/arrayvec.rs","begin":[1015,4],"end":[1019,5]},"visibility":"default","docs":"Extend the `ArrayVec` with an iterator.\n \n***Panics*** if extending the vector exceeds its capacity.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["iter",{"generic":"I"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:7205:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:461:430":{"id":"0:461:430","crate_id":0,"name":"cmp","span":{"filename":"src/array_string.rs","begin":[556,4],"end":[558,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"cmp::Ordering","id":"2:30835:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5643-0:528:1645":{"id":"b:5:5643-0:528:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9150:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2689:2491","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5641:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["5:5645:1449"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12135:28372":{"id":"2:12135:28372","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:443:726":{"id":"0:443:726","crate_id":0,"name":"gt","span":{"filename":"src/array_string.rs","begin":[528,4],"end":[528,55]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12133:28369":{"id":"2:12133:28369","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_is_ascii\", issue = \"111090\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:427:668":{"id":"0:427:668","crate_id":0,"name":"fmt","span":{"filename":"src/array_string.rs","begin":[494,4],"end":[494,76]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9120:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9109:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:434":{"id":"0:434","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[509,0],"end":[519,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2262:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:436:423","0:437:425"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:493":{"id":"0:493","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[13,0],"end":[30,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:495:939","0:496:1772","0:497:2236"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:684-0:536:1646":{"id":"b:5:684-0:536:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2262:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["5:686:2471","5:687:2881","5:688:2882"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:67:811":{"id":"0:67:811","crate_id":0,"name":"len","span":{"filename":"src/arrayvec.rs","begin":[111,4],"end":[111,58]},"visibility":"public","docs":"Return the number of elements in the `ArrayVec`.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3]);\narray.pop();\nassert_eq!(array.len(), 2);\n```","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:554":{"id":"0:554","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[8,31],"end":[8,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::PartialEq","id":"2:2310:188","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2310:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:556:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2546-0:205:1649":{"id":"b:2:2546-0:205:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2520:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2516:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2549:128","2:2550:1472"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5390:35101":{"id":"5:5390:35101","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7254:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7254:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:229":{"id":"0:229","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[955,0],"end":[964,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["rfind","nth_back","rfold","advance_back_by","try_rfold"],"trait":{"name":"DoubleEndedIterator","id":"2:7243:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:233:2032"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:368:811":{"id":"0:368:811","crate_id":0,"name":"len","span":{"filename":"src/array_string.rs","begin":[85,4],"end":[85,58]},"visibility":"public","docs":"Return the length of the string.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:71:1844":{"id":"0:71:1844","crate_id":0,"name":"remaining_capacity","span":{"filename":"src/arrayvec.rs","begin":[157,4],"end":[159,5]},"visibility":"public","docs":"Returns the capacity left in the `ArrayVec`.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3]);\narray.pop();\nassert_eq!(array.remaining_capacity(), 1);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:406:613":{"id":"0:406:613","crate_id":0,"name":"eq","span":{"filename":"src/array_string.rs","begin":[455,4],"end":[457,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:135:230":{"id":"0:135:230","crate_id":0,"name":"Target","span":{"filename":"src/arrayvec.rs","begin":[726,4],"end":[726,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"slice":{"generic":"T"}}}}},"0:546":{"id":"0:546","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[8,22],"end":[8,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::Eq","id":"2:2315:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2315:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:361":{"id":"0:361","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[40,0],"end":[46,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2587:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:363:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12122:34444":{"id":"2:12122:34444","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11878:419","self::pattern":"2:11715:2509"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11720:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11735:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:338:1776":{"id":"0:338:1776","crate_id":0,"name":"write","span":{"filename":"src/arrayvec.rs","begin":[1213,4],"end":[1218,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["data",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2866:210","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:189:2032":{"id":"0:189:2032","crate_id":0,"name":"next_back","span":{"filename":"src/arrayvec.rs","begin":[874,4],"end":[884,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41368:181","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:7321:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12037:28466":{"id":"2:12037:28466","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12036:28465"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2551-0:536:1646":{"id":"b:2:2551-0:536:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2510:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2520:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2554:128","2:2555:1471"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2682:220-0:175:1648":{"id":"a:2:2682:220-0:175:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2682:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2682:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1648","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2249-0:175:1648":{"id":"b:2:2249-0:175:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2689:2491","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2243:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1648","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2251:2080"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:7209-0:175:1648":{"id":"b:2:7209-0:175:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7321:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7205:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1648","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:7211:1758","2:7212:1648","2:7213:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"0:180":{"id":"0:180","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[852,0],"end":[871,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["max","is_sorted","array_chunks","find_map","zip","try_fold","by_ref","map_while","filter","gt","nth","max_by","is_sorted_by","sum","try_find","size_hint","try_for_each","try_collect","scan","filter_map","take","step_by","collect","ge","max_by_key","is_sorted_by_key","product","rposition","fold","collect_into","flat_map","enumerate","chain","lt","__iterator_get_unchecked","cmp_by","unzip","reduce","cmp","partition","eq","flatten","peekable","position","intersperse","min","next_chunk","cloned","min_by","partial_cmp_by","count","copied","try_reduce","partition_in_place","fuse","skip_while","all","intersperse_with","skip","last","rev","partial_cmp","ne","min_by_key","eq_by","cycle","any","find","is_partitioned","le","inspect","take_while","map","for_each","advance_by"],"trait":{"name":"Iterator","id":"2:7321:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1648","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:183:1758","0:184:953","0:185:2031"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:437:425":{"id":"0:437:425","crate_id":0,"name":"clone_from","span":{"filename":"src/array_string.rs","begin":[514,4],"end":[518,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:470:1471":{"id":"0:470:1471","crate_id":0,"name":"try_from","span":{"filename":"src/array_string.rs","begin":[623,4],"end":[627,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["f",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41512:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:2520:237","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2540-0:50:1647":{"id":"b:2:2540-0:50:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2513:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2542:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:7213:784":{"id":"2:7213:784","crate_id":2,"name":"into_iter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:544":{"id":"0:544","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[8,22],"end":[8,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2693:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2699:228-0:528:1645":{"id":"a:2:2699:228-0:528:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2699:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:7212:1648":{"id":"2:7212:1648","crate_id":2,"name":"IntoIter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"I"}}}},"b:2:2608-0:536:1646":{"id":"b:2:2608-0:536:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:2601:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2689:2491","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:3367:2551","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2610:3476"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"E"}}}},"0:162":{"id":"0:162","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[820,0],"end":[824,1]},"visibility":"default","docs":"Iterate the `ArrayVec` with mutable references to each element.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3]);\n\nfor elt in &mut array {\n    // ...\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7205:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}},"items":["0:166:1758","0:167:1648","0:168:784"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2536-0:528:1645":{"id":"b:2:2536-0:528:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2513:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2510:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2539:2824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12039:7502":{"id":"2:12039:7502","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:11878:419"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43307:2515","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:79:1887":{"id":"0:79:1887","crate_id":0,"name":"try_insert","span":{"filename":"src/arrayvec.rs","begin":[304,4],"end":[328,5]},"visibility":"public","docs":"Insert `element` at position `index`.\n\nShift up all elements after `index`; the `index` must be less than\nor equal to the length.\n\nReturns an error if vector is already at full capacity.\n\n***Panics*** `index` is out of bounds.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::<_, 2>::new();\n\nassert!(array.try_insert(0, \"x\").is_ok());\nassert!(array.try_insert(0, \"y\").is_ok());\nassert!(array.try_insert(0, \"z\").is_err());\nassert_eq!(&array[..], &[\"y\", \"x\"]);\n\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}],["element",{"generic":"T"}]],"output":{"resolved_path":{"name":"Result","id":"2:41512:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2682:220-0:528:1645":{"id":"a:2:2682:220-0:528:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2682:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:458:709":{"id":"0:458:709","crate_id":0,"name":"ge","span":{"filename":"src/array_string.rs","begin":[551,4],"end":[551,67]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12084:34432":{"id":"2:12084:34432","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41368:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5382":{"id":"5:5382","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5383:35099","5:5384:2008","5:5387:35100","5:5390:35101","5:5398:35102","5:5399:35103","5:5400:3318","5:5401:29663","5:5402:29664"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:523-0:536:1646":{"id":"0:523-0:536:1646","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[57,0],"end":[57,37]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::errors::CapacityError","name":"CapacityError","id":"0:536:1646","glob":false}}},"0:539":{"id":"0:539","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[8,9],"end":[8,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2262:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2262:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:541:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:122:1768":{"id":"0:122:1768","crate_id":0,"name":"as_mut_ptr","span":{"filename":"src/arrayvec.rs","begin":[700,4],"end":[702,5]},"visibility":"public","docs":"Return a raw mutable pointer to the vector's buffer.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:503:668":{"id":"0:503:668","crate_id":0,"name":"fmt","span":{"filename":"src/errors.rs","begin":[39,4],"end":[41,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9120:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9109:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:274":{"id":"0:274","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1094,0],"end":[1103,1]},"visibility":"default","docs":"Create an `ArrayVec` from an iterator.\n \n***Panics*** if the number of elements in the iterator exceeds the arrayvec's capacity.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromIterator","id":"2:7201:134","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:277:697"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:559:1035":{"id":"0:559:1035","crate_id":0,"name":"partial_cmp","span":{"filename":"src/errors.rs","begin":[8,42],"end":[8,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:41368:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30835:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:684-0:50:1647":{"id":"b:5:684-0:50:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2262:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["5:686:2471","5:687:2881","5:688:2882"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8253:2646-0:205:1649":{"id":"a:2:8253:2646-0:205:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8253:2646","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8253:2646","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:80:1777":{"id":"0:80:1777","crate_id":0,"name":"pop","span":{"filename":"src/arrayvec.rs","begin":[344,4],"end":[346,5]},"visibility":"public","docs":"Remove the last element in the vector and return it.\n\nReturn `Some(` *element* `)` if the vector is non-empty, else `None`.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::<_, 2>::new();\n\narray.push(1);\n\nassert_eq!(array.pop(), Some(1));\nassert_eq!(array.pop(), None);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41368:181","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:383:2139":{"id":"0:383:2139","crate_id":0,"name":"try_push_str","span":{"filename":"src/array_string.rs","begin":[279,4],"end":[291,5]},"visibility":"public","docs":"Adds the given string slice to the end of the string.\n\nReturns `Ok` if the push succeeds.\n\n**Errors** if the backing array is not large enough to fit the string.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<2>::new();\n\nstring.try_push_str(\"a\").unwrap();\nlet overflow1 = string.try_push_str(\"bc\");\nstring.try_push_str(\"d\").unwrap();\nlet overflow2 = string.try_push_str(\"ef\");\n\nassert_eq!(&string[..], \"ad\");\nassert_eq!(overflow1.unwrap_err().element(), \"bc\");\nassert_eq!(overflow2.unwrap_err().element(), \"ef\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["s",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41512:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12104:34438":{"id":"2:12104:34438","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:0:1641":{"id":"0:0:1641","crate_id":0,"name":"arrayvec","span":{"filename":"src/lib.rs","begin":[1,0],"end":[59,53]},"visibility":"public","docs":"**arrayvec** provides the types [`ArrayVec`] and [`ArrayString`]: \narray-backed vector and string types, which store their contents inline.\n\nThe arrayvec package has the following cargo features:\n\n- `std`\n  - Optional, enabled by default\n  - Use libstd; disable to use `no_std` instead.\n\n- `serde`\n  - Optional\n  - Enable serialization for ArrayVec and ArrayString using serde 1.x\n\n## Rust Version\n\nThis version of arrayvec requires Rust 1.51 or later.\n","links":{"`ArrayString`":"0:528:1645","`ArrayVec`":"0:50:1647"},"attrs":["#![doc(html_root_url = \"https://docs.rs/arrayvec/0.7/\")]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:522-0:528:1645","0:523-0:536:1646","0:525-0:50:1647","0:526-0:175:1648","0:527-0:205:1649"],"is_stripped":false}}},"2:12109:34441":{"id":"2:12109:34441","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5400:3318":{"id":"5:5400:3318","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7254:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7254:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:688:2882":{"id":"5:688:2882","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:287:729":{"id":"0:287:729","crate_id":0,"name":"hash","span":{"filename":"src/arrayvec.rs","begin":[1130,4],"end":[1132,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Hasher","id":"2:9373:145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:394":{"id":"0:394","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[422,0],"end":[432,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:2895:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:396:230","0:397:552"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:456:810":{"id":"0:456:810","crate_id":0,"name":"le","span":{"filename":"src/array_string.rs","begin":[549,4],"end":[549,67]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12028:28441":{"id":"2:12028:28441","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41370:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41368:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9816:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9816:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2249-0:50:1647":{"id":"b:2:2249-0:50:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2689:2491","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2243:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2251:2080"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:328:844":{"id":"0:328:844","crate_id":0,"name":"lt","span":{"filename":"src/arrayvec.rs","begin":[1185,4],"end":[1187,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:108:1760":{"id":"0:108:1760","crate_id":0,"name":"set_len","span":{"filename":"src/arrayvec.rs","begin":[540,4],"end":[544,5]},"visibility":"public","docs":"Set the vector’s length without dropping or moving out elements\n\nThis method is `unsafe` because it changes the notion of the\nnumber of “valid” elements in the vector. Use with care.\n\nThis method uses *debug assertions* to check that `length` is\nnot greater than the capacity.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["length",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:331:726":{"id":"0:331:726","crate_id":0,"name":"gt","span":{"filename":"src/arrayvec.rs","begin":[1197,4],"end":[1199,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:72:1771":{"id":"0:72:1771","crate_id":0,"name":"push","span":{"filename":"src/arrayvec.rs","begin":[175,4],"end":[177,5]},"visibility":"public","docs":"Push `element` to the end of the vector.\n\n***Panics*** if the vector is already full.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::<_, 2>::new();\n\narray.push(1);\narray.push(2);\n\nassert_eq!(&array[..], &[1, 2]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["element",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:256":{"id":"0:256","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1011,0],"end":[1020,1]},"visibility":"default","docs":"Extend the `ArrayVec` with an iterator.\n \n***Panics*** if extending the vector exceeds its capacity.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["extend_one","extend_reserve"],"trait":{"name":"Extend","id":"2:7214:2052","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:259:2053"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:200:423":{"id":"0:200:423","crate_id":0,"name":"clone","span":{"filename":"src/arrayvec.rs","begin":[907,4],"end":[911,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"IntoIter","id":"0:175:1648","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3316-0:528:1645":{"id":"b:2:3316-0:528:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2689:2491","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3314:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3318:1485"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12017:34424":{"id":"2:12017:34424","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:499":{"id":"0:499","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[36,0],"end":[36,42]},"visibility":"default","docs":"Requires `features=\"std\"`.","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Any","id":"2:3314:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["cause","type_id","source","provide","description"],"trait":{"name":"Error","id":"2:2601:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:167:1648":{"id":"0:167:1648","crate_id":0,"name":"IntoIter","span":{"filename":"src/arrayvec.rs","begin":[822,4],"end":[822,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"IterMut","id":"2:9988:2025","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}}}}},"0:59:588":{"id":"0:59:588","crate_id":0,"name":"drop","span":{"filename":"src/arrayvec.rs","begin":[49,4],"end":[53,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:387:1921":{"id":"0:387:1921","crate_id":0,"name":"remove","span":{"filename":"src/array_string.rs","begin":[366,4],"end":[381,5]},"visibility":"public","docs":"Removes a `char` from this `ArrayString` at a byte position and returns it.\n\nThis is an `O(n)` operation, as it requires copying every element in the\narray.\n\n***Panics*** if `idx` is larger than or equal to the `ArrayString`’s length,\nor if it does not lie on a `char` boundary.\n\n```\nuse arrayvec::ArrayString;\n \nlet mut s = ArrayString::<3>::from(\"foo\").unwrap();\n\nassert_eq!(s.remove(0), 'f');\nassert_eq!(s.remove(1), 'o');\nassert_eq!(s.remove(0), 'o');\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["idx",{"primitive":"usize"}]],"output":{"primitive":"char"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12043:4439":{"id":"2:12043:4439","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:43585:2521","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:293":{"id":"0:293","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1143,0],"end":[1149,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2310:188","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2310:188","args":{"angle_bracketed":{"args":[{"type":{"slice":{"generic":"T"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:296:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:315:2081":{"id":"0:315:2081","crate_id":0,"name":"as_mut","span":{"filename":"src/arrayvec.rs","begin":[1166,4],"end":[1166,45]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"generic":"T"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:327:1035":{"id":"0:327:1035","crate_id":0,"name":"partial_cmp","span":{"filename":"src/arrayvec.rs","begin":[1181,4],"end":[1183,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41368:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"2:30835:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:464:127":{"id":"0:464:127","crate_id":0,"name":"Err","span":{"filename":"src/array_string.rs","begin":[563,4],"end":[563,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}}},"0:404":{"id":"0:404","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[453,0],"end":[458,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2310:188","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:406:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:525-0:50:1647":{"id":"0:525-0:50:1647","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[59,26],"end":[59,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::arrayvec::ArrayVec","name":"ArrayVec","id":"0:50:1647","glob":false}}},"2:12078:28478":{"id":"2:12078:28478","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:11878:419","self::pattern":"2:11715:2509","str::rsplitn":"2:12081:28480"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43435:2530","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2539:2824":{"id":"2:2539:2824","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2513:133"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:495:939":{"id":"0:495:939","crate_id":0,"name":"new","span":{"filename":"src/errors.rs","begin":[15,4],"end":[19,5]},"visibility":"public","docs":"Create a new `CapacityError` from `element`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["element",{"generic":"T"}]],"output":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2251:2080":{"id":"2:2251:2080","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:65:939":{"id":"0:65:939","crate_id":0,"name":"new","span":{"filename":"src/arrayvec.rs","begin":[80,4],"end":[85,5]},"visibility":"public","docs":"Create a new empty `ArrayVec`.\n\nThe maximum capacity is given by the generic parameter `CAP`.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::<_, 16>::new();\narray.push(1);\narray.push(2);\nassert_eq!(&array[..], &[1, 2]);\nassert_eq!(array.capacity(), 16);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:455:844":{"id":"0:455:844","crate_id":0,"name":"lt","span":{"filename":"src/array_string.rs","begin":[548,4],"end":[548,66]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2739:2567-0:175:1648":{"id":"a:2:2739:2567-0:175:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2739:2567","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2739:2567","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1648","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5384:2008":{"id":"5:5384:2008","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7254:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7254:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:190":{"id":"0:190","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[887,0],"end":[887,68]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:7266:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1648","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:522-0:528:1645":{"id":"0:522-0:528:1645","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[56,0],"end":[56,41]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::array_string::ArrayString","name":"ArrayString","id":"0:528:1645","glob":false}}},"0:418:1785":{"id":"0:418:1785","crate_id":0,"name":"borrow","span":{"filename":"src/array_string.rs","begin":[479,4],"end":[479,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:282:423":{"id":"0:282:423","crate_id":0,"name":"clone","span":{"filename":"src/arrayvec.rs","begin":[1108,4],"end":[1110,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:425":{"id":"0:425","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[492,0],"end":[495,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9150:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:427:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12090:2288":{"id":"2:12090:2288","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:11715:2509","`DoubleEndedIterator`":"2:7243:121","prim@char":"1:11878:419","str::matches":"2:12090:2288"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:43535:2525","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:74:1774":{"id":"0:74:1774","crate_id":0,"name":"push_unchecked","span":{"filename":"src/arrayvec.rs","begin":[226,4],"end":[228,5]},"visibility":"public","docs":"Push `element` to the end of the vector without checking the capacity.\n\nIt is up to the caller to ensure the capacity of the vector is\nsufficiently large.\n\nThis method uses *debug assertions* to check that the arrayvec is not full.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::<_, 2>::new();\n\nif array.len() + 2 <= array.capacity() {\n    unsafe {\n        array.push_unchecked(1);\n        array.push_unchecked(2);\n    }\n}\n\nassert_eq!(&array[..], &[1, 2]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["element",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:419":{"id":"0:419","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[482,0],"end":[485,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsRef","id":"2:2504:75","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:421:315"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:173:1648":{"id":"0:173:1648","crate_id":0,"name":"IntoIter","span":{"filename":"src/arrayvec.rs","begin":[839,4],"end":[839,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"IntoIter","id":"0:175:1648","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}}},"0:444:709":{"id":"0:444:709","crate_id":0,"name":"ge","span":{"filename":"src/array_string.rs","begin":[529,4],"end":[529,56]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:497:2236":{"id":"0:497:2236","crate_id":0,"name":"simplify","span":{"filename":"src/errors.rs","begin":[27,4],"end":[29,5]},"visibility":"public","docs":"Convert into a `CapacityError` that does not carry an element.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8252:2647-0:536:1646":{"id":"a:2:8252:2647-0:536:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8252:2647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8252:2647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12108:34440":{"id":"2:12108:34440","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12110:34442":{"id":"2:12110:34442","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:11878:419","self::pattern":"2:11715:2509"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11720:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11740:2501","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:378:1841":{"id":"0:378:1841","crate_id":0,"name":"is_full","span":{"filename":"src/array_string.rs","begin":[175,4],"end":[175,73]},"visibility":"public","docs":"Return if the `ArrayString` is completely filled.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<1>::new();\nassert!(!string.is_full());\nstring.push_str(\"A\");\nassert!(string.is_full());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:474:128":{"id":"0:474:128","crate_id":0,"name":"Error","span":{"filename":"src/array_string.rs","begin":[632,4],"end":[632,43]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"CapacityError","id":"0:536:1646","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Error","id":"2:42450:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"2:12131:34447":{"id":"2:12131:34447","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:11676:127","`FromStr`":"2:11675:2113"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41512:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:11675:2113","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:11675:2113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:86:1922":{"id":"0:86:1922","crate_id":0,"name":"pop_at","span":{"filename":"src/arrayvec.rs","begin":[438,4],"end":[444,5]},"visibility":"public","docs":"Remove the element at `index` and shift down the following elements.\n\nThis is a checked version of `.remove(index)`. Returns `None` if there\nis no element at `index`. Otherwise, return the element inside `Some`.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3]);\n\nassert!(array.pop_at(0).is_some());\nassert_eq!(&array[..], &[2, 3]);\n\nassert!(array.pop_at(2).is_none());\nassert!(array.pop_at(10).is_none());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:41368:181","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:323:60":{"id":"0:323:60","crate_id":0,"name":"default","span":{"filename":"src/arrayvec.rs","begin":[1175,4],"end":[1177,5]},"visibility":"default","docs":"Return an empty array","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"ArrayVec","id":"0:50:1647","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:410":{"id":"0:410","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[467,0],"end":[468,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2315:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:377:1836":{"id":"0:377:1836","crate_id":0,"name":"capacity","span":{"filename":"src/array_string.rs","begin":[163,4],"end":[163,49]},"visibility":"public","docs":"Return the capacity of the `ArrayString`.\n\n```\nuse arrayvec::ArrayString;\n\nlet string = ArrayString::<3>::new();\nassert_eq!(string.capacity(), 3);\n```","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:414:729":{"id":"0:414:729","crate_id":0,"name":"hash","span":{"filename":"src/array_string.rs","begin":[472,4],"end":[474,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["h",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Hasher","id":"2:9373:145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:303:1785":{"id":"0:303:1785","crate_id":0,"name":"borrow","span":{"filename":"src/arrayvec.rs","begin":[1154,4],"end":[1154,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"generic":"T"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:422":{"id":"0:422","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[487,0],"end":[490,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9145:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1645","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:424:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:339:2088":{"id":"0:339:2088","crate_id":0,"name":"flush","span":{"filename":"src/arrayvec.rs","begin":[1219,4],"end":[1219,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2866:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2555:1471":{"id":"2:2555:1471","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:41512:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2520:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:166:1758":{"id":"0:166:1758","crate_id":0,"name":"Item","span":{"filename":"src/arrayvec.rs","begin":[821,4],"end":[821,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"T"}}}}}},"2:12045:31356":{"id":"2:12045:31356","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:43623:2510","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12096:34435":{"id":"2:12096:34435","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:11715:2509","`DoubleEndedIterator`":"2:7243:121","prim@char":"1:11878:419","str::rmatch_indices":"2:12099:34436"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:43481:2523","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:145:694":{"id":"0:145:694","crate_id":0,"name":"from","span":{"filename":"src/arrayvec.rs","begin":[751,4],"end":[760,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["array",{"array":{"type":{"generic":"T"},"len":"CAP"}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12075:34431":{"id":"2:12075:34431","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:11715:2509","str::split":"2:12063:26496","prim@char":"1:11878:419","str::split_terminator":"2:12072:34430"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43399:2531","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11720:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11735:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12032:28443":{"id":"2:12032:28443","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9816:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9816:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"18:564:4662":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"1:10689:130":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"16:6767:5844":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"17:11813:5070":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"17:8256:21324":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"18:636:4674":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"16:2764:5656":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"17:13639:5551":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"2:4811:795":{"crate_id":2,"path":["core","iter"],"kind":"module"},"2:21802:7222":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"6:5773:6827":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:11941:112":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"2:11252:14667":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:7843:7975":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:41453:2643":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:30287:68":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"2:44338:3944":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"2:4785:33697":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"6:482:6205":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"5:1454:198":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"2:2744:106":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"2:21331:9295":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"16:5305:5698":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"17:10857:21350":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"18:491:4651":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"2:43766:7503":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:41368:181":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"17:9545:4775":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"6:5880:6878":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:40008:2520":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"9:481:20279":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"2:30040:9165":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"2:3379:2555":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"2:45247:7543":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:4902:2635":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"1:6009:3716":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"2:43630:2518":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:2739:2567":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"17:11234:4940":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"7:32:20266":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"1:1785:4508":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"6:5959:6927":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:30265:1788":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"5:1404:4457":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"2:40090:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"17:11299:4958":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"1:3676:4040":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"3:229:210":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"5:2087:7190":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"2:41263:7462":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"17:12345:5167":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"17:9523:7782":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"2:11715:2509":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"2:43127:2901":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:1914:3004":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"17:12403:5177":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"16:7635:5935":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"1:3128:30701":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"1:8072:3313":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"1:4759:9182":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"1:9979:4509":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"1:4507:9212":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"9:352:20295":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"16:6327:5776":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"1:638:7950":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:10289:2910":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"2:41217:3957":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"16:6236:7854":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:4113:3792":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"2:43585:2521":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"17:11573:5007":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"16:7588:7888":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"2:2765:2434":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"16:2404:5642":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"2:21087:9291":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"2:2848:2453":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:20593:31831":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:9117:26377":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"16:2720:5654":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"2:43349:2527":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"17:13564:5538":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"5:1716:3629":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"17:11459:3888":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"2:8678:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:42632:2477":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:22523:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:3994:9177":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"1:10823:3935":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"1:11888:642":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"11:2157:20353":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"2:40412:3352":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"11:1688:144":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"1:5021:7957":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:44350:3943":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"2:46150:7583":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2:45893:7564":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"17:10491:7816":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:43399:2531":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:10719:26324":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"6:4980:6737":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"17:12072:5110":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"2:20803:9302":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"16:4327:5675":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"2:46310:7585":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"2:41563:2025":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"17:10705:4884":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"16:3782:5670":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"5:0:286":{"crate_id":5,"path":["alloc"],"kind":"module"},"6:7503:7172":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"2:41965:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"6:4797:6643":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"18:660:4369":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"16:7711:5936":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"1:1982:185":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"16:6361:3904":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"6:6668:7057":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"6:4559:6567":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"1:2343:2976":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"5:6247:1649":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"6:506:6213":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"16:2862:5659":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"2:47566:7633":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"11:326:3625":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"2:41444:1648":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:2243:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"2:4605:14479":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"1:3131:8818":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"6:4294:6418":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:10052:7804":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"2:2288:430":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"2:22457:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"1:8257:4039":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"16:6671:5818":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"1:11903:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"11:744:4458":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"6:4790:6641":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"13:110:35296":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"2:20535:2819":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"2:9365:141":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:46356:7586":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"5:1432:4455":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:9162:2546":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"11:1524:20360":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"17:10589:4872":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"16:4904:5691":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"6:4688:6586":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"6:6553:7009":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"18:590:4663":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"6:4439:6509":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"16:5071:5696":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"17:13443:5482":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"16:3030:5662":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"11:1035:7907":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"2:43648:2520":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:20576:31833":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"5:3753:3629":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"17:9108:35308":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"2:1544:3375":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"2:2520:237":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"17:11544:4998":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"1:11902:1124":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"1:10667:7687":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"2:40180:3795":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"6:6755:7106":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"16:5741:21278":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"17:13292:5439":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"11:2076:7905":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"17:13135:5405":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"16:5920:5739":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"2:30863:2819":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"1:875:4457":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"1:5926:206":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"17:9895:7796":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"2:10261:2529":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:41885:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"17:12259:5158":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"1:3457:3386":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"16:4969:5693":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"17:13181:5411":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"17:9796:4807":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"17:10798:21349":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"2:46074:7581":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"17:13461:5486":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"6:6651:7056":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:41645:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:4389:3794":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"16:2502:5645":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"17:12236:5149":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"17:12098:5114":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"6:7520:7177":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"16:8025:5986":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"2:2159:2985":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"1:5067:191":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"2:42891:2892":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"1:3354:3375":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"1:1565:1648":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"6:1657:6363":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:9595:3691":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"1:11234:4531":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"2:22424:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"16:5847:5730":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:39935:7446":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"17:8310:21338":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"14:221:6081":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"17:10092:4412":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"1:3382:3383":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"17:10735:4888":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"17:9596:4799":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"14:31:7894":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"6:568:6253":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"1:6757:9288":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"17:12372:5171":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"18:0:2310":{"crate_id":18,"path":["memchr"],"kind":"module"},"16:7498:5929":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"16:4540:5680":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"17:13678:5563":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"2:3154:135":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:40433:3353":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"11:731:4457":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"1:8745:4065":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"17:12419:5178":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"17:1919:21387":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"17:8931:4788":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:39986:4472":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"6:5015:6750":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"2:11503:7493":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"2:44321:161":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:11885:1475":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"2:43197:2890":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"5:4818:204":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"1:7939:3404":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"17:9340:4382":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"1:5179:190":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:9145:112":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:3641:1648":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:10048:7995":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"5:7177:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:2978:2457":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"11:97:6129":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"2:2310:188":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"17:11069:21352":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"2:41571:1648":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"16:2808:5658":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"2:4436:3952":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"16:6662:5817":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"1:1895:2561":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"17:9886:7793":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"16:5886:5733":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"5:6096:9382":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"17:12126:5118":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"17:9488:7780":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"17:10626:4876":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"2:21664:7215":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"6:541:6239":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"5:6764:3677":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"6:62:14927":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"2:2507:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:42134:2540":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:11878:419":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"2:9158:2549":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"17:12770:5224":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"1:8157:4513":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"16:6981:7859":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"2:9627:3696":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"6:1525:6277":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"1:5385:7959":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"1:8239:7653":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"17:11037:21351":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"1:8952:7990":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"1:7788:7645":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"2:45526:7553":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:7805:7647":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"6:1539:6282":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"11:703:4456":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"2:21717:7216":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"2:39332:2103":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"17:9670:4394":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"16:5346:5699":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2:20878:2985":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"2:41765:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"16:7317:35300":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"11:1843:1648":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"1:2361:9145":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"5:3622:3638":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"17:13516:5501":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"6:4875:6679":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"6:4619:6579":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"2:21915:31174":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:2960:2465":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"17:8909:2245":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"2:5471:3375":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"16:5963:4427":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"14:7:7894":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"2:2690:2565":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"16:7449:7881":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"1:11159:7692":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"1:5320:7958":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"1:530:3704":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"1:3400:3385":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"1:361:7946":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"6:1668:6371":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"17:13015:5374":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:41805:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"17:3266:4416":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"16:4845:5689":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"16:4702:5684":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"17:9424:4796":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"2:39254:203":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"16:7652:198":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"1:7835:119":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"2:6588:2286":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"17:13469:5488":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"9:502:3937":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"2:39276:1782":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"2:7635:8929":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:47474:3981":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"2:45450:7551":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"16:6179:7828":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"1:5570:3714":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"1:6296:166":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"17:9946:4812":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:40692:3323":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"5:1351:2022":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:10774:2903":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"2:2755:2438":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"16:4624:5683":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"2:2836:2450":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"6:119:14981":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"18:671:4374":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"6:6151:6997":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"5:3184:4463":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:11427:7488":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"17:11422:4984":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"1:8904:7983":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"18:707:2504":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:10807:2904":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"1:2476:3399":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"17:10452:4420":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"16:3047:20422":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"17:13053:5385":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"2:43109:2898":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:7468:8004":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"16:2616:5650":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"17:9498:4797":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"2:2149:589":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"16:3063:4693":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"9:0:2302":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"5:4137:3375":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"1:7778:4732":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"5:2905:2471":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"17:13791:5594":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"1:3874:9168":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"16:3899:5673":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:21003:3966":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"2:3507:1649":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"16:4568:5681":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"2:2793:2440":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"6:4898:6689":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"16:3300:5666":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"17:9772:4806":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"1:6332:7966":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"17:13399:5471":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"2:21838:32130":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"5:7073:7201":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"17:12224:5147":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"16:2298:20394":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"17:10885:4905":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"11:1071:35294":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"17:11471:3887":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"17:13121:5402":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"2:44265:195":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"1:11024:26322":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"1:4175:4032":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"17:9826:4404":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"5:1981:3403":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"6:4941:6720":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"17:0:2309":{"crate_id":17,"path":["object"],"kind":"module"},"16:7757:5937":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"2:40024:2518":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"2:47352:7629":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:480:3703":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"11:2219:3941":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"6:4318:6435":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"6:4486:6531":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"11:638:2022":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"1:11678:3744":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"2:2516:238":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"2:47379:3971":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"17:13426:5478":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"5:3775:3638":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:39190:199":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"2:2240:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:2689:2491":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"2:40229:3339":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:11901:1547":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"17:11653:5030":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"1:9000:3798":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"18:644:4652":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"1:1583:4461":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"17:10080:7806":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"1:731:142":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:11740:2501":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:4144:3950":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"17:13698:5566":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"2:1665:1087":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"17:12293:5161":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"1:7015:4529":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"17:9148:35311":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"17:10026:4407":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"17:12902:5330":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:2504:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"1:1071:7907":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"2:40644:3314":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"2:39150:200":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"17:8195:21326":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"18:507:4652":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"2:44066:7520":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"17:11391:4980":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"1:11883:1365":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"16:5386:4780":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"5:3150:4462":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"5:680:231":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"17:12307:5163":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"2:45225:7542":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"2:39346:3793":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"17:10615:4875":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"2:25846:7248":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"16:3749:5669":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"1:3209:3413":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"1:9372:129":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"11:2198:4236":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:9408:2473":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:4022:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"6:1650:6359":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"6:7230:7154":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"2:40076:7453":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"17:11641:5027":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"2:44300:3945":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"2:12545:140":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"2:7243:121":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:7525:3731":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"1:7859:3403":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:2693:225":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"1:1844:3485":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"6:7258:7157":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"16:7697:3924":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"17:13477:5489":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"13:226:6128":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"6:5843:6864":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"2:42669:7480":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"2:41685:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:2844:2452":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:8151:2521":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"17:12536:5201":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"6:5755:6814":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"11:1859:4460":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"5:1197:5876":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"16:5104:5697":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"17:11339:4969":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"5:5833:8100":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"1:10459:3152":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"2:2262:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"18:766:25195":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"1:8316:2639":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"2:47028:7623":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"17:12607:5212":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"6:4751:6619":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:43158:2891":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:42377:68":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"18:599:35316":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:12360:192":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"1:8407:7667":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"17:11193:4931":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"17:8651:4780":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"2:11464:7491":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"2:2699:228":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"2:12385:7937":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:3679:4041":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"17:11891:5083":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"17:10691:21455":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"17:10428:7814":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"2:9164:2547":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"2:44050:7516":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"2:44126:7528":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"18:582:2819":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"2:39049:2469":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"17:9866:7791":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"16:5571:3895":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"1:11012:7673":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"1:3439:2085":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"6:4667:6583":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"16:2426:5643":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"1:11051:4059":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"2:40312:3345":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"6:4960:6730":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"5:5035:3665":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"2:2802:2447":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"17:11879:5081":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"17:10283:4850":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"1:7818:130":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"16:2470:3891":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"16:2694:5653":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"1:9182:3485":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"1:8044:3417":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"2:6677:3338":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"16:5367:20392":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"17:9068:35313":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"2:47276:7627":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:10056:2512":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"11:816:4459":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"17:9986:4815":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"17:12496:5198":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"1:11165:4528":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:3367:2551":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"1:585:9074":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"6:4423:6504":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"16:6460:3908":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"1:8733:186":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"1:11860:26321":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"5:5239:2508":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"17:9959:4813":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"2:42395:110":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"2:40700:3325":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"2:43858:7506":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:8283:7654":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"17:9443:4383":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"16:7366:21286":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"17:10721:4885":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"16:6218:7846":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"6:4571:6576":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"2:47370:3968":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"6:6700:7068":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:4380:3682":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"17:1034:4390":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"5:1314:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"1:5370:4038":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"2:2760:2435":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"6:7443:7168":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:2467:9153":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"17:562:4915":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"2:1754:3000":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"6:1908:16328":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"17:13612:5539":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"6:4865:6673":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"2:45642:7556":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"2:45195:7541":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2:42432:68":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"17:10334:4802":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:9154:2539":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"17:13041:5380":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"9:421:20282":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"1:4682:9186":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"2:2797:2442":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"17:1978:4403":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"16:5616:5701":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"6:4641:6581":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"11:867:7904":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"17:13763:5585":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"2:2908:1783":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"10:0:2303":{"crate_id":10,"path":["adler"],"kind":"module"},"16:6022:21280":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"6:5974:6929":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"6:6685:7062":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:39088:2466":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"2:21944:7240":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"2:21442:31711":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"6:5816:6844":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:3938:9172":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"5:7194:3988":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"2:46420:7588":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"5:633:7914":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"2:4:1014":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"1:11881:1049":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"2:41725:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"16:6575:21282":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"2:6771:3310":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"16:2668:5652":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"1:8384:7480":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"6:4288:6417":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"6:1564:6296":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"1:7795:7646":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"2:41495:2695":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"5:6578:3667":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"1:676:8103":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"1:1568:1649":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"2:43605:2513":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"17:9933:4810":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"6:1692:6388":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"16:2742:5655":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"2:45051:7535":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"6:5857:6865":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"5:5191:3638":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"6:6628:7055":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:3998:7928":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"2:41555:2022":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"17:10465:7815":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"18:548:141":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"1:9025:167":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"1:2613:3402":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"2:7201:134":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"6:6569:7021":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"1:5719:7964":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"1:1062:7905":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"2:43147:2900":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"17:10257:4413":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"2:4764:389":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"6:4827:6655":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:9298:7934":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"1:11900:789":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"2:8841:8931":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"17:8283:21337":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:9806:9153":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:936:9090":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"16:6376:3907":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"5:7102:1648":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"2:21115:3966":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"16:7837:5949":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:40422:3336":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"17:12622:4878":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"2:2161:2986":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"17:10527:21454":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"17:13689:5564":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"18:624:35315":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"1:7783:4511":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"1:11390:4042":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"6:4836:6658":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:4111:9192":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"2:7168:3328":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"2:1745:7209":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"17:12461:5186":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"11:859:7903":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"9:325:6171":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"6:4377:6479":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:4563:9172":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"2:41419:1758":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"1:8781:2022":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"2:22358:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"16:4037:5674":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"2:20769:2985":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"19:0:1031":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"17:975:4389":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"2:7164:3329":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:501:3650":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"2:3314:69":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:40050:4474":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"2:40447:3354":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"17:10516:4857":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"17:13865:5609":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"2:40667:3317":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"2:20989:9294":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:8223:7982":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"2:21430:3964":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"5:7012:1648":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"6:4813:6650":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"2:11786:14436":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"2:20868:9297":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr"],"kind":"trait"},"2:7591:2500":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"6:494:4061":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"16:2572:5648":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"3:0:443":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"5:3163:33802":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"1:10844:25896":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"1:4853:9220":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"16:7042:5873":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"5:863:3644":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"2:11675:2113":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"11:1839:2022":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"6:4803:6646":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"1:6865:8921":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"2:2785:2443":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"17:13803:5596":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"17:13265:5435":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"17:11136:4921":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"1:10928:3736":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"1:10819:7973":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"1:10311:4525":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"17:10989:4861":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"6:6057:6960":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"1:11897:1491":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"6:4404:6491":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"16:6488:5786":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"1:959:7904":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"1:3207:3412":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"2:3139:2460":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"2:40123:7455":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"11:840:7901":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"6:5995:6942":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"5:1078:4466":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2:3166:2464":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"17:13433:5479":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"9:52:8649":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"17:13667:5558":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"5:7161:9089":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"2:44058:7518":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"17:12550:5204":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"1:953:7903":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"17:9469:7778":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"16:7029:5870":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"16:3640:4697":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"1:7569:7640":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"6:6002:6943":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:40373:3349":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"6:1622:6334":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"17:9683:7787":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"2:43639:2519":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"5:1422:4459":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"11:1634:3634":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"11:1091:7909":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"5:1228:7905":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"1:4073:4516":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"1:11222:7968":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"2:43909:14443":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:4990:7957":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:45326:7546":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"6:595:6268":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"17:13356:5456":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"2:45718:7559":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:643:9077":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"5:5235:2507":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"16:4757:5686":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"16:6904:5854":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:2819:2446":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"6:4466:6521":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"1:10862:4043":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"1:7690:7973":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"17:9218:4802":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"17:13744:5580":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"1:2359:9144":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"6:1555:6290":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"17:10416:4417":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"17:9098:4377":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2:45862:7563":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:4325:3681":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"16:2786:5657":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"1:10699:119":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"6:7275:7167":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"17:10635:4877":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"2:47230:7626":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"1:8851:9254":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"2:11729:2504":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"5:4336:3659":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"1:11884:1395":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"11:768:3629":{"crate_id":11,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"2:2704:2101":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"17:13879:5612":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"8:0:2301":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"11:279:4444":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"18:609:7773":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"2:11268:7935":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"6:6691:7064":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:10133:2912":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"17:11969:5097":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"16:7803:5945":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"16:6868:5852":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"6:587:6263":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"2:47314:7628":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"2:44308:7531":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:8359:2502":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"6:4947:6723":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"17:10761:21348":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"2:40107:32120":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:930:7898":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"16:6164:5773":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"1:11896:1490":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"17:11446:3882":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"6:7485:7169":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:3246:3408":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"1:10654:7645":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"17:13159:5407":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:41428:2022":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"17:9641:4392":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"2:40043:4473":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"2:21977:9166":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"6:4521:6550":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"6:0:816":{"crate_id":6,"path":["libc"],"kind":"module"},"13:0:2299":{"crate_id":13,"path":["std_detect"],"kind":"module"},"1:6101:3720":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"11:1847:1649":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"2:47527:7632":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:3291:3396":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"16:6535:3622":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"2:40363:3348":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:11192:7695":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"17:247:7775":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"17:11502:4993":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"17:8360:21339":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"2:42657:145":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"6:4719:6605":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:3934:3375":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"17:11600:5016":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"17:9322:35307":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"11:359:3627":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"2:20741:9300":{"crate_id":2,"path":["core","core_simd","cast","SimdCastPtr"],"kind":"trait"},"5:7237:7206":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"6:6821:7142":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"16:7244:35302":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"2:11538:2512":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"17:12358:5168":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"2:21:681":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"2:2929:2456":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:5354:4037":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"1:11032:7525":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"2:2789:2441":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"2:42141:2548":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"2:42887:7487":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"2:40350:3334":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"6:6545:7004":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"17:9876:4731":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"5:7149:3941":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"6:6848:7148":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"17:13145:5406":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"1:1433:144":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:45916:7565":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"17:13625:5545":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"16:5677:21277":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"1:4255:4033":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"5:5711:1649":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"1:8121:3339":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"15:219:8646":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"2:41200:3955":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"1:8867:9256":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"1:10206:7959":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"17:9312:4381":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"2:22259:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"2:47390:3979":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"2:22226:178":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"2:45996:7566":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"11:2204:35295":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"1:8088:3390":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"17:10681:4881":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"1:2210:1778":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"2:40220:3330":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"17:10354:4854":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"17:10478:4421":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"1:11446:7696":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"1:5686:7960":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"17:13024:5378":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"1:11069:4064":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"1:10413:3410":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"5:6179:1940":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"2:43118:2897":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"5:4047:2025":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"1:8727:4525":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"1:9384:3733":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"2:47399:3969":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:11877:936":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"6:6008:6946":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"17:9566:4380":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:43895:7507":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:45596:7555":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"2:2742:2569":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"17:10555:4863":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"17:9734:7788":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"2:42679:7484":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"5:3276:3629":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"2:41319:7651":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"17:10270:7807":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"5:1443:4456":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"5:2169:34196":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"16:2319:5633":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"5:5293:1395":{"crate_id":5,"path":["alloc","str"],"kind":"module"},"17:9973:4814":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"16:7488:5928":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"18:736:25194":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"17:13324:5448":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"6:4383:6481":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"6:1728:6402":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"5:265:3638":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"1:1846:4510":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"17:13812:5600":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"2:44082:7524":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"6:4882:1001":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"5:35:3636":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"5:3688:7917":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"6:547:6242":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"6:5809:6840":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"16:3585:5668":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"16:4596:5682":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"2:43239:2907":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"6:6136:6986":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"17:11520:4994":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:45548:7554":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"9:174:8659":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"17:9839:7790":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"5:2116:7191":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"2:2895:117":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"2:2315:125":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"2:8673:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:6085:3701":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"2:2926:1938":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"16:7065:5875":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"2:21951:3947":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"17:10068:4410":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"2:9120:132":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"2:46232:7584":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"6:579:6258":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"1:7568:9153":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"5:1366:2025":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"16:7859:21289":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"17:13194:5417":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"2:2781:2439":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"2:22589:3967":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"18:681:4675":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"16:7016:3914":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"1:7694:7939":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"6:4970:6736":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"1:6485:9250":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"5:2407:7196":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"17:9478:7779":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"6:5988:6940":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"1:9379:4511":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"17:9617:4391":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"17:9534:4386":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"17:10316:4852":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"1:9035:219":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"16:5998:21279":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"1:6373:7967":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"0:0:1641":{"crate_id":0,"path":["arrayvec"],"kind":"module"},"1:11207:3799":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"1:11894:740":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"16:7293:5906":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"6:4707:6598":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"5:3534:2022":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"5:1058:8098":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"17:12980:5373":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"6:6016:6948":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"16:3872:5672":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:2746:2571":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"17:8521:21344":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"16:5630:7820":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"2:21560:9293":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"16:7743:3925":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"6:554:6245":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"16:6717:5830":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"5:3547:2025":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"6:4344:6455":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"2:20563:31707":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"18:614:35317":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"2:39308:2461":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"6:4492:6534":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:11827:8007":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"11:1009:7905":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"5:7027:1649":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"16:4932:5692":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"17:13659:5557":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"5:783:3640":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:45694:7558":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:8803:4046":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"17:10303:7809":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"2:41845:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"2:43595:2522":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:413:165":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:43920:7508":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"17:12178:5123":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"15:198:4438":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"6:4890:6684":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"6:1721:6399":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"17:12113:5117":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"5:4366:3375":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"16:6336:5777":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"6:4590:6577":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"11:665:1648":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"1:2205:129":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"6:7544:7181":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"16:7411:5745":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"6:1588:6313":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:2919:1806":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:43210:2905":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"5:815:3642":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"5:5641:232":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"17:8548:21345":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"2:45071:7536":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"2:39929:2519":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"6:4732:6609":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"16:7557:5931":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"16:3815:5671":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"17:11090:4917":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"2:32059:4470":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"1:7457:4915":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"18:574:4652":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"16:7509:3918":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"5:2908:7192":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"17:13499:5494":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"1:8773:4043":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"17:9038:35310":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"17:11785:5063":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"2:43184:2889":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"16:7626:7889":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"9:388:20281":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"1:888:4458":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"2:2923:2455":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"1:5502:9238":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"2:41436:2025":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"5:7094:1648":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"1:4736:3711":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"6:5051:6772":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"2:22325:177":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"5:5797:70":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"17:12138:5119":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2:2468:2496":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"17:9512:4385":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"17:9228:35306":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"17:12923:5338":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"2:20578:31836":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"2:2346:182":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"6:4911:6699":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"6:4773:6630":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"6:1715:6398":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:39339:7940":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"2:6980:3315":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"2:40095:7454":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:8759:7673":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"6:4609:6578":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"1:4103:4518":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"7:0:1537":{"crate_id":7,"path":["unwind"],"kind":"module"},"17:12592:5208":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"2:42423:71":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"16:6351:21281":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"17:8971:129":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"17:11844:5077":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"5:4005:3638":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"11:1866:4461":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"2:21113:9298":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"2:39526:28365":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"1:8205:7651":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"16:8156:3927":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"2:21786:7218":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"2:2587:116":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"18:521:25196":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"17:13453:5485":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"1:0:1387":{"crate_id":1,"path":["std"],"kind":"module"},"17:1787:4397":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"2:42450:128":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"2:21878:31168":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"6:4398:6488":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"6:653:15338":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:2513:133":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"6:4757:6621":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"11:675:4455":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"18:699:4678":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"17:12634:5215":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:9371:141":{"crate_id":2,"path":["core","hash","macros","Hash"],"kind":"proc_derive"},"17:11615:5022":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"2:5589:3333":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:11892:743":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"2:46386:7587":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"2:43275:2114":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"6:5022:6753":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"5:5817:3665":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"2:49372:9308":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"2:43752:7500":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"18:719:4682":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"2:45740:7560":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:8915:7985":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"16:3225:5665":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"1:9078:7676":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"16:8072:5990":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"17:13376:5463":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"9:445:20280":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"2:4254:207":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"2:5531:3344":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"17:12563:5205":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"2:10013:2528":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"16:2546:5647":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"2:45496:7552":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"17:420:4738":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"1:1080:7911":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"1:4413:9194":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"17:9409:21359":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"1:4124:4519":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"11:828:9090":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"2:40270:3341":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"14:40:4955":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"2:42472:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"1:8835:9255":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"1:11891:742":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"1:2207:7955":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"6:1546:6285":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"16:2594:5649":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"14:215:6079":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"5:1463:4467":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"5:689:111":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"16:7669:3921":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"17:12194:5128":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"17:13211:5422":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"1:11483:7701":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"16:5402:4781":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:42148:2549":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"6:4726:6606":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"16:7103:4051":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"1:922:4455":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"2:21770:7217":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:40200:2889":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:8965:4051":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"2:2682:220":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"17:12835:5275":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"5:7065:198":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"16:5594:3898":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:45265:7544":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:10223:8109":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"1:3781:4042":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"17:13316:5447":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"17:11258:4954":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"1:11882:312":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"17:9917:3936":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"16:2879:3889":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"2:43614:2511":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"16:7478:3917":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"16:7335:35303":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"2:9156:2548":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"2:2840:2451":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:8979:25841":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"1:3614:9164":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"5:5108:1365":{"crate_id":5,"path":["alloc","slice"],"kind":"module"},"5:3521:163":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"17:3142:4415":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"1:10135:4058":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"16:5779:5718":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"6:7252:7155":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"2:43301:2516":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"2:4335:3793":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"6:7578:7188":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"2:9152:2540":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"5:1242:7911":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"6:1532:6280":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:43229:2906":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"2:21899:31164":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"2:43058:4502":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"17:8667:4781":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"1:7929:7976":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"2:47425:3980":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"17:12483:5197":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"15:0:2307":{"crate_id":15,"path":["addr2line"],"kind":"module"},"16:3446:5667":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"9:234:7480":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"1:3248:3409":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"6:526:6230":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"1:7506:3729":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"6:1576:6305":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"16:4728:5685":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"18:80:4361":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:45141:7539":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"16:6819:5846":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"16:8129:7890":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"2:20728:9299":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"2:46120:7582":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:7256:25581":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"17:9577:4798":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"14:202:14444":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"6:4527:6553":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"6:7532:7179":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"6:6814:7139":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"18:755:4690":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"11:393:4449":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"6:6724:7080":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"16:6876:3912":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"2:9612:3692":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"17:13309:5446":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"17:9178:4379":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"1:8909:107":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"2:40682:3321":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"16:6943:21284":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"6:6785:7123":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"17:11372:4975":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"17:8490:21343":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"16:2931:20420":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"2:20759:9296":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr"],"kind":"trait"},"17:10125:4818":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"17:10649:4423":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"2:5383:3375":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"1:9059:4059":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"2:12333:33388":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:7656:9079":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"17:9696:4797":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"2:39135:2459":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"6:1736:6406":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"1:1783:4507":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"6:4767:6627":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"16:7529:3919":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"5:7254:224":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"6:4478:6526":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:21558:9153":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"17:8953:4789":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"1:8144:2528":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"5:7279:7927":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"16:5976:5626":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"2:47168:7625":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"2:7214:2052":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:1048:5876":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"17:12576:5206":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"16:6793:5845":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"1:8466:4520":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"1:9030:218":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"10:36:6134":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"1:10649:7682":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"16:7683:3923":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"16:6400:5781":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"18:538:4660":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:20548:31707":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"5:2906:34094":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"2:2824:2448":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:6482:4053":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"17:11484:4985":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"1:6538:8105":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"6:6116:6972":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"11:60:4443":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"1:2345:9140":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"6:6110:6971":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:9988:2025":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:8217:9193":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"2:20937:9290":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"2:40280:3342":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:7851:3401":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"2:2771:2437":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:11899:1489":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"2:3149:234":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"6:6578:7027":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"6:7491:7170":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"17:10569:4867":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"17:12282:5159":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:21861:7229":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:20595:31835":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:844:2022":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"2:12311:151":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"5:3129:33812":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"17:12059:5109":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"17:13257:5433":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"6:4681:6584":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"6:4509:6544":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:3160:2462":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"5:1382:1648":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"1:8476:2022":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:41354:3960":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"1:4678:9183":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"17:8979:35305":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"17:11628:5026":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"2:10206:2909":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:7587:7969":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"17:13411:5474":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"2:41925:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"16:8047:5987":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"16:4818:5688":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"14:165:20365":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"16:8090:5993":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:7594:3273":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"11:1873:4462":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"1:11142:3739":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"17:11282:4955":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"1:6409:3724":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"1:1589:4462":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"17:10104:4816":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"2:46570:7589":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"17:11011:4912":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"2:2352:189":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"2:20767:32252":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"11:119:3623":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"6:5717:6787":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:10275:2911":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"17:13385:5464":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:44105:122":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"2:11735:2503":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"2:22292:176":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"1:4638:9221":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"2:40137:9125":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"typedef"},"1:11849:9080":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"2:47504:7631":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"6:5967:6928":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"17:13066:5390":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"2:3231:2468":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"6:5870:6871":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"6:4538:6558":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"16:0:2308":{"crate_id":16,"path":["gimli"],"kind":"module"},"16:7767:21288":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"6:5747:6812":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"1:5499:6958":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"1:2549:3692":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:43553:2526":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"16:2448:5644":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"17:9853:4405":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"2:40673:3319":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:11893:744":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"5:6293:3638":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"2:21965:7243":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"2:42127:2539":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:1467:1636":{"crate_id":2,"path":["core","mem"],"kind":"module"},"2:8252:2647":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2:7205:152":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"16:5032:5695":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"2:32019:2495":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"1:7667:7642":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"1:10832:4035":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"1:9095:7993":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"1:5247:120":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"17:12033:5106":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"16:6935:7858":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"16:5418:5700":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"17:11946:5092":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"1:2539:3400":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"17:9907:4808":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"6:4629:6580":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"1:5563:3713":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"1:5439:4035":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"6:5058:6775":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"17:9188:35312":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"6:4416:6500":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"2:41234:9163":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"1:8493:7672":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"16:4872:5690":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"6:4653:6582":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"5:6607:3676":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"6:5798:6832":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"6:4546:6563":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"5:4167:3375":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"2:9150:120":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"17:9721:4396":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"2:40461:3355":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:7641:9078":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"6:7555:7185":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"5:780:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"17:12318:5164":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"17:13033:5379":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"1:857:2025":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"16:8214:2103":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"2:42640:7479":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"5:1042:4465":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"2:40289:3343":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:11720:2502":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"5:2636:7199":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"16:55:5977":{"crate_id":16,"path":["gimli","endianity","Endianity"],"kind":"trait"},"17:13651:5554":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"2:43930:7512":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"2:12600:2887":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"2:1628:588":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"11:1540:7912":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"1:10939:3737":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"2:47410:3972":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:42872:7486":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"2:45163:7540":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:10354:3734":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"17:9265:4380":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"16:5797:5722":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"6:4999:6745":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"1:3059:3416":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"6:1514:6272":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"17:10377:4855":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"2:43381:2532":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:44070:7521":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"2:44257:211":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"16:2830:3892":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"17:11109:4920":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"17:12019:4823":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"17:1947:4400":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"1:947:7901":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"2:3076:1784":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"16:7519:5930":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"2:20840:9303":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"2:45095:7537":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:1821:4509":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"17:12085:5112":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"1:8789:4527":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"2:44078:7523":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"16:7572:35298":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"5:2912:8122":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:2692:226":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:1572:3629":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"2:44363:7534":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"16:6854:5850":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"1:901:1649":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"2:40658:3150":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"17:12522:5200":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"2:5990:3357":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:7674:9114":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"6:5900:6894":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"16:8170:5997":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"2:2982:2458":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"2:30835:183":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"16:8142:7893":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"17:8683:4782":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:43623:2510":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"2:32055:7939":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"2:6724:4494":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"17:12388:5173":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"17:10670:4880":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"17:11832:5075":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"2:41283:32122":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"16:6474:3909":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"18:727:4685":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"17:487:7777":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"16:7259:2643":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"2:44247:205":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"2:40298:4482":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:1768:610":{"crate_id":1,"path":["std","env"],"kind":"module"},"5:211:3637":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"5:7208:32120":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:43481:2523":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"6:6800:7130":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:44138:14707":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:2371:9150":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"6:6024:6951":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"6:7538:7180":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"2:3194:2467":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"18:652:4652":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"2:22490:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"16:8269:128":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"1:6188:3713":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"17:11585:5010":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"11:821:7898":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"6:4743:6615":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"16:6506:4429":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"6:4698:6593":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"16:5655:3899":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"1:355:7945":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"6:4499:6537":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"17:11770:5059":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"1:554:7947":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"17:13506:5496":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"1:3167:3410":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"2:2777:2436":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:6907:3727":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"17:11060:4878":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"17:13169:5408":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"1:1594:4463":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"6:4845:6664":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:11487:7492":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:6133:7965":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"17:13367:5460":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"1:11890:745":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"1:10679:7646":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"5:7035:3646":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"2:43453:2529":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"11:1144:7911":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"2:8254:2645":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"6:5785:6831":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"5:3673:3403":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"2:40330:3356":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"16:2357:5640":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"17:12510:5199":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"17:13419:5477":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"6:7509:7173":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"16:6061:20393":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"2:43535:2525":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"17:11902:5084":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"1:3448:8932":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"1:8231:4513":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"5:2189:7195":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"6:1700:6389":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"6:5862:6866":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"5:880:2022":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"17:8598:21347":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"17:13233:5428":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"17:10505:4422":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:2750:2433":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"6:6047:6957":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"17:9653:7784":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"1:3910:9169":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"2:40382:3350":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"16:2905:3890":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"1:4327:4034":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"5:4321:245":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:43289:2517":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"17:12331:5166":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"2:40251:3332":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"5:6597:3675":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"6:4851:6665":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"17:10580:4871":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"2:10168:2527":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"2:39315:2559":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"2:4409:2573":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"6:5032:6758":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"2:20908:9304":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"17:11434:3886":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"6:562:6250":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"17:12959:5368":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"6:4821:6654":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"11:2212:6132":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"6:5077:6783":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"17:10598:4910":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"1:3464:3388":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"17:12006:5101":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"2:47106:7624":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"16:6544:3910":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"11:1561:7913":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"1:2573:3392":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"1:6552:3725":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"6:4991:6743":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"17:11993:5098":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"1:11088:7675":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"1:8922:25886":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"2:45296:7545":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:43943:2533":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"2:44062:7519":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:8822:4047":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"1:6236:206":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"17:11924:5091":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"16:2524:5646":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"6:4331:6445":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"16:7543:3920":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"6:4920:6705":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"5:7334:3629":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"6:5779:6830":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"1:8212:7652":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"1:9875:7466":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"5:4399:3659":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"17:12646:5222":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"1:4577:7052":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"2:30301:31146":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"2:47436:3970":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"17:9453:21360":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"2:47489:7630":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"17:11319:4968":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"6:1594:6315":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:12298:136":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"2:40031:14484":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"2:41605:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"11:0:2304":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"1:2214:3384":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"6:1609:6327":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:9110:2085":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"1:8138:2245":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"17:13082:5393":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"2:39956:31153":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"2:4010:7929":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:11490:7701":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"2:42648:2476":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:7662:3983":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"17:242:7774":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"2:4186:3951":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"1:635:7948":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"11:783:3633":{"crate_id":11,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"16:154:1647":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"16:6390:5780":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"2:41512:210":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"2:40341:3347":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"5:6366:1648":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"16:4510:5679":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"16:6254:3785":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"2:10247:2530":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"5:7268:7207":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"16:5708:5710":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"17:10402:7810":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"5:1213:7907":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:11458:7697":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"5:7018:4464":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"6:4553:6565":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"16:5693:5707":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"2:45366:7548":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"17:11721:5034":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"2:30359:31169":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"11:2087:7907":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"16:7467:5925":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2:42367:7471":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"1:8797:1648":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"17:11861:5080":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"17:386:7776":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"5:3117:2022":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"6:7526:7178":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"1:1985:184":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:2510:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:39944:7447":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"2:9816:222":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:8100:3391":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"6:1752:6411":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:30465:31150":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"5:280:2506":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"16:4445:5677":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"1:11328:4040":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"1:8163:4515":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:47451:3973":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"16:2967:20421":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"1:11889:643":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"6:1519:6274":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"1:11895:1493":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:45764:7561":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"17:13240:5430":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"2:43715:14442":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"17:8858:4787":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"1:3932:9171":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"5:4732:668":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"17:10015:7801":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"2:2814:2445":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"17:10823:4752":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"17:10142:21429":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"5:6739:1940":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"2:6920:3313":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"6:5935:6915":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"6:474:4453":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"2:39166:198":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"16:5000:5694":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"2:39210:202":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:8079:3415":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"16:7596:21287":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"2:11282:2145":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"16:5557:3893":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"6:6706:7069":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"2:43137:2899":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"2:9964:2022":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:2868:128":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"5:3124:4461":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:1731:3001":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"17:8389:21340":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"1:9040:7675":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:20921:9153":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"6:4392:6486":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"6:6605:7037":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:42407:5964":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"2:43783:7504":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:12515:3701":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"11:1126:7910":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"18:531:4657":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"6:5065:6778":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"6:4472:6523":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"16:5643:5705":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"5:963:3638":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"17:10660:4878":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"17:11532:4997":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"5:7351:3672":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"2:40170:3683":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"5:1413:4458":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"17:12433:5180":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"17:8753:4784":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"2:40057:14485":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:10416:3412":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"17:13332:5449":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"6:4932:6714":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"2:22391:3948":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"16:6307:3902":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"16:8256:6004":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"16:2642:5651":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"2:8253:2646":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"17:10743:4426":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"2:41342:3958":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"1:8957:7991":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"1:8890:7674":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"5:1612:3638":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"11:1879:4463":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"2:43219:2908":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"17:11821:5072":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"2:39353:3949":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:41306:7469":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"16:6919:35299":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"5:5907:3375":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"2:7266:2033":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"17:11220:4939":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"17:11556:4999":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"17:12799:5244":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"17:10936:4909":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"2:1635:2487":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"1:11876:371":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"16:6146:194":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"17:10747:128":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"5:3088:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"2:45385:7549":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:20983:9292":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:8482:4524":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"16:6696:21283":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"17:12158:5122":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"17:12046:5107":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"1:8261:7037":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"6:500:6210":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"2:39996:7451":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"7:79:20273":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"1:917:4459":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:9373:145":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"15:180:4433":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"16:8180:21290":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"2:43737:7495":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"16:6442:5785":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"17:13842:5605":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"16:4789:5687":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"2:42005:3963":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"6:4449:6515":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"18:515:4655":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"2:2809:2444":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"17:9350:35304":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"17:13101:5394":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"17:9138:4378":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"2:4263:7931":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"12:0:2305":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"1:6586:217":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"1:1924:2562":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"17:8788:4785":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"2:40260:3340":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"2:4258:7930":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"17:10923:4907":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"17:8573:21346":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"17:13721:5579":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"17:8718:4783":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"14:0:2306":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"2:43307:2515":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"5:6695:244":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"6:7497:7171":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"16:6132:5770":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"2:21853:7228":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"2:40398:3351":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"14:187:8928":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"17:9275:35309":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"2:41177:155":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"11:991:5876":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"2:10095:2902":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:1561:2022":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"6:4459:6518":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"1:5334:4036":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"2:21826:7226":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"11:2060:5876":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"16:6890:3913":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"5:1995:7917":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"6:4307:6427":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"10:44:6135":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"16:6201:7843":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"1:4680:9185":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"2:14:1776":{"crate_id":2,"path":["core","write"],"kind":"macro"},"1:11305:3741":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"1:5693:7963":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"17:9028:4375":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"16:5944:7822":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"2:41504:193":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"17:10897:4906":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"16:535:5624":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"17:11410:4981":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"2:45117:7538":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:2386:1786":{"crate_id":1,"path":["std","io"],"kind":"module"},"16:4400:5676":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"2:45815:7562":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2:45672:7557":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"5:4914:3375":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"17:10712:21456":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"17:9557:4802":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"1:2866:210":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"2:30271:2492":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"11:452:142":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"6:123:14982":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"17:8443:21342":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"1:11369:4041":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"1:4641:9194":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"17:2933:4414":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"1:8131:3353":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"16:8109:5996":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"1:11879:1509":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"2:43435:2530":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"11:1050:20359":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"1:4573:7048":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"1:10644:7680":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"17:11163:4927":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"2:9529:3689":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"1:3986:9175":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"17:8420:21341":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:45403:7550":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"17:9822:7789":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"6:7568:7186":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"6:5829:6853":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"17:10967:4910":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"1:3324:3319":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:2694:109":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"1:3924:9170":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"1:11898:1492":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"11:2192:6130":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"11:399:4450":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"2:21336:9305":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"1:8945:7989":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"16:6728:5831":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"17:13344:5455":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"16:6990:5869":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"17:9748:4802":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"1:5764:3715":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"6:6830:7145":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:21082:9153":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"2:46776:7621":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:2601:128":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"5:5485:3667":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"17:8823:4786":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"2:30231:1787":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"2:40242:3331":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"16:2378:5641":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"17:13249:5431":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"5:7224:7204":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"2:0:497":{"crate_id":2,"path":["core"],"kind":"module"},"16:7077:21285":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"2:44074:7522":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"16:2337:5634":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"2:2830:2449":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:8334:7664":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"2:7321:159":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:44086:7525":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"1:3982:9174":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"1:9998:4535":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"11:1852:3629":{"crate_id":11,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"5:7003:2888":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"2:40651:4496":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"6:4784:6638":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:12504:107":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"17:8632:21325":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"2:7598:3327":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:10419:3408":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"1:6621:7966":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"14:160:7894":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"18:481:3784":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"6:573:6255":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"6:1682:6382":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"5:2916:8123":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"16:5811:5723":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"17:10000:4891":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"1:11000:4065":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:32121:2572":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"6:4431:6506":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:40321:3346":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"6:4371:6478":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"1:8424:9233":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"1:3972:9173":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"6:1614:6329":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:39972:7450":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:1577:4460":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"6:6776:7120":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"5:7043:33813":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"1:10625:8003":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"2:43331:2528":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"17:13857:5606":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"2:22556:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"17:10545:4861":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"17:13219:5425":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"2:8846:8668":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:4844:9219":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"1:3134:8819":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"1:10945:3738":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"2:43317:2245":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"2:3179:31610":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"2:41486:2644":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:2831:3710":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"1:911:3629":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"1:11240:4532":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"6:488:6208":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"5:2077:3650":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"16:6243:35301":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"17:12449:5184":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"2:21106:9153":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"2:40016:2519":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"11:305:4447":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"1:926:4456":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"1:3169:3411":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"1:5556:206":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"17:12915:5337":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"2:42687:7485":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:6369:3150":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"2:43963:2534":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"16:7437:5924":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"2:46918:7622":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:5910:3713":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"1:4095:4517":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"2:41580:183":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:867:1648":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"1:7613:3152":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"6:1709:6395":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"5:7057:1648":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2:20981:9153":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"2:9413:2474":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:10709:3390":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"17:9628:7783":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"5:3975:1649":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"16:6431:5784":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"2:2853:2454":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"17:11800:5068":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"1:4435:9195":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"6:6598:7033":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"6:532:6233":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"17:13821:5602":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"6:4857:6668":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"17:10039:7802":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"16:6293:5775":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:43499:2524":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"5:3158:4460":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"17:12894:5327":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"1:11844:8670":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"16:6520:5792":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"1:618:2563":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"1:3880:9167":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"17:9380:21358":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"1:7934:7977":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"1:7592:7641":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"2:4045:14422":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:8168:9162":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"6:6587:7028":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"16:6558:5793":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"16:5724:5712":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"11:652:2025":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"1:4575:7050":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"17:11355:4973":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"2:45348:7547":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:1819:3003":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"4:0:2300":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"2:39232:201":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"6:5947:6920":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"17:13488:5493":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"18:96:4364":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"17:10440:4419":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"2:9109:210":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"18:690:4677":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"5:4207:2022":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2:2736:2566":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"17:10840:4903":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"16:6321:7857":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"2:9160:194":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:23036:7247":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"18:113:4367":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:44054:7517":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"5:6445:3638":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"17:13777:5587":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"11:757:1649":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"16:4480:5678":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"2:43831:7505":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"6:4952:6725":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"6:5071:6780":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"}},"external_crates":{"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":26}