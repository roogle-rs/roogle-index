{"root":"0:0:1654","crate_version":"0.7.4","includes_private":false,"index":{"0:109:1984":{"id":"0:109:1984","crate_id":0,"name":"try_extend_from_slice","span":{"filename":"src/arrayvec.rs","begin":[568,4],"end":[584,5]},"visibility":"public","docs":"Copy all elements from the slice and append to the `ArrayVec`.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut vec: ArrayVec<usize, 10> = ArrayVec::new();\nvec.push(1);\nvec.try_extend_from_slice(&[2, 3]).unwrap();\nassert_eq!(&vec[..], &[1, 2, 3]);\n```\n\n# Errors\n\nThis method will return an error if the capacity left (see\n[`remaining_capacity`]) is smaller then the length of the provided\nslice.\n\n[`remaining_capacity`]: #method.remaining_capacity","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"generic":"T"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41497:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:2695:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12140:9120":{"id":"2:12140:9120","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4539:9120"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:43630:2555","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:541:1659":{"id":"b:2:3319-0:541:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3321:1496"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:427":{"id":"0:427","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[496,0],"end":[499,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9145:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:429:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:312":{"id":"0:312","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1198,0],"end":[1200,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsMut","id":"2:2508:74","args":{"angle_bracketed":{"args":[{"type":{"slice":{"generic":"T"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:315:2110"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:7211:1776":{"id":"2:7211:1776","crate_id":2,"name":"Item","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"Iterator","id":"2:7321:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"0:381:1862":{"id":"0:381:1862","crate_id":0,"name":"remaining_capacity","span":{"filename":"src/array_string.rs","begin":[186,4],"end":[188,5]},"visibility":"public","docs":"Returns the capacity left in the `ArrayString`.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<3>::from(\"abc\").unwrap();\nstring.pop();\nassert_eq!(string.remaining_capacity(), 1);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:420:1803":{"id":"0:420:1803","crate_id":0,"name":"borrow","span":{"filename":"src/array_string.rs","begin":[483,4],"end":[483,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:167:1661":{"id":"0:167:1661","crate_id":0,"name":"IntoIter","span":{"filename":"src/arrayvec.rs","begin":[827,4],"end":[827,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"IterMut","id":"2:9988:2043","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}}}}},"0:304":{"id":"0:304","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1190,0],"end":[1192,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2244:98","args":{"angle_bracketed":{"args":[{"type":{"slice":{"generic":"T"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:307:2109"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:320":{"id":"0:320","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1206,0],"end":[1211,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2588:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:323:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12069:26193":{"id":"2:12069:26193","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:11715:2545","`DoubleEndedIterator`":"2:7243:121","prim@char":"1:11917:418","str::split":"2:12063:26189"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43340:2563","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11720:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11735:2539","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12084:33857":{"id":"2:12084:33857","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41353:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:391:1778":{"id":"0:391:1778","crate_id":0,"name":"set_len","span":{"filename":"src/array_string.rs","begin":[401,4],"end":[405,5]},"visibility":"public","docs":"Set the strings’s length.\n\nThis function is `unsafe` because it changes the notion of the\nnumber of “valid” bytes in the string. Use with care.\n\nThis method uses *debug assertions* to check the validity of `length`\nand may use other debug assertions.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["length",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:379:1854":{"id":"0:379:1854","crate_id":0,"name":"capacity","span":{"filename":"src/array_string.rs","begin":[163,4],"end":[163,49]},"visibility":"public","docs":"Return the capacity of the `ArrayString`.\n\n```\nuse arrayvec::ArrayString;\n\nlet string = ArrayString::<3>::new();\nassert_eq!(string.capacity(), 3);\n```","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:456:711":{"id":"0:456:711","crate_id":0,"name":"ge","span":{"filename":"src/array_string.rs","begin":[549,4],"end":[549,54]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2247-0:175:1661":{"id":"b:2:2247-0:175:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2241:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1661","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2249:1803"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:400":{"id":"0:400","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[438,0],"end":[448,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"DerefMut","id":"2:2910:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:402:553"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12023:33851":{"id":"2:12023:33851","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12141:33874":{"id":"2:12141:33874","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4536:33874"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:43639:2556","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:564:1039":{"id":"0:564:1039","crate_id":0,"name":"partial_cmp","span":{"filename":"src/errors.rs","begin":[8,42],"end":[8,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:41353:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30798:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2611:3514":{"id":"2:2611:3514","crate_id":2,"name":"provide","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["demand",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Demand","id":"2:3385:2591","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12013":{"id":"2:12013","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12014:815","2:12015:1850","2:12016:2237","2:12017:33849","2:12019:33850","2:12022:26113","2:12023:33851","2:12024:314","2:12025:1786","2:12026:26155","2:12028:26156","2:12030:26157","2:12032:26158","2:12034:33852","2:12035:33853","2:12036:26181","2:12037:26182","2:12038:2228","2:12039:7546","2:12040:3836","2:12041:31317","2:12042:31336","2:12043:4475","2:12044:33854","2:12045:31351","2:12046:3168","2:12049:26199","2:12052:26200","2:12055:2901","2:12059:2866","2:12063:26189","2:12066:26191","2:12069:26193","2:12072:33855","2:12075:33856","2:12078:26195","2:12081:26197","2:12084:33857","2:12087:33858","2:12090:2324","2:12093:33859","2:12096:33860","2:12099:33861","2:12102:33862","2:12104:33863","2:12106:33864","2:12108:33865","2:12109:33866","2:12110:33867","2:12113:33868","2:12116:25431","2:12119:26201","2:12122:33869","2:12125:33870","2:12128:33871","2:12131:33872","2:12133:26054","2:12134:26055","2:12135:26057","2:12136:26058","2:12137:26059","2:12138:33873","2:12140:9120","2:12141:33874"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:502:2266":{"id":"0:502:2266","crate_id":0,"name":"simplify","span":{"filename":"src/errors.rs","begin":[27,4],"end":[29,5]},"visibility":"public","docs":"Convert into a `CapacityError` that does not carry an element.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2550:128":{"id":"2:2550:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:217":{"id":"0:217","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[968,0],"end":[968,72]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:409":{"id":"0:409","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[464,0],"end":[469,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2311:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"primitive":"str"},"items":["0:411:612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12036:26181":{"id":"2:12036:26181","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:12037:26182"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:439":{"id":"0:439","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[518,0],"end":[528,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2263:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:441:422","0:442:424"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:145:696":{"id":"0:145:696","crate_id":0,"name":"from","span":{"filename":"src/arrayvec.rs","begin":[756,4],"end":[765,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["array",{"array":{"type":{"generic":"T"},"len":"CAP"}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12014:815":{"id":"2:12014:815","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:11917:418"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:460:848":{"id":"0:460:848","crate_id":0,"name":"lt","span":{"filename":"src/array_string.rs","begin":[557,4],"end":[557,66]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2683:220-0:533:1658":{"id":"a:2:2683:220-0:533:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2683:220-0:175:1661":{"id":"a:2:2683:220-0:175:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1661","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:74:1792":{"id":"0:74:1792","crate_id":0,"name":"push_unchecked","span":{"filename":"src/arrayvec.rs","begin":[229,4],"end":[231,5]},"visibility":"public","docs":"Push `element` to the end of the vector without checking the capacity.\n\nIt is up to the caller to ensure the capacity of the vector is\nsufficiently large.\n\nThis method uses *debug assertions* to check that the arrayvec is not full.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::<_, 2>::new();\n\nif array.len() + 2 <= array.capacity() {\n    unsafe {\n        array.push_unchecked(1);\n        array.push_unchecked(2);\n    }\n}\n\nassert_eq!(&array[..], &[1, 2]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["element",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12075:33856":{"id":"2:12075:33856","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:11715:2545","str::split":"2:12063:26189","prim@char":"1:11917:418","str::split_terminator":"2:12072:33855"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43390:2567","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11720:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11735:2539","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:680:2918":{"id":"5:680:2918","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2247-0:50:1660":{"id":"b:2:2247-0:50:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2241:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2249:1803"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8253:2683-0:50:1660":{"id":"a:2:8253:2683-0:50:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8253:2683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8253:2683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:59:587":{"id":"0:59:587","crate_id":0,"name":"drop","span":{"filename":"src/arrayvec.rs","begin":[49,4],"end":[53,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:155":{"id":"0:155","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[808,0],"end":[812,1]},"visibility":"default","docs":"Iterate the `ArrayVec` with references to each element.\n\n```\nuse arrayvec::ArrayVec;\n\nlet array = ArrayVec::from([1, 2, 3]);\n\nfor elt in &array {\n    // ...\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7205:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}},"items":["0:159:1776","0:160:1661","0:161:787"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:418":{"id":"0:418","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[481,0],"end":[484,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2241:97","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:420:1803"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:311:315":{"id":"0:311:315","crate_id":0,"name":"as_ref","span":{"filename":"src/arrayvec.rs","begin":[1195,4],"end":[1195,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"generic":"T"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:467":{"id":"0:467","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[570,0],"end":[577,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:11675:2142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:469:127","0:470:2265"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:141":{"id":"0:141","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[754,0],"end":[766,1]},"visibility":"default","docs":"Create an `ArrayVec` from an array.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3]);\nassert_eq!(array.len(), 3);\nassert_eq!(array.capacity(), 3);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2514:133","args":{"angle_bracketed":{"args":[{"type":{"array":{"type":{"generic":"T"},"len":"CAP"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:145:696"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:435:2262":{"id":"0:435:2262","crate_id":0,"name":"write_char","span":{"filename":"src/array_string.rs","begin":[509,4],"end":[511,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["c",{"primitive":"char"}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9109:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8253:2683-0:533:1658":{"id":"a:2:8253:2683-0:533:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8253:2683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:221":{"id":"0:221","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[970,0],"end":[984,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["for_each","advance_by","collect","max","is_sorted","array_chunks","find_map","try_fold","lt","by_ref","map_while","filter","nth","cloned","take","max_by","is_sorted_by","position","sum","try_find","try_for_each","try_collect","scan","filter_map","step_by","min","cmp","max_by_key","eq","ne","product","is_sorted_by_key","rposition","gt","fold","partial_cmp","collect_into","flat_map","enumerate","chain","count","le","__iterator_get_unchecked","map","cmp_by","unzip","reduce","partition","flatten","ge","peekable","intersperse","next_chunk","rev","min_by","partial_cmp_by","all","copied","try_reduce","partition_in_place","fuse","skip_while","intersperse_with","last","any","min_by_key","eq_by","skip","cycle","find","zip","is_partitioned","size_hint","inspect","take_while"],"trait":{"name":"Iterator","id":"2:7321:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:225:1776","0:226:957","0:228:2060"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:506":{"id":"0:506","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[38,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9150:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:508:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:235":{"id":"0:235","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[997,0],"end":[997,76]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:7266:2062","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:61":{"id":"0:61","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[63,0],"end":[707,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:65:943","0:66:945","0:67:815","0:68:1850","0:69:1854","0:70:1859","0:71:1862","0:72:1789","0:73:1791","0:74:1792","0:75:1798","0:76:1797","0:78:1904","0:79:1905","0:80:1795","0:81:1926","0:83:1927","0:84:1939","0:86:1940","0:87:1954","0:108:1778","0:109:1984","0:110:1946","0:113:2014","0:115:2015","0:118:2025","0:119:1781","0:120:1784","0:121:314","0:122:1786"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:183:1776":{"id":"0:183:1776","crate_id":0,"name":"Item","span":{"filename":"src/arrayvec.rs","begin":[884,4],"end":[884,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"2:2249:1803":{"id":"2:2249:1803","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:403":{"id":"0:403","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[450,0],"end":[455,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2311:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:405:612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:443":{"id":"0:443","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[530,0],"end":[539,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["lt","gt","ge","le"],"trait":{"name":"PartialOrd","id":"2:2353:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:445:1039","0:446:848","0:447:814","0:448:728","0:449:711"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:531-0:175:1661":{"id":"0:531-0:175:1661","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[63,36],"end":[63,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::arrayvec::IntoIter","name":"IntoIter","id":"0:175:1661","glob":false}}},"0:390:1797":{"id":"0:390:1797","crate_id":0,"name":"clear","span":{"filename":"src/array_string.rs","begin":[388,4],"end":[392,5]},"visibility":"public","docs":"Make the string empty.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:450":{"id":"0:450","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[541,0],"end":[550,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["lt","gt","ge","le"],"trait":{"name":"PartialOrd","id":"2:2353:189","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:452:1039","0:453:848","0:454:814","0:455:728","0:456:711"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2250-0:50:1660":{"id":"b:2:2250-0:50:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2244:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2252:2109"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:287:731":{"id":"0:287:731","crate_id":0,"name":"hash","span":{"filename":"src/arrayvec.rs","begin":[1163,4],"end":[1165,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Hasher","id":"2:9373:145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:121:314":{"id":"0:121:314","crate_id":0,"name":"as_ptr","span":{"filename":"src/arrayvec.rs","begin":[699,4],"end":[701,5]},"visibility":"public","docs":"Return a raw pointer to the vector's buffer.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:679:2507":{"id":"5:679:2507","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:154:1482":{"id":"0:154:1482","crate_id":0,"name":"try_from","span":{"filename":"src/arrayvec.rs","begin":[785,4],"end":[793,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["slice",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"generic":"T"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41497:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:2521:237","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:557":{"id":"0:557","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[8,31],"end":[8,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2693:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:153:128":{"id":"0:153:128","crate_id":0,"name":"Error","span":{"filename":"src/arrayvec.rs","begin":[783,4],"end":[783,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}}},"0:378:2179":{"id":"0:378:2179","crate_id":0,"name":"zero_filled","span":{"filename":"src/array_string.rs","begin":[142,4],"end":[152,5]},"visibility":"public","docs":"Create a new `ArrayString` value fully filled with ASCII NULL characters (`\\0`). Useful\nto be used as a buffer to collect external data or as a buffer for intermediate processing.\n\n```\nuse arrayvec::ArrayString;\n\nlet string = ArrayString::<16>::zero_filled();\nassert_eq!(string.len(), 16);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5443:27316":{"id":"5:5443:27316","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12136:26058"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7280:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:137":{"id":"0:137","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[737,0],"end":[742,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"DerefMut","id":"2:2910:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:140:553"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:140:553":{"id":"0:140:553","crate_id":0,"name":"deref_mut","span":{"filename":"src/arrayvec.rs","begin":[739,4],"end":[741,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:2897:117","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:213":{"id":"0:213","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[967,0],"end":[967,72]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:380:1859":{"id":"0:380:1859","crate_id":0,"name":"is_full","span":{"filename":"src/array_string.rs","begin":[175,4],"end":[175,73]},"visibility":"public","docs":"Return if the `ArrayString` is completely filled.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<1>::new();\nassert!(!string.is_full());\nstring.push_str(\"A\");\nassert!(string.is_full());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:432:670":{"id":"0:432:670","crate_id":0,"name":"fmt","span":{"filename":"src/array_string.rs","begin":[503,4],"end":[503,76]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9120:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9109:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:475:1482":{"id":"0:475:1482","crate_id":0,"name":"try_from","span":{"filename":"src/array_string.rs","begin":[632,4],"end":[636,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["f",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41497:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:2521:237","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:339:2117":{"id":"0:339:2117","crate_id":0,"name":"flush","span":{"filename":"src/arrayvec.rs","begin":[1252,4],"end":[1252,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2890:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8253:2683-0:175:1661":{"id":"a:2:8253:2683-0:175:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8253:2683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8253:2683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1661","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:448:728":{"id":"0:448:728","crate_id":0,"name":"gt","span":{"filename":"src/array_string.rs","begin":[537,4],"end":[537,55]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:168:787":{"id":"0:168:787","crate_id":0,"name":"into_iter","span":{"filename":"src/arrayvec.rs","begin":[828,4],"end":[828,60]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:7205:152","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:319:670":{"id":"0:319:670","crate_id":0,"name":"fmt","span":{"filename":"src/arrayvec.rs","begin":[1203,4],"end":[1203,76]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9120:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9109:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8252:2684-0:205:1662":{"id":"a:2:8252:2684-0:205:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8253:2683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8252:2684","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:150":{"id":"0:150","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[780,0],"end":[794,1]},"visibility":"default","docs":"Try to create an `ArrayVec` from a slice. This will return an error if the slice was too big to\nfit.\n\n```\nuse arrayvec::ArrayVec;\nuse std::convert::TryInto as _;\n\nlet array: ArrayVec<_, 4> = (&[1, 2, 3] as &[_]).try_into().unwrap();\nassert_eq!(array.len(), 3);\nassert_eq!(array.capacity(), 4);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2263:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2521:237","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"generic":"T"}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:153:128","0:154:1482"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3319-0:533:1658":{"id":"b:2:3319-0:533:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3321:1496"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2555:128":{"id":"2:2555:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:31982:2531","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:464":{"id":"0:464","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[563,0],"end":[568,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["clamp","max","min"],"trait":{"name":"Ord","id":"2:2347:182","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:466:429"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2541-0:541:1659":{"id":"b:2:2541-0:541:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2543:696"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:511:670":{"id":"0:511:670","crate_id":0,"name":"fmt","span":{"filename":"src/errors.rs","begin":[45,4],"end":[47,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9120:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9109:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:233:2061":{"id":"0:233:2061","crate_id":0,"name":"next_back","span":{"filename":"src/arrayvec.rs","begin":[988,4],"end":[994,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41353:181","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:7321:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12081:26197":{"id":"2:12081:26197","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:11917:418","str::splitn":"2:12078:26195","self::pattern":"2:11715:2545"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43444:2565","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11720:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11735:2539","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:365:60":{"id":"0:365:60","crate_id":0,"name":"default","span":{"filename":"src/array_string.rs","begin":[43,4],"end":[45,5]},"visibility":"default","docs":"Return an empty `ArrayString`","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:549":{"id":"0:549","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[8,22],"end":[8,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2694:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:71:1862":{"id":"0:71:1862","crate_id":0,"name":"remaining_capacity","span":{"filename":"src/arrayvec.rs","begin":[159,4],"end":[161,5]},"visibility":"public","docs":"Returns the capacity left in the `ArrayVec`.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3]);\narray.pop();\nassert_eq!(array.remaining_capacity(), 1);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:243:587":{"id":"0:243:587","crate_id":0,"name":"drop","span":{"filename":"src/arrayvec.rs","begin":[1000,4],"end":[1017,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:454:814":{"id":"0:454:814","crate_id":0,"name":"le","span":{"filename":"src/array_string.rs","begin":[547,4],"end":[547,54]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:681:2919":{"id":"5:681:2919","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5442:3356":{"id":"5:5442:3356","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7280:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7280:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:530-0:50:1660":{"id":"0:530-0:50:1660","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[63,26],"end":[63,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::arrayvec::ArrayVec","name":"ArrayVec","id":"0:50:1660","glob":false}}},"0:79:1905":{"id":"0:79:1905","crate_id":0,"name":"try_insert","span":{"filename":"src/arrayvec.rs","begin":[308,4],"end":[332,5]},"visibility":"public","docs":"Insert `element` at position `index`.\n\nShift up all elements after `index`; the `index` must be less than\nor equal to the length.\n\nReturns an error if vector is already at full capacity.\n\n***Panics*** `index` is out of bounds.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::<_, 2>::new();\n\nassert!(array.try_insert(0, \"x\").is_ok());\nassert!(array.try_insert(0, \"y\").is_ok());\nassert!(array.try_insert(0, \"z\").is_err());\nassert_eq!(&array[..], &[\"y\", \"x\"]);\n\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}],["element",{"generic":"T"}]],"output":{"resolved_path":{"name":"Result","id":"2:41497:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12093:33859":{"id":"2:12093:33859","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:11715:2545","`DoubleEndedIterator`":"2:7243:121","prim@char":"1:11917:418","str::matches":"2:12090:2324"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:43544:2562","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11720:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11735:2539","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2250-0:175:1661":{"id":"b:2:2250-0:175:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2244:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1661","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2252:2109"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8252:2684-0:533:1658":{"id":"a:2:8252:2684-0:533:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8252:2684","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:279":{"id":"0:279","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1138,0],"end":[1158,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2263:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2263:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:282:422","0:283:424"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:538":{"id":"0:538","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[33,9],"end":[33,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2695:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2252:2109":{"id":"2:2252:2109","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:283:424":{"id":"0:283:424","crate_id":0,"name":"clone_from","span":{"filename":"src/arrayvec.rs","begin":[1145,4],"end":[1157,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:184:957":{"id":"0:184:957","crate_id":0,"name":"next","span":{"filename":"src/arrayvec.rs","begin":[886,4],"end":[896,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41353:181","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:7321:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:368:943":{"id":"0:368:943","crate_id":0,"name":"new","span":{"filename":"src/array_string.rs","begin":[62,4],"end":[67,5]},"visibility":"public","docs":"Create a new empty `ArrayString`.\n\nCapacity is inferred from the type parameter.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<16>::new();\nstring.push_str(\"foo\");\nassert_eq!(&string[..], \"foo\");\nassert_eq!(string.capacity(), 16);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12028:26156":{"id":"2:12028:26156","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41355:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41353:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9816:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9816:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:330:711":{"id":"0:330:711","crate_id":0,"name":"ge","span":{"filename":"src/arrayvec.rs","begin":[1226,4],"end":[1228,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:69:1854":{"id":"0:69:1854","crate_id":0,"name":"capacity","span":{"filename":"src/arrayvec.rs","begin":[136,4],"end":[136,49]},"visibility":"public","docs":"Return the capacity of the `ArrayVec`.\n\n```\nuse arrayvec::ArrayVec;\n\nlet array = ArrayVec::from([1, 2, 3]);\nassert_eq!(array.capacity(), 3);\n```","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12038:2228":{"id":"2:12038:2228","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:11917:418"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43292:2552","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2250-0:205:1662":{"id":"b:2:2250-0:205:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2244:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2252:2109"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:393:2256":{"id":"0:393:2256","crate_id":0,"name":"as_mut_str","span":{"filename":"src/array_string.rs","begin":[413,4],"end":[415,5]},"visibility":"public","docs":"Return a mutable string slice of the whole `ArrayString`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:405:612":{"id":"0:405:612","crate_id":0,"name":"eq","span":{"filename":"src/array_string.rs","begin":[452,4],"end":[454,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:284":{"id":"0:284","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1160,0],"end":[1166,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"2:9365:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9365:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:287:731"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:429:670":{"id":"0:429:670","crate_id":0,"name":"fmt","span":{"filename":"src/array_string.rs","begin":[498,4],"end":[498,76]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9120:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9109:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2740:2603-0:205:1662":{"id":"a:2:2740:2603-0:205:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2740:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:7209-0:205:1662":{"id":"b:2:7209-0:205:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7321:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7205:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:7211:1776","2:7212:1661","2:7213:787"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"0:508:670":{"id":"0:508:670","crate_id":0,"name":"fmt","span":{"filename":"src/errors.rs","begin":[39,4],"end":[41,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9120:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9109:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12134:26055":{"id":"2:12134:26055","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39511:26067","Self::is_ascii":"2:12133:26054"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41353:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39511:26067","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5441:34528":{"id":"5:5441:34528","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:273:2542","`String`":"5:7280:224"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:273:2542","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7013:2925","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7280:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:470:2265":{"id":"0:470:2265","crate_id":0,"name":"from_str","span":{"filename":"src/array_string.rs","begin":[574,4],"end":[576,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41497:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:11675:2142","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:81:1926":{"id":"0:81:1926","crate_id":0,"name":"swap_remove","span":{"filename":"src/arrayvec.rs","begin":[371,4],"end":[376,5]},"visibility":"public","docs":"Remove the element at `index` and swap the last element into its place.\n\nThis operation is O(1).\n\nReturn the *element* if the index is in bounds, else panic.\n\n***Panics*** if the `index` is out of bounds.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3]);\n\nassert_eq!(array.swap_remove(0), 1);\nassert_eq!(&array[..], &[3, 2]);\n\nassert_eq!(array.swap_remove(1), 2);\nassert_eq!(&array[..], &[3]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:335:429":{"id":"0:335:429","crate_id":0,"name":"cmp","span":{"filename":"src/arrayvec.rs","begin":[1236,4],"end":[1238,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"cmp::Ordering","id":"2:30798:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:122:1786":{"id":"0:122:1786","crate_id":0,"name":"as_mut_ptr","span":{"filename":"src/arrayvec.rs","begin":[704,4],"end":[706,5]},"visibility":"public","docs":"Return a raw mutable pointer to the vector's buffer.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:303:1803":{"id":"0:303:1803","crate_id":0,"name":"borrow","span":{"filename":"src/arrayvec.rs","begin":[1187,4],"end":[1187,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"generic":"T"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:329:814":{"id":"0:329:814","crate_id":0,"name":"le","span":{"filename":"src/arrayvec.rs","begin":[1222,4],"end":[1224,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:447:814":{"id":"0:447:814","crate_id":0,"name":"le","span":{"filename":"src/array_string.rs","begin":[536,4],"end":[536,56]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8253:2683-0:541:1659":{"id":"a:2:8253:2683-0:541:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8253:2683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8253:2683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:226:957":{"id":"0:226:957","crate_id":0,"name":"next","span":{"filename":"src/arrayvec.rs","begin":[973,4],"end":[979,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41353:181","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:7321:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:166:1776":{"id":"0:166:1776","crate_id":0,"name":"Item","span":{"filename":"src/arrayvec.rs","begin":[826,4],"end":[826,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"T"}}}}}},"a:2:8252:2684-0:175:1661":{"id":"a:2:8252:2684-0:175:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8252:2684","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8252:2684","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1661","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:445:1039":{"id":"0:445:1039","crate_id":0,"name":"partial_cmp","span":{"filename":"src/array_string.rs","begin":[532,4],"end":[534,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41353:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"2:30798:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12138:33873":{"id":"2:12138:33873","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4538:33873"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:43621:2554","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:466:429":{"id":"0:466:429","crate_id":0,"name":"cmp","span":{"filename":"src/array_string.rs","begin":[565,4],"end":[567,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"cmp::Ordering","id":"2:30798:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:437:1601":{"id":"0:437:1601","crate_id":0,"name":"write_str","span":{"filename":"src/array_string.rs","begin":[513,4],"end":[515,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9109:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:332":{"id":"0:332","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1235,0],"end":[1239,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Ord","id":"2:2347:182","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clamp","max","min"],"trait":{"name":"Ord","id":"2:2347:182","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:335:429"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12040:3836":{"id":"2:12040:3836","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43308:2275","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:469:127":{"id":"0:469:127","crate_id":0,"name":"Err","span":{"filename":"src/array_string.rs","begin":[572,4],"end":[572,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}}},"2:12078:26195":{"id":"2:12078:26195","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:11917:418","self::pattern":"2:11715:2545","str::rsplitn":"2:12081:26197"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43426:2566","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:449:711":{"id":"0:449:711","crate_id":0,"name":"ge","span":{"filename":"src/array_string.rs","begin":[538,4],"end":[538,56]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:169":{"id":"0:169","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[842,0],"end":[848,1]},"visibility":"default","docs":"Iterate the `ArrayVec` with each element by value.\n\nThe vector is consumed by this operation.\n\n```\nuse arrayvec::ArrayVec;\n\nfor elt in ArrayVec::from([1, 2, 3]) {\n    // ...\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7205:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:172:1776","0:173:1661","0:174:787"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:186":{"id":"0:186","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[904,0],"end":[916,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:7243:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1661","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:189:2061"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:175:1661":{"id":"0:175:1661","crate_id":0,"name":"IntoIter","span":{"filename":"src/arrayvec.rs","begin":[878,0],"end":[881,1]},"visibility":"public","docs":"By-value iterator for `ArrayVec`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"impls":["a:2:8252:2684-0:175:1661","a:2:8253:2683-0:175:1661","a:2:2683:220-0:175:1661","a:2:2740:2603-0:175:1661","a:2:2700:228-0:175:1661","b:2:7209-0:175:1661","b:2:2247-0:175:1661","b:2:3319-0:175:1661","b:2:2552-0:175:1661","b:2:2250-0:175:1661","b:2:2541-0:175:1661","b:2:2547-0:175:1661","b:2:2537-0:175:1661","b:5:677-0:175:1661","0:197","0:180","0:190","0:193","0:201","0:186"]}}},"b:2:2541-0:533:1658":{"id":"b:2:2541-0:533:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2543:696"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:185:2060":{"id":"0:185:2060","crate_id":0,"name":"size_hint","span":{"filename":"src/arrayvec.rs","begin":[898,4],"end":[901,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"2:41353:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2547-0:533:1658":{"id":"b:2:2547-0:533:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2517:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2550:128","2:2551:1483"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:421":{"id":"0:421","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[486,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2244:98","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:423:2109"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12136:26058":{"id":"2:12136:26058","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:289":{"id":"0:289","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1168,0],"end":[1174,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2311:188","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2311:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:292:612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:3321:1496":{"id":"2:3321:1496","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39303:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2552-0:50:1660":{"id":"b:2:2552-0:50:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2555:128","2:2556:1482"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:197":{"id":"0:197","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[935,0],"end":[943,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2263:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2263:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1661","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:200:422"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:228:2060":{"id":"0:228:2060","crate_id":0,"name":"size_hint","span":{"filename":"src/arrayvec.rs","begin":[981,4],"end":[983,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"2:41353:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:205:1662":{"id":"0:205:1662","crate_id":0,"name":"Drain","span":{"filename":"src/arrayvec.rs","begin":[957,0],"end":[965,1]},"visibility":"public","docs":"A draining iterator for `ArrayVec`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"impls":["a:2:8252:2684-0:205:1662","a:2:8253:2683-0:205:1662","a:2:2740:2603-0:205:1662","b:2:7209-0:205:1662","b:2:2247-0:205:1662","b:2:3319-0:205:1662","b:2:2552-0:205:1662","b:2:2250-0:205:1662","b:2:2541-0:205:1662","b:2:2547-0:205:1662","b:2:2537-0:205:1662","0:217","0:239","0:235","0:229","0:213","0:221"]}}},"0:389:1939":{"id":"0:389:1939","crate_id":0,"name":"remove","span":{"filename":"src/array_string.rs","begin":[368,4],"end":[385,5]},"visibility":"public","docs":"Removes a `char` from this `ArrayString` at a byte position and returns it.\n\nThis is an `O(n)` operation, as it requires copying every element in the\narray.\n\n***Panics*** if `idx` is larger than or equal to the `ArrayString`’s length,\nor if it does not lie on a `char` boundary.\n\n```\nuse arrayvec::ArrayString;\n \nlet mut s = ArrayString::<3>::from(\"foo\").unwrap();\n\nassert_eq!(s.remove(0), 'f');\nassert_eq!(s.remove(1), 'o');\nassert_eq!(s.remove(0), 'o');\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["idx",{"primitive":"usize"}]],"output":{"primitive":"char"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:385:2168":{"id":"0:385:2168","crate_id":0,"name":"try_push_str","span":{"filename":"src/array_string.rs","begin":[281,4],"end":[293,5]},"visibility":"public","docs":"Adds the given string slice to the end of the string.\n\nReturns `Ok` if the push succeeds.\n\n**Errors** if the backing array is not large enough to fit the string.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<2>::new();\n\nstring.try_push_str(\"a\").unwrap();\nlet overflow1 = string.try_push_str(\"bc\");\nstring.try_push_str(\"d\").unwrap();\nlet overflow2 = string.try_push_str(\"ef\");\n\nassert_eq!(&string[..], \"ad\");\nassert_eq!(overflow1.unwrap_err().element(), \"bc\");\nassert_eq!(overflow2.unwrap_err().element(), \"ef\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["s",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41497:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:159:1776":{"id":"0:159:1776","crate_id":0,"name":"Item","span":{"filename":"src/arrayvec.rs","begin":[809,4],"end":[809,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}}},"a:2:2740:2603-0:533:1658":{"id":"a:2:2740:2603-0:533:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2740:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:84:1939":{"id":"0:84:1939","crate_id":0,"name":"remove","span":{"filename":"src/arrayvec.rs","begin":[419,4],"end":[424,5]},"visibility":"public","docs":"Remove the element at `index` and shift down the following elements.\n\nThe `index` must be strictly less than the length of the vector.\n\n***Panics*** if the `index` is out of bounds.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3]);\n\nlet removed_elt = array.remove(0);\nassert_eq!(removed_elt, 1);\nassert_eq!(&array[..], &[2, 3]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2683:220-0:50:1660":{"id":"a:2:2683:220-0:50:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:498":{"id":"0:498","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[13,0],"end":[30,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:500:943","0:501:1790","0:502:2266"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:5686-0:541:1659":{"id":"b:5:5686-0:541:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9150:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5684:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["5:5688:1460"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:462:728":{"id":"0:462:728","crate_id":0,"name":"gt","span":{"filename":"src/array_string.rs","begin":[559,4],"end":[559,66]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:239":{"id":"0:239","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[999,0],"end":[1018,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:2921:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:243:587"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2547-0:541:1659":{"id":"b:2:2547-0:541:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2517:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2550:128","2:2551:1483"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:471":{"id":"0:471","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[628,0],"end":[637,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2521:237","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:474:128","0:475:1482"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:461:814":{"id":"0:461:814","crate_id":0,"name":"le","span":{"filename":"src/array_string.rs","begin":[558,4],"end":[558,67]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8252:2684-0:541:1659":{"id":"a:2:8252:2684-0:541:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8252:2684","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8252:2684","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:72:1789":{"id":"0:72:1789","crate_id":0,"name":"push","span":{"filename":"src/arrayvec.rs","begin":[178,4],"end":[180,5]},"visibility":"public","docs":"Push `element` to the end of the vector.\n\n***Panics*** if the vector is already full.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::<_, 2>::new();\n\narray.push(1);\narray.push(2);\n\nassert_eq!(&array[..], &[1, 2]);\n```","links":{},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["element",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2683:220-0:541:1659":{"id":"a:2:2683:220-0:541:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12043:4475":{"id":"2:12043:4475","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:43576:2557","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:300":{"id":"0:300","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1186,0],"end":[1188,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2241:97","args":{"angle_bracketed":{"args":[{"type":{"slice":{"generic":"T"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:303:1803"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12116:25431":{"id":"2:12116:25431","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11917:418","self::pattern":"2:11715:2545"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41353:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2541-0:50:1660":{"id":"b:2:2541-0:50:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2543:696"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2740:2603-0:541:1659":{"id":"a:2:2740:2603-0:541:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2740:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2740:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2541-0:175:1661":{"id":"b:2:2541-0:175:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1661","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2543:696"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2547-0:175:1661":{"id":"b:2:2547-0:175:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2517:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1661","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2550:128","2:2551:1483"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:547":{"id":"0:547","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[8,16],"end":[8,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::marker::Copy","id":"2:2695:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2695:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:297":{"id":"0:297","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1184,0],"end":[1184,65]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2316:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2316:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2552-0:205:1662":{"id":"b:2:2552-0:205:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2555:128","2:2556:1482"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:201":{"id":"0:201","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[945,0],"end":[954,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9145:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9145:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1661","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:204:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2700:228-0:175:1661":{"id":"a:2:2700:228-0:175:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1661","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:119:1781":{"id":"0:119:1781","crate_id":0,"name":"as_slice","span":{"filename":"src/arrayvec.rs","begin":[689,4],"end":[691,5]},"visibility":"public","docs":"Return a slice containing all elements of the vector.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"generic":"T"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:67:815":{"id":"0:67:815","crate_id":0,"name":"len","span":{"filename":"src/arrayvec.rs","begin":[113,4],"end":[113,58]},"visibility":"public","docs":"Return the number of elements in the `ArrayVec`.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3]);\narray.pop();\nassert_eq!(array.len(), 2);\n```","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:259:2081":{"id":"0:259:2081","crate_id":0,"name":"extend","span":{"filename":"src/arrayvec.rs","begin":[1046,4],"end":[1050,5]},"visibility":"default","docs":"Extend the `ArrayVec` with an iterator.\n \n***Panics*** if extending the vector exceeds its capacity.","links":{},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["iter",{"generic":"I"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:7205:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:424":{"id":"0:424","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[491,0],"end":[494,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsRef","id":"2:2505:75","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:426:315"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:196:587":{"id":"0:196:587","crate_id":0,"name":"drop","span":{"filename":"src/arrayvec.rs","begin":[921,4],"end":[932,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:282:422":{"id":"0:282:422","crate_id":0,"name":"clone","span":{"filename":"src/arrayvec.rs","begin":[1141,4],"end":[1143,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:336":{"id":"0:336","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1245,0],"end":[1253,1]},"visibility":"default","docs":"`Write` appends written data to the end of the vector.\n\nRequires `features=\"std\"`.","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["write_fmt","is_write_vectored","by_ref","write_all_vectored","write_vectored","write_all"],"trait":{"name":"Write","id":"1:3463:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:338:1794","0:339:2117"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:76:1797":{"id":"0:76:1797","crate_id":0,"name":"clear","span":{"filename":"src/arrayvec.rs","begin":[253,4],"end":[255,5]},"visibility":"public","docs":"Remove all elements in the vector.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2247-0:541:1659":{"id":"b:2:2247-0:541:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2241:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2249:1803"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:677-0:541:1659":{"id":"b:5:677-0:541:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2263:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:673:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["5:679:2507","5:680:2918","5:681:2919"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:108:1778":{"id":"0:108:1778","crate_id":0,"name":"set_len","span":{"filename":"src/arrayvec.rs","begin":[544,4],"end":[548,5]},"visibility":"public","docs":"Set the vector’s length without dropping or moving out elements\n\nThis method is `unsafe` because it changes the notion of the\nnumber of “valid” elements in the vector. Use with care.\n\nThis method uses *debug assertions* to check that `length` is\nnot greater than the capacity.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["length",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:384:2212":{"id":"0:384:2212","crate_id":0,"name":"push_str","span":{"filename":"src/array_string.rs","begin":[257,4],"end":[259,5]},"visibility":"public","docs":"Adds the given string slice to the end of the string.\n\n***Panics*** if the backing array is not large enough to fit the string.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<2>::new();\n\nstring.push_str(\"a\");\nstring.push_str(\"d\");\n\nassert_eq!(&string[..], \"ad\");\n```","links":{},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:504":{"id":"0:504","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[36,0],"end":[36,42]},"visibility":"default","docs":"Requires `features=\"std\"`.","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["source","type_id","cause","provide","description"],"trait":{"name":"Error","id":"2:2602:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:528-0:541:1659":{"id":"0:528-0:541:1659","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,0],"end":[61,37]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::errors::CapacityError","name":"CapacityError","id":"0:541:1659","glob":false}}},"0:338:1794":{"id":"0:338:1794","crate_id":0,"name":"write","span":{"filename":"src/arrayvec.rs","begin":[1246,4],"end":[1251,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["data",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2890:210","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:453:848":{"id":"0:453:848","crate_id":0,"name":"lt","span":{"filename":"src/array_string.rs","begin":[546,4],"end":[546,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12024:314":{"id":"2:12024:314","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12025:1786","`u8`":"1:11934:1504"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12090:2324":{"id":"2:12090:2324","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:11715:2545","`DoubleEndedIterator`":"2:7243:121","prim@char":"1:11917:418","str::matches":"2:12090:2324"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:43526:2561","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12045:31351":{"id":"2:12045:31351","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:43614:2546","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5440:34527":{"id":"5:5440:34527","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7280:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7280:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:75:1798":{"id":"0:75:1798","crate_id":0,"name":"truncate","span":{"filename":"src/arrayvec.rs","begin":[248,4],"end":[250,5]},"visibility":"public","docs":"Shortens the vector, keeping the first `len` elements and dropping\nthe rest.\n\nIf `len` is greater than the vector’s current length this has no\neffect.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3, 4, 5]);\narray.truncate(3);\nassert_eq!(&array[..], &[1, 2, 3]);\narray.truncate(4);\nassert_eq!(&array[..], &[1, 2, 3]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["new_len",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:541:1659":{"id":"0:541:1659","crate_id":0,"name":"CapacityError","span":{"filename":"src/errors.rs","begin":[9,0],"end":[11,1]},"visibility":"public","docs":"Error value indicating insufficient capacity","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":{"tuple":[]},"synthetic":false}}}],"where_predicates":[]},"impls":["0:498","a:2:8252:2684-0:541:1659","a:2:8253:2683-0:541:1659","a:2:2683:220-0:541:1659","a:2:2740:2603-0:541:1659","a:2:2700:228-0:541:1659","b:2:2609-0:541:1659","b:2:2247-0:541:1659","b:2:3319-0:541:1659","b:2:2552-0:541:1659","b:2:2250-0:541:1659","b:2:2541-0:541:1659","b:2:2547-0:541:1659","b:2:2537-0:541:1659","b:5:5686-0:541:1659","b:5:677-0:541:1659","0:509","0:549","0:554","0:544","0:547","0:506","0:551","0:504","0:559","0:562","0:557"]}}},"0:173:1661":{"id":"0:173:1661","crate_id":0,"name":"IntoIter","span":{"filename":"src/arrayvec.rs","begin":[844,4],"end":[844,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"IntoIter","id":"0:175:1661","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}}},"b:2:2552-0:175:1661":{"id":"b:2:2552-0:175:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1661","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2555:128","2:2556:1482"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:193":{"id":"0:193","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[920,0],"end":[933,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:2921:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1661","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:196:587"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:406":{"id":"0:406","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[457,0],"end":[462,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2311:188","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:408:612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5429:34525":{"id":"5:5429:34525","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7280:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7280:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:677-0:533:1658":{"id":"b:5:677-0:533:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2263:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:673:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["5:679:2507","5:680:2918","5:681:2919"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12032:26158":{"id":"2:12032:26158","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9816:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9816:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2250-0:541:1659":{"id":"b:2:2250-0:541:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2244:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2252:2109"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2537-0:533:1658":{"id":"b:2:2537-0:533:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2540:2861"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:5686-0:533:1658":{"id":"b:5:5686-0:533:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9150:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5684:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["5:5688:1460"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:408:612":{"id":"0:408:612","crate_id":0,"name":"eq","span":{"filename":"src/array_string.rs","begin":[459,4],"end":[461,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:423:2109":{"id":"0:423:2109","crate_id":0,"name":"borrow_mut","span":{"filename":"src/array_string.rs","begin":[488,4],"end":[488,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12109:33866":{"id":"2:12109:33866","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:132":{"id":"0:132","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[729,0],"end":[735,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:2897:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:135:230","0:136:551"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12072:33855":{"id":"2:12072:33855","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:11715:2545","str::split":"2:12063:26189","prim@char":"1:11917:418","`DoubleEndedIterator`":"2:7243:121","str::rsplit_terminator":"2:12075:33856"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43372:2568","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:307:2109":{"id":"0:307:2109","crate_id":0,"name":"borrow_mut","span":{"filename":"src/arrayvec.rs","begin":[1191,4],"end":[1191,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"generic":"T"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:120:1784":{"id":"0:120:1784","crate_id":0,"name":"as_mut_slice","span":{"filename":"src/arrayvec.rs","begin":[694,4],"end":[696,5]},"visibility":"public","docs":"Return a mutable slice containing all elements of the vector.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"generic":"T"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:324":{"id":"0:324","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1213,0],"end":[1233,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2353:189","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["lt","gt","ge","le"],"trait":{"name":"PartialOrd","id":"2:2353:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:327:1039","0:328:848","0:329:814","0:330:711","0:331:728"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:308":{"id":"0:308","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1194,0],"end":[1196,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsRef","id":"2:2505:75","args":{"angle_bracketed":{"args":[{"type":{"slice":{"generic":"T"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:311:315"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:382:1789":{"id":"0:382:1789","crate_id":0,"name":"push","span":{"filename":"src/array_string.rs","begin":[205,4],"end":[207,5]},"visibility":"public","docs":"Adds the given char to the end of the string.\n\n***Panics*** if the backing array is not large enough to fit the additional char.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<2>::new();\n\nstring.push('a');\nstring.push('b');\n\nassert_eq!(&string[..], \"ab\");\n```","links":{},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["c",{"primitive":"char"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:561:612":{"id":"0:561:612","crate_id":0,"name":"eq","span":{"filename":"src/errors.rs","begin":[8,31],"end":[8,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:7212:1661":{"id":"2:7212:1661","crate_id":2,"name":"IntoIter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"I"}}}},"0:316":{"id":"0:316","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1202,0],"end":[1204,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9145:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9145:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:319:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:56":{"id":"0:56","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[48,0],"end":[54,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:2921:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:59:587"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2537-0:175:1661":{"id":"b:2:2537-0:175:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1661","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2540:2861"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:442:424":{"id":"0:442:424","crate_id":0,"name":"clone_from","span":{"filename":"src/array_string.rs","begin":[523,4],"end":[527,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:398:230":{"id":"0:398:230","crate_id":0,"name":"Target","span":{"filename":"src/array_string.rs","begin":[428,4],"end":[428,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"str"}}}},"0:292:612":{"id":"0:292:612","crate_id":0,"name":"eq","span":{"filename":"src/arrayvec.rs","begin":[1171,4],"end":[1173,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:327:1039":{"id":"0:327:1039","crate_id":0,"name":"partial_cmp","span":{"filename":"src/arrayvec.rs","begin":[1214,4],"end":[1216,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41353:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"2:30798:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:296:612":{"id":"0:296:612","crate_id":0,"name":"eq","span":{"filename":"src/arrayvec.rs","begin":[1179,4],"end":[1181,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"generic":"T"}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:331:728":{"id":"0:331:728","crate_id":0,"name":"gt","span":{"filename":"src/arrayvec.rs","begin":[1230,4],"end":[1232,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:416:731":{"id":"0:416:731","crate_id":0,"name":"hash","span":{"filename":"src/array_string.rs","begin":[476,4],"end":[478,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["h",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Hasher","id":"2:9373:145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:412":{"id":"0:412","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[471,0],"end":[472,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2316:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12015:1850":{"id":"2:12015:1850","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:175:1661":{"id":"b:2:3319-0:175:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1661","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3321:1496"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:189:2061":{"id":"0:189:2061","crate_id":0,"name":"next_back","span":{"filename":"src/arrayvec.rs","begin":[905,4],"end":[915,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41353:181","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:7321:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:373:2172":{"id":"0:373:2172","crate_id":0,"name":"from_byte_string","span":{"filename":"src/array_string.rs","begin":[120,4],"end":[130,5]},"visibility":"public","docs":"Create a new `ArrayString` from a byte string literal.\n\n**Errors** if the byte string literal is not valid UTF-8.\n\n```\nuse arrayvec::ArrayString;\n\nlet string = ArrayString::from_byte_string(b\"hello world\").unwrap();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["b",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"array":{"type":{"primitive":"u8"},"len":"CAP"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41497:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Utf8Error","id":"2:43266:2143","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2700:228-0:533:1658":{"id":"a:2:2700:228-0:533:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:459:1039":{"id":"0:459:1039","crate_id":0,"name":"partial_cmp","span":{"filename":"src/array_string.rs","begin":[554,4],"end":[556,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41353:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"2:30798:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2250-0:533:1658":{"id":"b:2:2250-0:533:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2244:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2252:2109"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2537-0:205:1662":{"id":"b:2:2537-0:205:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2540:2861"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12022:26113":{"id":"2:12022:26113","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11282:2174"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:200:422":{"id":"0:200:422","crate_id":0,"name":"clone","span":{"filename":"src/arrayvec.rs","begin":[938,4],"end":[942,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"IntoIter","id":"0:175:1661","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12039:7546":{"id":"2:12039:7546","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:11917:418"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43298:2551","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12046:3168":{"id":"2:12046:3168","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:11917:418","self::pattern":"2:11715:2545"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:455:728":{"id":"0:455:728","crate_id":0,"name":"gt","span":{"filename":"src/array_string.rs","begin":[548,4],"end":[548,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12049:26199":{"id":"2:12049:26199","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:11917:418","self::pattern":"2:11715:2545"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12052:26200":{"id":"2:12052:26200","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:11917:418","self::pattern":"2:11715:2545"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11720:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11735:2539","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12106:33864":{"id":"2:12106:33864","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12041:31317":{"id":"2:12041:31317","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12042:31336"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:43596:2549","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12110:33867":{"id":"2:12110:33867","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:11917:418","self::pattern":"2:11715:2545"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11720:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11740:2537","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12125:33870":{"id":"2:12125:33870","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11917:418","self::pattern":"2:11715:2545"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12133:26054":{"id":"2:12133:26054","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_is_ascii\", issue = \"111090\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5432:34526":{"id":"5:5432:34526","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7280:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7280:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2552-0:541:1659":{"id":"b:2:2552-0:541:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2555:128","2:2556:1482"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:559":{"id":"0:559","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[8,31],"end":[8,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::PartialEq","id":"2:2311:188","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2311:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:561:612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12035:33853":{"id":"2:12035:33853","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:11923:1402","crate::ops::IndexMut":"2:2984:2494","str::slice_unchecked":"2:12034:33852"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:204:670":{"id":"0:204:670","crate_id":0,"name":"fmt","span":{"filename":"src/arrayvec.rs","begin":[949,4],"end":[953,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9120:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9109:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12113:33868":{"id":"2:12113:33868","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11917:418","self::pattern":"2:11715:2545"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12119:26201":{"id":"2:12119:26201","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11917:418","self::pattern":"2:11715:2545"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41353:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11720:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11735:2539","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:118:2025":{"id":"0:118:2025","crate_id":0,"name":"take","span":{"filename":"src/arrayvec.rs","begin":[684,4],"end":[686,5]},"visibility":"public","docs":"Returns the ArrayVec, replacing the original with a new empty ArrayVec.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut v = ArrayVec::from([0, 1, 2, 3]);\nassert_eq!([0, 1, 2, 3], v.take().into_inner().unwrap());\nassert!(v.is_empty());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:73:1791":{"id":"0:73:1791","crate_id":0,"name":"try_push","span":{"filename":"src/arrayvec.rs","begin":[204,4],"end":[206,5]},"visibility":"public","docs":"Push `element` to the end of the vector.\n\nReturn `Ok` if the push succeeds, or return an error if the vector\nis already full.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::<_, 2>::new();\n\nlet push1 = array.try_push(1);\nlet push2 = array.try_push(2);\n\nassert!(push1.is_ok());\nassert!(push2.is_ok());\n\nassert_eq!(&array[..], &[1, 2]);\n\nlet overflow = array.try_push(3);\n\nassert!(overflow.is_err());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["element",{"generic":"T"}]],"output":{"resolved_path":{"name":"Result","id":"2:41497:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:65:943":{"id":"0:65:943","crate_id":0,"name":"new","span":{"filename":"src/arrayvec.rs","begin":[82,4],"end":[87,5]},"visibility":"public","docs":"Create a new empty `ArrayVec`.\n\nThe maximum capacity is given by the generic parameter `CAP`.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::<_, 16>::new();\narray.push(1);\narray.push(2);\nassert_eq!(&array[..], &[1, 2]);\nassert_eq!(array.capacity(), 16);\n```","links":{},"attrs":["#[inline]","#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:370:815":{"id":"0:370:815","crate_id":0,"name":"len","span":{"filename":"src/array_string.rs","begin":[85,4],"end":[85,58]},"visibility":"public","docs":"Return the length of the string.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:366":{"id":"0:366","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[48,0],"end":[424,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:368:943","0:369:945","0:370:815","0:371:1850","0:372:696","0:373:2172","0:378:2179","0:379:1854","0:380:1859","0:381:1862","0:382:1789","0:383:1791","0:384:2212","0:385:2168","0:387:1795","0:388:1798","0:389:1939","0:390:1797","0:391:1778","0:392:316","0:393:2256"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:501:1790":{"id":"0:501:1790","crate_id":0,"name":"element","span":{"filename":"src/errors.rs","begin":[22,4],"end":[24,5]},"visibility":"public","docs":"Extract the overflowing element","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:554":{"id":"0:554","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[8,26],"end":[8,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::Ord","id":"2:2347:182","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clamp","max","min"],"trait":{"name":"Ord","id":"2:2347:182","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:556:429"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12066:26191":{"id":"2:12066:26191","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:11917:418","self::pattern":"2:11715:2545"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:11538:2548","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12099:33861":{"id":"2:12099:33861","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:11715:2545","`DoubleEndedIterator`":"2:7243:121","prim@char":"1:11917:418","str::match_indices":"2:12096:33860"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:43490:2560","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11720:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11735:2539","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12102:33862":{"id":"2:12102:33862","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:229":{"id":"0:229","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[986,0],"end":[995,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:7243:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:233:2061"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:369:945":{"id":"0:369:945","crate_id":0,"name":"new_const","span":{"filename":"src/array_string.rs","begin":[78,4],"end":[81,5]},"visibility":"public","docs":"Create a new empty `ArrayString` (const fn).\n\nCapacity is inferred from the type parameter.\n\n```\nuse arrayvec::ArrayString;\n\nstatic ARRAY: ArrayString<1024> = ArrayString::new_const();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:433":{"id":"0:433","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[507,0],"end":[516,1]},"visibility":"default","docs":"`Write` appends written data to the end of the string.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["write_fmt","write_char"],"trait":{"name":"Write","id":"2:9110:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:435:2262","0:437:1601"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12104:33863":{"id":"2:12104:33863","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:135:230":{"id":"0:135:230","crate_id":0,"name":"Target","span":{"filename":"src/arrayvec.rs","begin":[730,4],"end":[730,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"slice":{"generic":"T"}}}}},"2:12108:33865":{"id":"2:12108:33865","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12131:33872":{"id":"2:12131:33872","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:11676:127","`FromStr`":"2:11675:2142"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41497:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:11675:2142","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:11675:2142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12087:33858":{"id":"2:12087:33858","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41353:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11720:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11735:2539","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:446:848":{"id":"0:446:848","crate_id":0,"name":"lt","span":{"filename":"src/array_string.rs","begin":[535,4],"end":[535,55]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:160:1661":{"id":"0:160:1661","crate_id":0,"name":"IntoIter","span":{"filename":"src/arrayvec.rs","begin":[810,4],"end":[810,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Iter","id":"2:9964:2040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}}}}},"b:2:2541-0:205:1662":{"id":"b:2:2541-0:205:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2543:696"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3319-0:50:1660":{"id":"b:2:3319-0:50:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3321:1496"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8253:2683-0:205:1662":{"id":"a:2:8253:2683-0:205:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8253:2683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8253:2683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:556:429":{"id":"0:556:429","crate_id":0,"name":"cmp","span":{"filename":"src/errors.rs","begin":[8,26],"end":[8,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30798:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:532-0:205:1662":{"id":"0:532-0:205:1662","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[63,46],"end":[63,51]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::arrayvec::Drain","name":"Drain","id":"0:205:1662","glob":false}}},"2:12137:26059":{"id":"2:12137:26059","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:7209-0:175:1661":{"id":"b:2:7209-0:175:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7321:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7205:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1661","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:7211:1776","2:7212:1661","2:7213:787"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"0:180":{"id":"0:180","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[883,0],"end":[902,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["for_each","advance_by","collect","max","is_sorted","array_chunks","find_map","try_fold","lt","by_ref","map_while","filter","nth","cloned","take","max_by","is_sorted_by","position","sum","try_find","try_for_each","try_collect","scan","filter_map","step_by","min","cmp","max_by_key","eq","ne","product","is_sorted_by_key","rposition","gt","fold","partial_cmp","collect_into","flat_map","enumerate","chain","count","le","__iterator_get_unchecked","map","cmp_by","unzip","reduce","partition","flatten","ge","peekable","intersperse","next_chunk","rev","min_by","partial_cmp_by","all","copied","try_reduce","partition_in_place","fuse","skip_while","intersperse_with","last","any","min_by_key","eq_by","skip","cycle","find","zip","is_partitioned","size_hint","inspect","take_while"],"trait":{"name":"Iterator","id":"2:7321:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1661","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:183:1776","0:184:957","0:185:2060"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:402:553":{"id":"0:402:553","crate_id":0,"name":"deref_mut","span":{"filename":"src/array_string.rs","begin":[441,4],"end":[447,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:388:1798":{"id":"0:388:1798","crate_id":0,"name":"truncate","span":{"filename":"src/array_string.rs","begin":[338,4],"end":[349,5]},"visibility":"public","docs":"Shortens this `ArrayString` to the specified length.\n\nIf `new_len` is greater than the string’s current length, this has no\neffect.\n\n***Panics*** if `new_len` does not lie on a `char` boundary.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<6>::from(\"foobar\").unwrap();\nstring.truncate(3);\nassert_eq!(&string[..], \"foo\");\nstring.truncate(4);\nassert_eq!(&string[..], \"foo\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["new_len",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:544":{"id":"0:544","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[8,9],"end":[8,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2263:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2263:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:546:422"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2609-0:541:1659":{"id":"b:2:2609-0:541:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:2602:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:3373:2587","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2611:3514"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"E"}}}},"0:387:1795":{"id":"0:387:1795","crate_id":0,"name":"pop","span":{"filename":"src/array_string.rs","begin":[310,4],"end":[320,5]},"visibility":"public","docs":"Removes the last character from the string and returns it.\n\nReturns `None` if this `ArrayString` is empty.\n\n```\nuse arrayvec::ArrayString;\n \nlet mut s = ArrayString::<3>::from(\"foo\").unwrap();\n\nassert_eq!(s.pop(), Some('o'));\nassert_eq!(s.pop(), Some('o'));\nassert_eq!(s.pop(), Some('f'));\n\nassert_eq!(s.pop(), None);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41353:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"char"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5425:34524":{"id":"5:5425:34524","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:273:2542","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7013:2925","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:273:2542","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}},{"type":{"resolved_path":{"name":"Global","id":"5:7013:2925","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2247-0:205:1662":{"id":"b:2:2247-0:205:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2241:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2249:1803"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:162":{"id":"0:162","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[825,0],"end":[829,1]},"visibility":"default","docs":"Iterate the `ArrayVec` with mutable references to each element.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3]);\n\nfor elt in &mut array {\n    // ...\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7205:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}},"items":["0:166:1776","0:167:1661","0:168:787"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:172:1776":{"id":"0:172:1776","crate_id":0,"name":"Item","span":{"filename":"src/arrayvec.rs","begin":[843,4],"end":[843,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:371:1850":{"id":"0:371:1850","crate_id":0,"name":"is_empty","span":{"filename":"src/array_string.rs","begin":[89,4],"end":[89,60]},"visibility":"public","docs":"Returns whether the string is empty.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:68:1850":{"id":"0:68:1850","crate_id":0,"name":"is_empty","span":{"filename":"src/arrayvec.rs","begin":[125,4],"end":[125,60]},"visibility":"public","docs":"Returns whether the `ArrayVec` is empty.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1]);\narray.pop();\nassert_eq!(array.is_empty(), true);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5688:1460":{"id":"5:5688:1460","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7280:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:277:699":{"id":"0:277:699","crate_id":0,"name":"from_iter","span":{"filename":"src/arrayvec.rs","begin":[1131,4],"end":[1135,5]},"visibility":"default","docs":"Create an `ArrayVec` from an iterator.\n \n***Panics*** if the number of elements in the iterator exceeds the arrayvec's capacity.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["iter",{"generic":"I"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:7205:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:476":{"id":"0:476","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[639,0],"end":[649,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2521:237","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Arguments","id":"2:42457:73","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:479:128","0:480:1482"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2551:1483":{"id":"2:2551:1483","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41497:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:225:1776":{"id":"0:225:1776","crate_id":0,"name":"Item","span":{"filename":"src/arrayvec.rs","begin":[971,4],"end":[971,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"b:2:3319-0:205:1662":{"id":"b:2:3319-0:205:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3321:1496"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:363":{"id":"0:363","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[40,0],"end":[46,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2588:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:365:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12019:33850":{"id":"2:12019:33850","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12017:33849"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:274":{"id":"0:274","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1127,0],"end":[1136,1]},"visibility":"default","docs":"Create an `ArrayVec` from an iterator.\n \n***Panics*** if the number of elements in the iterator exceeds the arrayvec's capacity.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromIterator","id":"2:7201:134","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:277:699"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:441:422":{"id":"0:441:422","crate_id":0,"name":"clone","span":{"filename":"src/array_string.rs","begin":[520,4],"end":[522,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2547-0:205:1662":{"id":"b:2:2547-0:205:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2517:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2550:128","2:2551:1483"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:551":{"id":"0:551","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[8,22],"end":[8,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::Eq","id":"2:2316:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2316:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12026:26155":{"id":"2:12026:26155","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41355:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41353:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9816:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9816:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8252:2684-0:50:1660":{"id":"a:2:8252:2684-0:50:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8252:2684","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8252:2684","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:457":{"id":"0:457","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[552,0],"end":[561,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["lt","gt","ge","le"],"trait":{"name":"PartialOrd","id":"2:2353:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"primitive":"str"},"items":["0:459:1039","0:460:848","0:461:814","0:462:728","0:463:711"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:83:1927":{"id":"0:83:1927","crate_id":0,"name":"swap_pop","span":{"filename":"src/arrayvec.rs","begin":[395,4],"end":[402,5]},"visibility":"public","docs":"Remove the element at `index` and swap the last element into its place.\n\nThis is a checked version of `.swap_remove`.  \nThis operation is O(1).\n\nReturn `Some(` *element* `)` if the index is in bounds, else `None`.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3]);\n\nassert_eq!(array.swap_pop(0), Some(1));\nassert_eq!(&array[..], &[3, 2]);\n\nassert_eq!(array.swap_pop(10), None);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:41353:181","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:7213:787":{"id":"2:7213:787","crate_id":2,"name":"into_iter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:430":{"id":"0:430","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[501,0],"end":[504,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9150:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:432:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:546:422":{"id":"0:546:422","crate_id":0,"name":"clone","span":{"filename":"src/errors.rs","begin":[8,9],"end":[8,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:527-0:533:1658":{"id":"0:527-0:533:1658","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[60,0],"end":[60,41]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::array_string::ArrayString","name":"ArrayString","id":"0:533:1658","glob":false}}},"2:12135:26057":{"id":"2:12135:26057","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5426:2026":{"id":"5:5426:2026","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7280:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7280:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:562":{"id":"0:562","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[8,42],"end":[8,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::PartialOrd","id":"2:2353:189","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["lt","gt","ge","le"],"trait":{"name":"PartialOrd","id":"2:2353:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:564:1039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2247-0:533:1658":{"id":"b:2:2247-0:533:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2241:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2249:1803"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:50:1660":{"id":"0:50:1660","crate_id":0,"name":"ArrayVec","span":{"filename":"src/arrayvec.rs","begin":[42,0],"end":[46,1]},"visibility":"public","docs":"A vector with a fixed capacity.\n\nThe `ArrayVec` is a vector backed by a fixed size array. It keeps track of\nthe number of initialized elements. The `ArrayVec<T, CAP>` is parameterized\nby `T` for the element type and `CAP` for the maximum capacity.\n\n`CAP` is of type `usize` but is range limited to `u32::MAX`; attempting to create larger\narrayvecs with larger capacity will panic.\n\nThe vector is a contiguous value (storing the elements inline) that you can store directly on\nthe stack if needed.\n\nIt offers a simple API but also dereferences to a slice, so that the full slice API is\navailable. The ArrayVec can be converted into a by value iterator.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"impls":["0:61","a:2:8252:2684-0:50:1660","a:2:8253:2683-0:50:1660","a:2:2683:220-0:50:1660","a:2:2740:2603-0:50:1660","a:2:2700:228-0:50:1660","b:2:2247-0:50:1660","b:2:3319-0:50:1660","b:2:2552-0:50:1660","b:2:2250-0:50:1660","b:2:2541-0:50:1660","b:2:2547-0:50:1660","b:2:2537-0:50:1660","b:5:677-0:50:1660","0:155","0:169","0:256","0:274","0:162","0:289","0:284","0:141","0:320","0:312","0:279","0:316","0:137","0:293","0:336","0:56","0:304","0:297","0:300","0:324","0:308","0:132","0:332","0:150"]}}},"0:479:128":{"id":"0:479:128","crate_id":0,"name":"Error","span":{"filename":"src/array_string.rs","begin":[641,4],"end":[641,43]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Error","id":"2:42435:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"0:480:1482":{"id":"0:480:1482","crate_id":0,"name":"try_from","span":{"filename":"src/array_string.rs","begin":[643,4],"end":[648,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["f",{"resolved_path":{"name":"fmt::Arguments","id":"2:42457:73","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41497:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:2521:237","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:509":{"id":"0:509","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[44,0],"end":[48,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9145:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:511:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:70:1859":{"id":"0:70:1859","crate_id":0,"name":"is_full","span":{"filename":"src/arrayvec.rs","begin":[148,4],"end":[148,73]},"visibility":"public","docs":"Return true if the `ArrayVec` is completely filled to its capacity, false otherwise.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::<_, 1>::new();\nassert!(!array.is_full());\narray.push(1);\nassert!(array.is_full());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2552-0:533:1658":{"id":"b:2:2552-0:533:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2555:128","2:2556:1482"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:414":{"id":"0:414","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[474,0],"end":[479,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9365:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:416:731"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:66:945":{"id":"0:66:945","crate_id":0,"name":"new_const","span":{"filename":"src/arrayvec.rs","begin":[98,4],"end":[101,5]},"visibility":"public","docs":"Create a new empty `ArrayVec` (const fn).\n\nThe maximum capacity is given by the generic parameter `CAP`.\n\n```\nuse arrayvec::ArrayVec;\n\nstatic ARRAY: ArrayVec<u8, 1024> = ArrayVec::new_const();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:328:848":{"id":"0:328:848","crate_id":0,"name":"lt","span":{"filename":"src/arrayvec.rs","begin":[1218,4],"end":[1220,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:0:1654":{"id":"0:0:1654","crate_id":0,"name":"arrayvec","span":{"filename":"src/lib.rs","begin":[1,0],"end":[63,53]},"visibility":"public","docs":"**arrayvec** provides the types [`ArrayVec`] and [`ArrayString`]: \narray-backed vector and string types, which store their contents inline.\n\nThe arrayvec package has the following cargo features:\n\n- `std`\n  - Optional, enabled by default\n  - Use libstd; disable to use `no_std` instead.\n\n- `serde`\n  - Optional\n  - Enable serialization for ArrayVec and ArrayString using serde 1.x\n\n- `zeroize`\n  - Optional\n  - Implement `Zeroize` for ArrayVec and ArrayString\n\n## Rust Version\n\nThis version of arrayvec requires Rust 1.51 or later.\n","links":{"`ArrayString`":"0:533:1658","`ArrayVec`":"0:50:1660"},"attrs":["#![doc(html_root_url = \"https://docs.rs/arrayvec/0.7/\")]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:527-0:533:1658","0:528-0:541:1659","0:530-0:50:1660","0:531-0:175:1661","0:532-0:205:1662"],"is_stripped":false}}},"a:2:2740:2603-0:50:1660":{"id":"a:2:2740:2603-0:50:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2740:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2740:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:677-0:50:1660":{"id":"b:5:677-0:50:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2263:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:673:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["5:679:2507","5:680:2918","5:681:2919"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:533:1658":{"id":"0:533:1658","crate_id":0,"name":"ArrayString","span":{"filename":"src/array_string.rs","begin":[34,0],"end":[38,1]},"visibility":"public","docs":"A string with a fixed capacity.\n\nThe `ArrayString` is a string backed by a fixed size array. It keeps track\nof its length, and is parameterized by `CAP` for the maximum capacity.\n\n`CAP` is of type `usize` but is range limited to `u32::MAX`; attempting to create larger\narrayvecs with larger capacity will panic.\n\nThe string is a contiguous value that you can store directly on the stack\nif needed.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"impls":["0:366","a:2:8252:2684-0:533:1658","a:2:8253:2683-0:533:1658","a:2:2683:220-0:533:1658","a:2:2740:2603-0:533:1658","a:2:2700:228-0:533:1658","b:2:2247-0:533:1658","b:2:3319-0:533:1658","b:2:2552-0:533:1658","b:2:2250-0:533:1658","b:2:2541-0:533:1658","b:2:2547-0:533:1658","b:2:2537-0:533:1658","b:5:5686-0:533:1658","b:5:677-0:533:1658","0:464","0:450","0:476","0:414","0:412","0:403","0:439","0:433","0:400","0:396","0:471","0:424","0:427","0:406","0:457","0:409","0:467","0:421","0:363","0:538","0:430","0:418","0:443"]}}},"b:2:2537-0:541:1659":{"id":"b:2:2537-0:541:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2540:2861"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12059:2866":{"id":"2:12059:2866","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41355:179","prim@char":"1:11917:418","self::pattern":"2:11715:2545"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41353:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11720:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11735:2539","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12063:26189":{"id":"2:12063:26189","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:11715:2545","`DoubleEndedIterator`":"2:7243:121","prim@char":"1:11917:418","str::split_whitespace":"2:12041:31317","str::rsplit":"2:12069:26193"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43322:2564","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:256":{"id":"0:256","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1041,0],"end":[1051,1]},"visibility":"default","docs":"Extend the `ArrayVec` with an iterator.\n \n***Panics*** if extending the vector exceeds its capacity.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["extend_reserve","extend_one"],"trait":{"name":"Extend","id":"2:7214:2080","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:259:2081"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2700:228-0:50:1660":{"id":"a:2:2700:228-0:50:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:113:2014":{"id":"0:113:2014","crate_id":0,"name":"into_inner","span":{"filename":"src/arrayvec.rs","begin":[656,4],"end":[662,5]},"visibility":"public","docs":"Return the inner fixed size array, if it is full to its capacity.\n\nReturn an `Ok` value with the array if length equals capacity,\nreturn an `Err` with self otherwise.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41497:210","args":{"angle_bracketed":{"args":[{"type":{"array":{"type":{"generic":"T"},"len":"CAP"}}},{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:110:1946":{"id":"0:110:1946","crate_id":0,"name":"drain","span":{"filename":"src/arrayvec.rs","begin":[604,4],"end":[629,5]},"visibility":"public","docs":"Create a draining iterator that removes the specified range in the vector\nand yields the removed items from start to end. The element range is\nremoved even if the iterator is not consumed until the end.\n\nNote: It is unspecified how many elements are removed from the vector,\nif the `Drain` value is leaked.\n\n**Panics** if the starting point is greater than the end point or if\nthe end point is greater than the length of the vector.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut v1 = ArrayVec::from([1, 2, 3]);\nlet v2: ArrayVec<_, 3> = v1.drain(0..2).collect();\nassert_eq!(&v1[..], &[3]);\nassert_eq!(&v2[..], &[1, 2]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["range",{"generic":"R"}]],"output":{"resolved_path":{"name":"Drain","id":"0:205:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RangeBounds","id":"2:3078:1802","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:396":{"id":"0:396","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[426,0],"end":[436,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:2897:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:398:230","0:399:551"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:426:315":{"id":"0:426:315","crate_id":0,"name":"as_ref","span":{"filename":"src/array_string.rs","begin":[493,4],"end":[493,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12055:2901":{"id":"2:12055:2901","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41355:179","prim@char":"1:11917:418","self::pattern":"2:11715:2545"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41353:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2537-0:50:1660":{"id":"b:2:2537-0:50:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2540:2861"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:293":{"id":"0:293","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1176,0],"end":[1182,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2311:188","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2311:188","args":{"angle_bracketed":{"args":[{"type":{"slice":{"generic":"T"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:296:612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5424":{"id":"5:5424","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5425:34524","5:5426:2026","5:5429:34525","5:5432:34526","5:5440:34527","5:5441:34528","5:5442:3356","5:5443:27316","5:5444:27317"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:115:2015":{"id":"0:115:2015","crate_id":0,"name":"into_inner_unchecked","span":{"filename":"src/arrayvec.rs","begin":[668,4],"end":[673,5]},"visibility":"public","docs":"Return the inner fixed size array.\n\nSafety:\nThis operation is safe if and only if length equals capacity.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"array":{"type":{"generic":"T"},"len":"CAP"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:161:787":{"id":"0:161:787","crate_id":0,"name":"into_iter","span":{"filename":"src/arrayvec.rs","begin":[811,4],"end":[811,56]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:7205:152","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:383:1791":{"id":"0:383:1791","crate_id":0,"name":"try_push","span":{"filename":"src/array_string.rs","begin":[227,4],"end":[240,5]},"visibility":"public","docs":"Adds the given char to the end of the string.\n\nReturns `Ok` if the push succeeds.\n\n**Errors** if the backing array is not large enough to fit the additional char.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<2>::new();\n\nstring.try_push('a').unwrap();\nstring.try_push('b').unwrap();\nlet overflow = string.try_push('c');\n\nassert_eq!(&string[..], \"ab\");\nassert_eq!(overflow.unwrap_err().element(), 'c');\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["c",{"primitive":"char"}]],"output":{"resolved_path":{"name":"Result","id":"2:41497:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"primitive":"char"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:372:696":{"id":"0:372:696","crate_id":0,"name":"from","span":{"filename":"src/array_string.rs","begin":[105,4],"end":[109,5]},"visibility":"public","docs":"Create a new `ArrayString` from a `str`.\n\nCapacity is inferred from the type parameter.\n\n**Errors** if the backing array is not large enough to fit the string.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<3>::from(\"foo\").unwrap();\nassert_eq!(&string[..], \"foo\");\nassert_eq!(string.len(), 3);\nassert_eq!(string.capacity(), 3);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41497:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:399:551":{"id":"0:399:551","crate_id":0,"name":"deref","span":{"filename":"src/array_string.rs","begin":[430,4],"end":[435,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5444:27317":{"id":"5:5444:27317","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12137:26059"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7280:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2740:2603-0:175:1661":{"id":"a:2:2740:2603-0:175:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2740:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2740:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1661","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:87:1954":{"id":"0:87:1954","crate_id":0,"name":"retain","span":{"filename":"src/arrayvec.rs","begin":[463,4],"end":[535,5]},"visibility":"public","docs":"Retains only the elements specified by the predicate.\n\nIn other words, remove all elements `e` such that `f(&mut e)` returns false.\nThis method operates in place and preserves the order of the retained\nelements.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3, 4]);\narray.retain(|x| *x & 1 != 0 );\nassert_eq!(&array[..], &[1, 3]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["f",{"generic":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:2928:1956","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12025:1786":{"id":"2:12025:1786","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:11934:1504"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12122:33869":{"id":"2:12122:33869","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11917:418","self::pattern":"2:11715:2545"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11720:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11735:2539","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2543:696":{"id":"2:2543:696","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:392:316":{"id":"0:392:316","crate_id":0,"name":"as_str","span":{"filename":"src/array_string.rs","begin":[408,4],"end":[410,5]},"visibility":"public","docs":"Return a string slice of the whole `ArrayString`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:190":{"id":"0:190","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[918,0],"end":[918,68]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:7266:2062","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1661","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:411:612":{"id":"0:411:612","crate_id":0,"name":"eq","span":{"filename":"src/array_string.rs","begin":[466,4],"end":[468,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2700:228-0:541:1659":{"id":"a:2:2700:228-0:541:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:136:551":{"id":"0:136:551","crate_id":0,"name":"deref","span":{"filename":"src/arrayvec.rs","begin":[732,4],"end":[734,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:2897:117","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12030:26157":{"id":"2:12030:26157","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9816:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9816:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12044:33854":{"id":"2:12044:33854","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:43586:2558","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12096:33860":{"id":"2:12096:33860","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:11715:2545","`DoubleEndedIterator`":"2:7243:121","prim@char":"1:11917:418","str::rmatch_indices":"2:12099:33861"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:43472:2559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12034:33852":{"id":"2:12034:33852","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:11923:1402","str::slice_mut_unchecked":"2:12035:33853","crate::ops::Index":"2:2980:2493"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12016:2237":{"id":"2:12016:2237","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2540:2861":{"id":"2:2540:2861","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2514:133"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:463:711":{"id":"0:463:711","crate_id":0,"name":"ge","span":{"filename":"src/array_string.rs","begin":[560,4],"end":[560,67]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ArrayString","id":"0:533:1658","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12037:26182":{"id":"2:12037:26182","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12036:26181"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2547-0:50:1660":{"id":"b:2:2547-0:50:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2517:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2550:128","2:2551:1483"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:474:128":{"id":"0:474:128","crate_id":0,"name":"Error","span":{"filename":"src/array_string.rs","begin":[630,4],"end":[630,40]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}}}}},"2:2556:1482":{"id":"2:2556:1482","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:41497:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12042:31336":{"id":"2:12042:31336","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12041:31317"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:43605:2547","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:323:60":{"id":"0:323:60","crate_id":0,"name":"default","span":{"filename":"src/arrayvec.rs","begin":[1208,4],"end":[1210,5]},"visibility":"default","docs":"Return an empty array","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"ArrayVec","id":"0:50:1660","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12128:33871":{"id":"2:12128:33871","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11917:418","self::pattern":"2:11715:2545"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11720:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11735:2539","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:500:943":{"id":"0:500:943","crate_id":0,"name":"new","span":{"filename":"src/errors.rs","begin":[15,4],"end":[19,5]},"visibility":"public","docs":"Create a new `CapacityError` from `element`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["element",{"generic":"T"}]],"output":{"resolved_path":{"name":"CapacityError","id":"0:541:1659","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:78:1904":{"id":"0:78:1904","crate_id":0,"name":"insert","span":{"filename":"src/arrayvec.rs","begin":[284,4],"end":[286,5]},"visibility":"public","docs":"Insert `element` at position `index`.\n\nShift up all elements after `index`.\n\nIt is an error if the index is greater than the length or if the\narrayvec is full.\n\n***Panics*** if the array is full or the `index` is out of bounds. See\n`try_insert` for fallible version.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::<_, 2>::new();\n\narray.insert(0, \"x\");\narray.insert(0, \"y\");\nassert_eq!(&array[..], &[\"y\", \"x\"]);\n\n```","links":{},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}],["element",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:174:787":{"id":"0:174:787","crate_id":0,"name":"into_iter","span":{"filename":"src/arrayvec.rs","begin":[845,4],"end":[847,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"IntoIter","id":"0:175:1661","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:677-0:175:1661":{"id":"b:5:677-0:175:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2263:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:673:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1661","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["5:679:2507","5:680:2918","5:681:2919"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12017:33849":{"id":"2:12017:33849","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:86:1940":{"id":"0:86:1940","crate_id":0,"name":"pop_at","span":{"filename":"src/arrayvec.rs","begin":[442,4],"end":[448,5]},"visibility":"public","docs":"Remove the element at `index` and shift down the following elements.\n\nThis is a checked version of `.remove(index)`. Returns `None` if there\nis no element at `index`. Otherwise, return the element inside `Some`.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3]);\n\nassert!(array.pop_at(0).is_some());\nassert_eq!(&array[..], &[2, 3]);\n\nassert!(array.pop_at(2).is_none());\nassert!(array.pop_at(10).is_none());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:41353:181","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:315:2110":{"id":"0:315:2110","crate_id":0,"name":"as_mut","span":{"filename":"src/arrayvec.rs","begin":[1199,4],"end":[1199,45]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"generic":"T"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:452:1039":{"id":"0:452:1039","crate_id":0,"name":"partial_cmp","span":{"filename":"src/array_string.rs","begin":[543,4],"end":[545,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41353:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"2:30798:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:80:1795":{"id":"0:80:1795","crate_id":0,"name":"pop","span":{"filename":"src/arrayvec.rs","begin":[348,4],"end":[350,5]},"visibility":"public","docs":"Remove the last element in the vector and return it.\n\nReturn `Some(` *element* `)` if the vector is non-empty, else `None`.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::<_, 2>::new();\n\narray.push(1);\n\nassert_eq!(array.pop(), Some(1));\nassert_eq!(array.pop(), None);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41353:181","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"16:3047:20478":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"17:12894:5367":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"6:4468:6562":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:12553:140":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"2:4409:2609":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:9072:7719":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:43630:2555":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"6:4739:6654":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:40001:2555":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:10056:2548":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"2:11941:112":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"17:12113:5157":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"16:6243:35400":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"2:4335:3829":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"2:45609:7591":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:45979:7603":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:22534:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"5:5233:3671":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"2:42119:2576":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"17:10402:7854":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"17:11391:5020":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"6:1732:6451":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"5:5838:70":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"1:11239:3835":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"16:6218:7890":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"5:779:3673":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:21569:9198":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"17:12403:5217":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"2:39941:31390":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:11174:3775":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"2:40265:3380":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:7488:4955":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"11:630:2040":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"2:40326:3385":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"17:10000:4931":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"18:614:35414":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"2:47367:7668":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"2:2910:1801":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:2705:2130":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"2:22402:3984":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"6:4412:6539":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"16:5032:5735":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"6:7551:7219":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:9152:2576":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"5:7213:4024":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"17:10545:4901":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"1:361:7989":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"3:229:210":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:2391:1804":{"crate_id":1,"path":["std","io"],"kind":"module"},"6:4793:6682":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"1:11883:8715":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"16:6361:3939":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"17:10377:4895":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"6:5079:6823":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"16:4872:5730":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"2:1746:7253":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"2:43220:2943":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:11522:7745":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"1:9213:3523":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"2:41548:2043":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"16:6327:5816":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"11:805:9135":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"17:12550:5244":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"1:11272:4572":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"6:5043:6811":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"2:20851:9347":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"1:11191:7736":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"18:660:4405":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"5:682:111":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"2:1636:2523":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"1:8997:4087":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"17:8598:21403":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"1:5787:3750":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"2:42617:2513":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"6:7545:7218":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:39971:4512":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:44312:161":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"2:44341:3979":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"17:13659:5597":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"17:11879:5121":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"14:40:4995":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"2:8678:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"6:6129:7011":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"1:4459:9240":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"2:2795:2476":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"2:39511:26067":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"6:5919:6934":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"14:165:20421":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"6:494:4097":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"18:736:25250":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"16:2786:5697":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"1:8170:2275":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"2:5471:3413":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"2:2928:1956":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"17:8360:21395":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"17:8683:4822":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"17:10823:4792":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"6:5862:6904":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"17:10857:21406":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"17:12799:5284":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:40283:4522":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"2:30428:31368":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"6:4786:6680":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"1:2855:3745":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"16:7803:5985":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"5:0:286":{"crate_id":5,"path":["alloc"],"kind":"module"},"16:6868:5892":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"1:4706:9231":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"1:2376:9195":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:40636:4536":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"2:20994:9336":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"17:9866:7835":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"11:1838:4498":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"1:10960:3772":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"5:4347:245":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"1:9057:167":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"11:447:142":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"1:1982:185":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"2:9158:2585":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"2:3078:1802":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:867:1661":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:21124:9342":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:10029:4575":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"5:2956:2507":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"17:12358:5208":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"11:798:7942":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"1:10864:4071":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"1:11928:644":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"1:7043:4569":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"2:2816:2481":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"16:6671:5858":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"6:6833:7179":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"1:7600:7684":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"2:4144:3986":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"17:11844:5117":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"1:10731:119":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"6:7574:7225":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"16:6876:3947":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"16:5998:21335":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"6:6624:7077":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:44065:7566":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"5:2240:7239":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"2:9365:141":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"1:8200:9207":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"17:9188:35402":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"5:3175:4499":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"17:12236:5189":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"6:4894:6728":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"17:10505:4458":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:2832:2485":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:8271:7697":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"2:41404:1776":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:11729:2540":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:11083:4095":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"2:39920:7490":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:6561:8150":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"16:2905:3925":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"17:12563:5245":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"1:10343:4565":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"1:8813:2040":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"2:45526:7588":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:5357:4072":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"2:41429:1661":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"1:11920:1053":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"1:6865:3762":{"crate_id":1,"path":["std","sys","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"2:42633:2512":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"6:5804:6871":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"17:9312:4417":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"17:9734:7832":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"6:4303:6466":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:2921:1824":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:7891:3441":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:39076:2502":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"11:723:4495":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"17:9886:7837":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"1:8076:3455":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"6:5798:6870":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:3373:2587":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"2:21864:7272":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"2:2289:429":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"17:12496:5238":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"17:9488:7824":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"6:119:15022":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"2:4605:14520":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"16:6575:21338":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"2:40643:3188":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"2:2762:2471":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"14:160:7938":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:8841:8976":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"5:7269:3698":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"1:11529:7745":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"16:7016:3949":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"2:39331:3829":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"16:7335:35399":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"2:11720:2538":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"11:1663:144":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:20948:9334":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"11:657:1661":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"17:9566:4416":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"0:0:1654":{"crate_id":0,"path":["arrayvec"],"kind":"module"},"16:5847:5770":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"1:11044:7717":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"16:7543:3955":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"2:42352:7515":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"17:12259:5198":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"6:1556:6345":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:6355:8009":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"11:2194:6172":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"2:43911:7552":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"17:9409:21415":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"6:568:6293":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"17:13041:5420":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"16:7488:5968":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"17:13499:5534":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"16:7498:5969":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"2:44256:195":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"5:6786:3712":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"1:10445:3448":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"2:2505:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"2:46681:7632":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"2:40227:3369":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"9:0:2338":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"11:1538:7957":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"16:8170:6037":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"2:2353:189":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"2:47429:7669":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:11915:371":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"2:9145:112":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"1:3272:3447":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"6:653:15379":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:3141:2496":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"11:1103:7954":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"2:45424:7584":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"2:30322:31365":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"2:47765:7675":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"17:11832:5115":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"5:6316:3671":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"2:2683:220":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"11:844:7948":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"1:7624:7685":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"2:44248:211":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"17:9068:35406":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"16:6474:3944":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"17:13812:5640":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"1:638:7993":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"1:11921:312":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"16:7293:5946":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"2:2517:238":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"2:2757:2474":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"17:10465:7859":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"1:8525:7716":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"17:12282:5199":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"1:8366:7708":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"1:4010:9220":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:21117:9198":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"16:6717:5870":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"2:2514:133":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:6588:2322":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"16:5346:5739":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"1:2620:3440":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"2:42457:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"16:7478:3952":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"1:3231:3450":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"2:46076:7606":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2:23047:7291":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"5:1135:4504":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"1:2481:3437":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"11:399:4485":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"1:643:9122":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"16:5557:3928":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"2:41248:7506":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"11:749:1662":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"17:13857:5646":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"16:6390:5820":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"17:9322:35409":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"17:12318:5204":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"16:4510:5719":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"6:6170:7037":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"12:0:2341":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"1:618:2599":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"6:4832:6697":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"5:7227:31381":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:8858:4827":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"2:43886:7551":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"11:2033:5916":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:10807:2941":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"9:421:20339":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"16:7411:5785":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"16:7652:198":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"6:5817:6872":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:3233:3451":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"5:6468:3671":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"5:1423:2043":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2:41438:2680":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:41790:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"5:3168:2040":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"2:45664:7594":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:3481:3424":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"16:7557:5971":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"17:9946:4852":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:21441:4000":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:5383:3413":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"1:3348:3357":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"1:2580:3430":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"16:6535:3660":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"2:4010:7973":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"11:1845:4499":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"1:11888:9125":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"2:43586:2558":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"16:5963:4463":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"2:20770:9340":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr"],"kind":"trait"},"2:2791:2477":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:10894:4079":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"16:8047:6027":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"17:10104:4856":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"2:43280:2553":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"17:13777:5627":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"17:9545:4815":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"1:11923:1402":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"2:41421:2043":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:2980:2493":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:43544:2562":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"6:4916:6744":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"11:365:3665":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"17:13516:5541":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:20919:9348":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"5:1008:3671":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"10:0:2339":{"crate_id":10,"path":["adler"],"kind":"module"},"17:10691:21511":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"6:474:4491":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"16:5000:5734":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"16:6236:7898":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"17:10735:4928":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"17:8753:4824":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"2:39123:2495":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"2:47660:4005":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"17:13698:5606":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"1:2366:9190":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"18:582:2856":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"6:6670:7096":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:41471:2681":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"5:7013:2925":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"1:4702:9228":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"1:2348:3014":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"17:9772:4846":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"2:40028:4513":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"1:8883:9298":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"17:9683:7831":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"13:0:2335":{"crate_id":13,"path":["std_detect"],"kind":"module"},"1:8315:7698":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"17:13265:5475":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"2:41950:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:3155:8863":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"17:13821:5642":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"1:11933:742":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"19:0:1035":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"1:8765:186":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"14:221:6121":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"17:10555:4903":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"2:43100:2935":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:8508:2040":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:39178:199":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:1844:3523":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"11:2168:6170":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"6:4722:6645":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"1:8805:4079":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:46335:7625":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"2:40080:7498":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"2:2511:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:44117:7572":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"2:11252:14708":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"17:8788:4825":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:731:142":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"1:10699:7731":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"16:6201:7887":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"2:46123:7607":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"6:4962:6770":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"1:857:2043":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"6:4728:6648":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"17:12293:5201":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"16:5944:7866":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"2:21347:9349":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"17:10092:4448":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"5:5858:3697":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"2:2984:2494":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:8867:9299":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"5:35:3669":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"16:2546:5687":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"5:204:3670":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"5:4425:3691":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"14:187:8973":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"16:6442:5825":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"16:4789:5727":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"5:1520:4505":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"2:45356:7581":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"17:11069:21408":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"1:936:9135":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"1:8249:9238":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"2:39993:2556":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"17:8283:21393":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"17:9826:4440":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"16:2594:5689":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:4022:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"6:595:6308":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"1:11935:1501":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"17:11136:4961":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"2:7243:121":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"2:44129:14748":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"2:21962:3983":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"5:3719:3441":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"5:2128:3685":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"16:6132:5810":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"17:10569:4907":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"17:12085:5152":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"18:636:4714":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"5:819:3675":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"2:11464:7535":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"6:4455:6557":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"17:12331:5206":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"6:4954:6765":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"15:219:8691":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"2:2779:2472":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"2:42417:68":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"16:6321:7901":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"2:39914:2555":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"17:9653:7828":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"2:41327:3994":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"16:5104:5737":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"6:1648:6411":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:47697:4006":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"16:8129:7934":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"5:5754:1662":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"17:12592:5248":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"16:5779:5758":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"2:12360:192":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"16:4400:5716":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"11:1068:7953":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"2:41162:155":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"2:2241:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:2347:182":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"1:1565:1661":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"1:2892:128":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"17:9557:4842":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"1:2890:210":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"2:10095:2939":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"2:46571:7629":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"16:2298:20450":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"6:4340:6494":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"1:4148:4559":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"5:6389:1661":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"17:12634:5255":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"1:10721:130":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"16:8109:6036":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"17:13678:5603":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"1:11360:4076":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:44291:3981":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"11:1826:1662":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"2:41489:193":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"6:1662:6422":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"17:13625:5585":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"1:1062:7949":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"6:7608:7232":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"2:43621:2554":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"5:4758:670":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"2:1629:587":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"1:10491:3190":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"2:43774:7548":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"17:13411:5514":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"16:6819:5886":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"2:45378:7582":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:5949:206":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"2:21342:9339":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"9:445:20337":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"2:1466:1649":{"crate_id":2,"path":["core","mem"],"kind":"module"},"17:9380:21414":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"11:119:3661":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"6:4817:6693":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:47640:4007":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"2:3151:234":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"17:9986:4855":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"11:2049:7949":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"17:9839:7834":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"6:1568:6353":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"17:9748:4842":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"1:11064:7569":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"2:42857:7530":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"2:42133:2585":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"9:174:8704":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"6:123:15023":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"17:13024:5418":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"6:1672:6428":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"1:4006:9219":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:2787:2479":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:8111:3453":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"1:6211:3748":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"2:40009:2554":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"2:2931:2492":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"17:13344:5495":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"17:11946:5132":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"17:1034:4426":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"1:8977:8032":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"2:21:683":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"17:3142:4451":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"6:6155:7026":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"5:4163:3413":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"6:4684:6625":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:4045:14465":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"2:45486:7586":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"17:11785:5103":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"2:43292:2552":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"17:10705:4924":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"17:8953:4829":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"5:5874:8145":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"2:42642:145":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"17:10428:7858":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"17:12006:5141":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"16:5976:5666":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"2:43614:2546":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"5:1099:4503":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"16:6793:5885":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"6:547:6282":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"2:46831:7633":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"17:10798:21405":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"1:9906:7510":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"18:481:3820":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"6:4878:1005":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"2:43390:2567":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"6:5057:6817":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"1:844:2040":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"2:3181:32447":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"5:1115:8143":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"6:6014:6982":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"17:12059:5149":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"2:12385:7981":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"2:40297:3383":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"2:3998:7972":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"2:2150:588":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"7:0:1548":{"crate_id":7,"path":["unwind"],"kind":"module"},"6:5073:6820":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"1:3934:9214":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"1:10977:3774":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"5:3799:3702":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"9:234:7524":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"6:1708:6442":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"1:7694:4019":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"17:11532:5037":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"1:1568:1662":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"2:42625:7523":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"2:42435:128":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"6:7249:7194":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"17:13612:5579":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"18:548:141":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"1:5933:3748":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"5:4193:3413":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"1:3488:3426":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"1:1589:4500":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"2:7201:134":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:41497:210":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"2:41830:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"17:10316:4892":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"2:42380:110":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"1:4665:9239":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"6:1544:6336":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:12608:2924":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"6:482:6245":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"16:7317:35398":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"1:930:7942":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"1:11254:8011":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"16:6431:5824":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"6:573:6295":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"17:13066:5430":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"11:736:4496":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"1:11930:744":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"2:39037:2505":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"2:43596:2549":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:4325:3716":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"2:43849:7550":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"18:727:4725":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"16:6293:5815":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"16:7837:5989":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"6:1630:6399":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:10876:25848":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"2:45456:7585":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2:11538:2548":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:11922:1372":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:21910:31375":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"16:6520:5832":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"17:12178:5163":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"17:8979:35411":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"1:8183:2557":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"2:40108:7499":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"16:6558:5833":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"8:0:2337":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"2:22501:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"5:1408:2040":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:2508:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"17:10670:4920":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"1:10657:8046":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"2:9154:2575":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"2:22270:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"2:20778:32107":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"17:12770:5264":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"5:2967:8168":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"1:5343:8001":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"17:10303:7853":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"2:3162:2498":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:12333:33366":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"5:875:3677":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"2:4380:3717":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"16:2448:5684":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"16:4480:5718":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"2:40236:3370":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"6:4605:6617":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"17:12915:5377":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"1:10711:7690":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"1:11899:27974":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"17:10527:21510":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"1:8104:3351":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"6:4625:6619":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"1:1561:2040":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:9413:2510":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"2:40667:3359":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"1:11337:3777":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"1:10238:8002":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"2:47575:7672":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:4531:9257":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"2:41480:2732":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"16:5418:5740":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"2:32022:4510":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"2:39303:2595":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"2:42408:71":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"16:7042:5913":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"2:46177:7609":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"16:5305:5738":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"1:4926:2672":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"5:7062:33833":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"5:2032:3441":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"17:11234:4980":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"2:42654:7524":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"16:2830:3927":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"18:624:35413":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"17:11299:4998":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"16:6488:5826":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"2:3513:1662":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"18:599:35415":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"17:12033:5146":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:47788:7676":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"17:13332:5489":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"17:12923:5378":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"1:10681:7726":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"2:41291:7513":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"6:4367:6517":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:4258:7974":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"1:10451:3446":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"2:8359:2538":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"2:43266:2143":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:31982:2531":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"17:9265:4416":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"17:10015:7845":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"16:5797:5762":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"1:4127:4558":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"6:7528:7213":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:22237:178":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"2:45587:7590":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"11:760:3702":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"16:7669:3956":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"6:4871:6718":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"17:562:4955":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"5:1511:198":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"5:4362:3691":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"2:43822:7549":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"16:6061:20449":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"14:215:6119":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"5:775:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"17:13651:5594":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"2:46001:7604":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:10275:2948":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"17:10721:4925":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"6:5848:6893":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"16:6981:7903":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"11:2174:4272":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:11268:7979":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"11:311:4483":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"16:6854:5890":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"17:9218:4842":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"1:7820:7689":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"6:4445:6554":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"2:20587:33168":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:22435:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"11:1831:3702":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"16:0:2344":{"crate_id":16,"path":["gimli"],"kind":"module"},"17:11641:5067":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"6:6719:7108":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"9:502:3972":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"10:44:6175":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"5:3327:3702":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"6:5007:6789":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"17:1947:4436":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:20992:9198":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"6:4809:6689":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"2:7168:3366":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"2:3647:1661":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:1048:5916":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"1:7961:8019":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"17:11800:5108":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"5:3209:4498":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"5:5527:3700":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"9:325:6211":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"2:41219:9208":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"16:4327:5715":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"2:2469:2532":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"2:46381:7626":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"16:3782:5710":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"16:2931:20476":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"2:40407:3374":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:8153:3377":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"1:7883:3439":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"5:1669:3671":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"17:13564:5578":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"17:11319:5008":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"17:9098:4413":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2:45508:7587":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:9127:8036":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"1:7867:119":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"1:10971:3773":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"5:2138:7234":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"16:8180:21346":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"1:3083:3454":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"6:7557:7220":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"17:9641:4428":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"2:8846:8713":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"2:11786:14479":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"17:13211:5462":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"17:12522:5240":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"5:2167:7235":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"6:4462:6560":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"1:11490:25810":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"17:11446:3917":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"17:11484:5025":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"17:10026:4443":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"2:41304:7695":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"6:4780:6677":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"17:12046:5147":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"17:13469:5528":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"17:12510:5239":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:43472:2559":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:3638:9209":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"1:10167:4094":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"1:5742:8007":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"2:9964:2040":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"17:9895:7840":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"1:7499:8049":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"11:793:4497":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"5:7168:3977":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"17:13842:5645":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"1:8498:4560":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"16:4904:5731":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"6:6804:7163":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"1:8439:7711":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:2821:2482":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:9298:7978":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"16:6544:3945":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"1:11932:746":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"2:14:1794":{"crate_id":2,"path":["core","write"],"kind":"macro"},"1:5586:3748":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"1:1433:144":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"6:1910:16369":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"1:5716:8006":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"16:2357:5680":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"17:8548:21401":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"18:491:4691":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"6:587:6303":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"6:4327:6484":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:3317:69":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:39264:1800":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"17:10989:4901":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"5:5062:3697":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"6:7522:7212":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"17:12959:5408":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"11:1048:35393":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"1:10386:3770":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"16:4969:5733":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"17:9596:4839":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"17:9796:4847":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"6:7510:7210":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2:47712:4009":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:11918:1520":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"2:30003:9210":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"2:30798:183":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"1:7815:4551":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"2:10289:2947":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"6:6849:7185":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"6:7504:7209":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"6:6043:6991":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"5:2963:8167":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:45933:7601":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"17:8909:2275":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"1:3424:3423":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"17:8931:4828":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:40255:3379":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"11:2186:35392":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"2:11503:7537":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"5:6137:9426":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"1:3956:9216":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"16:154:1660":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"6:562:6290":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:6771:3348":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"2:11675:2142":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:5462:4071":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:11427:7532":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"11:0:2340":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"1:10448:3450":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"2:39929:7491":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"2:43230:2944":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:5709:8003":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"2:40383:3389":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"18:574:4692":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"5:4392:3413":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"17:10125:4858":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"2:44077:7569":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"16:5630:7864":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"16:4540:5720":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"2:40367:3388":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:7850:130":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"17:13169:5448":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"1:6609:217":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"1:5044:8000":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:43109:2934":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"2:22336:177":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"17:12536:5241":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"17:13082:5433":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"1:7706:9159":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"2:47179:7666":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"6:526:6270":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:10774:2940":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"2:43128:2936":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"6:4435:6548":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:9478:7823":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"1:5579:206":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"17:11821:5112":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"17:9148:35405":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"11:285:4480":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"16:7588:7932":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"17:13292:5479":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"16:8214:2132":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"5:4941:3413":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"16:2524:5686":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"6:4694:6632":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"2:47827:7677":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"17:11355:5013":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"17:10491:7860":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"17:9350:35404":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"2:1666:1091":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"1:11056:29628":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"1:8899:9300":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"2:0:496":{"crate_id":2,"path":["core"],"kind":"module"},"17:10257:4449":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"5:3180:33835":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"11:817:7945":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"6:579:6298":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"2:8673:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:21453:33057":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"2:9120:132":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"14:31:7938":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"1:4601:7092":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"1:1080:7955":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2:40061:7497":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"17:13219:5465":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"5:3214:33836":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:21014:4002":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"11:1818:2040":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"2:47537:7671":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"5:258:3671":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"2:45557:7589":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:21976:7287":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:11937:1503":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"17:10283:4890":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"1:9149:29634":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"1:7285:31000":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"17:9617:4427":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"6:1589:6367":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:10168:2563":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"6:1637:6403":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"18:521:25252":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"16:5708:5750":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"6:1689:6435":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"17:13135:5445":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"17:13376:5503":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"17:12126:5158":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:41990:3999":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"6:1494:6312":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"16:5693:5747":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"2:2695:109":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"2:2748:2607":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"17:10626:4916":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"17:8443:21398":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"2:40042:14526":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"2:5531:3382":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"17:11556:5039":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"16:7467:5965":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2:2846:2488":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"2:40306:3384":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"5:7243:7248":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"2:7214:2080":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:8989:8034":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"16:5655:3934":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"6:4928:6753":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"1:7827:7690":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"1:11942:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"17:9534:4422":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"1:8954:25440":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"1:413:165":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:40658:3357":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"6:5899:6918":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"5:4073:2043":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"1:9091:4095":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"1:4587:9217":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"11:1517:7956":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"16:6919:35396":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"16:4702:5724":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"16:4845:5729":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"1:8922:7718":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"6:1505:6317":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"6:4799:6685":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"17:11902:5124":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"1:7645:3190":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:2962:2501":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"18:652:4692":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"17:8195:21382":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"1:3703:4077":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"6:4523:6592":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"17:420:4778":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"11:986:7949":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"17:12433:5220":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"1:10741:3428":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"5:6629:3711":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"16:4624:5723":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"5:2220:34910":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"6:4948:6764":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"17:10681:4921":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"11:695:4494":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"6:6725:7109":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"16:6254:3821":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"17:12576:5246":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"5:7196:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:20574:33053":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"2:20589:33172":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"2:2752:2469":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"16:535:5664":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"17:10039:7846":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"5:3734:7961":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:20559:33053":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"17:9275:35410":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"17:13033:5419":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"1:4877:9265":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"16:3063:4733":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"2:32109:2608":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:3996:9218":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"1:6432:3759":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"17:11037:21407":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"17:11891:5123":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"16:3899:5713":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:41556:1661":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"17:13324:5488":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"16:4568:5721":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"6:4567:6615":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"16:3300:5706":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"18:590:4703":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"16:8256:6044":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"16:2642:5691":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"17:247:7819":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"1:8829:1661":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"2:43372:2568":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"16:6890:3948":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:44096:122":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"6:62:14968":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"1:5013:8000":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"6:4649:6621":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"17:8971:129":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"1:8821:4567":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"1:5525:9282":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"17:8521:21400":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"6:6840:7182":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"2:20879:9341":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr"],"kind":"trait"},"2:30250:68":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"17:13721:5619":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"17:12835:5315":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"6:4379:6520":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"2:42664:7528":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"5:1270:7951":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"2:9164:2583":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"17:9512:4421":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"17:13419:5517":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"1:2544:3438":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"14:202:14487":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"2:43049:4542":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"16:2720:5694":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"17:8632:21381":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"1:4279:4069":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"1:9110:7720":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"2:9156:2584":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"16:7697:3959":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"1:1846:4550":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"1:7722:8016":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"6:4615:6618":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"6:4314:6474":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"18:0:2346":{"crate_id":18,"path":["memchr"],"kind":"module"},"6:6035:6988":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"6:4886:6723":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"2:9371:141":{"crate_id":2,"path":["core","hash","macros","Hash"],"kind":"proc_derive"},"2:42672:7529":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"17:10270:7851":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"2:7594:3311":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"5:7377:3707":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"17:9108:35407":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"11:1121:7955":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"1:6319:166":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"2:45955:7602":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"17:13101:5434":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"16:7077:21341":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"17:8718:4823":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"6:5024:6797":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"2:47750:7674":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"2:4254:207":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"1:6156:8008":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"2:47686:4016":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"6:5766:6852":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"1:3805:4078":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"5:3201:4500":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"17:1787:4433":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"16:55:6017":{"crate_id":16,"path":["gimli","endianity","Endianity"],"kind":"trait"},"2:39957:7494":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"6:500:6250":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"2:4764:388":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"6:1499:6314":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:2743:2605":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"16:5386:4820":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"11:968:5916":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"2:20932:9198":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"17:12483:5237":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"2:2521:237":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"1:8456:9277":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"1:1783:4547":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"5:7113:1661":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"1:3158:8864":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"16:3749:5709":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"7:32:20323":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"5:1500:4494":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"17:11372:5015":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"2:9529:3724":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"1:11941:1131":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"2:40075:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"17:12388:5213":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"2:41353:181":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"16:2470:3926":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"2:2690:2527":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"2:21797:7262":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"16:5402:4821":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:44045:7561":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"6:5828:6880":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:46493:7628":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"2:2745:106":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"6:4586:6616":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"16:6696:21339":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"2:20546:2856":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"1:5408:8002":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"1:2219:3422":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"6:6066:6997":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"1:5090:191":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"6:4637:6620":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"17:8651:4820":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"1:10751:29630":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"2:1755:3038":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"2:41710:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:11940:1558":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"6:5792:6867":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:40245:3378":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"2:21781:7261":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:43934:2569":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"2:2799:2478":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:501:3685":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"1:10851:8016":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"2:41413:2040":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"17:9917:3971":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"2:40446:3393":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"2:2468:9198":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:11224:7739":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2:45711:7595":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:10255:8154":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"5:6600:3700":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"16:5071:5736":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"16:3030:5702":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"2:2602:128":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:45857:7599":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"2:43526:2561":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"17:9228:35403":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"17:12019:4863":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"2:10013:2564":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:20752:9344":{"crate_id":2,"path":["core","core_simd","cast","SimdCastPtr"],"kind":"trait"},"1:1924:2598":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"1:5522:6998":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"2:40652:3355":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"6:4715:6644":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"1:8293:7077":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"17:13879:5652":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"17:10354:4894":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"1:11422:4078":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"17:8823:4826":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"6:4972:6776":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"16:2378:5681":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"17:11600:5056":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"2:45646:7593":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:30228:1806":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"6:4703:6637":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"16:2337:5674":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"6:6617:7073":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:3156:135":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"17:12419:5218":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"2:45809:7598":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"6:6710:7104":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"16:4728:5725":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"17:13399:5511":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"17:10052:7848":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"11:1012:7951":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"2:2842:2487":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"2:45757:7596":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"2:43175:2926":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:3962:9217":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"6:5881:6906":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"1:4662:9266":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"2:43138:2937":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"5:2959:7236":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"17:11813:5110":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"16:5811:5763":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"17:12098:5154":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"2:41185:3991":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"1:1768:609":{"crate_id":1,"path":["std","env"],"kind":"module"},"17:9959:4853":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"6:5876:6905":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"17:2933:4450":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"1:5377:4073":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"1:6935:3763":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"5:7121:1661":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"5:1773:3702":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"5:3139:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"2:2737:2602":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"11:332:3663":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"17:11861:5120":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"2:2691:2601":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"5:1489:4493":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"1:11931:745":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"1:1572:3702":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"2:4186:3987":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"6:6597:7067":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"17:13426:5518":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"17:11163:4967":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"6:4861:6712":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"2:39296:2497":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"2:2694:225":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"17:9340:4418":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"5:1439:1661":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"14:0:2342":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"6:4290:6457":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:30234:2528":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"1:1895:2597":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"6:1535:6330":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:2162:3024":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"2:49633:9352":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"1:7810:4772":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"17:10598:4950":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"1:8255:8025":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"17:10080:7850":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:3233:2504":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"5:1470:4496":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"7:79:20330":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"17:13309:5486":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"6:6021:6983":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:43728:7539":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"6:6819:7170":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:2263:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"11:1822:1661":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"1:2364:9189":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"6:4534:6597":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"1:10686:7689":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"16:7437:5964":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"6:1526:6325":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"16:7449:7925":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"6:1519:6322":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"2:4263:7975":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:1785:4548":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"11:97:6169":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"5:3668:3671":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"18:564:4702":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"6:5889:6911":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"1:11934:1504":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:43900:14486":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"2:44238:205":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"17:9933:4850":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"2:40205:3368":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"2:6980:3353":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"1:6893:8966":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"1:5393:4074":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"1:8947:8028":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"2:12311:151":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"17:0:2345":{"crate_id":17,"path":["object"],"kind":"module"},"2:43954:2570":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"2:40358:3387":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:8791:7717":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"6:7462:7208":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"6:5050:6814":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"16:5724:5752":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"18:515:4695":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"17:12345:5207":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"2:2767:2470":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"16:5594:3933":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"5:5335:1402":{"crate_id":5,"path":["alloc","str"],"kind":"module"},"2:8253:2683":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"5:1461:4495":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"5:6619:3710":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"1:7556:3767":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"1:8195:4555":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:2160:3023":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"2:10206:2946":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:43605:2547":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"6:6687:7097":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"1:8189:4553":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"2:22303:176":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"5:7030:4502":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"16:2879:3924":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"2:1915:3042":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"6:4663:6622":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:45402:7583":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2:43639:2556":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:7688:9124":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"6:1512:6320":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"1:7971:3442":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"2:44329:3980":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"5:7305:7971":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"16:6767:5884":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"1:4704:9230":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"1:6644:8009":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"17:13791:5634":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"2:40185:2926":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:4599:7090":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"6:7563:7221":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"16:2764:5696":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"1:6508:9294":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"16:6460:3943":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"2:20889:3023":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"17:10440:4455":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"6:7294:7207":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"17:13240:5470":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"6:6774:7146":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"17:13744:5620":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"5:5281:2544":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"2:42872:7531":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"2:8254:2682":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"17:13257:5473":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"1:6108:3736":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"16:6351:21337":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"16:4037:5714":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"2:1820:3041":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"2:7591:2536":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"6:4555:6606":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"2:4:1018":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"17:10589:4912":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"18:766:25251":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"17:13443:5522":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"6:7585:7226":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"17:11282:4995":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"2:43444:2565":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"17:13477:5529":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"2:7205:152":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"17:12307:5203":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"5:7256:7250":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"1:2210:129":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"2:40165:3831":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"16:7572:35397":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"2:2316:125":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"6:4753:6660":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:21571:9337":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"2:43743:7544":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"2:44073:7568":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"11:1852:4500":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"17:9469:7822":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"2:3196:2503":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"17:9907:4848":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"6:5774:6854":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"5:1299:7955":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"2:43201:2942":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"2:21926:31384":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"1:8854:4083":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"17:10743:4462":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"15:0:2343":{"crate_id":15,"path":["addr2line"],"kind":"module"},"5:7092:7245":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"2:22567:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"1:2215:1796":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"17:11573:5047":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"5:6761:1958":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"18:609:7817":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"16:7635:5975":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"2:39154:198":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"2:40348:3386":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:4783:9227":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"1:9062:218":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"1:8237:7695":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"1:5593:3749":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"2:9150:120":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"1:8835:4082":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"2:43340:2563":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"2:45787:7597":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"17:11410:5021":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"16:7259:2680":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"1:1071:7951":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"5:6717:244":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:9612:3727":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"1:530:3739":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"2:40214:3377":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:4135:9237":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"1:3152:30545":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"17:11615:5062":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"5:7180:9134":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"6:1716:6446":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"1:9011:25823":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"17:12224:5187":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"16:2404:5682":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"6:4542:6602":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"17:10885:4945":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"1:4119:4557":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"1:7673:9123":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"16:7029:5910":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"5:2046:7961":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"2:41870:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"5:3567:163":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"16:3640:4737":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"1:4018:9222":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"6:4853:6707":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"16:5367:20448":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"6:4549:6604":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"18:755:4730":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:44057:7564":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:47671:4008":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"17:9853:4441":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"1:888:4496":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"16:8090:6033":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"17:11220:4979":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"1:585:9119":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"17:13121:5442":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"11:2130:20410":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"1:922:4493":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"16:8142:7937":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"1:8416:7524":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"17:9721:4432":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"2:46257:7610":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"16:7519:5970":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"2:39324:7984":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"6:6588:7061":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"17:11011:4952":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"17:12158:5162":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"1:947:7945":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"16:4757:5726":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"2:46647:7631":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:911:3702":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"5:6270:1662":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"5:4001:1662":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"1:11478:7740":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"1:6124:3755":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"1:3191:3448":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"2:47735:4017":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"16:7711:5976":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"5:4031:3671":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"1:9403:129":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"2:11715:2545":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"6:4937:6759":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"16:2862:5699":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"2:2804:2483":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"6:4983:6782":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"6:4907:6738":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"11:1027:20415":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"2:20606:33173":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"2:21889:31394":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:9032:3834":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"1:10855:3970":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"2:41565:183":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:4351:4070":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"17:12607:5252":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"11:1858:4501":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"6:4943:6762":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"1:2212:7998":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"11:2060:7951":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"2:43118:2938":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:21675:7259":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"6:4517:6589":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"6:5966:6960":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"1:917:4497":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"17:11258:4994":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"17:12622:4918":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"5:1371:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"17:8389:21396":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"18:96:4400":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"9:388:20338":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"1:3378:3413":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"18:80:4397":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:30264:31385":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"16:6164:5813":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"17:10923:4947":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"6:5993:6969":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"18:681:4715":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"2:11487:7536":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"16:8269:128":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"1:3700:4076":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"17:10660:4918":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"17:9822:7833":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"6:0:820":{"crate_id":6,"path":["libc"],"kind":"module"},"14:7:7938":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"1:7599:9198":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"1:7619:8012":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"2:6920:3351":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"6:4769:6669":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"17:10649:4459":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"6:4823:6694":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"1:11101:4100":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"16:5920:5779":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"2:10133:2949":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:3406:3421":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"17:10478:4457":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"6:1574:6355":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"13:110:35394":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"6:5986:6968":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"6:7598:7230":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"6:6076:7000":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"1:11938:1500":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"2:7635:8974":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"1:11929:747":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"18:113:4403":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:3168:2500":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:7726:7983":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"15:180:4469":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"17:9876:4771":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"16:2502:5685":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"16:6506:4465":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"1:2558:3727":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:21126:4002":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"17:10967:4950":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"2:39317:2132":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"2:21955:7284":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"17:11193:4971":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"2:11282:2174":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"17:10897:4946":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"1:11866:8052":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"6:4763:6666":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:25857:7292":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"17:13145:5446":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:40155:3718":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"2:2925:2491":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"11:1501:20416":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"17:10712:21512":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"2:32018:7983":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"2:10247:2566":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:44053:7563":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"9:481:20336":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"10:36:6174":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"2:2855:2490":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"6:6704:7102":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"16:6943:21340":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:11497:7741":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"17:13433:5519":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"2:45903:7600":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:3948:9215":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"1:8263:4553":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"2:40629:3352":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"17:8256:21380":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"17:11459:3923":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"6:6606:7068":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"16:7596:21343":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"18:707:2540":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:43149:2928":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:1543:3413":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"17:10334:4842":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"16:8025:6026":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"2:2897:117":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:3904:9212":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"2:22600:4003":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"2:47491:7670":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"11:644:2043":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"6:6572:7049":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"17:11090:4957":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"2:10261:2565":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"16:2808:5698":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"17:386:7820":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"2:41910:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:46617:7630":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"17:10635:4917":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"16:6662:5857":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"5:273:2542":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"16:5886:5773":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"2:20604:33170":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"17:9178:4415":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"1:8289:4075":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"1:9410:4551":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"2:5589:3371":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"17:9973:4854":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"16:7767:21344":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"17:8490:21399":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"2:46411:7627":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:8244:7696":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"2:43308:2275":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"2:39138:200":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"17:13194:5457":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"2:44041:7560":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"6:7277:7197":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"6:4427:6545":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"16:3585:5708":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"16:4596:5722":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"5:892:2040":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"2:40122:9170":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"typedef"},"18:531:4697":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"17:13233:5468":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"1:6780:9332":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"2:45312:7579":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:8759:4565":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"6:7539:7217":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"17:10452:4456":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:46025:7605":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"17:11585:5050":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"1:7699:7686":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"1:875:4495":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"2:42876:2929":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"6:554:6285":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"2:40315:3394":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:11032:4101":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"17:13506:5536":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"2:4436:3988":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"6:532:6273":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"16:7065:5915":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"5:5150:1372":{"crate_id":5,"path":["alloc","slice"],"kind":"module"},"2:21849:31378":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"5:1285:7949":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"1:11266:4571":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"2:12298:136":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"1:901:1662":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"2:41202:3993":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"6:541:6279":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"17:13803:5636":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:2838:2486":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"2:9627:3731":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"2:40016:14525":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"17:11471:3922":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"2:2693:226":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"2:41590:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"2:44049:7562":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"16:2967:20477":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"16:3872:5712":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:45332:7580":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:8936:8026":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"1:6396:8010":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"6:4488:6573":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"17:9670:4430":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"17:9424:4836":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"5:7360:3702":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"2:43490:2560":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:959:7948":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"6:488:6248":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"1:10676:7724":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"18:699:4718":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"6:5954:6955":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"6:1602:6374":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"1:1577:4498":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"18:507:4692":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"6:6135:7012":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:2773:2473":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:11740:2537":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"17:12646:5262":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"2:12505:107":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"2:39242:203":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"11:1611:3667":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"1:355:7988":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"2:39220:201":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"5:7280:224":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"1:1985:184":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:9816:222":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"17:11060:4918":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"16:4932:5732":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"1:953:7947":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"2:21728:7260":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"16:4445:5717":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"18:719:4722":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"6:5067:6818":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"2:2783:2475":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"2:39981:7495":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"17:13367:5500":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"17:487:7821":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"1:11936:1502":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"2:9408:2509":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"16:7244:35401":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"16:6307:3937":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"6:1695:6438":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"16:6336:5817":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:20739:9343":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"11:836:7947":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"11:2201:3977":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"2:43210:2945":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"2:21872:7273":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:1732:3039":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"17:13461:5526":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:40418:3391":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:43921:7556":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"16:3815:5711":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"16:2616:5690":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:4785:31510":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"2:2311:188":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"17:9498:4837":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"17:1919:21443":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"2:47289:7667":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"17:10142:21485":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"16:2572:5688":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"1:676:8148":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"2:41268:31369":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"2:9162:2582":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"6:6564:7044":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"2:30826:2856":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"1:4760:3746":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"2:21098:9335":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"6:6007:6980":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"16:7529:3954":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"5:2957:34806":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"6:6867:7188":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"17:9453:21416":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"17:3266:4452":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"1:554:7990":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"13:226:6168":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"1:1594:4501":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"6:4747:6658":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"16:5643:5745":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"5:7042:1662":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"2:41339:3996":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"2:43706:14485":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"17:8420:21397":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"17:10516:4897":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"17:10580:4911":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"2:40432:3392":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:8348:2676":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"1:7837:7691":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"18:538:4700":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"16:7757:5977":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"2:39338:3985":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:7966:8020":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:6677:3376":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"16:5741:21334":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"2:22468:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"6:4991:6784":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:7598:3365":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"17:11993:5138":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"6:1701:6439":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"2:2700:228":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"6:4505:6583":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"6:7271:7195":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"1:3898:9213":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:6724:4534":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"2:43322:2564":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"6:6027:6986":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"6:1594:6369":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"1:7537:3765":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"2:9110:2114":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"17:11924:5131":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"2:2811:2480":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"16:6146:194":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"17:10747:128":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:44299:7575":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"16:6904:5894":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"6:4388:6525":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:9988:2043":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"6:4394:6527":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"17:8310:21394":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"2:20780:3023":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"17:13639:5591":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"2:9373:145":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"17:13356:5496":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"2:21988:9211":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"6:4482:6570":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"17:13667:5598":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"5:4233:2040":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"17:9038:35408":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"16:7743:3960":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"17:11502:5033":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"1:11717:3780":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"16:6376:3942":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"2:41630:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:43188:2927":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:3385:2591":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"17:10936:4949":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"17:11544:5038":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"16:3225:5705":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"17:11434:3921":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"2:42362:68":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"5:5684:232":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"17:11653:5070":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"1:10010:4549":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"17:12138:5159":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2:42392:6004":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"2:44354:7578":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"5:3580:2040":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"17:10416:4453":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"17:13385:5504":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:7266:2062":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"16:5677:21333":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"16:7366:21342":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"2:11735:2539":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"5:7084:198":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"1:2350:9185":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"2:43576:2557":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"17:12902:5370":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"1:10079:8038":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"1:11924:1486":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"17:9138:4414":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"16:7859:21345":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"1:3463:2114":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"1:7875:8018":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"1:8941:107":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"16:6179:7872":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"5:626:7958":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"5:1479:4497":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"2:2850:2489":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:12516:3736":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"17:11339:5009":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"5:5277:2543":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"9:352:20352":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"16:7509:3953":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"17:13763:5625":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"16:6022:21336":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:4811:798":{"crate_id":2,"path":["core","iter"],"kind":"module"},"2:9806:9198":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"5:2687:7243":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"1:635:7991":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"1:480:3738":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"2:45627:7592":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"1:8176:2564":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"17:8667:4821":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2:41670:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"5:7022:1661":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"16:8072:6030":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"17:12194:5168":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"16:2426:5683":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"17:9028:4411":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"5:4845:204":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"5:1254:5916":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"6:506:6253":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"6:5978:6967":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:20814:9346":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"17:13488:5533":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"15:198:4474":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"16:2694:5693":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"2:40685:3363":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"6:5736:6827":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"17:11520:5034":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"17:11109:4960":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:2588:116":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"1:8984:8033":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"17:9577:4838":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"5:2458:7240":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"1:8163:3391":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"2:21837:7270":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"11:403:4486":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"1:0:1394":{"crate_id":1,"path":["std"],"kind":"module"},"16:6728:5871":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"1:11939:792":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"16:6990:5909":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"17:242:7818":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"4:0:2336":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"17:12072:5150":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"16:7626:7933":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"16:6935:7902":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"1:926:4494":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"1:4597:7088":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"5:7052:3679":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"17:9443:4419":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"5:7294:7251":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"1:1931:655":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"1:5202:190":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"1:6032:3751":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"2:40274:3381":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"6:4847:6704":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"11:2180:4479":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"17:13159:5447":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:7321:159":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"16:3446:5707":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"1:4097:4556":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"2:22369:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"2:47613:7673":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"16:7683:3958":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"16:8156:3962":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"6:4419:6543":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"1:6575:3760":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"2:7164:3367":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"17:9696:4837":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"2:40035:4514":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"17:12980:5413":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"1:11197:4568":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:41540:2040":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"1:6505:4089":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"17:11422:5024":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"1:8120:3428":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"17:975:4425":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"16:5616:5741":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"6:4495:6576":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"17:9628:7827":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"16:2319:5673":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"2:4113:3828":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"17:12372:5211":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"6:4841:6703":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"1:3315:3434":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"2:43298:2551":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"2:40397:3390":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"6:4373:6518":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:3270:3446":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"17:12449:5224":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"2:43757:7547":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"6:4677:6623":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"2:42112:2575":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"6:4474:6565":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"6:6647:7095":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:2826:2484":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"2:4389:3830":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"18:644:4692":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"1:11401:4077":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"16:2668:5692":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"5:7076:1661":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"6:7516:7211":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"6:1680:6429":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"17:1978:4439":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"1:4437:9239":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"5:3235:4501":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"18:671:4410":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"1:11917:418":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"2:8252:2684":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2:3934:3413":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"17:11770:5099":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"17:13249:5471":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"2:42126:2584":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"18:690:4717":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"1:9067:219":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"17:10761:21404":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"2:5990:3395":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"16:2742:5695":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"1:4199:4068":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"1:5270:120":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"2:30194:1805":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:6259:206":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"16:6400:5821":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"17:13316:5487":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"17:10840:4943":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2:47651:4015":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"17:13453:5525":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"17:10068:4446":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"1:1583:4499":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"5:3593:2043":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"2:47631:4004":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"6:5014:6792":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"17:12461:5226":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"17:11721:5074":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"2:2244:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"2:41750:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:40335:3372":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:3193:3449":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"17:13053:5425":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"1:8777:4101":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"2:21000:9338":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"17:13181:5451":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"5:673:231":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"1:9415:3769":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"17:8573:21402":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"1:3472:8977":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"17:11969:5137":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"6:6743:7120":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"1:1821:4549":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"9:52:8694":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"1:8132:3429":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"16:7103:4087":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"17:13015:5414":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:44061:7565":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:8514:4564":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"17:13689:5604":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"2:39198:202":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"2:21093:9198":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"6:5835:6884":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"2:44069:7567":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"2:40677:3361":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"3:0:442":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"5:5948:3413":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"2:40092:31381":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:11916:940":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"1:11120:7719":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"2:9595:3726":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"2:43426:2566":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"6:6795:7160":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"11:667:4493":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:9109:210":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"17:11628:5066":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"2:2740:2603":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"16:5571:3930":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"1:4868:9264":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"17:9523:7826":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"2:46154:7608":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"2:9160:194":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"1:11927:642":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:47037:7665":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"17:10615:4915":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"2:21813:7266":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"17:13865:5649":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"6:4400:6530":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"16:4818:5728":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"1:6392:3188":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"}},"external_crates":{"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":26}