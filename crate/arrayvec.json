{"root":"0:0:1649","crate_version":"0.7.2","includes_private":false,"index":{"2:12014":{"id":"2:12014","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12015:813","2:12016:1842","2:12017:2217","2:12018:34030","2:12020:34031","2:12023:28034","2:12024:34032","2:12025:314","2:12026:1778","2:12027:28051","2:12029:28052","2:12031:28053","2:12033:28054","2:12035:34033","2:12036:34034","2:12037:28077","2:12038:28078","2:12039:2208","2:12040:7517","2:12041:3812","2:12042:31781","2:12043:31796","2:12044:4450","2:12045:34035","2:12046:31844","2:12047:3141","2:12050:27614","2:12053:27616","2:12056:2875","2:12060:2840","2:12064:26736","2:12067:28086","2:12070:28088","2:12073:34036","2:12076:34037","2:12079:28090","2:12082:28092","2:12085:34038","2:12088:34039","2:12091:2298","2:12094:34040","2:12097:34041","2:12100:34042","2:12103:34043","2:12105:34044","2:12107:34045","2:12109:34046","2:12110:34047","2:12111:34048","2:12114:34049","2:12117:25999","2:12120:28094","2:12123:34050","2:12126:34051","2:12129:34052","2:12132:34053","2:12134:25442","2:12135:27965","2:12136:25446","2:12137:25447","2:12138:25448","2:12139:34054","2:12141:9092","2:12142:34055"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:407":{"id":"0:407","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[460,0],"end":[465,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"primitive":"str"},"items":["0:409:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:427:670":{"id":"0:427:670","crate_id":0,"name":"fmt","span":{"filename":"src/array_string.rs","begin":[494,4],"end":[494,76]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:312":{"id":"0:312","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1165,0],"end":[1167,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsMut","id":"2:2509:74","args":{"angle_bracketed":{"args":[{"type":{"slice":{"generic":"T"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:315:2091"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:397:552":{"id":"0:397:552","crate_id":0,"name":"deref","span":{"filename":"src/array_string.rs","begin":[426,4],"end":[431,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:0:1649":{"id":"0:0:1649","crate_id":0,"name":"arrayvec","span":{"filename":"src/lib.rs","begin":[1,0],"end":[59,53]},"visibility":"public","docs":"**arrayvec** provides the types [`ArrayVec`] and [`ArrayString`]: \narray-backed vector and string types, which store their contents inline.\n\nThe arrayvec package has the following cargo features:\n\n- `std`\n  - Optional, enabled by default\n  - Use libstd; disable to use `no_std` instead.\n\n- `serde`\n  - Optional\n  - Enable serialization for ArrayVec and ArrayString using serde 1.x\n\n## Rust Version\n\nThis version of arrayvec requires Rust 1.51 or later.\n","links":{"`ArrayString`":"0:528:1653","`ArrayVec`":"0:50:1655"},"attrs":["#![doc(html_root_url = \"https://docs.rs/arrayvec/0.7/\")]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:522-0:528:1653","0:523-0:536:1654","0:525-0:50:1655","0:526-0:175:1656","0:527-0:205:1657"],"is_stripped":false}}},"0:469:128":{"id":"0:469:128","crate_id":0,"name":"Error","span":{"filename":"src/array_string.rs","begin":[621,4],"end":[621,40]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}}}}},"0:304":{"id":"0:304","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1157,0],"end":[1159,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"slice":{"generic":"T"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:307:2090"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:79:1897":{"id":"0:79:1897","crate_id":0,"name":"try_insert","span":{"filename":"src/arrayvec.rs","begin":[304,4],"end":[328,5]},"visibility":"public","docs":"Insert `element` at position `index`.\n\nShift up all elements after `index`; the `index` must be less than\nor equal to the length.\n\nReturns an error if vector is already at full capacity.\n\n***Panics*** `index` is out of bounds.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::<_, 2>::new();\n\nassert!(array.try_insert(0, \"x\").is_ok());\nassert!(array.try_insert(0, \"y\").is_ok());\nassert!(array.try_insert(0, \"z\").is_err());\nassert_eq!(&array[..], &[\"y\", \"x\"]);\n\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}],["element",{"generic":"T"}]],"output":{"resolved_path":{"name":"Result","id":"2:41547:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:320":{"id":"0:320","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1173,0],"end":[1178,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:323:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12046:31844":{"id":"2:12046:31844","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:43658:2520","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12053:27616":{"id":"2:12053:27616","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:11894:419","self::pattern":"2:11716:2519"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:2513","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:379:1854":{"id":"0:379:1854","crate_id":0,"name":"remaining_capacity","span":{"filename":"src/array_string.rs","begin":[186,4],"end":[188,5]},"visibility":"public","docs":"Returns the capacity left in the `ArrayString`.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<3>::from(\"abc\").unwrap();\nstring.pop();\nassert_eq!(string.remaining_capacity(), 1);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:80:1787":{"id":"0:80:1787","crate_id":0,"name":"pop","span":{"filename":"src/arrayvec.rs","begin":[344,4],"end":[346,5]},"visibility":"public","docs":"Remove the last element in the vector and return it.\n\nReturn `Some(` *element* `)` if the vector is non-empty, else `None`.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::<_, 2>::new();\n\narray.push(1);\n\nassert_eq!(array.pop(), Some(1));\nassert_eq!(array.pop(), None);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12079:28090":{"id":"2:12079:28090","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:11894:419","self::pattern":"2:11716:2519","str::rsplitn":"2:12082:28092"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43470:2540","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:7213:1656":{"id":"2:7213:1656","crate_id":2,"name":"IntoIter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"I"}}}},"0:459":{"id":"0:459","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[554,0],"end":[559,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["clamp","min","max"],"trait":{"name":"Ord","id":"2:2348:182","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:461:430"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2741:2577-0:175:1656":{"id":"a:2:2741:2577-0:175:1656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2741:2577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1656","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:447:1037":{"id":"0:447:1037","crate_id":0,"name":"partial_cmp","span":{"filename":"src/array_string.rs","begin":[534,4],"end":[536,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"2:30848:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:217":{"id":"0:217","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[937,0],"end":[937,72]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:161:786":{"id":"0:161:786","crate_id":0,"name":"into_iter","span":{"filename":"src/arrayvec.rs","begin":[806,4],"end":[806,56]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:7206:152","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5401:25444":{"id":"5:5401:25444","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12137:25447"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:684-0:50:1655":{"id":"b:5:684-0:50:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["5:686:2481","5:687:2892","5:688:2893"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:145:696":{"id":"0:145:696","crate_id":0,"name":"from","span":{"filename":"src/arrayvec.rs","begin":[751,4],"end":[760,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["array",{"array":{"type":{"generic":"T"},"len":"CAP"}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:376:2160":{"id":"0:376:2160","crate_id":0,"name":"zero_filled","span":{"filename":"src/array_string.rs","begin":[142,4],"end":[152,5]},"visibility":"public","docs":"Create a new `ArrayString` value fully filled with ASCII NULL characters (`\\0`). Useful\nto be used as a buffer to collect external data or as a buffer for intermediate processing.\n\n```\nuse arrayvec::ArrayString;\n\nlet string = ArrayString::<16>::zero_filled();\nassert_eq!(string.len(), 16);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5399:34709":{"id":"5:5399:34709","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:280:2516","`String`":"5:7241:224"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:280:2516","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:6990:2899","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:75:1790":{"id":"0:75:1790","crate_id":0,"name":"truncate","span":{"filename":"src/arrayvec.rs","begin":[245,4],"end":[247,5]},"visibility":"public","docs":"Shortens the vector, keeping the first `len` elements and dropping\nthe rest.\n\nIf `len` is greater than the vector’s current length this has no\neffect.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3, 4, 5]);\narray.truncate(3);\nassert_eq!(&array[..], &[1, 2, 3]);\narray.truncate(4);\nassert_eq!(&array[..], &[1, 2, 3]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["new_len",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:528:1653":{"id":"b:2:2251-0:528:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2501","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2253:2090"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:119:1773":{"id":"0:119:1773","crate_id":0,"name":"as_slice","span":{"filename":"src/arrayvec.rs","begin":[685,4],"end":[687,5]},"visibility":"public","docs":"Return a slice containing all elements of the vector.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"generic":"T"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3322:1493":{"id":"2:3322:1493","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39353:2569","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:390:316":{"id":"0:390:316","crate_id":0,"name":"as_str","span":{"filename":"src/array_string.rs","begin":[404,4],"end":[406,5]},"visibility":"public","docs":"Return a string slice of the whole `ArrayString`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:536:1654":{"id":"b:2:2248-0:536:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2501","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2250:1795"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:522-0:528:1653":{"id":"0:522-0:528:1653","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[56,0],"end":[56,41]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::array_string::ArrayString","name":"ArrayString","id":"0:528:1653","glob":false}}},"2:12109:34046":{"id":"2:12109:34046","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:528:1653":{"id":"b:2:2248-0:528:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2501","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2250:1795"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:155":{"id":"0:155","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[803,0],"end":[807,1]},"visibility":"default","docs":"Iterate the `ArrayVec` with references to each element.\n\n```\nuse arrayvec::ArrayVec;\n\nlet array = ArrayVec::from([1, 2, 3]);\n\nfor elt in &array {\n    // ...\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7206:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}},"items":["0:159:1768","0:160:1656","0:161:786"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12117:25999":{"id":"2:12117:25999","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11894:419","self::pattern":"2:11716:2519"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:311:315":{"id":"0:311:315","crate_id":0,"name":"as_ref","span":{"filename":"src/arrayvec.rs","begin":[1162,4],"end":[1162,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"generic":"T"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:205:1657":{"id":"b:2:2538-0:205:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2541:2835"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:141":{"id":"0:141","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[750,0],"end":[761,1]},"visibility":"default","docs":"Create an `ArrayVec` from an array.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3]);\nassert_eq!(array.len(), 3);\nassert_eq!(array.capacity(), 3);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"array":{"type":{"generic":"T"},"len":"CAP"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:145:696"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:259:2063":{"id":"0:259:2063","crate_id":0,"name":"extend","span":{"filename":"src/arrayvec.rs","begin":[1015,4],"end":[1019,5]},"visibility":"default","docs":"Extend the `ArrayVec` with an iterator.\n \n***Panics*** if extending the vector exceeds its capacity.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["iter",{"generic":"I"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:7206:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:205:1657":{"id":"b:2:2553-0:205:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:221":{"id":"0:221","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[939,0],"end":[953,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["try_find","try_for_each","try_collect","scan","filter_map","step_by","ne","max_by_key","partial_cmp","is_sorted_by_key","product","rposition","fold","collect_into","flat_map","le","enumerate","min","chain","map","cloned","__iterator_get_unchecked","cmp_by","unzip","reduce","partition","flatten","peekable","rev","intersperse","next_chunk","skip","gt","min_by","partial_cmp_by","copied","try_reduce","partition_in_place","fuse","cmp","skip_while","eq","intersperse_with","last","min_by_key","eq_by","ge","cycle","find","count","zip","is_partitioned","inspect","take_while","for_each","advance_by","all","lt","max","is_sorted","array_chunks","find_map","size_hint","try_fold","by_ref","any","map_while","filter","take","nth","collect","position","max_by","is_sorted_by","sum"],"trait":{"name":"Iterator","id":"2:7322:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:225:1768","0:226:955","0:228:2041"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:380:1781":{"id":"0:380:1781","crate_id":0,"name":"push","span":{"filename":"src/array_string.rs","begin":[204,4],"end":[206,5]},"visibility":"public","docs":"Adds the given char to the end of the string.\n\n***Panics*** if the backing array is not large enough to fit the additional char.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<2>::new();\n\nstring.push('a');\nstring.push('b');\n\nassert_eq!(&string[..], \"ab\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["c",{"primitive":"char"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:551:430":{"id":"0:551:430","crate_id":0,"name":"cmp","span":{"filename":"src/errors.rs","begin":[8,26],"end":[8,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30848:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:120:1776":{"id":"0:120:1776","crate_id":0,"name":"as_mut_slice","span":{"filename":"src/arrayvec.rs","begin":[690,4],"end":[692,5]},"visibility":"public","docs":"Return a mutable slice containing all elements of the vector.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"generic":"T"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12038:28078":{"id":"2:12038:28078","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12037:28077"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:235":{"id":"0:235","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[966,0],"end":[966,76]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"name":"ExactSizeIterator","id":"2:7267:2043","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:65:941":{"id":"0:65:941","crate_id":0,"name":"new","span":{"filename":"src/arrayvec.rs","begin":[80,4],"end":[85,5]},"visibility":"public","docs":"Create a new empty `ArrayVec`.\n\nThe maximum capacity is given by the generic parameter `CAP`.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::<_, 16>::new();\narray.push(1);\narray.push(2);\nassert_eq!(&array[..], &[1, 2]);\nassert_eq!(array.capacity(), 16);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:61":{"id":"0:61","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[63,0],"end":[703,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:65:941","0:66:943","0:67:813","0:68:1842","0:69:1846","0:70:1851","0:71:1854","0:72:1781","0:73:1783","0:74:1784","0:75:1790","0:76:1789","0:78:1896","0:79:1897","0:80:1787","0:81:1918","0:83:1919","0:84:1931","0:86:1932","0:87:1946","0:108:1770","0:109:1976","0:110:1938","0:113:2006","0:115:2007","0:118:2017","0:119:1773","0:120:1776","0:121:314","0:122:1778"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:462":{"id":"0:462","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[561,0],"end":[568,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:11676:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:464:127","0:465:2245"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:174:786":{"id":"0:174:786","crate_id":0,"name":"into_iter","span":{"filename":"src/arrayvec.rs","begin":[840,4],"end":[842,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"IntoIter","id":"0:175:1656","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:339:2098":{"id":"0:339:2098","crate_id":0,"name":"flush","span":{"filename":"src/arrayvec.rs","begin":[1219,4],"end":[1219,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2867:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:370:696":{"id":"0:370:696","crate_id":0,"name":"from","span":{"filename":"src/array_string.rs","begin":[105,4],"end":[109,5]},"visibility":"public","docs":"Create a new `ArrayString` from a `str`.\n\nCapacity is inferred from the type parameter.\n\n**Errors** if the backing array is not large enough to fit the string.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<3>::from(\"foo\").unwrap();\nassert_eq!(&string[..], \"foo\");\nassert_eq!(string.len(), 3);\nassert_eq!(string.capacity(), 3);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41547:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:50:1655":{"id":"b:2:2248-0:50:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2501","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2250:1795"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:292:613":{"id":"0:292:613","crate_id":0,"name":"eq","span":{"filename":"src/arrayvec.rs","begin":[1138,4],"end":[1140,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:86:1932":{"id":"0:86:1932","crate_id":0,"name":"pop_at","span":{"filename":"src/arrayvec.rs","begin":[438,4],"end":[444,5]},"visibility":"public","docs":"Remove the element at `index` and shift down the following elements.\n\nThis is a checked version of `.remove(index)`. Returns `None` if there\nis no element at `index`. Otherwise, return the element inside `Some`.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3]);\n\nassert!(array.pop_at(0).is_some());\nassert_eq!(&array[..], &[2, 3]);\n\nassert!(array.pop_at(2).is_none());\nassert!(array.pop_at(10).is_none());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:296:613":{"id":"0:296:613","crate_id":0,"name":"eq","span":{"filename":"src/arrayvec.rs","begin":[1146,4],"end":[1148,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"generic":"T"}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:287:731":{"id":"0:287:731","crate_id":0,"name":"hash","span":{"filename":"src/arrayvec.rs","begin":[1130,4],"end":[1132,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Hasher","id":"2:9374:145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:121:314":{"id":"0:121:314","crate_id":0,"name":"as_ptr","span":{"filename":"src/arrayvec.rs","begin":[695,4],"end":[697,5]},"visibility":"public","docs":"Return a raw pointer to the vector's buffer.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:175:1656":{"id":"b:2:2548-0:175:1656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1656","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2251-0:175:1656":{"id":"b:2:2251-0:175:1656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2501","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1656","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2253:2090"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:385:1787":{"id":"0:385:1787","crate_id":0,"name":"pop","span":{"filename":"src/array_string.rs","begin":[308,4],"end":[318,5]},"visibility":"public","docs":"Removes the last character from the string and returns it.\n\nReturns `None` if this `ArrayString` is empty.\n\n```\nuse arrayvec::ArrayString;\n \nlet mut s = ArrayString::<3>::from(\"foo\").unwrap();\n\nassert_eq!(s.pop(), Some('o'));\nassert_eq!(s.pop(), Some('o'));\nassert_eq!(s.pop(), Some('f'));\n\nassert_eq!(s.pop(), None);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"char"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:363:60":{"id":"0:363:60","crate_id":0,"name":"default","span":{"filename":"src/array_string.rs","begin":[43,4],"end":[45,5]},"visibility":"default","docs":"Return an empty `ArrayString`","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:153:128":{"id":"0:153:128","crate_id":0,"name":"Error","span":{"filename":"src/arrayvec.rs","begin":[778,4],"end":[778,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}}},"0:430:2242":{"id":"0:430:2242","crate_id":0,"name":"write_char","span":{"filename":"src/array_string.rs","begin":[500,4],"end":[502,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["c",{"primitive":"char"}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:428":{"id":"0:428","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[498,0],"end":[507,1]},"visibility":"default","docs":"`Write` appends written data to the end of the string.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["write_fmt","write_char"],"trait":{"name":"Write","id":"2:9111:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:430:2242","0:432:1598"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:440:1037":{"id":"0:440:1037","crate_id":0,"name":"partial_cmp","span":{"filename":"src/array_string.rs","begin":[523,4],"end":[525,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"2:30848:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:557":{"id":"0:557","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[8,42],"end":[8,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::PartialOrd","id":"2:2354:189","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["gt","ge","le","lt"],"trait":{"name":"PartialOrd","id":"2:2354:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:559:1037"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:72:1781":{"id":"0:72:1781","crate_id":0,"name":"push","span":{"filename":"src/arrayvec.rs","begin":[175,4],"end":[177,5]},"visibility":"public","docs":"Push `element` to the end of the vector.\n\n***Panics*** if the vector is already full.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::<_, 2>::new();\n\narray.push(1);\narray.push(2);\n\nassert_eq!(&array[..], &[1, 2]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["element",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:137":{"id":"0:137","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[733,0],"end":[738,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"DerefMut","id":"2:2911:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:140:554"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:526-0:175:1656":{"id":"0:526-0:175:1656","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[59,36],"end":[59,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::arrayvec::IntoIter","name":"IntoIter","id":"0:175:1656","glob":false}}},"0:366:941":{"id":"0:366:941","crate_id":0,"name":"new","span":{"filename":"src/array_string.rs","begin":[62,4],"end":[67,5]},"visibility":"public","docs":"Create a new empty `ArrayString`.\n\nCapacity is inferred from the type parameter.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<16>::new();\nstring.push_str(\"foo\");\nassert_eq!(&string[..], \"foo\");\nassert_eq!(string.capacity(), 16);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12035:34033":{"id":"2:12035:34033","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:11900:1399","str::slice_mut_unchecked":"2:12036:34034","crate::ops::Index":"2:2981:2467"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:213":{"id":"0:213","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[936,0],"end":[936,72]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2701:228-0:50:1655":{"id":"a:2:2701:228-0:50:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:436:423":{"id":"0:436:423","crate_id":0,"name":"clone","span":{"filename":"src/array_string.rs","begin":[511,4],"end":[513,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:552":{"id":"0:552","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[8,31],"end":[8,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2694:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12015:813":{"id":"2:12015:813","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:11894:419"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12031:28053":{"id":"2:12031:28053","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9817:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9817:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12036:34034":{"id":"2:12036:34034","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:11900:1399","crate::ops::IndexMut":"2:2985:2468","str::slice_unchecked":"2:12035:34033"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:378:1851":{"id":"0:378:1851","crate_id":0,"name":"is_full","span":{"filename":"src/array_string.rs","begin":[175,4],"end":[175,73]},"visibility":"public","docs":"Return if the `ArrayString` is completely filled.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<1>::new();\nassert!(!string.is_full());\nstring.push_str(\"A\");\nassert!(string.is_full());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:319:670":{"id":"0:319:670","crate_id":0,"name":"fmt","span":{"filename":"src/arrayvec.rs","begin":[1170,4],"end":[1170,76]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3320-0:205:1657":{"id":"b:2:3320-0:205:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2501","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:452":{"id":"0:452","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[543,0],"end":[552,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["gt","ge","le","lt"],"trait":{"name":"PartialOrd","id":"2:2354:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"primitive":"str"},"items":["0:454:1037","0:455:846","0:456:812","0:457:728","0:458:711"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:150":{"id":"0:150","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[775,0],"end":[789,1]},"visibility":"default","docs":"Try to create an `ArrayVec` from a slice. This will return an error if the slice was too big to\nfit.\n\n```\nuse arrayvec::ArrayVec;\nuse std::convert::TryInto as _;\n\nlet array: ArrayVec<_, 4> = (&[1, 2, 3] as &[_]).try_into().unwrap();\nassert_eq!(array.len(), 3);\nassert_eq!(array.capacity(), 4);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"generic":"T"}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:153:128","0:154:1479"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2553-0:536:1654":{"id":"b:2:2553-0:536:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12043:31796":{"id":"2:12043:31796","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12042:31781"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:43649:2521","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12064:26736":{"id":"2:12064:26736","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:11716:2519","`DoubleEndedIterator`":"2:7244:121","prim@char":"1:11894:419","str::split_whitespace":"2:12042:31781","str::rsplit":"2:12070:28088"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43366:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5383:34705":{"id":"5:5383:34705","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:280:2516","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:6990:2899","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:280:2516","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}},{"type":{"resolved_path":{"name":"Global","id":"5:6990:2899","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:233:2042":{"id":"0:233:2042","crate_id":0,"name":"next_back","span":{"filename":"src/arrayvec.rs","begin":[957,4],"end":[963,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:7322:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3320-0:528:1653":{"id":"b:2:3320-0:528:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2501","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12042:31781":{"id":"2:12042:31781","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12043:31796"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:43640:2523","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:67:813":{"id":"0:67:813","crate_id":0,"name":"len","span":{"filename":"src/arrayvec.rs","begin":[111,4],"end":[111,58]},"visibility":"public","docs":"Return the number of elements in the `ArrayVec`.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3]);\narray.pop();\nassert_eq!(array.len(), 2);\n```","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:549":{"id":"0:549","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[8,26],"end":[8,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::Ord","id":"2:2348:182","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clamp","min","max"],"trait":{"name":"Ord","id":"2:2348:182","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:551:430"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:7214:786":{"id":"2:7214:786","crate_id":2,"name":"into_iter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:414:731":{"id":"0:414:731","crate_id":0,"name":"hash","span":{"filename":"src/array_string.rs","begin":[472,4],"end":[474,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["h",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Hasher","id":"2:9374:145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:438":{"id":"0:438","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[521,0],"end":[530,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["gt","ge","le","lt"],"trait":{"name":"PartialOrd","id":"2:2354:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:440:1037","0:441:846","0:442:812","0:443:728","0:444:711"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12056:2875":{"id":"2:12056:2875","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41405:179","prim@char":"1:11894:419","self::pattern":"2:11716:2519"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12139:34054":{"id":"2:12139:34054","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4539:34054"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:43665:2528","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:73:1783":{"id":"0:73:1783","crate_id":0,"name":"try_push","span":{"filename":"src/arrayvec.rs","begin":[201,4],"end":[203,5]},"visibility":"public","docs":"Push `element` to the end of the vector.\n\nReturn `Ok` if the push succeeds, or return an error if the vector\nis already full.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::<_, 2>::new();\n\nlet push1 = array.try_push(1);\nlet push2 = array.try_push(2);\n\nassert!(push1.is_ok());\nassert!(push2.is_ok());\n\nassert_eq!(&array[..], &[1, 2]);\n\nlet overflow = array.try_push(3);\n\nassert!(overflow.is_err());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["element",{"generic":"T"}]],"output":{"resolved_path":{"name":"Result","id":"2:41547:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12076:34037":{"id":"2:12076:34037","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:11716:2519","str::split":"2:12064:26736","prim@char":"1:11894:419","str::split_terminator":"2:12073:34036"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43434:2541","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:2513","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12137:25447":{"id":"2:12137:25447","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:50:1655":{"id":"b:2:2538-0:50:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2541:2835"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:225:1768":{"id":"0:225:1768","crate_id":0,"name":"Item","span":{"filename":"src/arrayvec.rs","begin":[940,4],"end":[940,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:335:430":{"id":"0:335:430","crate_id":0,"name":"cmp","span":{"filename":"src/arrayvec.rs","begin":[1203,4],"end":[1205,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"cmp::Ordering","id":"2:30848:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:421:315":{"id":"0:421:315","crate_id":0,"name":"as_ref","span":{"filename":"src/array_string.rs","begin":[484,4],"end":[484,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12082:28092":{"id":"2:12082:28092","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:11894:419","str::splitn":"2:12079:28090","self::pattern":"2:11716:2519"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43488:2539","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:2513","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:279":{"id":"0:279","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1105,0],"end":[1125,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:282:423","0:283:425"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:70:1851":{"id":"0:70:1851","crate_id":0,"name":"is_full","span":{"filename":"src/arrayvec.rs","begin":[146,4],"end":[146,73]},"visibility":"public","docs":"Return true if the `ArrayVec` is completely filled to its capacity, false otherwise.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::<_, 1>::new();\nassert!(!array.is_full());\narray.push(1);\nassert!(array.is_full());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:424:670":{"id":"0:424:670","crate_id":0,"name":"fmt","span":{"filename":"src/array_string.rs","begin":[489,4],"end":[489,76]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12029:28052":{"id":"2:12029:28052","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41405:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9817:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9817:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:466":{"id":"0:466","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[619,0],"end":[628,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:469:128","0:470:1479"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:506:670":{"id":"0:506:670","crate_id":0,"name":"fmt","span":{"filename":"src/errors.rs","begin":[45,4],"end":[47,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12025:314":{"id":"2:12025:314","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12026:1778","`u8`":"1:11911:1501"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12047:3141":{"id":"2:12047:3141","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:11894:419","self::pattern":"2:11716:2519"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12073:34036":{"id":"2:12073:34036","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:11716:2519","str::split":"2:12064:26736","prim@char":"1:11894:419","`DoubleEndedIterator`":"2:7244:121","str::rsplit_terminator":"2:12076:34037"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43416:2542","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12094:34040":{"id":"2:12094:34040","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:11716:2519","`DoubleEndedIterator`":"2:7244:121","prim@char":"1:11894:419","str::matches":"2:12091:2298"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:43588:2536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:2513","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:330:711":{"id":"0:330:711","crate_id":0,"name":"ge","span":{"filename":"src/arrayvec.rs","begin":[1193,4],"end":[1195,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:7210-0:175:1656":{"id":"b:2:7210-0:175:1656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7322:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7206:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1656","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:7212:1768","2:7213:1656","2:7214:786"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"2:12037:28077":{"id":"2:12037:28077","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:12038:28078"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12041:3812":{"id":"2:12041:3812","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43352:2255","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:528:1653":{"id":"a:2:2684:220-0:528:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:533":{"id":"0:533","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[33,9],"end":[33,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2253:2090":{"id":"2:2253:2090","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:284":{"id":"0:284","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1127,0],"end":[1133,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"2:9366:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9366:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:287:731"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:205:1657":{"id":"0:205:1657","crate_id":0,"name":"Drain","span":{"filename":"src/arrayvec.rs","begin":[926,0],"end":[934,1]},"visibility":"public","docs":"A draining iterator for `ArrayVec`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"impls":["a:2:8253:2658-0:205:1657","a:2:8254:2657-0:205:1657","a:2:2741:2577-0:205:1657","b:2:2542-0:205:1657","b:2:2538-0:205:1657","b:2:2548-0:205:1657","b:2:2251-0:205:1657","b:2:7210-0:205:1657","b:2:2553-0:205:1657","b:2:3320-0:205:1657","b:2:2248-0:205:1657","0:229","0:217","0:213","0:235","0:221","0:239"]}}},"0:443:728":{"id":"0:443:728","crate_id":0,"name":"gt","span":{"filename":"src/array_string.rs","begin":[528,4],"end":[528,55]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:66:943":{"id":"0:66:943","crate_id":0,"name":"new_const","span":{"filename":"src/arrayvec.rs","begin":[96,4],"end":[99,5]},"visibility":"public","docs":"Create a new empty `ArrayVec` (const fn).\n\nThe maximum capacity is given by the generic parameter `CAP`.\n\n```\nuse arrayvec::ArrayVec;\n\nstatic ARRAY: ArrayVec<u8, 1024> = ArrayVec::new_const();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3320-0:536:1654":{"id":"b:2:3320-0:536:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2501","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:396:230":{"id":"0:396:230","crate_id":0,"name":"Target","span":{"filename":"src/array_string.rs","begin":[424,4],"end":[424,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"str"}}}},"2:12129:34052":{"id":"2:12129:34052","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11894:419","self::pattern":"2:11716:2519"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:2513","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12132:34053":{"id":"2:12132:34053","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:11677:127","`FromStr`":"2:11676:2123"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41547:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:11676:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:11676:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:441:846":{"id":"0:441:846","crate_id":0,"name":"lt","span":{"filename":"src/array_string.rs","begin":[526,4],"end":[526,55]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:364":{"id":"0:364","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[48,0],"end":[420,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:366:941","0:367:943","0:368:813","0:369:1842","0:370:696","0:371:2153","0:376:2160","0:377:1846","0:378:1851","0:379:1854","0:380:1781","0:381:1783","0:382:2193","0:383:2149","0:385:1787","0:386:1790","0:387:1931","0:388:1789","0:389:1770","0:390:316","0:391:2236"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5384:2018":{"id":"5:5384:2018","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7241:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:172:1768":{"id":"0:172:1768","crate_id":0,"name":"Item","span":{"filename":"src/arrayvec.rs","begin":[838,4],"end":[838,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:458:711":{"id":"0:458:711","crate_id":0,"name":"ge","span":{"filename":"src/array_string.rs","begin":[551,4],"end":[551,67]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5398:34708":{"id":"5:5398:34708","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7241:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:450:728":{"id":"0:450:728","crate_id":0,"name":"gt","span":{"filename":"src/array_string.rs","begin":[539,4],"end":[539,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:409:613":{"id":"0:409:613","crate_id":0,"name":"eq","span":{"filename":"src/array_string.rs","begin":[462,4],"end":[464,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:69:1846":{"id":"0:69:1846","crate_id":0,"name":"capacity","span":{"filename":"src/arrayvec.rs","begin":[134,4],"end":[134,49]},"visibility":"public","docs":"Return the capacity of the `ArrayVec`.\n\n```\nuse arrayvec::ArrayVec;\n\nlet array = ArrayVec::from([1, 2, 3]);\nassert_eq!(array.capacity(), 3);\n```","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:465:2245":{"id":"0:465:2245","crate_id":0,"name":"from_str","span":{"filename":"src/array_string.rs","begin":[565,4],"end":[567,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41547:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:11676:2123","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:113:2006":{"id":"0:113:2006","crate_id":0,"name":"into_inner","span":{"filename":"src/arrayvec.rs","begin":[652,4],"end":[658,5]},"visibility":"public","docs":"Return the inner fixed size array, if it is full to its capacity.\n\nReturn an `Ok` value with the array if length equals capacity,\nreturn an `Err` with self otherwise.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41547:210","args":{"angle_bracketed":{"args":[{"type":{"array":{"type":{"generic":"T"},"len":"CAP"}}},{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12100:34042":{"id":"2:12100:34042","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:11716:2519","`DoubleEndedIterator`":"2:7244:121","prim@char":"1:11894:419","str::match_indices":"2:12097:34041"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:43534:2534","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:2513","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:497:2246":{"id":"0:497:2246","crate_id":0,"name":"simplify","span":{"filename":"src/errors.rs","begin":[27,4],"end":[29,5]},"visibility":"public","docs":"Convert into a `CapacityError` that does not carry an element.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:475:1479":{"id":"0:475:1479","crate_id":0,"name":"try_from","span":{"filename":"src/array_string.rs","begin":[634,4],"end":[639,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["f",{"resolved_path":{"name":"fmt::Arguments","id":"2:42507:73","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41547:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:2522:237","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12110:34047":{"id":"2:12110:34047","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:536:1654":{"id":"b:2:2548-0:536:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:525-0:50:1655":{"id":"0:525-0:50:1655","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[59,26],"end":[59,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::arrayvec::ArrayVec","name":"ArrayVec","id":"0:50:1655","glob":false}}},"0:332":{"id":"0:332","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1202,0],"end":[1206,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Ord","id":"2:2348:182","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clamp","min","max"],"trait":{"name":"Ord","id":"2:2348:182","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:335:430"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:687:2892":{"id":"5:687:2892","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:367:943":{"id":"0:367:943","crate_id":0,"name":"new_const","span":{"filename":"src/array_string.rs","begin":[78,4],"end":[81,5]},"visibility":"public","docs":"Create a new empty `ArrayString` (const fn).\n\nCapacity is inferred from the type parameter.\n\n```\nuse arrayvec::ArrayString;\n\nstatic ARRAY: ArrayString<1024> = ArrayString::new_const();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5400:3329":{"id":"5:5400:3329","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7241:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:108:1770":{"id":"0:108:1770","crate_id":0,"name":"set_len","span":{"filename":"src/arrayvec.rs","begin":[540,4],"end":[544,5]},"visibility":"public","docs":"Set the vector’s length without dropping or moving out elements\n\nThis method is `unsafe` because it changes the notion of the\nnumber of “valid” elements in the vector. Use with care.\n\nThis method uses *debug assertions* to check that `length` is\nnot greater than the capacity.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["length",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:169":{"id":"0:169","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[837,0],"end":[843,1]},"visibility":"default","docs":"Iterate the `ArrayVec` with each element by value.\n\nThe vector is consumed by this operation.\n\n```\nuse arrayvec::ArrayVec;\n\nfor elt in ArrayVec::from([1, 2, 3]) {\n    // ...\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7206:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:172:1768","0:173:1656","0:174:786"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:183:1768":{"id":"0:183:1768","crate_id":0,"name":"Item","span":{"filename":"src/arrayvec.rs","begin":[853,4],"end":[853,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:186":{"id":"0:186","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[873,0],"end":[885,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["rfind","nth_back","rfold","advance_back_by","try_rfold"],"trait":{"name":"DoubleEndedIterator","id":"2:7244:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1656","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:189:2042"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8253:2658-0:528:1653":{"id":"a:2:8253:2658-0:528:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8253:2658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:398":{"id":"0:398","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[434,0],"end":[444,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"DerefMut","id":"2:2911:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:400:554"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12050:27614":{"id":"2:12050:27614","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:11894:419","self::pattern":"2:11716:2519"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8254:2657-0:536:1654":{"id":"a:2:8254:2657-0:536:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8254:2657","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8254:2657","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:369:1842":{"id":"0:369:1842","crate_id":0,"name":"is_empty","span":{"filename":"src/array_string.rs","begin":[89,4],"end":[89,60]},"visibility":"public","docs":"Returns whether the string is empty.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3320-0:50:1655":{"id":"b:2:3320-0:50:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2501","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:501":{"id":"0:501","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[38,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9151:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:503:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:289":{"id":"0:289","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1135,0],"end":[1141,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:292:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:449:812":{"id":"0:449:812","crate_id":0,"name":"le","span":{"filename":"src/array_string.rs","begin":[538,4],"end":[538,54]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:197":{"id":"0:197","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[904,0],"end":[912,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1656","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:200:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8254:2657-0:205:1657":{"id":"a:2:8254:2657-0:205:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8254:2657","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8254:2657","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:167:1656":{"id":"0:167:1656","crate_id":0,"name":"IntoIter","span":{"filename":"src/arrayvec.rs","begin":[822,4],"end":[822,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"IterMut","id":"2:9989:2035","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}}}}},"0:136:552":{"id":"0:136:552","crate_id":0,"name":"deref","span":{"filename":"src/arrayvec.rs","begin":[728,4],"end":[730,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:2898:117","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:50:1655":{"id":"a:2:2684:220-0:50:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:383:2149":{"id":"0:383:2149","crate_id":0,"name":"try_push_str","span":{"filename":"src/array_string.rs","begin":[279,4],"end":[291,5]},"visibility":"public","docs":"Adds the given string slice to the end of the string.\n\nReturns `Ok` if the push succeeds.\n\n**Errors** if the backing array is not large enough to fit the string.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<2>::new();\n\nstring.try_push_str(\"a\").unwrap();\nlet overflow1 = string.try_push_str(\"bc\");\nstring.try_push_str(\"d\").unwrap();\nlet overflow2 = string.try_push_str(\"ef\");\n\nassert_eq!(&string[..], \"ad\");\nassert_eq!(overflow1.unwrap_err().element(), \"bc\");\nassert_eq!(overflow2.unwrap_err().element(), \"ef\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["s",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41547:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:387:1931":{"id":"0:387:1931","crate_id":0,"name":"remove","span":{"filename":"src/array_string.rs","begin":[366,4],"end":[381,5]},"visibility":"public","docs":"Removes a `char` from this `ArrayString` at a byte position and returns it.\n\nThis is an `O(n)` operation, as it requires copying every element in the\narray.\n\n***Panics*** if `idx` is larger than or equal to the `ArrayString`’s length,\nor if it does not lie on a `char` boundary.\n\n```\nuse arrayvec::ArrayString;\n \nlet mut s = ArrayString::<3>::from(\"foo\").unwrap();\n\nassert_eq!(s.remove(0), 'f');\nassert_eq!(s.remove(1), 'o');\nassert_eq!(s.remove(0), 'o');\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["idx",{"primitive":"usize"}]],"output":{"primitive":"char"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:315:2091":{"id":"0:315:2091","crate_id":0,"name":"as_mut","span":{"filename":"src/arrayvec.rs","begin":[1166,4],"end":[1166,45]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"generic":"T"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:528:1653":{"id":"0:528:1653","crate_id":0,"name":"ArrayString","span":{"filename":"src/array_string.rs","begin":[34,0],"end":[38,1]},"visibility":"public","docs":"A string with a fixed capacity.\n\nThe `ArrayString` is a string backed by a fixed size array. It keeps track\nof its length, and is parameterized by `CAP` for the maximum capacity.\n\n`CAP` is of type `usize` but is range limited to `u32::MAX`; attempting to create larger\narrayvecs with larger capacity will panic.\n\nThe string is a contiguous value that you can store directly on the stack\nif needed.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"impls":["0:364","a:2:8253:2658-0:528:1653","a:2:2701:228-0:528:1653","a:2:8254:2657-0:528:1653","a:2:2741:2577-0:528:1653","a:2:2684:220-0:528:1653","b:2:2542-0:528:1653","b:2:2538-0:528:1653","b:2:2548-0:528:1653","b:2:2251-0:528:1653","b:2:2553-0:528:1653","b:2:3320-0:528:1653","b:2:2248-0:528:1653","b:5:684-0:528:1653","b:5:5644-0:528:1653","0:419","0:462","0:466","0:407","0:471","0:416","0:398","0:412","0:404","0:452","0:425","0:533","0:361","0:434","0:422","0:438","0:428","0:401","0:394","0:410","0:459","0:445"]}}},"a:2:2684:220-0:175:1656":{"id":"a:2:2684:220-0:175:1656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1656","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:5644-0:536:1654":{"id":"b:5:5644-0:536:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9151:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2501","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5642:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["5:5646:1457"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:541:423":{"id":"0:541:423","crate_id":0,"name":"clone","span":{"filename":"src/errors.rs","begin":[8,9],"end":[8,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12088:34039":{"id":"2:12088:34039","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:2513","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:239":{"id":"0:239","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[968,0],"end":[988,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:2922:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:243:588"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12103:34043":{"id":"2:12103:34043","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:471":{"id":"0:471","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[630,0],"end":[640,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Arguments","id":"2:42507:73","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:474:128","0:475:1479"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:76:1789":{"id":"0:76:1789","crate_id":0,"name":"clear","span":{"filename":"src/arrayvec.rs","begin":[250,4],"end":[252,5]},"visibility":"public","docs":"Remove all elements in the vector.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12027:28051":{"id":"2:12027:28051","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41405:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9817:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9817:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12114:34049":{"id":"2:12114:34049","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11894:419","self::pattern":"2:11716:2519"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:115:2007":{"id":"0:115:2007","crate_id":0,"name":"into_inner_unchecked","span":{"filename":"src/arrayvec.rs","begin":[664,4],"end":[669,5]},"visibility":"public","docs":"Return the inner fixed size array.\n\nSafety:\nThis operation is safe if and only if length equals capacity.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"array":{"type":{"generic":"T"},"len":"CAP"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:300":{"id":"0:300","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1153,0],"end":[1155,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"slice":{"generic":"T"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:303:1795"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:686:2481":{"id":"5:686:2481","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:377:1846":{"id":"0:377:1846","crate_id":0,"name":"capacity","span":{"filename":"src/array_string.rs","begin":[163,4],"end":[163,49]},"visibility":"public","docs":"Return the capacity of the `ArrayString`.\n\n```\nuse arrayvec::ArrayString;\n\nlet string = ArrayString::<3>::new();\nassert_eq!(string.capacity(), 3);\n```","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:297":{"id":"0:297","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1151,0],"end":[1151,65]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2538-0:536:1654":{"id":"b:2:2538-0:536:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2541:2835"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:201":{"id":"0:201","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[914,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1656","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:204:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:154:1479":{"id":"0:154:1479","crate_id":0,"name":"try_from","span":{"filename":"src/arrayvec.rs","begin":[780,4],"end":[788,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["slice",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"generic":"T"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41547:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:2522:237","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:416":{"id":"0:416","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[477,0],"end":[480,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:418:1795"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2542-0:536:1654":{"id":"b:2:2542-0:536:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2544:696"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2701:228-0:536:1654":{"id":"a:2:2701:228-0:536:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2541:2835":{"id":"2:2541:2835","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2515:133"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12126:34051":{"id":"2:12126:34051","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11894:419","self::pattern":"2:11716:2519"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:336":{"id":"0:336","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1212,0],"end":[1220,1]},"visibility":"default","docs":"`Write` appends written data to the end of the vector.\n\nRequires `features=\"std\"`.","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["write_all","by_ref","is_write_vectored","write_all_vectored","write_vectored","write_fmt"],"trait":{"name":"Write","id":"1:3440:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:338:1786","0:339:2098"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8253:2658-0:536:1654":{"id":"a:2:8253:2658-0:536:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8253:2658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8253:2658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:504":{"id":"0:504","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[44,0],"end":[48,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:506:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:81:1918":{"id":"0:81:1918","crate_id":0,"name":"swap_remove","span":{"filename":"src/arrayvec.rs","begin":[367,4],"end":[372,5]},"visibility":"public","docs":"Remove the element at `index` and swap the last element into its place.\n\nThis operation is O(1).\n\nReturn the *element* if the index is in bounds, else panic.\n\n***Panics*** if the `index` is out of bounds.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3]);\n\nassert_eq!(array.swap_remove(0), 1);\nassert_eq!(&array[..], &[3, 2]);\n\nassert_eq!(array.swap_remove(1), 2);\nassert_eq!(&array[..], &[3]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:283:425":{"id":"0:283:425","crate_id":0,"name":"clone_from","span":{"filename":"src/arrayvec.rs","begin":[1112,4],"end":[1124,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:184:955":{"id":"0:184:955","crate_id":0,"name":"next","span":{"filename":"src/arrayvec.rs","begin":[855,4],"end":[865,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:7322:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:243:588":{"id":"0:243:588","crate_id":0,"name":"drop","span":{"filename":"src/arrayvec.rs","begin":[969,4],"end":[987,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:401":{"id":"0:401","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[446,0],"end":[451,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:403:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:166:1768":{"id":"0:166:1768","crate_id":0,"name":"Item","span":{"filename":"src/arrayvec.rs","begin":[821,4],"end":[821,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"T"}}}}}},"2:12024:34032":{"id":"2:12024:34032","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:50:1655":{"id":"b:2:2251-0:50:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2501","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2253:2090"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12040:7517":{"id":"2:12040:7517","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:11894:419"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43342:2525","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:140:554":{"id":"0:140:554","crate_id":0,"name":"deref_mut","span":{"filename":"src/arrayvec.rs","begin":[735,4],"end":[737,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:2898:117","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12142:34055":{"id":"2:12142:34055","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4537:34055"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:43683:2530","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:68:1842":{"id":"0:68:1842","crate_id":0,"name":"is_empty","span":{"filename":"src/arrayvec.rs","begin":[123,4],"end":[123,60]},"visibility":"public","docs":"Returns whether the `ArrayVec` is empty.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1]);\narray.pop();\nassert_eq!(array.is_empty(), true);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8253:2658-0:175:1656":{"id":"a:2:8253:2658-0:175:1656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8253:2658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8253:2658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1656","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:193":{"id":"0:193","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[889,0],"end":[902,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:2922:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1656","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:196:588"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:78:1896":{"id":"0:78:1896","crate_id":0,"name":"insert","span":{"filename":"src/arrayvec.rs","begin":[280,4],"end":[282,5]},"visibility":"public","docs":"Insert `element` at position `index`.\n\nShift up all elements after `index`.\n\nIt is an error if the index is greater than the length or if the\narrayvec is full.\n\n***Panics*** if the array is full or the `index` is out of bounds. See\n`try_insert` for fallible version.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::<_, 2>::new();\n\narray.insert(0, \"x\");\narray.insert(0, \"y\");\nassert_eq!(&array[..], &[\"y\", \"x\"]);\n\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}],["element",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12120:28094":{"id":"2:12120:28094","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11894:419","self::pattern":"2:11716:2519"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:2513","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:50:1655":{"id":"b:2:2542-0:50:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2544:696"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2553-0:175:1656":{"id":"b:2:2553-0:175:1656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1656","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:122:1778":{"id":"0:122:1778","crate_id":0,"name":"as_mut_ptr","span":{"filename":"src/arrayvec.rs","begin":[700,4],"end":[702,5]},"visibility":"public","docs":"Return a raw mutable pointer to the vector's buffer.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:84:1931":{"id":"0:84:1931","crate_id":0,"name":"remove","span":{"filename":"src/arrayvec.rs","begin":[415,4],"end":[420,5]},"visibility":"public","docs":"Remove the element at `index` and shift down the following elements.\n\nThe `index` must be strictly less than the length of the vector.\n\n***Panics*** if the `index` is out of bounds.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3]);\n\nlet removed_elt = array.remove(0);\nassert_eq!(removed_elt, 1);\nassert_eq!(&array[..], &[2, 3]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:400:554":{"id":"0:400:554","crate_id":0,"name":"deref_mut","span":{"filename":"src/array_string.rs","begin":[437,4],"end":[443,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:432:1598":{"id":"0:432:1598","crate_id":0,"name":"write_str","span":{"filename":"src/array_string.rs","begin":[504,4],"end":[506,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:2577-0:536:1654":{"id":"a:2:2741:2577-0:536:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2741:2577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:388:1789":{"id":"0:388:1789","crate_id":0,"name":"clear","span":{"filename":"src/array_string.rs","begin":[384,4],"end":[388,5]},"visibility":"public","docs":"Make the string empty.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:556:613":{"id":"0:556:613","crate_id":0,"name":"eq","span":{"filename":"src/errors.rs","begin":[8,31],"end":[8,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:542":{"id":"0:542","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[8,16],"end":[8,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::marker::Copy","id":"2:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:684-0:175:1656":{"id":"b:5:684-0:175:1656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1656","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["5:686:2481","5:687:2892","5:688:2893"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2548-0:528:1653":{"id":"b:2:2548-0:528:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2542-0:175:1656":{"id":"b:2:2542-0:175:1656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1656","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2544:696"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:132":{"id":"0:132","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[725,0],"end":[731,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:2898:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:135:230","0:136:552"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2701:228-0:175:1656":{"id":"a:2:2701:228-0:175:1656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1656","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:7212:1768":{"id":"2:7212:1768","crate_id":2,"name":"Item","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"Iterator","id":"2:7322:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"0:308":{"id":"0:308","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1161,0],"end":[1163,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsRef","id":"2:2506:75","args":{"angle_bracketed":{"args":[{"type":{"slice":{"generic":"T"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:311:315"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:324":{"id":"0:324","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1180,0],"end":[1200,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2354:189","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["gt","ge","le","lt"],"trait":{"name":"PartialOrd","id":"2:2354:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:327:1037","0:328:846","0:329:812","0:330:711","0:331:728"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2542-0:205:1657":{"id":"b:2:2542-0:205:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2544:696"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2544:696":{"id":"2:2544:696","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:175:1656":{"id":"b:2:2538-0:175:1656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1656","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2541:2835"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:196:588":{"id":"0:196:588","crate_id":0,"name":"drop","span":{"filename":"src/arrayvec.rs","begin":[890,4],"end":[901,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:56":{"id":"0:56","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[48,0],"end":[54,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:2922:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:59:588"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:316":{"id":"0:316","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1169,0],"end":[1171,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:319:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2542-0:528:1653":{"id":"b:2:2542-0:528:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2544:696"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:159:1768":{"id":"0:159:1768","crate_id":0,"name":"Item","span":{"filename":"src/arrayvec.rs","begin":[804,4],"end":[804,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}}},"b:2:2251-0:536:1654":{"id":"b:2:2251-0:536:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2501","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2253:2090"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12016:1842":{"id":"2:12016:1842","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:412":{"id":"0:412","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[470,0],"end":[475,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9366:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:414:731"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:328:846":{"id":"0:328:846","crate_id":0,"name":"lt","span":{"filename":"src/arrayvec.rs","begin":[1185,4],"end":[1187,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:331:728":{"id":"0:331:728","crate_id":0,"name":"gt","span":{"filename":"src/arrayvec.rs","begin":[1197,4],"end":[1199,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:371:2153":{"id":"0:371:2153","crate_id":0,"name":"from_byte_string","span":{"filename":"src/array_string.rs","begin":[120,4],"end":[130,5]},"visibility":"public","docs":"Create a new `ArrayString` from a byte string literal.\n\n**Errors** if the byte string literal is not valid UTF-8.\n\n```\nuse arrayvec::ArrayString;\n\nlet string = ArrayString::from_byte_string(b\"hello world\").unwrap();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["b",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"array":{"type":{"primitive":"u8"},"len":"CAP"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41547:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Utf8Error","id":"2:43310:2124","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:403:613":{"id":"0:403:613","crate_id":0,"name":"eq","span":{"filename":"src/array_string.rs","begin":[448,4],"end":[450,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12026:1778":{"id":"2:12026:1778","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:11911:1501"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12111:34048":{"id":"2:12111:34048","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:11894:419","self::pattern":"2:11716:2519"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11741:2511","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:50:1655":{"id":"0:50:1655","crate_id":0,"name":"ArrayVec","span":{"filename":"src/arrayvec.rs","begin":[42,0],"end":[46,1]},"visibility":"public","docs":"A vector with a fixed capacity.\n\nThe `ArrayVec` is a vector backed by a fixed size array. It keeps track of\nthe number of initialized elements. The `ArrayVec<T, CAP>` is parameterized\nby `T` for the element type and `CAP` for the maximum capacity.\n\n`CAP` is of type `usize` but is range limited to `u32::MAX`; attempting to create larger\narrayvecs with larger capacity will panic.\n\nThe vector is a contiguous value (storing the elements inline) that you can store directly on\nthe stack if needed.\n\nIt offers a simple API but also dereferences to a slice, so that the full slice API is\navailable. The ArrayVec can be converted into a by value iterator.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"impls":["0:61","a:2:8253:2658-0:50:1655","a:2:2701:228-0:50:1655","a:2:8254:2657-0:50:1655","a:2:2741:2577-0:50:1655","a:2:2684:220-0:50:1655","b:2:2542-0:50:1655","b:2:2538-0:50:1655","b:2:2548-0:50:1655","b:2:2251-0:50:1655","b:2:2553-0:50:1655","b:2:3320-0:50:1655","b:2:2248-0:50:1655","b:5:684-0:50:1655","0:150","0:279","0:155","0:293","0:141","0:137","0:320","0:284","0:289","0:300","0:332","0:297","0:274","0:304","0:256","0:169","0:312","0:56","0:162","0:308","0:132","0:336","0:324","0:316"]}}},"b:2:2548-0:50:1655":{"id":"b:2:2548-0:50:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2553-0:528:1653":{"id":"b:2:2553-0:528:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:688:2893":{"id":"5:688:2893","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:445":{"id":"0:445","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[532,0],"end":[541,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["gt","ge","le","lt"],"trait":{"name":"PartialOrd","id":"2:2354:189","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:447:1037","0:448:846","0:449:812","0:450:728","0:451:711"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12136:25446":{"id":"2:12136:25446","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2612:3487":{"id":"2:2612:3487","crate_id":2,"name":"provide","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["demand",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Demand","id":"2:3386:2565","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:461:430":{"id":"0:461:430","crate_id":0,"name":"cmp","span":{"filename":"src/array_string.rs","begin":[556,4],"end":[558,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"cmp::Ordering","id":"2:30848:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12141:9092":{"id":"2:12141:9092","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4540:9092"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:43674:2529","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12135:27965":{"id":"2:12135:27965","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39561:27974","Self::is_ascii":"2:12134:25442"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39561:27974","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:160:1656":{"id":"0:160:1656","crate_id":0,"name":"IntoIter","span":{"filename":"src/arrayvec.rs","begin":[805,4],"end":[805,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Iter","id":"2:9965:2032","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}}}}},"0:382:2193":{"id":"0:382:2193","crate_id":0,"name":"push_str","span":{"filename":"src/array_string.rs","begin":[255,4],"end":[257,5]},"visibility":"public","docs":"Adds the given string slice to the end of the string.\n\n***Panics*** if the backing array is not large enough to fit the string.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<2>::new();\n\nstring.push_str(\"a\");\nstring.push_str(\"d\");\n\nassert_eq!(&string[..], \"ad\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12045:34035":{"id":"2:12045:34035","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:43630:2532","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:204:670":{"id":"0:204:670","crate_id":0,"name":"fmt","span":{"filename":"src/arrayvec.rs","begin":[918,4],"end":[922,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:493":{"id":"0:493","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[13,0],"end":[30,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:495:941","0:496:1782","0:497:2246"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:434":{"id":"0:434","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[509,0],"end":[519,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:436:423","0:437:425"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:168:786":{"id":"0:168:786","crate_id":0,"name":"into_iter","span":{"filename":"src/arrayvec.rs","begin":[823,4],"end":[823,60]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:7206:152","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:391:2236":{"id":"0:391:2236","crate_id":0,"name":"as_mut_str","span":{"filename":"src/array_string.rs","begin":[409,4],"end":[411,5]},"visibility":"public","docs":"Return a mutable string slice of the whole `ArrayString`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:87:1946":{"id":"0:87:1946","crate_id":0,"name":"retain","span":{"filename":"src/arrayvec.rs","begin":[459,4],"end":[531,5]},"visibility":"public","docs":"Retains only the elements specified by the predicate.\n\nIn other words, remove all elements `e` such that `f(&mut e)` returns false.\nThis method operates in place and preserves the order of the retained\nelements.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3, 4]);\narray.retain(|x| *x & 1 != 0 );\nassert_eq!(&array[..], &[1, 3]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["f",{"generic":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:2929:1948","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:451:711":{"id":"0:451:711","crate_id":0,"name":"ge","span":{"filename":"src/array_string.rs","begin":[540,4],"end":[540,54]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:175:1656":{"id":"0:175:1656","crate_id":0,"name":"IntoIter","span":{"filename":"src/arrayvec.rs","begin":[847,0],"end":[850,1]},"visibility":"public","docs":"By-value iterator for `ArrayVec`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"impls":["a:2:8253:2658-0:175:1656","a:2:2701:228-0:175:1656","a:2:8254:2657-0:175:1656","a:2:2741:2577-0:175:1656","a:2:2684:220-0:175:1656","b:2:2542-0:175:1656","b:2:2538-0:175:1656","b:2:2548-0:175:1656","b:2:2251-0:175:1656","b:2:7210-0:175:1656","b:2:2553-0:175:1656","b:2:3320-0:175:1656","b:2:2248-0:175:1656","b:5:684-0:175:1656","0:180","0:190","0:197","0:193","0:186","0:201"]}}},"2:12018:34030":{"id":"2:12018:34030","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:554":{"id":"0:554","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[8,31],"end":[8,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:556:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12138:25448":{"id":"2:12138:25448","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:229":{"id":"0:229","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[955,0],"end":[964,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["rfind","nth_back","rfold","advance_back_by","try_rfold"],"trait":{"name":"DoubleEndedIterator","id":"2:7244:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:233:2042"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:226:955":{"id":"0:226:955","crate_id":0,"name":"next","span":{"filename":"src/arrayvec.rs","begin":[942,4],"end":[948,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:7322:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:406:613":{"id":"0:406:613","crate_id":0,"name":"eq","span":{"filename":"src/array_string.rs","begin":[455,4],"end":[457,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:546":{"id":"0:546","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[8,22],"end":[8,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::Eq","id":"2:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:135:230":{"id":"0:135:230","crate_id":0,"name":"Target","span":{"filename":"src/arrayvec.rs","begin":[726,4],"end":[726,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"slice":{"generic":"T"}}}}},"0:74:1784":{"id":"0:74:1784","crate_id":0,"name":"push_unchecked","span":{"filename":"src/arrayvec.rs","begin":[226,4],"end":[228,5]},"visibility":"public","docs":"Push `element` to the end of the vector without checking the capacity.\n\nIt is up to the caller to ensure the capacity of the vector is\nsufficiently large.\n\nThis method uses *debug assertions* to check that the arrayvec is not full.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::<_, 2>::new();\n\nif array.len() + 2 <= array.capacity() {\n    unsafe {\n        array.push_unchecked(1);\n        array.push_unchecked(2);\n    }\n}\n\nassert_eq!(&array[..], &[1, 2]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["element",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:361":{"id":"0:361","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[40,0],"end":[46,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:363:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:173:1656":{"id":"0:173:1656","crate_id":0,"name":"IntoIter","span":{"filename":"src/arrayvec.rs","begin":[839,4],"end":[839,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"IntoIter","id":"0:175:1656","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}}},"2:12020:34031":{"id":"2:12020:34031","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12018:34030"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8254:2657-0:528:1653":{"id":"a:2:8254:2657-0:528:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8254:2657","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12039:2208":{"id":"2:12039:2208","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:11894:419"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43336:2526","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12105:34044":{"id":"2:12105:34044","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2557:1479":{"id":"2:2557:1479","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:41547:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12067:28086":{"id":"2:12067:28086","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:11894:419","self::pattern":"2:11716:2519"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:11539:2522","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12107:34045":{"id":"2:12107:34045","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:205:1657":{"id":"b:2:2548-0:205:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12060:2840":{"id":"2:12060:2840","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41405:179","prim@char":"1:11894:419","self::pattern":"2:11716:2519"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:2513","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5387:34706":{"id":"5:5387:34706","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7241:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:109:1976":{"id":"0:109:1976","crate_id":0,"name":"try_extend_from_slice","span":{"filename":"src/arrayvec.rs","begin":[564,4],"end":[580,5]},"visibility":"public","docs":"Copy all elements from the slice and append to the `ArrayVec`.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut vec: ArrayVec<usize, 10> = ArrayVec::new();\nvec.push(1);\nvec.try_extend_from_slice(&[2, 3]).unwrap();\nassert_eq!(&vec[..], &[1, 2, 3]);\n```\n\n# Errors\n\nThis method will return an error if the capacity left (see\n[`remaining_capacity`]) is smaller then the length of the provided\nslice.\n\n[`remaining_capacity`]: #method.remaining_capacity","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"generic":"T"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41547:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:338:1786":{"id":"0:338:1786","crate_id":0,"name":"write","span":{"filename":"src/arrayvec.rs","begin":[1213,4],"end":[1218,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["data",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2867:210","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:180":{"id":"0:180","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[852,0],"end":[871,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["try_find","try_for_each","try_collect","scan","filter_map","step_by","ne","max_by_key","partial_cmp","is_sorted_by_key","product","rposition","fold","collect_into","flat_map","le","enumerate","min","chain","map","cloned","__iterator_get_unchecked","cmp_by","unzip","reduce","partition","flatten","peekable","rev","intersperse","next_chunk","skip","gt","min_by","partial_cmp_by","copied","try_reduce","partition_in_place","fuse","cmp","skip_while","eq","intersperse_with","last","min_by_key","eq_by","ge","cycle","find","count","zip","is_partitioned","inspect","take_while","for_each","advance_by","all","lt","max","is_sorted","array_chunks","find_map","size_hint","try_fold","by_ref","any","map_while","filter","take","nth","collect","position","max_by","is_sorted_by","sum"],"trait":{"name":"Iterator","id":"2:7322:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1656","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:183:1768","0:184:955","0:185:2041"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:189:2042":{"id":"0:189:2042","crate_id":0,"name":"next_back","span":{"filename":"src/arrayvec.rs","begin":[874,4],"end":[884,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:7322:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:437:425":{"id":"0:437:425","crate_id":0,"name":"clone_from","span":{"filename":"src/array_string.rs","begin":[514,4],"end":[518,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:368:813":{"id":"0:368:813","crate_id":0,"name":"len","span":{"filename":"src/array_string.rs","begin":[85,4],"end":[85,58]},"visibility":"public","docs":"Return the length of the string.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:544":{"id":"0:544","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[8,22],"end":[8,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2695:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2741:2577-0:528:1653":{"id":"a:2:2741:2577-0:528:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:444:711":{"id":"0:444:711","crate_id":0,"name":"ge","span":{"filename":"src/array_string.rs","begin":[529,4],"end":[529,56]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12070:28088":{"id":"2:12070:28088","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:11716:2519","`DoubleEndedIterator`":"2:7244:121","prim@char":"1:11894:419","str::split":"2:12064:26736"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43384:2537","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:2513","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:162":{"id":"0:162","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[820,0],"end":[824,1]},"visibility":"default","docs":"Iterate the `ArrayVec` with mutable references to each element.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3]);\n\nfor elt in &mut array {\n    // ...\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7206:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}},"items":["0:166:1768","0:167:1656","0:168:786"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5382":{"id":"5:5382","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5383:34705","5:5384:2018","5:5387:34706","5:5390:34707","5:5398:34708","5:5399:34709","5:5400:3329","5:5401:25444","5:5402:25445"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:277:699":{"id":"0:277:699","crate_id":0,"name":"from_iter","span":{"filename":"src/arrayvec.rs","begin":[1098,4],"end":[1102,5]},"visibility":"default","docs":"Create an `ArrayVec` from an iterator.\n \n***Panics*** if the number of elements in the iterator exceeds the arrayvec's capacity.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["iter",{"generic":"I"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:7206:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:528:1653":{"id":"b:2:2538-0:528:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2541:2835"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:418:1795":{"id":"0:418:1795","crate_id":0,"name":"borrow","span":{"filename":"src/array_string.rs","begin":[479,4],"end":[479,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:456:812":{"id":"0:456:812","crate_id":0,"name":"le","span":{"filename":"src/array_string.rs","begin":[549,4],"end":[549,67]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:442:812":{"id":"0:442:812","crate_id":0,"name":"le","span":{"filename":"src/array_string.rs","begin":[527,4],"end":[527,56]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:559:1037":{"id":"0:559:1037","crate_id":0,"name":"partial_cmp","span":{"filename":"src/errors.rs","begin":[8,42],"end":[8,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30848:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:539":{"id":"0:539","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[8,9],"end":[8,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:541:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2552:1480":{"id":"2:2552:1480","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41547:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:274":{"id":"0:274","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1094,0],"end":[1103,1]},"visibility":"default","docs":"Create an `ArrayVec` from an iterator.\n \n***Panics*** if the number of elements in the iterator exceeds the arrayvec's capacity.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromIterator","id":"2:7202:134","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:277:699"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2701:228-0:528:1653":{"id":"a:2:2701:228-0:528:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8254:2657-0:175:1656":{"id":"a:2:8254:2657-0:175:1656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8254:2657","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8254:2657","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1656","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:307:2090":{"id":"0:307:2090","crate_id":0,"name":"borrow_mut","span":{"filename":"src/arrayvec.rs","begin":[1158,4],"end":[1158,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"generic":"T"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8254:2657-0:50:1655":{"id":"a:2:8254:2657-0:50:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8254:2657","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8254:2657","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:381:1783":{"id":"0:381:1783","crate_id":0,"name":"try_push","span":{"filename":"src/array_string.rs","begin":[226,4],"end":[239,5]},"visibility":"public","docs":"Adds the given char to the end of the string.\n\nReturns `Ok` if the push succeeds.\n\n**Errors** if the backing array is not large enough to fit the additional char.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<2>::new();\n\nstring.try_push('a').unwrap();\nstring.try_push('b').unwrap();\nlet overflow = string.try_push('c');\n\nassert_eq!(&string[..], \"ab\");\nassert_eq!(overflow.unwrap_err().element(), 'c');\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["c",{"primitive":"char"}]],"output":{"resolved_path":{"name":"Result","id":"2:41547:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"primitive":"char"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:329:812":{"id":"0:329:812","crate_id":0,"name":"le","span":{"filename":"src/arrayvec.rs","begin":[1189,4],"end":[1191,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:303:1795":{"id":"0:303:1795","crate_id":0,"name":"borrow","span":{"filename":"src/arrayvec.rs","begin":[1154,4],"end":[1154,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"generic":"T"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:394":{"id":"0:394","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[422,0],"end":[432,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:2898:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:396:230","0:397:552"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:523-0:536:1654":{"id":"0:523-0:536:1654","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[57,0],"end":[57,37]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::errors::CapacityError","name":"CapacityError","id":"0:536:1654","glob":false}}},"b:2:2251-0:205:1657":{"id":"b:2:2251-0:205:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2501","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2253:2090"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5390:34707":{"id":"5:5390:34707","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7241:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:83:1919":{"id":"0:83:1919","crate_id":0,"name":"swap_pop","span":{"filename":"src/arrayvec.rs","begin":[391,4],"end":[398,5]},"visibility":"public","docs":"Remove the element at `index` and swap the last element into its place.\n\nThis is a checked version of `.swap_remove`.  \nThis operation is O(1).\n\nReturn `Some(` *element* `)` if the index is in bounds, else `None`.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3]);\n\nassert_eq!(array.swap_pop(0), Some(1));\nassert_eq!(&array[..], &[3, 2]);\n\nassert_eq!(array.swap_pop(10), None);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:110:1938":{"id":"0:110:1938","crate_id":0,"name":"drain","span":{"filename":"src/arrayvec.rs","begin":[600,4],"end":[625,5]},"visibility":"public","docs":"Create a draining iterator that removes the specified range in the vector\nand yields the removed items from start to end. The element range is\nremoved even if the iterator is not consumed until the end.\n\nNote: It is unspecified how many elements are removed from the vector,\nif the `Drain` value is leaked.\n\n**Panics** if the starting point is greater than the end point or if\nthe end point is greater than the length of the vector.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut v1 = ArrayVec::from([1, 2, 3]);\nlet v2: ArrayVec<_, 3> = v1.drain(0..2).collect();\nassert_eq!(&v1[..], &[3]);\nassert_eq!(&v2[..], &[1, 2]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["range",{"generic":"R"}]],"output":{"resolved_path":{"name":"Drain","id":"0:205:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RangeBounds","id":"2:3079:1794","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2551:128":{"id":"2:2551:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"b:2:3320-0:175:1656":{"id":"b:2:3320-0:175:1656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2501","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1656","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5646:1457":{"id":"5:5646:1457","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:455:846":{"id":"0:455:846","crate_id":0,"name":"lt","span":{"filename":"src/array_string.rs","begin":[548,4],"end":[548,66]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:495:941":{"id":"0:495:941","crate_id":0,"name":"new","span":{"filename":"src/errors.rs","begin":[15,4],"end":[19,5]},"visibility":"public","docs":"Create a new `CapacityError` from `element`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["element",{"generic":"T"}]],"output":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:536:1654":{"id":"a:2:2684:220-0:536:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12033:28054":{"id":"2:12033:28054","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9817:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9817:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12134:25442":{"id":"2:12134:25442","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_is_ascii\", issue = \"111090\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:256":{"id":"0:256","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1011,0],"end":[1020,1]},"visibility":"default","docs":"Extend the `ArrayVec` with an iterator.\n \n***Panics*** if extending the vector exceeds its capacity.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["extend_one","extend_reserve"],"trait":{"name":"Extend","id":"2:7215:2062","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:259:2063"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2248-0:205:1657":{"id":"b:2:2248-0:205:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2501","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2250:1795"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:200:423":{"id":"0:200:423","crate_id":0,"name":"clone","span":{"filename":"src/arrayvec.rs","begin":[907,4],"end":[911,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"IntoIter","id":"0:175:1656","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:470:1479":{"id":"0:470:1479","crate_id":0,"name":"try_from","span":{"filename":"src/array_string.rs","begin":[623,4],"end":[627,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["f",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41547:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:2522:237","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:71:1854":{"id":"0:71:1854","crate_id":0,"name":"remaining_capacity","span":{"filename":"src/arrayvec.rs","begin":[157,4],"end":[159,5]},"visibility":"public","docs":"Returns the capacity left in the `ArrayVec`.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut array = ArrayVec::from([1, 2, 3]);\narray.pop();\nassert_eq!(array.remaining_capacity(), 1);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:499":{"id":"0:499","crate_id":0,"name":null,"span":{"filename":"src/errors.rs","begin":[36,0],"end":[36,42]},"visibility":"default","docs":"Requires `features=\"std\"`.","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Any","id":"2:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["source","type_id","provide","description","cause"],"trait":{"name":"Error","id":"2:2603:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:59:588":{"id":"0:59:588","crate_id":0,"name":"drop","span":{"filename":"src/arrayvec.rs","begin":[49,4],"end":[53,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12023:28034":{"id":"2:12023:28034","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11283:2155"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12044:4450":{"id":"2:12044:4450","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:43620:2531","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:293":{"id":"0:293","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[1143,0],"end":[1149,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[{"type":{"slice":{"generic":"T"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:296:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:327:1037":{"id":"0:327:1037","crate_id":0,"name":"partial_cmp","span":{"filename":"src/arrayvec.rs","begin":[1181,4],"end":[1183,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"2:30848:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:464:127":{"id":"0:464:127","crate_id":0,"name":"Err","span":{"filename":"src/array_string.rs","begin":[563,4],"end":[563,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}}},"0:386:1790":{"id":"0:386:1790","crate_id":0,"name":"truncate","span":{"filename":"src/array_string.rs","begin":[336,4],"end":[347,5]},"visibility":"public","docs":"Shortens this `ArrayString` to the specified length.\n\nIf `new_len` is greater than the string’s current length, this has no\neffect.\n\n***Panics*** if `new_len` does not lie on a `char` boundary.\n\n```\nuse arrayvec::ArrayString;\n\nlet mut string = ArrayString::<6>::from(\"foobar\").unwrap();\nstring.truncate(3);\nassert_eq!(&string[..], \"foo\");\nstring.truncate(4);\nassert_eq!(&string[..], \"foo\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["new_len",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:496:1782":{"id":"0:496:1782","crate_id":0,"name":"element","span":{"filename":"src/errors.rs","begin":[22,4],"end":[24,5]},"visibility":"public","docs":"Extract the overflowing element","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:404":{"id":"0:404","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[453,0],"end":[458,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:406:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2553-0:50:1655":{"id":"b:2:2553-0:50:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2610-0:536:1654":{"id":"b:2:2610-0:536:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:2603:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2501","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:3374:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2612:3487"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"E"}}}},"0:527-0:205:1657":{"id":"0:527-0:205:1657","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[59,46],"end":[59,51]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::arrayvec::Drain","name":"Drain","id":"0:205:1657","glob":false}}},"2:12017:2217":{"id":"2:12017:2217","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:684-0:536:1654":{"id":"b:5:684-0:536:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["5:686:2481","5:687:2892","5:688:2893"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12091:2298":{"id":"2:12091:2298","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:11716:2519","`DoubleEndedIterator`":"2:7244:121","prim@char":"1:11894:419","str::matches":"2:12091:2298"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:43570:2535","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8253:2658-0:50:1655":{"id":"a:2:8253:2658-0:50:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8253:2658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8253:2658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12123:34050":{"id":"2:12123:34050","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11894:419","self::pattern":"2:11716:2519"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:2513","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:389:1770":{"id":"0:389:1770","crate_id":0,"name":"set_len","span":{"filename":"src/array_string.rs","begin":[397,4],"end":[401,5]},"visibility":"public","docs":"Set the strings’s length.\n\nThis function is `unsafe` because it changes the notion of the\nnumber of “valid” bytes in the string. Use with care.\n\nThis method uses *debug assertions* to check the validity of `length`\nand may use other debug assertions.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["length",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:536:1654":{"id":"0:536:1654","crate_id":0,"name":"CapacityError","span":{"filename":"src/errors.rs","begin":[9,0],"end":[11,1]},"visibility":"public","docs":"Error value indicating insufficient capacity","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":{"tuple":[]},"synthetic":false}}}],"where_predicates":[]},"impls":["0:493","a:2:8253:2658-0:536:1654","a:2:2701:228-0:536:1654","a:2:8254:2657-0:536:1654","a:2:2741:2577-0:536:1654","a:2:2684:220-0:536:1654","b:2:2542-0:536:1654","b:2:2538-0:536:1654","b:2:2610-0:536:1654","b:2:2548-0:536:1654","b:2:2251-0:536:1654","b:2:2553-0:536:1654","b:2:3320-0:536:1654","b:2:2248-0:536:1654","b:5:684-0:536:1654","b:5:5644-0:536:1654","0:554","0:546","0:552","0:557","0:499","0:542","0:549","0:539","0:501","0:544","0:504"]}}},"a:2:2741:2577-0:50:1655":{"id":"a:2:2741:2577-0:50:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2741:2577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:448:846":{"id":"0:448:846","crate_id":0,"name":"lt","span":{"filename":"src/array_string.rs","begin":[537,4],"end":[537,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:190":{"id":"0:190","crate_id":0,"name":null,"span":{"filename":"src/arrayvec.rs","begin":[887,0],"end":[887,68]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"name":"ExactSizeIterator","id":"2:7267:2043","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1656","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:425":{"id":"0:425","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[492,0],"end":[495,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9151:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:427:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:282:423":{"id":"0:282:423","crate_id":0,"name":"clone","span":{"filename":"src/arrayvec.rs","begin":[1108,4],"end":[1110,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8253:2658-0:205:1657":{"id":"a:2:8253:2658-0:205:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8254:2657","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8253:2658","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2741:2577-0:205:1657":{"id":"a:2:2741:2577-0:205:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:7210-0:205:1657":{"id":"b:2:7210-0:205:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7322:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7206:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Drain","id":"0:205:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:7212:1768","2:7213:1656","2:7214:786"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"0:419":{"id":"0:419","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[482,0],"end":[485,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsRef","id":"2:2506:75","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:421:315"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:457:728":{"id":"0:457:728","crate_id":0,"name":"gt","span":{"filename":"src/array_string.rs","begin":[550,4],"end":[550,66]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12097:34041":{"id":"2:12097:34041","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:11716:2519","`DoubleEndedIterator`":"2:7244:121","prim@char":"1:11894:419","str::rmatch_indices":"2:12100:34042"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:43516:2533","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:185:2041":{"id":"0:185:2041","crate_id":0,"name":"size_hint","span":{"filename":"src/arrayvec.rs","begin":[867,4],"end":[870,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12085:34038":{"id":"2:12085:34038","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:474:128":{"id":"0:474:128","crate_id":0,"name":"Error","span":{"filename":"src/array_string.rs","begin":[632,4],"end":[632,43]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"CapacityError","id":"0:536:1654","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Error","id":"2:42485:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"2:2250:1795":{"id":"2:2250:1795","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5402:25445":{"id":"5:5402:25445","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12138:25448"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7241:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:454:1037":{"id":"0:454:1037","crate_id":0,"name":"partial_cmp","span":{"filename":"src/array_string.rs","begin":[545,4],"end":[547,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"2:30848:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:323:60":{"id":"0:323:60","crate_id":0,"name":"default","span":{"filename":"src/arrayvec.rs","begin":[1175,4],"end":[1177,5]},"visibility":"default","docs":"Return an empty array","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"ArrayVec","id":"0:50:1655","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:410":{"id":"0:410","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[467,0],"end":[468,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:5644-0:528:1653":{"id":"b:5:5644-0:528:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9151:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2501","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5642:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["5:5646:1457"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2556:128":{"id":"2:2556:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32032:2505","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:2248-0:175:1656":{"id":"b:2:2248-0:175:1656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2501","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:175:1656","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2250:1795"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:684-0:528:1653":{"id":"b:5:684-0:528:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["5:686:2481","5:687:2892","5:688:2893"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:228:2041":{"id":"0:228:2041","crate_id":0,"name":"size_hint","span":{"filename":"src/arrayvec.rs","begin":[950,4],"end":[952,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:422":{"id":"0:422","crate_id":0,"name":null,"span":{"filename":"src/array_string.rs","begin":[487,0],"end":[490,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"CAP","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ArrayString","id":"0:528:1653","args":{"angle_bracketed":{"args":[{"const":{"type":{"primitive":"usize"},"expr":"CAP","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:424:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:118:2017":{"id":"0:118:2017","crate_id":0,"name":"take","span":{"filename":"src/arrayvec.rs","begin":[680,4],"end":[682,5]},"visibility":"public","docs":"Returns the ArrayVec, replacing the original with a new empty ArrayVec.\n\n```\nuse arrayvec::ArrayVec;\n\nlet mut v = ArrayVec::from([0, 1, 2, 3]);\nassert_eq!([0, 1, 2, 3], v.take().into_inner().unwrap());\nassert!(v.is_empty());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:503:670":{"id":"0:503:670","crate_id":0,"name":"fmt","span":{"filename":"src/errors.rs","begin":[39,4],"end":[41,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"2:7322:159":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"5:4732:670":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"14:160:7909":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"5:5239:2518":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"2:2469:9170":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"6:1535:6301":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"17:8651:4791":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"2:4326:3692":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"17:13857:5617":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"2:41760:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"2:40356:3357":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"11:279:4455":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"16:6935:7873":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:40496:3366":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"17:11459:3899":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"16:6254:3797":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"5:1454:198":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"17:9734:7803":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"6:6007:6951":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"9:421:20312":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"5:35:3647":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"1:11033:26140":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"5:2087:7205":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"17:10569:4878":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"1:355:7960":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"2:20741:9315":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"2:21730:7231":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"16:0:2318":{"crate_id":16,"path":["gimli"],"kind":"module"},"6:6624:7048":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"14:215:6090":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"6:5798:6841":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:11861:5091":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"16:7077:21315":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"17:12419:5189":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"1:8736:4536":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"18:538:4671":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"6:4907:6709":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"1:11455:7711":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"1:9034:167":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"11:1843:1656":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2:43674:2529":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"6:4394:6498":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"18:590:4674":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"11:2192:6141":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"2:41389:3971":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"2:2589:116":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"17:8909:2255":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"2:45671:7563":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:2348:182":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"5:1443:4467":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"2:46221:7580":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"3:229:210":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"2:45831:7568":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"6:5057:6788":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"17:10735:4899":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"18:491:4662":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"1:3129:25700":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:21815:7237":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"6:123:14996":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"16:6662:5828":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"16:5886:5744":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"2:2851:2463":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:10207:2920":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"16:5630:7835":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"5:3775:3649":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"6:4823:6665":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"1:5764:3726":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"2:32032:2505":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:9121:132":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"2:43488:2539":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"16:2668:5663":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"17:8931:4799":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"16:6575:21312":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"1:936:9107":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"2:40482:3365":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"11:867:7919":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"1:4760:9199":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"2:43153:2908":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"16:2524:5657":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"2:46301:7581":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"16:7543:3931":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"1:10708:119":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"1:6133:7980":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"16:2742:5666":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"1:8097:3401":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"2:22503:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"11:2212:6143":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"17:8443:21372":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"1:11231:7983":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"2:47411:7639":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"17:13777:5598":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"2:42040:3974":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"17:12433:5191":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"17:13469:5499":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"2:11721:2512":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:8812:4057":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"6:6795:7131":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"11:2087:7922":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"2:1667:1089":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"1:3987:9192":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"11:1688:144":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"17:10303:7824":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"2:11488:7507":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:7202:134":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:3210:3424":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"1:11907:744":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"1:11021:7688":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"1:857:2035":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"6:6710:7075":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:9146:112":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"1:2211:1788":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"16:6431:5795":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"2:42485:128":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"5:0:286":{"crate_id":5,"path":["alloc"],"kind":"module"},"5:3547:2035":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"2:11428:7503":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"11:1839:2032":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"1:3383:3394":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"17:11800:5079":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"2:8255:2656":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"17:8858:4798":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"2:44292:211":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"1:1982:185":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"1:5570:3725":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"6:547:6253":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"18:736:25224":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"16:5693:5718":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"17:11924:5102":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"17:11641:5038":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"17:10705:4895":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"11:97:6140":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"17:12293:5172":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"17:13659:5568":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"2:9111:2095":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"2:41212:155":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"11:665:1656":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"5:5642:232":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"1:10948:3749":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"17:8490:21373":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"1:3615:9181":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"8:0:2311":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"9:502:3948":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"2:11787:14452":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"2:3935:3386":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"2:3169:2474":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"2:20576:33082":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"1:11201:7710":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"14:31:7909":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"2:43570:2535":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"17:10440:4430":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"16:4037:5685":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"1:7465:4926":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"10:0:2313":{"crate_id":10,"path":["adler"],"kind":"module"},"1:4679:9200":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"17:12019:4834":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"1:7576:9170":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"6:1695:6409":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"5:6578:3678":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"16:6506:4440":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"2:3079:1794":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:2805:2457":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:20754:9316":{"crate_id":2,"path":["core","core_simd","cast","SimdCastPtr"],"kind":"trait"},"6:6076:6971":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"1:8485:2032":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:11539:2522":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"6:4809:6660":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"1:5926:206":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"16:7042:5884":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"1:9883:7481":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"5:5798:70":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"2:7169:3339":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"5:3158:4471":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"2:40264:3350":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"11:1561:7928":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"2:39204:198":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"1:10698:130":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"17:11258:4965":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"6:7462:7179":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:41354:7666":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"17:13443:5493":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"6:4715:6615":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:21573:9309":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"6:1716:6417":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"5:7164:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"16:5032:5706":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"1:5067:191":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"5:1422:4470":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"2:39173:2469":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"6:1910:16342":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"6:4663:6593":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"18:699:4689":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"1:7804:7661":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"5:4336:3670":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"1:8270:7048":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"2:11730:2514":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"2:20772:9312":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr"],"kind":"trait"},"11:1050:20389":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"17:9907:4819":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"2:32159:2582":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"2:41720:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:8974:4062":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"17:13265:5446":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"16:4872:5701":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"17:13564:5549":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"2:14:1786":{"crate_id":2,"path":["core","write"],"kind":"macro"},"1:7650:9095":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"2:10775:2914":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"2:39346:2471":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"6:1637:6374":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"6:1526:6296":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"1:4574:7059":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"2:7215:2062":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"11:1847:1657":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"1:9009:3810":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"2:43342:2525":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"16:6981:7874":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"16:6904:5865":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"5:4818:204":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:30284:2502":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"2:42176:2558":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"6:474:4464":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"1:5179:190":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"17:11556:5010":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"6:7574:7196":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"16:2404:5653":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"17:8389:21370":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"17:12072:5121":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"2:1733:3012":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:11474:7712":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"16:2720:5665":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"6:6687:7068":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:44282:205":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"2:43172:2910":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"6:7598:7201":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:4074:4527":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"2:45690:7564":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:40315:3353":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:9372:141":{"crate_id":2,"path":["core","hash","macros","Hash"],"kind":"proc_derive"},"2:40376:3358":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"2:2932:2466":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:1785:4519":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"16:2830:3903":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"16:2786:5668":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"11:1634:3645":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"17:13744:5591":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"5:1413:4469":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"5:6097:9398":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"2:40130:7469":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"17:12358:5179":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"17:10428:7829":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"2:2763:2445":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"5:5235:2517":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"17:386:7791":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"16:6868:5863":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"2:12334:32141":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:922:4466":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"17:10527:21484":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"5:1432:4466":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"5:4167:3386":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"16:6361:3915":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"16:6164:5784":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"5:6999:1656":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:47741:3981":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"17:13721:5590":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"6:4937:6730":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"1:3881:9184":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"1:2540:3411":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"2:6921:3324":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"17:9138:4389":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"17:13419:5488":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"6:4886:6694":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"6:4615:6589":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"1:10425:3423":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"1:7533:3743":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"16:6179:7843":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"6:5766:6823":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:44398:7549":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"17:10681:4892":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"16:6671:5829":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"17:13159:5418":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:4255:207":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"2:4410:2583":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:7262:25440":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"11:326:3636":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"2:2784:2449":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"5:3753:3640":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"1:3995:9194":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"17:10545:4872":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"2:2796:2450":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"11:2076:7920":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"5:3150:4473":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"6:4567:6586":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"2:10248:2540":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"6:4388:6496":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"6:4445:6525":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"18:521:25226":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"1:7827:130":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"2:41530:2706":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"2:39561:27974":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"6:4314:6445":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"1:11913:1499":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"5:5818:3676":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"2:9299:7949":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"5:1981:3414":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"5:7081:1656":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"5:7044:1656":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2:2780:2446":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"17:9796:4818":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"17:12259:5169":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"1:1561:2032":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"1:11918:1128":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"6:4586:6587":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"11:2060:5887":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"6:500:6221":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"16:5346:5710":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"16:7652:198":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"6:5848:6864":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"1:8961:8005":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"16:8072:6001":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:41454:1768":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"17:10125:4829":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"11:1859:4471":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"17:13082:5404":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"1:6296:166":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"16:2694:5664":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"2:39367:2113":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"10:44:6146":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"1:8742:186":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"1:7683:9131":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"1:11919:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"1:3449:8949":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"2:42926:2903":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"16:5677:21307":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"16:6728:5842":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"2:41269:9180":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"1:1583:4472":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"17:12282:5170":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"17:975:4400":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"16:7626:7904":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:21100:9307":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"2:23049:7262":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"2:7595:3284":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"6:5889:6882":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"5:1213:7922":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"6:4482:6541":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"7:0:1545":{"crate_id":7,"path":["unwind"],"kind":"module"},"2:9163:2556":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"14:221:6092":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"2:20780:32049":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"14:7:7909":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"16:2378:5652":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"6:6129:6982":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"1:618:2573":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"16:2502:5656":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"17:13689:5575":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"1:8292:7669":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"2:45708:7565":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"2:43658:2520":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"6:1648:6382":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:22305:176":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"16:8025:5997":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"17:10080:7821":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"1:875:4468":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"2:30244:1797":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"2:43588:2536":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"6:7510:7181":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"5:7255:7222":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"16:5811:5734":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"17:9839:7805":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"11:399:4461":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"17:11220:4950":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"17:9178:4390":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"1:7703:7954":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"2:20608:33556":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"6:5736:6798":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"16:2319:5644":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"5:2916:8140":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2:43955:7523":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:10871:4054":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"1:7699:7988":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"16:4540:5691":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"6:568:6264":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"1:5021:7972":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:13344:5466":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"6:4677:6594":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"1:3355:3386":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"5:4005:3649":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"16:5998:21309":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"16:8170:6008":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"17:12461:5197":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"17:13477:5500":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"1:3170:3422":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"17:11136:4932":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"18:681:4686":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"17:9566:4391":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:1544:3386":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"2:2774:2447":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:9049:7690":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"5:2908:7207":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"1:11467:27342":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"17:10015:7816":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"1:10937:3748":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"18:690:4688":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"5:1366:2035":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"1:8325:2650":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"2:46379:7596":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"17:10761:21378":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"1:4990:7972":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"6:1505:6288":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:43649:2521":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:731:142":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"17:13015:5385":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:9817:222":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"16:7437:5935":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"17:12894:5338":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"5:7005:4475":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"1:5910:3724":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"2:43772:7510":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"2:41471:2035":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:42507:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"6:4495:6547":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"17:11234:4951":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"18:574:4663":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"5:680:231":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:11253:14681":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"16:3872:5683":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:40021:4483":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:47675:3979":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:8226:9210":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"6:6043:6962":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"17:9933:4821":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"16:6717:5841":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"2:47619:7643":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"2:40457:3347":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:44117:7539":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"2:8674:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:7948:3415":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"16:154:1655":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"16:5367:20422":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:43470:2540":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"2:41880:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"2:40078:4484":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"17:10104:4827":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"17:10377:4866":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"6:4786:6651":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"16:2298:20424":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2:7206:152":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"2:1756:3011":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"6:5881:6877":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"2:40417:3361":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"7:79:20303":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"2:4259:7945":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"1:11909:746":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"1:9068:4070":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"17:10416:4428":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"1:4125:4530":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"17:8521:21374":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"14:187:8945":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:42692:145":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:3132:8835":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"6:1574:6326":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"1:7938:7991":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"16:2967:20451":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"17:10257:4424":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"17:11410:4992":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"5:633:7929":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"2:2696:109":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"2:44343:7546":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:2833:2459":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"6:6647:7066":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:30478:31156":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"17:9853:4416":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"2:21095:9170":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"2:41615:183":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"16:3815:5682":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"1:9104:8008":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"16:6767:5855":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"1:8177:9179":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"16:7509:3929":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"1:11860:8687":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"17:13211:5433":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"17:13121:5413":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"5:2407:7211":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"1:3292:3407":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"2:2509:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"5:4366:3386":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"1:11901:1483":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"5:783:3651":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"16:6218:7861":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"2:4786:32802":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"18:96:4375":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"16:5000:5705":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"1:7601:7656":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"16:2616:5661":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"6:532:6244":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"1:3933:9188":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"6:1499:6285":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"6:4534:6568":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"1:2215:3395":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"18:652:4663":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"17:10691:21485":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"2:10014:2538":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:2744:2579":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"2:40727:3334":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2:12312:151":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"17:1787:4408":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"16:6990:5880":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"5:1382:1656":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"11:1879:4474":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"16:5643:5716":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"6:1568:6324":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"6:6588:7032":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"1:10658:7697":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"2:41377:3969":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"17:8598:21377":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"1:5385:7974":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"1:11916:791":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"17:0:2319":{"crate_id":17,"path":["object"],"kind":"module"},"5:1314:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"16:7757:5948":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"5:6180:1950":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"2:21:683":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"5:5191:3649":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"2:4114:3804":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"16:55:5988":{"crate_id":16,"path":["gimli","endianity","Endianity"],"kind":"trait"},"17:11993:5109":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:43366:2538":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"6:5954:6926":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"1:8160:2531":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"6:5876:6876":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"1:8860:9270":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"17:9108:35378":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"6:7522:7183":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"6:5014:6763":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"6:4605:6588":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"1:2869:128":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"16:6919:35365":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"5:4914:3386":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"17:13356:5467":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"17:8788:4796":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"2:43998:2544":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:9126:27260":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"2:40051:2529":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"17:8718:4794":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"6:4763:6637":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:6589:2296":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"6:4517:6560":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"17:12098:5125":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"2:9989:2035":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:1844:3496":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:41235:3966":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"17:13033:5390":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"5:863:3655":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"6:4474:6536":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"17:10505:4433":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"5:1058:8115":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"17:10555:4874":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"6:4878:1003":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"2:2738:2576":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"9:445:20310":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"1:4681:9202":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"2:2847:2462":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"17:13499:5505":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"2:44113:7538":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"2:2522:237":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"1:5502:9254":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"1:917:4470":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:21839:7241":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"15:180:4444":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"17:13461:5497":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"1:10841:4046":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"17:9350:35375":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"17:9822:7804":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"18:548:141":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"16:7103:4062":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"16:5741:21308":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"6:4747:6629":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"16:7697:3935":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"6:5919:6905":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"2:20950:9306":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"2:4264:7946":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"5:3688:7932":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"17:10598:4921":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"1:8918:107":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"17:12178:5134":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"17:10615:4886":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"2:2911:1793":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"17:11037:21381":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"1:1577:4471":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"2:4145:3961":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:8393:7495":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"16:3030:5673":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"2:8679:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"6:4739:6625":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"17:12331:5177":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"17:10092:4423":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"5:3673:3414":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"2:8847:8685":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"16:8129:7905":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"2:39228:199":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:9392:3745":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"2:4023:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:47809:7646":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"17:11060:4889":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"6:4853:6678":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"2:7244:121":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"6:6849:7156":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:10649:4434":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"1:1071:7922":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"17:12536:5212":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"2:40468:3364":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:2922:1816":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:11900:1399":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"1:9387:4522":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"17:12770:5235":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"2:47535:7641":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"2:44356:161":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"17:8283:21367":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:41539:193":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"2:46875:7604":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"17:11628:5037":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"2:43620:2531":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"17:12372:5182":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"16:4845:5700":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"6:5862:6875":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"6:4916:6715":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"17:11770:5070":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"11:1091:7924":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"2:30372:31168":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"11:991:5887":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"17:9696:4808":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"2:3157:135":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:4642:9211":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"2:39964:2529":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"2:42675:7494":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:3060:3427":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"17:1978:4414":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"16:6876:3923":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"17:13066:5401":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"3:0:443":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"1:8899:7689":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:5590:3344":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2:43264:2917":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:10006:4546":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"2:2843:2461":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"16:5847:5741":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:40324:3354":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:2898:117":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"5:6764:3688":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"1:4096:4528":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"2:43893:7521":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"2:12361:192":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"2:20782:2996":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"1:8343:7679":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"2:40085:4485":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"17:9068:35379":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"16:7366:21316":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"2:11283:2155":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"2:21990:9183":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"18:636:4685":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"18:766:25225":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"5:3163:34015":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:10134:2923":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"6:562:6261":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:40433:3362":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:9039:218":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"1:3465:3399":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"6:7528:7184":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"16:2905:3901":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:21677:7230":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"2:46069:7576":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"11:816:4470":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"16:5616:5712":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"17:9617:4402":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"2:3152:234":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"17:13257:5444":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"17:13385:5475":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"17:8953:4800":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"5:7241:224":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:2515:133":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"1:926:4467":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"9:352:20325":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"1:4576:7061":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"2:20591:33554":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"17:12126:5129":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"16:6022:21310":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:45570:7559":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"5:6597:3686":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"1:8416:7682":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"17:11355:4984":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"17:1919:21417":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"1:11911:1501":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"18:660:4380":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"16:7065:5886":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"6:554:6256":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"2:1747:7224":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"2:40172:9142":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"typedef"},"2:2758:2448":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:10232:8126":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"2:47715:3983":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"6:6840:7153":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"17:487:7792":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"17:12980:5384":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"1:11216:3811":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"1:1783:4518":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"16:7016:3925":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"5:7321:3640":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"6:573:6266":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"1:1565:1656":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"6:7271:7166":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"6:4703:6608":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"11:703:4467":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"2:11741:2511":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"17:12224:5158":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"17:10885:4916":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"2:42704:7495":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"17:13411:5485":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"1:11174:4539":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"5:7338:3683":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"6:5043:6782":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"1:3325:3330":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:42430:110":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"1:8790:2032":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"17:8632:21355":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"1:530:3715":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"2:42714:7499":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"2:41488:2654":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:2768:2444":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"6:6617:7044":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"17:9670:4405":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"2:45552:7558":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:8913:7998":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"6:4799:6656":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"17:13332:5460":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"17:10283:4861":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"2:47081:7636":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"17:10000:4902":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"2:43274:2918":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"6:4871:6689":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"2:4437:3963":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"5:6739:1950":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"16:5963:4438":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"2:8360:2512":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"17:11844:5088":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"17:9534:4397":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"1:3911:9186":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"1:7844:119":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"16:6243:35367":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"11:2204:35361":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"5:1228:7920":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"1:8130:3350":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"17:11615:5033":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"1:11009:4076":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"18:582:2830":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"17:12646:5233":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"16:6336:5788":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"1:7514:3741":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"6:4983:6753":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"16:2862:5670":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"17:9424:4807":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"1:5439:4046":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"17:8310:21368":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"17:13698:5577":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"6:5792:6838":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"17:13101:5405":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"17:8420:21371":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"17:12622:4889":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"1:5499:6969":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"18:614:35384":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"6:494:4072":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"11:638:2032":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"11:305:4458":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"2:2817:2455":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"16:6558:5804":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"16:6474:3920":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"17:11299:4969":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"1:8475:4531":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"15:198:4449":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"17:9038:35373":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"17:13053:5396":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"11:60:4454":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"16:4624:5694":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"1:8502:7687":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:3142:2470":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"17:11391:4991":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"1:11843:8024":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"17:12923:5349":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"2:3648:1656":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"17:9683:7802":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"1:11078:4075":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"17:9545:4786":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"2:39188:200":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"2:43866:7520":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"17:3266:4427":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"11:1126:7925":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"2:6772:3321":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"1:8266:4050":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"2:42162:2549":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"6:1556:6316":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:5334:4047":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"5:4137:3386":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"17:13879:5623":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"16:6236:7869":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:44385:3954":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"1:1433:144":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"17:13426:5489":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"6:7504:7180":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:7165:3340":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"16:2572:5659":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"16:5557:3904":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"16:5920:5750":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"2:12299:136":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"6:6155:6997":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"17:12496:5209":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"16:4568:5692":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"11:2219:3952":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"1:1924:2572":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"2:22602:3978":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"9:325:6182":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"1:8221:7667":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"2:22569:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"2:39991:31195":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"6:6170:7008":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:43193:2902":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:44109:7537":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:4112:9209":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"2:39353:2569":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"2:3163:2472":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:43640:2523":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"16:6488:5797":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"1:5320:7973":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"2:43787:7515":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"2:47333:7638":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"1:11168:7707":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"1:11399:4053":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"6:1519:6293":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"18:113:4378":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"17:10989:4872":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"1:11876:26137":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"5:7211:7219":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"11:1540:7927":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"2:40277:3342":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:3386:2565":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"2:20921:9320":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"1:7596:7984":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"1:8248:7668":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"6:5817:6843":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"17:10491:7831":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"11:828:9107":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"5:963:3649":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"2:45422:7553":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:3677:4051":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"9:388:20311":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"1:11506:7716":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"2:21128:3977":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"2:43232:2901":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:10676:7702":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"2:46691:7602":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"6:5993:6940":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:7636:8946":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"18:564:4673":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:43416:2542":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:5563:3724":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"1:844:2032":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"2:9153:2550":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"17:10635:4888":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"17:11109:4931":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"6:1732:6422":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:2470:2506":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"17:11879:5092":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"2:42467:68":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"5:1612:3649":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"17:13309:5457":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"1:11905:644":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"2:2312:188":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:7868:3414":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"16:7572:35370":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"1:1594:4474":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"6:4400:6501":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"6:6670:7067":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"1:7943:7992":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"17:9228:35374":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"16:5386:4791":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:45755:7566":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"16:4789:5698":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"2:21957:7255":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"2:20891:2996":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"6:4780:6648":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:47794:7645":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"5:7014:1657":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"17:12607:5223":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"2:43534:2534":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:39970:7461":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"2:43665:2528":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"17:9028:4386":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"18:609:7788":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"17:11193:4942":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"6:587:6274":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"1:8081:3324":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:47657:7644":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:21571:9170":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"2:47871:7648":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"2:39270:201":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"6:6606:7039":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"1:4903:2646":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"17:12483:5208":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"17:11422:4995":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"1:11499:7716":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"2:44173:14721":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"5:7148:9106":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"1:6188:3724":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"2:45601:7560":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:4176:4043":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"2:2800:2452":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"17:8683:4793":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:2512:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:2746:106":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"11:2198:4247":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:10169:2537":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"16:7478:3928":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:40385:3345":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"17:11434:3897":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"5:211:3648":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"1:1080:7926":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2:20853:9319":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"5:6446:3649":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"16:6535:3633":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"17:11319:4979":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"2:41521:2655":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"16:5779:5729":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"1:5686:7975":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"16:4510:5690":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"1:413:165":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"5:7089:1656":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"17:8195:21356":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"1:2344:2987":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"17:13316:5458":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"17:9886:7808":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"4:0:2310":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"16:4904:5702":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"2:10290:2921":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"2:22272:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"2:9628:3707":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"1:3168:3421":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"5:6294:3649":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"16:8109:6007":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"17:9443:4394":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"6:4427:6516":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"17:12835:5286":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"16:2426:5654":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"17:13324:5459":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"1:6870:8938":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"6:4435:6519":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"6:4962:6741":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:7267:2043":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:25859:7263":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"2:3374:2561":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"1:867:1656":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"17:13181:5422":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"6:4894:6699":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"6:1494:6283":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:42922:7502":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"16:7859:21319":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"16:7244:35366":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"1:11892:371":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"19:0:1033":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"1:9044:219":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"1:6552:3736":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"1:6485:9266":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"6:526:6241":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"17:9380:21388":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"16:2931:20450":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"11:652:2035":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"1:1821:4520":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"2:46661:7601":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"2:8254:2657":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"17:9409:21389":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"1:11912:1498":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"2:1630:588":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"2:45446:7554":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"14:0:2316":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"17:13024:5389":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"2:40255:3341":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"17:1034:4401":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:2788:2453":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"9:0:2312":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"2:41341:7484":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"6:0:818":{"crate_id":6,"path":["libc"],"kind":"module"},"2:2518:238":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"1:10144:4069":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"2:2242:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:8253:2658":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:8153:2538":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"17:9322:35371":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"17:9275:35372":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"1:9087:7691":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"2:46167:7578":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"17:11090:4928":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"6:4649:6592":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"1:1048:5887":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"16:7335:35369":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"2:2695:225":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"1:911:3640":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"6:7608:7203":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"17:8971:129":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"2:22536:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"6:4290:6428":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:46198:7579":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:8433:9249":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"6:4972:6747":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"6:5067:6789":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"17:9478:7794":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"2:2694:226":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"2:22239:178":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"17:12576:5217":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"1:8140:3364":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"1:2477:3410":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"16:3047:20452":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"10:36:6145":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"17:9973:4825":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"2:40125:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"6:4488:6544":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"2:2985:2468":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"17:12915:5348":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"1:7792:4522":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"6:6572:7020":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"2:5472:3386":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"2:21912:31182":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"2:30053:9182":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"11:821:7913":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"5:1242:7926":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"5:4207:2032":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"12:0:2315":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"5:7052:198":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"11:1009:7920":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"2:30278:1798":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"17:10660:4889":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"2:40235:2900":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"2:43182:2911":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"2:40158:7470":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"5:3534:2032":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"16:5708:5721":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"2:11676:2123":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"6:4455:6528":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"17:10270:7822":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"2:43801:7518":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:21119:9170":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"2:43516:2533":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"17:13453:5496":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"1:11151:3751":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"16:7743:3936":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"2:44335:3956":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:6009:3727":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"17:12307:5174":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"18:707:2514":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"16:3749:5680":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"1:4683:9203":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"1:10653:7695":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"1:1589:4473":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"16:6376:3918":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"6:488:6219":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"5:689:111":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"17:12059:5120":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"2:9159:2559":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"18:644:4663":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"16:6520:5803":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"1:7622:3163":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:42442:5975":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"2:21002:9310":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:959:7919":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"6:4367:6488":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"11:783:3644":{"crate_id":11,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"6:4340:6465":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"1:8232:7997":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"2:6725:4505":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"16:7317:35368":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"5:3129:34014":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"17:12522:5211":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"2:45631:7561":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"16:7411:5756":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"5:3975:1657":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"2:40007:7465":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:6409:3735":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"2:2812:2454":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"17:11821:5083":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"11:1873:4473":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"2:32068:7954":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"1:2346:9157":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"6:4817:6664":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:11910:742":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"16:7557:5942":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"5:3521:163":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"6:579:6269":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"6:1701:6410":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"2:12517:3712":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:45376:7551":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"2:47756:3984":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"2:12554:140":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"17:12592:5219":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"5:880:2032":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"2:21874:7244":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:11942:112":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:6101:3731":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"2:39979:7462":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"5:5485:3678":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"16:5305:5709":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"1:2206:129":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"17:9523:7797":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"2:45653:7562":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"18:515:4666":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"17:9188:35376":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"2:41318:31179":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"14:165:20395":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"1:7852:7990":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"6:4769:6640":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"1:10634:8018":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"1:8806:1656":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"1:8088:3426":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"1:480:3714":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"16:3063:4704":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"11:1852:3640":{"crate_id":11,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"6:7277:7168":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"17:11544:5009":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"11:119:3634":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"1:11694:3756":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"1:8782:4054":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"11:1524:20390":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"1:4508:9229":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"16:6061:20423":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"2:20561:33082":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"2:21928:31142":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"16:3300:5677":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"1:11337:4051":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"16:2642:5662":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"17:9772:4817":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"2:2691:2501":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"2:2749:2581":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"1:6373:7982":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"16:7029:5881":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:3514:1657":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"2:46425:7597":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"17:13399:5482":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"17:10465:7830":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"17:11520:5005":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"6:4832:6668":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"5:7195:31189":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"16:8156:3938":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"17:8753:4795":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"6:7557:7191":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"5:7224:7221":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"17:13145:5417":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"17:12194:5139":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"2:2161:2996":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"6:7516:7182":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"5:3184:4474":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:3234:2478":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"2:42402:7486":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"6:6135:6983":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"16:4757:5697":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"1:10320:4536":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"17:11891:5094":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"2:3182:33700":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"6:5007:6760":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"17:13763:5596":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"17:13169:5419":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"16:535:5635":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"17:11600:5027":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"16:6854:5861":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"2:43254:2919":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"2:47704:3980":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"17:11585:5021":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"17:11785:5074":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"15:0:2317":{"crate_id":15,"path":["addr2line"],"kind":"module"},"17:9866:7806":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"17:9265:4391":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"16:3225:5676":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"2:45400:7552":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"18:531:4668":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"6:4637:6591":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"17:11969:5108":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"16:5944:7837":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"17:10589:4883":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"1:3782:4053":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"1:2574:3403":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"1:11915:1497":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"17:1947:4411":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"1:8876:9272":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"2:6678:3349":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"6:5024:6768":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"2:20589:33558":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"1:10728:26138":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"1:0:1391":{"crate_id":1,"path":["std"],"kind":"module"},"17:10936:4920":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"6:4954:6736":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"6:1672:6399":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"18:727:4696":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"2:41800:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:42169:2550":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"16:7803:5956":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"1:10832:3946":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"1:585:9091":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"2:40693:3161":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:638:7965":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"6:4379:6491":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"16:6890:3924":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:39388:3960":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:643:9094":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"17:13041:5391":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"16:7669:3932":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:45977:7572":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:10663:7660":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"17:9641:4403":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"2:47223:7637":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"18:624:35381":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"1:7797:7660":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"16:5402:4792":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"6:5986:6939":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:39292:203":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"2:5991:3368":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"11:675:4466":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"16:4400:5687":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"2:2163:2997":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"5:5908:3386":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"2:9613:3703":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"17:13812:5611":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"17:12959:5379":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"1:5719:7979":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"1:2387:1796":{"crate_id":1,"path":["std","io"],"kind":"module"},"2:7592:2510":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"2:40686:4507":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"2:47779:3992":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"2:43930:7522":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:41960:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:4737:3722":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"17:10402:7825":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"2:1821:3014":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:7860:3412":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"1:9190:3496":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"1:8954:8004":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"16:5071:5707":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"2:40735:3336":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"16:5104:5708":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"1:2614:3413":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"17:13803:5607":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:21443:3975":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:20881:9313":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr"],"kind":"trait"},"2:39248:202":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:2372:9167":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:11736:2513":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"2:3318:69":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:40043:2530":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"2:21016:3977":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"17:13367:5471":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"2:40142:31189":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:7671:3994":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"1:2867:210":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"2:10808:2915":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"2:20934:9170":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"6:4948:6735":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:40205:3694":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"5:280:2516":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"2:1916:3015":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:8053:3428":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"16:5571:3906":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"16:4969:5704":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"6:4684:6596":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"16:3446:5678":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"1:11378:4052":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"2:22404:3959":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"17:11946:5103":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"16:4728:5696":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"6:4793:6653":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"6:5899:6889":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:43944:14459":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"6:1680:6400":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:46120:7577":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"11:768:3640":{"crate_id":11,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"2:45853:7569":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"17:10478:4432":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"2:40059:2528":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"2:44085:7531":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"2:40286:3343":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"17:13292:5450":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"17:9748:4813":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:47684:3982":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"16:6460:3919":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"1:5247:120":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"2:47581:7642":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"17:10068:4421":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"2:39381:3805":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"2:45947:7571":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"17:10626:4887":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"16:6943:21314":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:1572:3640":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"17:9488:7795":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"16:6544:3921":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"16:7488:5939":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"6:5774:6825":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"17:11813:5081":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"2:4390:3806":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"5:780:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"17:13821:5613":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"16:3585:5679":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"2:2506:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"16:4596:5693":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"2:43245:2916":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"17:247:7790":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"6:541:6250":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:20606:33559":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"16:7588:7903":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"1:7476:8021":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"6:6719:7079":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"18:671:4385":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"1:4578:7063":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"5:5712:1657":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"16:5976:5637":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"18:755:4701":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"1:11314:3753":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:43384:2537":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"6:4841:6674":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:41640:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"17:12033:5117":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:21851:31159":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"2:40092:14499":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"16:7683:3934":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"1:10828:7988":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"17:10580:4882":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"16:6400:5792":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:2963:2475":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"6:6035:6959":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"1:8831:4058":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2:9155:2549":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"6:7539:7188":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"1:11897:1051":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"6:5835:6855":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:676:8120":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"1:2550:3703":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:30848:183":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"5:2189:7210":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"6:7249:7165":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"2:42458:71":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"17:10452:4431":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"5:3117:2032":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"17:10712:21486":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"16:7293:5917":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"1:930:7913":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"2:9165:2557":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"5:7022:3657":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"2:9596:3702":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"2:3999:7943":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"2:30300:68":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"2:21891:31173":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:6621:7981":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"17:12799:5255":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:47832:7647":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"2:2264:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:4812:797":{"crate_id":2,"path":["core","iter"],"kind":"module"},"2:4011:7944":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"16:5724:5723":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"2:10096:2913":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"11:731:4468":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"1:4564:9189":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"2:45500:7556":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"6:6819:7141":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"16:4445:5688":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"17:10823:4763":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"1:11908:745":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"6:4412:6510":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:1768:610":{"crate_id":1,"path":["std","env"],"kind":"module"},"17:13842:5616":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"6:5828:6851":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:21964:3958":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"6:7551:7190":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:8844:9271":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"2:9157:2558":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"2:41606:1656":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"17:13651:5565":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"16:8047:5998":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"16:4818:5699":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"16:4480:5689":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"16:8269:128":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"17:242:7789":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"1:6842:3738":{"crate_id":1,"path":["std","sys","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"16:4702:5695":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"5:1078:4477":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"9:481:20309":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"2:4381:3693":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"17:13488:5504":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"17:11471:3898":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"6:1602:6345":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"17:12563:5216":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"2:21783:7232":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:2290:430":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"2:21455:33086":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"6:1630:6370":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"11:757:1657":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"2:21349:9321":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"2:42183:2559":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:3939:9189":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"9:52:8666":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"0:0:1649":{"crate_id":0,"path":["arrayvec"],"kind":"module"},"1:7787:4743":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2:46023:7574":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:43336:2526":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"6:4728:6619":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"17:10670:4891":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"6:4505:6554":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:41298:7477":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"6:6027:6957":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"1:8147:2255":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"2:40295:3351":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"2:41547:210":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"2:21799:7233":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"2:3197:2477":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:4104:4529":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"16:5655:3910":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"5:2905:2481":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"5:1995:7932":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"2:43162:2912":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"5:2116:7206":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"5:1404:4468":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"2:2317:125":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"6:4327:6455":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"16:7596:21317":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"1:10718:3401":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"2:46725:7603":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"17:12046:5118":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"2:44373:3955":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"6:1512:6291":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"1:1062:7920":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"6:595:6279":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"2:4187:3962":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"1:3983:9191":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:46455:7598":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"6:4523:6563":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"1:8924:8000":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"17:13135:5416":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"1:3401:3396":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:22338:177":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"6:1544:6307":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:40347:3356":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"2:41463:2032":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"1:3208:3423":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"2:42907:7501":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"2:41920:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"6:1594:6340":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:43750:14458":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"17:10026:4418":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"17:9721:4407":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"1:888:4469":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"2:40447:3363":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"2:45901:7570":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:7665:9096":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"2:44161:7543":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"2:10057:2522":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"2:1467:1644":{"crate_id":2,"path":["core","mem"],"kind":"module"},"2:2792:2451":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:11865:9097":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"5:4321:245":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:40679:3325":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"17:12318:5175":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"1:4845:9236":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"2:43978:2543":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"2:2151:589":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"6:1589:6338":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"17:12006:5112":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"13:0:2309":{"crate_id":13,"path":["std_detect"],"kind":"module"},"16:3640:4708":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"1:3973:9190":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:32072:4481":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"2:42683:2486":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"17:10334:4813":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"17:9098:4388":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"5:5293:1399":{"crate_id":5,"path":["alloc","str"],"kind":"module"},"6:5073:6791":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:43683:2530":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"16:8090:6004":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"17:12510:5210":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"17:10967:4921":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"16:7498:5940":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"2:2856:2464":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"16:7519:5941":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"2:43630:2532":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"17:10354:4865":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"16:6201:7858":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"1:5370:4049":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"2:41590:2032":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"6:5978:6938":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:9151:120":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"6:5079:6794":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"2:40111:7468":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"5:7266:7942":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"16:6696:21313":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"2:2839:2460":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"2:21866:7243":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"2:40066:14498":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"1:8931:26004":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"17:11069:21382":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"1:6236:206":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"5:3622:3649":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:11249:4543":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"2:39374:7955":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"16:6132:5781":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"17:9453:21390":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"2:6981:3326":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"6:6725:7080":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"17:562:4926":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"16:8180:21320":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"11:744:4469":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"16:2546:5658":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"2:40717:3332":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"17:11446:3893":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"17:12449:5195":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"1:11914:1500":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"2:2929:1948":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"2:45999:7573":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"11:1035:7922":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"1:947:7916":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"2:46615:7600":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"2:45801:7567":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"2:21978:7258":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"16:7259:2654":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"11:1144:7926":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"2:30314:31180":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"2:44089:7532":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:10215:7974":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"11:2157:20383":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"1:11894:419":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"1:2362:9162":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:9965:2032":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"17:12388:5184":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"1:8491:4535":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"17:9148:35377":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"1:11899:1369":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:43219:2900":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"17:11339:4980":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"2:40031:7466":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"5:1197:5887":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"1:8768:7688":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"1:8214:7666":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"1:11097:7690":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"2:12609:2898":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"5:5834:8117":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"1:8754:4076":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"17:9876:4742":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"1:4256:4044":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"17:13233:5439":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:5532:3355":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"17:420:4749":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"1:1985:184":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"17:13625:5556":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"5:5035:3676":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"6:6564:7015":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"2:45530:7557":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:7020:4540":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"17:10857:21380":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"16:8214:2113":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"6:4419:6514":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:4336:3805":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"2:9530:3700":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"14:202:14460":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"17:9895:7811":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"17:13506:5507":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"1:1895:2571":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"17:9986:4826":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"17:9312:4392":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"2:39314:1792":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"17:9557:4813":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"1:3925:9187":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"6:4861:6683":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"2:1637:2497":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"2:41403:181":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"18:0:2320":{"crate_id":18,"path":["memchr"],"kind":"module"},"11:359:3638":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"7:32:20296":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"17:9959:4824":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"1:9380:129":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"5:2906:33859":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"17:2933:4425":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"17:9917:3947":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"2:21344:9311":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"17:8548:21375":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"6:7545:7189":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"1:554:7962":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"5:4399:3670":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"17:9653:7799":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"16:2337:5645":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"1:3440:2095":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"1:10363:3746":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"1:1846:4521":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"5:6248:1657":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"1:8172:4526":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"1:6482:4064":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"11:859:7918":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"17:13433:5490":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"2:10276:2922":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"16:2470:3902":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"1:8166:4524":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"6:6774:7117":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"1:3875:9185":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"11:0:2314":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"16:2357:5651":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"2:2354:189":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"16:6819:5857":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"17:9577:4809":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"2:44105:7536":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"6:6021:6954":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:41598:2035":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"2:2741:2577":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"17:11372:4986":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"17:9596:4810":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:22470:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"17:13612:5550":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"17:10840:4914":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"17:9628:7798":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"2:40305:3352":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"2:2981:2467":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"17:10743:4437":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"17:8823:4797":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"2:40408:3360":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:10954:3750":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"1:3680:4052":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"1:6085:3712":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"1:4436:9212":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"17:13516:5512":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"17:13791:5605":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"18:481:3796":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"6:4753:6631":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"5:6607:3687":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"17:11532:5008":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"5:7181:3999":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"17:12113:5128":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"17:13219:5436":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"1:3249:3420":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"5:6990:2899":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"6:4468:6533":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"13:110:35363":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"2:9161:194":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"16:2808:5669":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"2:4046:14438":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"5:1463:4478":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"5:3276:3640":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"2:44300:195":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"1:901:1657":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"1:6369:3161":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"1:11243:4542":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"6:4542:6573":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"17:13240:5441":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"2:40708:3330":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:10468:3163":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"1:3458:3397":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"17:11282:4966":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"2:42722:7500":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"16:6793:5856":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"6:5804:6842":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"17:12345:5178":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"16:6146:194":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"17:10747:128":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"6:7294:7178":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"5:3088:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"2:46537:7599":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"2:44121:7540":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"2:11716:2519":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"2:42667:2487":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"17:9340:4393":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"2:43434:2541":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"6:6014:6953":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"9:234:7495":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"16:7449:7896":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"17:8573:21376":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"17:8979:35380":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"11:840:7916":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"6:4847:6675":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"5:265:3649":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"1:2832:3721":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"17:10516:4868":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"17:13865:5620":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"1:6586:217":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"1:10428:3419":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"9:174:8676":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"6:4722:6616":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:9807:9170":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:2208:7970":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"16:6293:5786":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"1:10422:3421":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"6:6066:6968":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"17:10052:7819":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"2:45468:7555":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"6:6704:7073":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"6:4943:6733":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"1:8966:8006":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"5:815:3653":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"5:6695:244":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"11:393:4460":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"17:11573:5018":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"16:6390:5791":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"6:6867:7159":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:43144:2909":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:7599:3338":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"17:11721:5045":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"16:6351:21311":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"2:4765:389":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"16:7767:21318":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"6:482:6216":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"15:219:8663":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"2:11504:7508":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"5:4047:2035":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"17:13639:5562":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"2:44101:7535":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:6757:9304":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"1:635:7963":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"16:7467:5936":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2:40333:4493":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"16:2594:5660":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:43818:7519":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"17:12158:5133":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"1:11893:938":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:5384:3386":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"2:44093:7533":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"17:12550:5215":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"16:4932:5703":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"1:361:7961":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"17:9498:4808":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"6:5966:6931":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"6:1662:6393":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"17:12902:5341":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"6:4625:6590":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"2:9110:210":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"1:10853:26148":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"16:2764:5667":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"1:6538:8122":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"18:599:35382":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"1:501:3661":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"2:2822:2456":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:30876:2830":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"11:452:142":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"5:2636:7214":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"2:46045:7575":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:40702:3328":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"1:953:7918":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"2:43965:7527":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"6:6597:7038":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:11269:7950":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"2:41840:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"2:21126:9314":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"2:11465:7506":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"2:41479:1656":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"1:8109:3402":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"2:49677:9324":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"6:4694:6603":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"1:3135:8836":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"2:22371:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:11060:4070":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"6:4303:6437":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"17:11653:5041":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"16:2448:5655":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"17:12138:5130":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"5:7030:34016":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"17:9946:4823":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:10262:2539":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:9374:145":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"17:8360:21369":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"17:9512:4396":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"1:1568:1657":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"2:47695:3990":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"16:3899:5684":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:39087:2479":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"18:507:4663":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"6:62:14941":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"1:4639:9238":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"2:43324:2527":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"2:9409:2483":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"17:12403:5188":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"6:119:14995":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"1:2360:9161":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"6:6743:7091":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"2:44140:122":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"2:40215:3807":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"2:2692:2575":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"1:5693:7978":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"16:5418:5711":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"5:2169:34977":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"5:2077:3661":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"1:11917:1555":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"1:10056:8010":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"17:10798:21379":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"1:1931:655":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"17:13667:5569":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"16:2879:3900":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"2:0:497":{"crate_id":2,"path":["core"],"kind":"module"},"17:10897:4917":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"11:1866:4472":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"16:7635:5946":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"2:2245:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"5:6367:1656":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"6:6833:7150":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"17:11011:4923":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"17:12634:5226":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"11:1071:35362":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"6:4991:6755":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"1:7676:7657":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"6:4928:6724":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"18:719:4693":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"17:10923:4918":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"17:11832:5086":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"16:6327:5787":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"2:40398:3359":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"6:4555:6577":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"1:11895:1517":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"17:11502:5004":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"16:6307:3913":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"1:5354:4048":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"16:8256:6015":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"2:41252:3968":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"6:7563:7192":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"1:11041:7540":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"1:6912:3739":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"17:9469:7793":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"2:2684:220":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"17:13376:5474":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"6:1689:6406":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"2:22437:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"16:5797:5733":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"17:9826:4415":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"1:3247:3419":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"1:6332:7981":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"2:4606:14493":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"1:8240:4524":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"6:1708:6413":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"16:8142:7908":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"5:1351:2032":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:47730:3991":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"5:3124:4472":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"1:8798:4538":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"5:2912:8139":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"17:8256:21354":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"5:5108:1369":{"crate_id":5,"path":["alloc","slice"],"kind":"module"},"16:7529:3930":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"14:40:4966":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"16:4327:5686":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"6:4549:6575":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"2:2926:2465":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"13:226:6139":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"16:6442:5796":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"17:10721:4896":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"2:12506:107":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"16:3782:5681":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"17:9218:4813":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"1:7577:7655":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"2:12386:7952":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"6:5050:6785":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"2:20994:9170":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:11906:747":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"16:7711:5947":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"2:2701:228":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"17:11902:5095":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"1:11898:312":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"2:39126:2476":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"2:2603:128":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"1:5556:206":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:2706:2111":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"17:11163:4938":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"6:4373:6489":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"6:4462:6531":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"5:1716:3640":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"2:9414:2484":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"2:41680:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:43093:4513":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"5:1042:4476":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"6:653:15352":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:9366:141":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:2753:2443":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"2:8842:8948":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:10688:7661":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"1:11904:642":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:45356:7550":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2:42000:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:4854:9237":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"2:42412:68":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"16:6321:7872":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"17:13249:5442":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"5:7060:7216":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"1:8988:25404":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"2:43352:2255":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"2:4:1016":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"17:3142:4426":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:40365:3367":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"5:7136:3952":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"17:12085:5123":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"6:6804:7134":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"17:13194:5428":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"1:4414:9211":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"2:20996:9308":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"18:80:4372":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:44097:7534":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"17:10039:7817":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"16:5594:3909":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:20548:2830":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"2:43310:2124":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"17:13678:5574":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"1:7814:7662":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"17:10316:4863":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"2:20816:9318":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"17:12236:5160":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"6:506:6224":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"17:8667:4792":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"17:10142:21459":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:2827:2458":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:4328:4045":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"2:47473:7640":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:9987:4520":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"17:11484:4996":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"6:7585:7197":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"16:7837:5960":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"}},"external_crates":{"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":26}