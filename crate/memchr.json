{"root":"0:0:1522","crate_version":"2.5.0","includes_private":false,"index":{"2:3218:8485":{"id":"2:3218:8485","crate_id":2,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13124:10425":{"id":"2:13124:10425","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:49267:9268","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3906-0:996:1984":{"id":"b:2:3906-0:996:1984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3904:67","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:996:1984","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["2:3908:1385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:650":{"id":"0:650","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[580,0],"end":[691,1]},"visibility":{"restricted":{"parent":"0:300:1538","path":"::memmem"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:996:1984","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["0:652:888","0:654:2000","0:656:1982","0:659:1659","0:660:280","0:661:1669"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13104:59291":{"id":"2:13104:59291","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:2834:116":{"id":"2:2834:116","crate_id":2,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2829:165","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3314:8970":{"id":"2:3314:8970","crate_id":2,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3316:163","2:3317:330"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13217:53263":{"id":"2:13217:53263","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13097:59288":{"id":"2:13097:59288","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5615:9207":{"id":"1:5615:9207","crate_id":1,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5616:56422","1:5617:56424","1:5618:56423","1:5619:56425"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13212:9829":{"id":"2:13212:9829","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12670:9435","`FromStr`":"2:12670:9435"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47182:187","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12670:9435","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12670:9435","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13125:59293":{"id":"2:13125:59293","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:49277:9917","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5782:59949":{"id":"5:5782:59949","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:8069:196"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8069:196","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3116-0:137:1534":{"id":"b:2:3116-0:137:1534","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3090:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3086:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1534","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3119:119","2:3120:1373"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6451:9317":{"id":"1:6451:9317","crate_id":1,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6452:57049","1:6453:57050"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13162:53374":{"id":"2:13162:53374","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"self::pattern":"2:12731:9680","prim@char":"1:15669:3253","str::splitn":"1:15674:3258"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:49135:9086","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12756:9679","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:613:1982":{"id":"0:613:1982","crate_id":0,"name":"rfind_iter","span":{"filename":"src/memmem/mod.rs","begin":[224,0],"end":[229,1]},"visibility":"public","docs":"Returns a reverse iterator over all non-overlapping occurrences of a\nsubstring in a haystack.\n\n# Complexity\n\nThis routine is guaranteed to have worst case linear time complexity\nwith respect to both the needle and the haystack. That is, this runs\nin `O(needle.len() + haystack.len())` time.\n\nThis routine is also guaranteed to have worst case constant space\ncomplexity.\n\n# Examples\n\nBasic usage:\n\n```\nuse memchr::memmem;\n\nlet haystack = b\"foo bar foo baz foo\";\nlet mut it = memmem::rfind_iter(haystack, b\"foo\");\nassert_eq!(Some(16), it.next());\nassert_eq!(Some(8), it.next());\nassert_eq!(Some(0), it.next());\nassert_eq!(None, it.next());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["haystack",{"kind":"borrowed_ref","inner":{"lifetime":"'h","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["needle",{"kind":"borrowed_ref","inner":{"lifetime":"'n","mutable":false,"type":{"kind":"generic","inner":"N"}}}]],"output":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:977:1983","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}},{"name":"N","kind":{"type":{"bounds":[{"outlives":"'n"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsRef","id":"2:3074:73","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13218:59311":{"id":"2:13218:59311","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"1:15669:3253"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:49312:9921","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13189:59304":{"id":"2:13189:59304","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8580:3379":{"id":"2:8580:3379","crate_id":2,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8302:149","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13113:53340":{"id":"2:13113:53340","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10632:194","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10632:194","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2783-0:977:1983":{"id":"b:2:2783-0:977:1983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2777:9715","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:977:1983","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["2:2785:53237"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3638:129":{"id":"2:3638:129","crate_id":2,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3640:657"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"2:3633:203","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13095:761":{"id":"2:13095:761","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:15669:3253"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1012:59":{"id":"0:1012:59","crate_id":0,"name":"default","span":{"filename":"src/memmem/mod.rs","begin":[698,23],"end":[698,30]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1005:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3106-0:826:1912":{"id":"b:2:3106-0:826:1912","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3083:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3080:141","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3109:3200"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:167":{"id":"0:167","crate_id":0,"name":null,"span":{"filename":"src/memchr/iter.rs","begin":[108,0],"end":[116,1]},"visibility":{"restricted":{"parent":"0:115:747","path":"::memchr::iter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["advance_back_by","rfind","try_rfold","nth_back","rfold"],"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedIterator","id":"2:8151:112","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1535","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:169:1803"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13214:10080":{"id":"2:13214:10080","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10027:8863":{"id":"2:10027:8863","crate_id":2,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10028:630"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3110-0:137:1534":{"id":"b:2:3110-0:137:1534","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3083:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1534","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3112:651"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9036:8728-0:137:1534":{"id":"a:2:9036:8728-0:137:1534","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9036:8728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1534","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:667:2067":{"id":"0:667:2067","crate_id":0,"name":"build_reverse","span":{"filename":"src/memmem/mod.rs","begin":[720,4],"end":[725,5]},"visibility":"public","docs":"Build a reverse finder using the given needle from the current\nsettings.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["needle",{"kind":"borrowed_ref","inner":{"lifetime":"'n","mutable":false,"type":{"kind":"generic","inner":"B"}}}]],"output":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:996:1984","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsRef","id":"2:3074:73","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4609:9265":{"id":"1:4609:9265","crate_id":1,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4610:56291","1:4611:56292","1:4612:56293","1:4614:9264","1:4615:56294","1:4617:53367","1:4618:10425"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Read","id":"1:4527:9226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:8114:8903":{"id":"2:8114:8903","crate_id":2,"name":"IntoIter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"generic","inner":"I"},"generics":{"params":[],"where_predicates":[]}}},"0:629":{"id":"0:629","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[384,0],"end":[410,1]},"visibility":{"restricted":{"parent":"0:300:1538","path":"::memmem"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:977:1983","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["0:633:1659"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:184:1802":{"id":"0:184:1802","crate_id":0,"name":"size_hint","span":{"filename":"src/memchr/iter.rs","begin":[160,4],"end":[162,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47055:158","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3644:8986":{"id":"2:3644:8986","crate_id":2,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3646:55724"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3429:124":{"id":"2:3429:124","crate_id":2,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3431:163","2:3432:352"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5549:9244":{"id":"1:5549:9244","crate_id":1,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5550:10821","1:5551:2248"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10368:9225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:2565:119":{"id":"1:2565:119","crate_id":1,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2566:13719","1:2568:3236","1:2569:57616","1:2570:57617"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10016:103","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10023:111","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:137:1534":{"id":"0:137:1534","crate_id":0,"name":"Memchr","span":{"filename":"src/memchr/iter.rs","begin":[34,0],"end":[40,1]},"visibility":"public","docs":"An iterator for `memchr`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:142","a:2:3218:8485-0:137:1534","a:2:3177:192-0:137:1534","a:2:9036:8728-0:137:1534","a:2:9037:8727-0:137:1534","a:2:3189:199-0:137:1534","b:2:8111-0:137:1534","b:2:3121-0:137:1534","b:2:2783-0:137:1534","b:2:3106-0:137:1534","b:2:3116-0:137:1534","b:2:3906-0:137:1534","b:2:3110-0:137:1534","b:2:2780-0:137:1534","0:145","0:150"]}},"b:2:8111-0:153:1535":{"id":"b:2:8111-0:153:1535","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8302:149","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8107:143","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1535","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:8113:1801","2:8114:8903","2:8115:736"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:829:2640":{"id":"0:829:2640","crate_id":0,"name":"Auto","span":{"filename":"src/memmem/prefilter/mod.rs","begin":[176,4],"end":[176,8]},"visibility":"default","docs":"Automatically detect whether a heuristic prefilter should be used. If\nit is used, then heuristics will be used to dynamically disable the\nprefilter if it is believed to not be carrying its weight.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:182:1801":{"id":"0:182:1801","crate_id":0,"name":"Item","span":{"filename":"src/memchr/iter.rs","begin":[149,4],"end":[149,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"primitive","inner":"usize"},"generics":{"params":[],"where_predicates":[]}}},"b:2:3121-0:137:1534":{"id":"b:2:3121-0:137:1534","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3080:141","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3090:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1534","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3124:119","2:3125:1372"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13156:59295":{"id":"2:13156:59295","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12731:9680","str::split_terminator":"1:15674:3258","prim@char":"1:15669:3253","str::split":"1:15674:3258"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:49081:9909","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12756:9679","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13123:32640":{"id":"2:13123:32640","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"1:15674:3258"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:49296:9919","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13096:1694":{"id":"2:13096:1694","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:993":{"id":"0:993","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[448,16],"end":[448,21]},"visibility":{"restricted":{"parent":"0:300:1538","path":"::memmem"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10016:103","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:987:1978","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["0:995:630"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5784:3371":{"id":"5:5784:3371","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:8069:196"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8069:196","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13183:59301":{"id":"2:13183:59301","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:152:1803":{"id":"0:152:1803","crate_id":0,"name":"next_back","span":{"filename":"src/memchr/iter.rs","begin":[66,4],"end":[68,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47055:158","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:8302:149","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9036:8728-0:1005:2033":{"id":"a:2:9036:8728-0:1005:2033","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9036:8728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1005:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13194:59307":{"id":"2:13194:59307","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:12731:9680","prim@char":"1:15669:3253"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:660:280":{"id":"0:660:280","crate_id":0,"name":"as_ref","span":{"filename":"src/memmem/mod.rs","begin":[677,4],"end":[679,5]},"visibility":"public","docs":"Convert this finder into its borrowed variant.\n\nThis is primarily useful if your finder is owned and you'd like to\nstore its borrowed variant in some intermediate data structure.\n\nNote that the lifetime parameter of the returned finder is tied to the\nlifetime of `self`, and may be shorter than the `'n` lifetime of the\nneedle itself. Namely, a finder's needle can be either borrowed or\nowned, so the lifetime of the needle returned must necessarily be the\nshorter of the two.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:996:1984","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9037:8727-0:996:1984":{"id":"a:2:9037:8727-0:996:1984","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9037:8727","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:996:1984","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13133:53377":{"id":"2:13133:53377","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"self::pattern":"2:12731:9680","prim@char":"1:15669:3253"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12756:9679","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:966:1977":{"id":"0:966:1977","crate_id":0,"name":"FindIter","span":{"filename":"src/memmem/mod.rs","begin":[311,0],"end":[316,1]},"visibility":"public","docs":"An iterator over non-overlapping substring matches.\n\nMatches are reported by the byte offset at which they begin.\n\n`'h` is the lifetime of the haystack while `'n` is the lifetime of the\nneedle.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:619","a:2:3218:8485-0:966:1977","a:2:3177:192-0:966:1977","a:2:9036:8728-0:966:1977","a:2:9037:8727-0:966:1977","a:2:3189:199-0:966:1977","b:2:8111-0:966:1977","b:2:3121-0:966:1977","b:2:2783-0:966:1977","b:2:3106-0:966:1977","b:2:3116-0:966:1977","b:2:3906-0:966:1977","b:2:3110-0:966:1977","b:2:2780-0:966:1977","0:973","0:624"]}},"0:661:1669":{"id":"0:661:1669","crate_id":0,"name":"needle","span":{"filename":"src/memmem/mod.rs","begin":[688,4],"end":[690,5]},"visibility":"public","docs":"Returns the needle that this finder searches for.\n\nNote that the lifetime of the needle returned is tied to the lifetime\nof the finder, and may be shorter than the `'n` lifetime. Namely, a\nfinder's needle can be either borrowed or owned, so the lifetime of the\nneedle returned must necessarily be the shorter of the two.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:283:1524":{"id":"0:283:1524","crate_id":0,"name":"memchr2_iter","span":{"filename":"src/memchr/mod.rs","begin":[23,0],"end":[25,1]},"visibility":"public","docs":"An iterator over all occurrences of the needles in a haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["needle1",{"kind":"primitive","inner":"u8"}],["needle2",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1535","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"a:2:3177:192-0:977:1983":{"id":"a:2:3177:192-0:977:1983","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3177:192","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:977:1983","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3177:192-0:996:1984":{"id":"a:2:3177:192-0:996:1984","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3177:192","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:996:1984","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3420:8486":{"id":"2:3420:8486","crate_id":2,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3421:549"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13130:53376":{"id":"2:13130:53376","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"self::pattern":"2:12731:9680","prim@char":"1:15669:3253"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13116:59292":{"id":"2:13116:59292","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"crate::ops::IndexMut":"2:3485:8981","`str`":"1:15674:3258","str::slice_unchecked":"1:15674:3258"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:3112:651":{"id":"2:3112:651","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5764:8475":{"id":"5:5764:8475","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:8069:196"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8069:196","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:652:888":{"id":"0:652:888","crate_id":0,"name":"new","span":{"filename":"src/memmem/mod.rs","begin":[583,4],"end":[585,5]},"visibility":"public","docs":"Create a new reverse finder for the given needle.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["needle",{"kind":"borrowed_ref","inner":{"lifetime":"'n","mutable":false,"type":{"kind":"generic","inner":"B"}}}]],"output":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:996:1984","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsRef","id":"2:3074:73","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3189:199":{"id":"2:3189:199","crate_id":2,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3906-0:987:1978":{"id":"b:2:3906-0:987:1978","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3904:67","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:987:1978","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["2:3908:1385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3218:8485-0:987:1978":{"id":"a:2:3218:8485-0:987:1978","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3218:8485","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:987:1978","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:5671:9211":{"id":"1:5671:9211","crate_id":1,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5672:56994","1:5673:56995","1:5674:56996","1:5675:56997"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3083:127":{"id":"2:3083:127","crate_id":2,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3085:651"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:776-0:987:1978":{"id":"b:5:776-0:987:1978","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2799:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:987:1978","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["5:778:1645","5:779:8947","5:780:8948"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3189:199-0:170:1536":{"id":"a:2:3189:199-0:170:1536","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3189:199","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3187:100":{"id":"2:3187:100","crate_id":2,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2799:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2780-0:987:1978":{"id":"b:2:2780-0:987:1978","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2774:92","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:987:1978","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["2:2782:3323"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3280:8967":{"id":"2:3280:8967","crate_id":2,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3282:1316"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:7669:9458":{"id":"1:7669:9458","crate_id":1,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7670:56473"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:7631:3364":{"id":"2:7631:3364","crate_id":2,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:7632:58725","2:7633:58726","2:7634:2146","2:7635:58722","2:7636:58727","2:7637:58724","2:7638:58723"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2799:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2875:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:5763:59946":{"id":"5:5763:59946","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:421:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:7774:10092","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:421:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:7774:10092","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13168:59297":{"id":"2:13168:59297","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47055:158","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12756:9679","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3106-0:966:1977":{"id":"b:2:3106-0:966:1977","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3083:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3080:141","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:966:1977","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["2:3109:3200"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1010:630":{"id":"0:1010:630","crate_id":0,"name":"fmt","span":{"filename":"src/memmem/mod.rs","begin":[698,16],"end":[698,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9976:126","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9965:187","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10632:194":{"id":"2:10632:194","crate_id":2,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:10634:163","2:10635:2757","2:10636:13744","2:10637:53339","2:10638:53340","2:10639:721","2:10640:722"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:10623:9225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:164:1801":{"id":"0:164:1801","crate_id":0,"name":"Item","span":{"filename":"src/memchr/iter.rs","begin":[95,4],"end":[95,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"primitive","inner":"usize"},"generics":{"params":[],"where_predicates":[]}}},"0:641:888":{"id":"0:641:888","crate_id":0,"name":"new","span":{"filename":"src/memmem/mod.rs","begin":[456,4],"end":[458,5]},"visibility":"public","docs":"Create a new finder for the given needle.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["needle",{"kind":"borrowed_ref","inner":{"lifetime":"'n","mutable":false,"type":{"kind":"generic","inner":"B"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:987:1978","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsRef","id":"2:3074:73","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1004:630":{"id":"0:1004:630","crate_id":0,"name":"fmt","span":{"filename":"src/memmem/mod.rs","begin":[575,16],"end":[575,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9976:126","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9965:187","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3325:8973":{"id":"2:3325:8973","crate_id":2,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3327:163","2:3328:1196"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13103:2248":{"id":"2:13103:2248","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12202:2728"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10029:8864":{"id":"2:10029:8864","crate_id":2,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10030:630"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:977:1983":{"id":"0:977:1983","crate_id":0,"name":"FindRevIter","span":{"filename":"src/memmem/mod.rs","begin":[376,0],"end":[382,1]},"visibility":"public","docs":"An iterator over non-overlapping substring matches in reverse.\n\nMatches are reported by the byte offset at which they begin.\n\n`'h` is the lifetime of the haystack while `'n` is the lifetime of the\nneedle.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:629","a:2:3218:8485-0:977:1983","a:2:3177:192-0:977:1983","a:2:9036:8728-0:977:1983","a:2:9037:8727-0:977:1983","a:2:3189:199-0:977:1983","b:2:8111-0:977:1983","b:2:3121-0:977:1983","b:2:2783-0:977:1983","b:2:3106-0:977:1983","b:2:3116-0:977:1983","b:2:3906-0:977:1983","b:2:3110-0:977:1983","b:2:2780-0:977:1983","0:983","0:634"]}},"b:2:8111-0:966:1977":{"id":"b:2:8111-0:966:1977","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8302:149","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8107:143","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:966:1977","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["2:8113:1801","2:8114:8903","2:8115:736"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"1:6353:9321":{"id":"1:6353:9321","crate_id":1,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6354:56519","1:6355:13122","1:6356:56520","1:6357:56521","1:6358:56522","1:6359:56523"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10368:9225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:6090:202":{"id":"5:6090:202","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6091:8949"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3155:108":{"id":"2:3155:108","crate_id":2,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3156:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:633:1659":{"id":"0:633:1659","crate_id":0,"name":"into_owned","span":{"filename":"src/memmem/mod.rs","begin":[403,4],"end":[409,5]},"visibility":"public","docs":"Convert this iterator into its owned variant, such that it no longer\nborrows the finder and needle.\n\nIf this is already an owned iterator, then this is a no-op. Otherwise,\nthis copies the needle.\n\nThis is only available when the `std` feature is enabled.","links":{},"attrs":["#[cfg(feature = \"std\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:977:1983","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'static"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3304:8968":{"id":"2:3304:8968","crate_id":2,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3306:163","2:3307:325"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:648:280":{"id":"0:648:280","crate_id":0,"name":"as_ref","span":{"filename":"src/memmem/mod.rs","begin":[546,4],"end":[548,5]},"visibility":"public","docs":"Convert this finder into its borrowed variant.\n\nThis is primarily useful if your finder is owned and you'd like to\nstore its borrowed variant in some intermediate data structure.\n\nNote that the lifetime parameter of the returned finder is tied to the\nlifetime of `self`, and may be shorter than the `'n` lifetime of the\nneedle itself. Namely, a finder's needle can be either borrowed or\nowned, so the lifetime of the needle returned must necessarily be the\nshorter of the two.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:987:1978","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:177":{"id":"0:177","crate_id":0,"name":null,"span":{"filename":"src/memchr/iter.rs","begin":[129,0],"end":[146,1]},"visibility":{"restricted":{"parent":"0:115:747","path":"::memchr::iter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:179:888"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3116-0:153:1535":{"id":"b:2:3116-0:153:1535","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3090:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3086:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1535","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3119:119","2:3120:1373"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6757:9203":{"id":"1:6757:9203","crate_id":1,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6758:57244"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:619":{"id":"0:619","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[318,0],"end":[345,1]},"visibility":{"restricted":{"parent":"0:300:1538","path":"::memmem"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:966:1977","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["0:623:1659"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:647:1659":{"id":"0:647:1659","crate_id":0,"name":"into_owned","span":{"filename":"src/memmem/mod.rs","begin":[531,4],"end":[533,5]},"visibility":"public","docs":"Convert this finder into its owned variant, such that it no longer\nborrows the needle.\n\nIf this is already an owned finder, then this is a no-op. Otherwise,\nthis copies the needle.\n\nThis is only available when the `std` feature is enabled.","links":{},"attrs":["#[cfg(feature = \"std\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:987:1978","args":{"angle_bracketed":{"args":[{"lifetime":"'static"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3189:199-0:977:1983":{"id":"a:2:3189:199-0:977:1983","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3189:199","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:977:1983","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:6331:9322":{"id":"1:6331:9322","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6332:9584","1:6333:9585","1:6334:13639","1:6335:57317","1:6337:57321","1:6339:57318","1:6340:57319","1:6342:57320"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10368:9225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13177:59299":{"id":"2:13177:59299","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"`DoubleEndedIterator`":"2:8151:112","str::rmatch_indices":"1:15674:3258","prim@char":"1:15669:3253","self::pattern":"2:12731:9680"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:49163:9912","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:995:630":{"id":"0:995:630","crate_id":0,"name":"fmt","span":{"filename":"src/memmem/mod.rs","begin":[448,16],"end":[448,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9976:126","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9965:187","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:656:1982":{"id":"0:656:1982","crate_id":0,"name":"rfind_iter","span":{"filename":"src/memmem/mod.rs","begin":[646,4],"end":[651,5]},"visibility":"public","docs":"Returns a reverse iterator over all occurrences of a substring in a\nhaystack.\n\n# Complexity\n\nThis routine is guaranteed to have worst case linear time complexity\nwith respect to both the needle and the haystack. That is, this runs\nin `O(needle.len() + haystack.len())` time.\n\nThis routine is also guaranteed to have worst case constant space\ncomplexity.\n\n# Examples\n\nBasic usage:\n\n```\nuse memchr::memmem::FinderRev;\n\nlet haystack = b\"foo bar foo baz foo\";\nlet finder = FinderRev::new(b\"foo\");\nlet mut it = finder.rfind_iter(haystack);\nassert_eq!(Some(16), it.next());\nassert_eq!(Some(8), it.next());\nassert_eq!(Some(0), it.next());\nassert_eq!(None, it.next());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":"'h","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:977:1983","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'h","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3245:8957":{"id":"2:3245:8957","crate_id":2,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3247:163","2:3248:241"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9036:8728-0:153:1535":{"id":"a:2:9036:8728-0:153:1535","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9036:8728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1535","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:9193:9238":{"id":"1:9193:9238","crate_id":1,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9194:56477","1:9195:56478","1:9196:56479","1:9197:56480","1:9198:9950","1:9199:39630","1:9200:56476"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10368:9225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13180:59300":{"id":"2:13180:59300","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12731:9680","prim@char":"1:15669:3253","`DoubleEndedIterator`":"2:8151:112","str::match_indices":"1:15674:3258"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:49181:9913","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12756:9679","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13122:32650":{"id":"2:13122:32650","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"1:15674:3258"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:49287:9918","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6755:9199":{"id":"1:6755:9199","crate_id":1,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6756:56495"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3319:8972":{"id":"2:3319:8972","crate_id":2,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3321:163","2:3322:1193"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:4600:9673":{"id":"2:4600:9673","crate_id":2,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4601:1801","2:4602:58215","2:4603:1802"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:161:888":{"id":"0:161:888","crate_id":0,"name":"new","span":{"filename":"src/memchr/iter.rs","begin":[84,4],"end":[91,5]},"visibility":"public","docs":"Creates a new iterator that yields all positions of needle in haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["needle1",{"kind":"primitive","inner":"u8"}],["needle2",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1535","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8176:3381":{"id":"2:8176:3381","crate_id":2,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8177:761","2:8178:1694"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8302:149","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:5767:59947":{"id":"5:5767:59947","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:8069:196"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8069:196","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10016:103":{"id":"2:10016:103","crate_id":2,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10017:630"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:832:382":{"id":"0:832:382","crate_id":0,"name":"clone","span":{"filename":"src/memmem/prefilter/mod.rs","begin":[168,9],"end":[168,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4602:9262":{"id":"1:4602:9262","crate_id":1,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4603:54968","1:4604:40105","1:4605:54969","1:4606:54970"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:284:1526":{"id":"0:284:1526","crate_id":0,"name":"memchr3_iter","span":{"filename":"src/memchr/mod.rs","begin":[29,0],"end":[36,1]},"visibility":"public","docs":"An iterator over all occurrences of the needles in a haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["needle1",{"kind":"primitive","inner":"u8"}],["needle2",{"kind":"primitive","inner":"u8"}],["needle3",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1536","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:12756:9679":{"id":"2:12756:9679","crate_id":2,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:12758:1803","2:12759:58263","2:12760:58264"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Searcher","id":"2:12750:2031","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13118:53360":{"id":"2:13118:53360","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"1:15674:3258"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2783-0:966:1977":{"id":"b:2:2783-0:966:1977","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2777:9715","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:966:1977","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["2:2785:53237"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5543:9242":{"id":"1:5543:9242","crate_id":1,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5544:56738","1:5545:10172"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10368:9225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3906-0:137:1534":{"id":"b:2:3906-0:137:1534","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3904:67","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1534","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3908:1385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2875:166":{"id":"2:2875:166","crate_id":2,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2877:966","2:2878:794","2:2879:760","2:2880:683","2:2881:666"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2829:165","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3116-0:966:1977":{"id":"b:2:3116-0:966:1977","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3090:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3086:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:966:1977","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["2:3119:119","2:3120:1373"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13120:9706":{"id":"2:13120:9706","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:15669:3253"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:48989:9904","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2780-0:996:1984":{"id":"b:2:2780-0:996:1984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2774:92","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:996:1984","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["2:2782:3323"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13144:53367":{"id":"2:13144:53367","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"str::split_whitespace":"1:15674:3258","prim@char":"1:15669:3253","str::rsplit":"1:15674:3258","self::pattern":"2:12731:9680","`DoubleEndedIterator`":"2:8151:112"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:49013:9088","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13215:53261":{"id":"2:13215:53261","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:185":{"id":"0:185","crate_id":0,"name":null,"span":{"filename":"src/memchr/iter.rs","begin":[165,0],"end":[173,1]},"visibility":{"restricted":{"parent":"0:115:747","path":"::memchr::iter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["advance_back_by","rfind","try_rfold","nth_back","rfold"],"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedIterator","id":"2:8151:112","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:187:1803"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:644:1974":{"id":"0:644:1974","crate_id":0,"name":"find_iter","span":{"filename":"src/memmem/mod.rs","begin":[515,4],"end":[520,5]},"visibility":"public","docs":"Returns an iterator over all occurrences of a substring in a haystack.\n\n# Complexity\n\nThis routine is guaranteed to have worst case linear time complexity\nwith respect to both the needle and the haystack. That is, this runs\nin `O(needle.len() + haystack.len())` time.\n\nThis routine is also guaranteed to have worst case constant space\ncomplexity.\n\n# Examples\n\nBasic usage:\n\n```\nuse memchr::memmem::Finder;\n\nlet haystack = b\"foo bar foo baz foo\";\nlet finder = Finder::new(b\"foo\");\nlet mut it = finder.find_iter(haystack);\nassert_eq!(Some(0), it.next());\nassert_eq!(Some(8), it.next());\nassert_eq!(Some(16), it.next());\nassert_eq!(None, it.next());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":"'h","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:966:1977","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'h","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:996:1984":{"id":"0:996:1984","crate_id":0,"name":"FinderRev","span":{"filename":"src/memmem/mod.rs","begin":[576,0],"end":[578,1]},"visibility":"public","docs":"A single substring reverse searcher fixed to a particular needle.\n\nThe purpose of this type is to permit callers to construct a substring\nsearcher that can be used to search haystacks without the overhead of\nconstructing the searcher in the first place. This is a somewhat niche\nconcern when it's necessary to re-use the same needle to search multiple\ndifferent haystacks with as little overhead as possible. In general,\nusing [`rfind`] is good enough, but `FinderRev` is useful when you can\nmeaningfully observe searcher construction time in a profile.\n\nWhen the `std` feature is enabled, then this type has an `into_owned`\nversion which permits building a `FinderRev` that is not connected to\nthe lifetime of its needle.","links":{"`rfind`":"0:618:2000"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:650","a:2:3218:8485-0:996:1984","a:2:3177:192-0:996:1984","a:2:9036:8728-0:996:1984","a:2:9037:8727-0:996:1984","a:2:3189:199-0:996:1984","b:2:3121-0:996:1984","b:2:2783-0:996:1984","b:2:3106-0:996:1984","b:2:3116-0:996:1984","b:2:3906-0:996:1984","b:2:3110-0:996:1984","b:2:2780-0:996:1984","b:5:776-0:996:1984","0:999","0:1002"]}},"0:654:2000":{"id":"0:654:2000","crate_id":0,"name":"rfind","span":{"filename":"src/memmem/mod.rs","begin":[614,4],"end":[616,5]},"visibility":"public","docs":"Returns the index of the last occurrence of this needle in the given\nhaystack.\n\nThe haystack may be any type that can be cheaply converted into a\n`&[u8]`. This includes, but is not limited to, `&str` and `&[u8]`.\n\n# Complexity\n\nThis routine is guaranteed to have worst case linear time complexity\nwith respect to both the needle and the haystack. That is, this runs\nin `O(needle.len() + haystack.len())` time.\n\nThis routine is also guaranteed to have worst case constant space\ncomplexity.\n\n# Examples\n\nBasic usage:\n\n```\nuse memchr::memmem::FinderRev;\n\nlet haystack = b\"foo bar baz\";\nassert_eq!(Some(0), FinderRev::new(\"foo\").rfind(haystack));\nassert_eq!(Some(4), FinderRev::new(\"bar\").rfind(haystack));\nassert_eq!(None, FinderRev::new(\"quux\").rfind(haystack));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["haystack",{"kind":"generic","inner":"B"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47055:158","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsRef","id":"2:3074:73","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3177:192-0:170:1536":{"id":"a:2:3177:192-0:170:1536","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3177:192","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13119:9939":{"id":"2:13119:9939","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:15669:3253"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:48983:9903","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9036:8728-0:977:1983":{"id":"a:2:9036:8728-0:977:1983","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9036:8728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:977:1983","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3260:8958":{"id":"2:3260:8958","crate_id":2,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3262:163","2:3263:529"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3121-0:170:1536":{"id":"b:2:3121-0:170:1536","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3080:141","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3090:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3124:119","2:3125:1372"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3109:3200":{"id":"2:3109:3200","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3083:127"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3116-0:996:1984":{"id":"b:2:3116-0:996:1984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3090:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3086:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:996:1984","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["2:3119:119","2:3120:1373"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3110-0:153:1535":{"id":"b:2:3110-0:153:1535","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3083:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1535","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3112:651"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13221:59312":{"id":"2:13221:59312","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:15669:3253"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:49330:9922","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:649:1669":{"id":"0:649:1669","crate_id":0,"name":"needle","span":{"filename":"src/memmem/mod.rs","begin":[557,4],"end":[559,5]},"visibility":"public","docs":"Returns the needle that this finder searches for.\n\nNote that the lifetime of the needle returned is tied to the lifetime\nof the finder, and may be shorter than the `'n` lifetime. Namely, a\nfinder's needle can be either borrowed or owned, so the lifetime of the\nneedle returned must necessarily be the shorter of the two.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13174:59298":{"id":"2:13174:59298","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"prim@char":"1:15669:3253","str::matches":"1:15674:3258","self::pattern":"2:12731:9680","`DoubleEndedIterator`":"2:8151:112"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:49235:9916","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12756:9679","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13185:59302":{"id":"2:13185:59302","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3218:8485-0:137:1534":{"id":"a:2:3218:8485-0:137:1534","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3218:8485","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1534","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:183:890":{"id":"0:183:890","crate_id":0,"name":"next","span":{"filename":"src/memchr/iter.rs","begin":[152,4],"end":[157,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47055:158","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10239:138":{"id":"2:10239:138","crate_id":2,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10240:622","2:10241:3335","2:10242:57798","2:10243:57799","2:10244:57800","2:10245:57801","2:10246:57802","2:10247:57803","2:10248:57804","2:10249:57805","2:10250:57806","2:10251:57807","2:10252:57808","2:10253:57809","2:10254:57810","2:10255:1484"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:639":{"id":"0:639","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[453,0],"end":[560,1]},"visibility":{"restricted":{"parent":"0:300:1538","path":"::memmem"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:987:1978","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["0:641:888","0:643:1993","0:644:1974","0:647:1659","0:648:280","0:649:1669"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3339:8976":{"id":"2:3339:8976","crate_id":2,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3341:331"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:165:890":{"id":"0:165:890","crate_id":0,"name":"next","span":{"filename":"src/memchr/iter.rs","begin":[98,4],"end":[100,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47055:158","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13165:59296":{"id":"2:13165:59296","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47055:158","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3090:204":{"id":"2:3090:204","crate_id":2,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3092:119","2:3093:1372"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13843:133":{"id":"2:13843:133","crate_id":2,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13844:253","2:13845:491","2:13846:256","2:13847:1048"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3266:8961":{"id":"2:3266:8961","crate_id":2,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3268:163","2:3269:1071"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13153:59294":{"id":"2:13153:59294","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"str::rsplit_terminator":"1:15674:3258","self::pattern":"2:12731:9680","prim@char":"1:15669:3253","`DoubleEndedIterator`":"2:8151:112","str::split":"1:15674:3258"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:49063:9908","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:456:59":{"id":"0:456:59","crate_id":0,"name":"default","span":{"filename":"src/memmem/prefilter/mod.rs","begin":[180,4],"end":[182,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13094":{"id":"2:13094","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:12191:1300","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:13095:761","2:13096:1694","2:13097:59288","2:13098:59289","2:13100:59290","2:13103:2248","2:13104:59291","2:13105:279","2:13106:53341","2:13107:2757","2:13109:13744","2:13111:53339","2:13113:53340","2:13115:9408","2:13116:59292","2:13117:1796","2:13118:53360","2:13119:9939","2:13120:9706","2:13121:1651","2:13122:32650","2:13123:32640","2:13124:10425","2:13125:59293","2:13126:32635","2:13127:3002","2:13130:53376","2:13133:53377","2:13136:1993","2:13140:2000","2:13144:53367","2:13147:32507","2:13150:53370","2:13153:59294","2:13156:59295","2:13159:53372","2:13162:53374","2:13165:59296","2:13168:59297","2:13171:3332","2:13174:59298","2:13177:59299","2:13180:59300","2:13183:59301","2:13185:59302","2:13187:59303","2:13189:59304","2:13190:59305","2:13191:59306","2:13194:59307","2:13197:20461","2:13200:53378","2:13203:59308","2:13206:59309","2:13209:59310","2:13212:9829","2:13214:10080","2:13215:53261","2:13216:53262","2:13217:53263","2:13218:59311","2:13220:9328","2:13221:59312"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3426:123":{"id":"2:3426:123","crate_id":2,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3428:351"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"2:3429:124","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3463:8989":{"id":"2:3463:8989","crate_id":2,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3465:213","2:3466:188","2:3467:58905"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13191:59306":{"id":"2:13191:59306","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"self::pattern":"2:12731:9680","prim@char":"1:15669:3253"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedSearcher","id":"2:12761:9683","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:166:1802":{"id":"0:166:1802","crate_id":0,"name":"size_hint","span":{"filename":"src/memchr/iter.rs","begin":[103,4],"end":[105,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47055:158","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13444:130":{"id":"2:13444:130","crate_id":2,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13445:163","2:13446:982"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13117:1796":{"id":"2:13117:1796","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"1:15674:3258"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10025:8862":{"id":"2:10025:8862","crate_id":2,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10026:630"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9036:8728-0:966:1977":{"id":"a:2:9036:8728-0:966:1977","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9036:8728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:966:1977","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:286:1530":{"id":"0:286:1530","crate_id":0,"name":"memrchr2_iter","span":{"filename":"src/memchr/mod.rs","begin":[46,0],"end":[52,1]},"visibility":"public","docs":"An iterator over all occurrences of the needles in a haystack, in reverse.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["needle1",{"kind":"primitive","inner":"u8"}],["needle2",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Rev","id":"2:46290:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1535","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:300:1538":{"id":"0:300:1538","crate_id":0,"name":"memmem","span":{"filename":"src/memmem/mod.rs","begin":[1,0],"end":[1321,1]},"visibility":"public","docs":"This module provides forward and reverse substring search routines.\n\nUnlike the standard library's substring search routines, these work on\narbitrary bytes. For all non-empty needles, these routines will report exactly\nthe same values as the corresponding routines in the standard library. For\nthe empty needle, the standard library reports matches only at valid UTF-8\nboundaries, where as these routines will report matches at every position.\n\nOther than being able to work on arbitrary bytes, the primary reason to prefer\nthese routines over the standard library routines is that these will generally\nbe faster. In some cases, significantly so.\n\n# Example: iterating over substring matches\n\nThis example shows how to use [`find_iter`] to find occurrences of a substring\nin a haystack.\n\n```\nuse memchr::memmem;\n\nlet haystack = b\"foo bar foo baz foo\";\n\nlet mut it = memmem::find_iter(haystack, \"foo\");\nassert_eq!(Some(0), it.next());\nassert_eq!(Some(8), it.next());\nassert_eq!(Some(16), it.next());\nassert_eq!(None, it.next());\n```\n\n# Example: iterating over substring matches in reverse\n\nThis example shows how to use [`rfind_iter`] to find occurrences of a substring\nin a haystack starting from the end of the haystack.\n\n**NOTE:** This module does not implement double ended iterators, so reverse\nsearches aren't done by calling `rev` on a forward iterator.\n\n```\nuse memchr::memmem;\n\nlet haystack = b\"foo bar foo baz foo\";\n\nlet mut it = memmem::rfind_iter(haystack, \"foo\");\nassert_eq!(Some(16), it.next());\nassert_eq!(Some(8), it.next());\nassert_eq!(Some(0), it.next());\nassert_eq!(None, it.next());\n```\n\n# Example: repeating a search for the same needle\n\nIt may be possible for the overhead of constructing a substring searcher to be\nmeasurable in some workloads. In cases where the same needle is used to search\nmany haystacks, it is possible to do construction once and thus to avoid it for\nsubsequent searches. This can be done with a [`Finder`] (or a [`FinderRev`] for\nreverse searches).\n\n```\nuse memchr::memmem;\n\nlet finder = memmem::Finder::new(\"foo\");\n\nassert_eq!(Some(4), finder.find(b\"baz foo quux\"));\nassert_eq!(None, finder.find(b\"quux baz bar\"));\n```","links":{"`Finder`":"0:987:1978","`rfind_iter`":"0:613:1982","`FinderRev`":"0:996:1984","`find_iter`":"0:609:1974"},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:826:1912","0:609:1974","0:613:1982","0:617:1993","0:618:2000","0:966:1977","0:977:1983","0:987:1978","0:996:1984","0:1005:2033"]}},"0:294:1528":{"id":"0:294:1528","crate_id":0,"name":"memrchr","span":{"filename":"src/memchr/mod.rs","begin":[260,0],"end":[299,1]},"visibility":"public","docs":"Search for the last occurrence of a byte in a slice.\n\nThis returns the index corresponding to the last occurrence of `needle` in\n`haystack`, or `None` if one is not found. If an index is returned, it is\nguaranteed to be less than `usize::MAX`.\n\nWhile this is operationally the same as something like\n`haystack.iter().rposition(|&b| b == needle)`, `memrchr` will use a highly\noptimized routine that can be up to an order of magnitude faster in some\ncases.\n\n# Example\n\nThis shows how to find the last position of a byte in a byte string.\n\n```\nuse memchr::memrchr;\n\nlet haystack = b\"the quick brown fox\";\nassert_eq!(memrchr(b'o', haystack), Some(17));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["needle",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47055:158","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"a:2:3177:192-0:826:1912":{"id":"a:2:3177:192-0:826:1912","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3177:192","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:153:1535":{"id":"0:153:1535","crate_id":0,"name":"Memchr2","span":{"filename":"src/memchr/iter.rs","begin":[72,0],"end":[79,1]},"visibility":"public","docs":"An iterator for `memchr2`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:159","a:2:3218:8485-0:153:1535","a:2:3177:192-0:153:1535","a:2:9036:8728-0:153:1535","a:2:9037:8727-0:153:1535","a:2:3189:199-0:153:1535","b:2:8111-0:153:1535","b:2:3121-0:153:1535","b:2:2783-0:153:1535","b:2:3106-0:153:1535","b:2:3116-0:153:1535","b:2:3906-0:153:1535","b:2:3110-0:153:1535","b:2:2780-0:153:1535","0:162","0:167"]}},"0:623:1659":{"id":"0:623:1659","crate_id":0,"name":"into_owned","span":{"filename":"src/memmem/mod.rs","begin":[337,4],"end":[344,5]},"visibility":"public","docs":"Convert this iterator into its owned variant, such that it no longer\nborrows the finder and needle.\n\nIf this is already an owned iterator, then this is a no-op. Otherwise,\nthis copies the needle.\n\nThis is only available when the `std` feature is enabled.","links":{},"attrs":["#[cfg(feature = \"std\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:966:1977","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'static"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2780-0:977:1983":{"id":"b:2:2780-0:977:1983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2774:92","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:977:1983","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["2:2782:3323"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3485:8981":{"id":"2:3485:8981","crate_id":2,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3487:722"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"2:3481:8980","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:4527:9226":{"id":"1:4527:9226","crate_id":1,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4528:9518","1:4529:57408","1:4531:57409","1:4532:57410","1:4533:9259","1:4534:57411","1:4535:57304","1:4537:57412","1:4538:8921","1:4539:1651","1:4540:2744","1:4542:8474"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13136:1993":{"id":"2:13136:1993","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"self::pattern":"2:12731:9680","prim@char":"1:15669:3253","`None`":"2:47055:158"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47055:158","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3110-0:170:1536":{"id":"b:2:3110-0:170:1536","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3083:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3112:651"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3621:8984":{"id":"2:3621:8984","crate_id":2,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RangeBounds","id":"2:3552:8983","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2780-0:170:1536":{"id":"b:2:2780-0:170:1536","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2774:92","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:2782:3323"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:149:1802":{"id":"0:149:1802","crate_id":0,"name":"size_hint","span":{"filename":"src/memchr/iter.rs","begin":[59,4],"end":[61,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47055:158","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:8111-0:137:1534":{"id":"b:2:8111-0:137:1534","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8302:149","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8107:143","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1534","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:8113:1801","2:8114:8903","2:8115:736"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:296:1529":{"id":"0:296:1529","crate_id":0,"name":"memrchr2","span":{"filename":"src/memchr/mod.rs","begin":[325,0],"end":[352,1]},"visibility":"public","docs":"Like `memrchr`, but searches for either of two bytes instead of just one.\n\nThis returns the index corresponding to the last occurrence of `needle1` or\nthe last occurrence of `needle2` in `haystack` (whichever occurs later), or\n`None` if neither one is found. If an index is returned, it is guaranteed\nto be less than `usize::MAX`.\n\nWhile this is operationally the same as something like\n`haystack.iter().rposition(|&b| b == needle1 || b == needle2)`, `memrchr2`\nwill use a highly optimized routine that can be up to an order of magnitude\nfaster in some cases.\n\n# Example\n\nThis shows how to find the last position of either of two bytes in a byte\nstring.\n\n```\nuse memchr::memrchr2;\n\nlet haystack = b\"the quick brown fox\";\nassert_eq!(memrchr2(b'k', b'q', haystack), Some(8));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["needle1",{"kind":"primitive","inner":"u8"}],["needle2",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47055:158","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:2785:53237":{"id":"2:2785:53237","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2865:159":{"id":"2:2865:159","crate_id":2,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2866:388","2:2867:2015","2:2868:1768","2:2869:8895"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2834:116","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2875:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:999":{"id":"0:999","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[575,9],"end":[575,14]},"visibility":{"restricted":{"parent":"0:300:1538","path":"::memmem"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2799:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:996:1984","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["0:1001:382"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:455":{"id":"0:455","crate_id":0,"name":null,"span":{"filename":"src/memmem/prefilter/mod.rs","begin":[179,0],"end":[183,1]},"visibility":{"restricted":{"parent":"0:354:1911","path":"::memmem::prefilter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Default","id":"2:3155:108","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:456:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13107:2757":{"id":"2:13107:2757","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:47055:158"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47055:158","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10632:194","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10632:194","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3116-0:826:1912":{"id":"b:2:3116-0:826:1912","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3090:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3086:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3119:119","2:3120:1373"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:9966:8857":{"id":"2:9966:8857","crate_id":2,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:9967:1484","2:9968:58862","2:9970:54834"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3121-0:966:1977":{"id":"b:2:3121-0:966:1977","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3080:141","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3090:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:966:1977","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["2:3124:119","2:3125:1372"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3116-0:987:1978":{"id":"b:2:3116-0:987:1978","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3090:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3086:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:987:1978","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["2:3119:119","2:3120:1373"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:992:382":{"id":"0:992:382","crate_id":0,"name":"clone","span":{"filename":"src/memmem/mod.rs","begin":[448,9],"end":[448,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:987:1978","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9036:8728":{"id":"2:9036:8728","crate_id":2,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10023:111":{"id":"2:10023:111","crate_id":2,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10024:630"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3120:1373":{"id":"2:3120:1373","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47182:187","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3090:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3481:8980":{"id":"2:3481:8980","crate_id":2,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3483:163","2:3484:721"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:8577:3377":{"id":"2:8577:3377","crate_id":2,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8302:149","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2783-0:987:1978":{"id":"b:2:2783-0:987:1978","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2777:9715","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:987:1978","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["2:2785:53237"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12670:9435":{"id":"2:12670:9435","crate_id":2,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12671:118","2:12672:57578"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3288:8964":{"id":"2:3288:8964","crate_id":2,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3290:530"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:827:156":{"id":"0:827:156","crate_id":0,"name":"None","span":{"filename":"src/memmem/prefilter/mod.rs","begin":[172,4],"end":[172,8]},"visibility":"default","docs":"Never used a prefilter in substring search.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"a:2:3189:199-0:1005:2033":{"id":"a:2:3189:199-0:1005:2033","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3189:199","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1005:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3177:192-0:153:1535":{"id":"a:2:3177:192-0:153:1535","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3177:192","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1535","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13126:32635":{"id":"2:13126:32635","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:49305:9920","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3110-0:996:1984":{"id":"b:2:3110-0:996:1984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3083:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:996:1984","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["2:3112:651"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:22543:9240":{"id":"2:22543:9240","crate_id":2,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22533:9225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:2829:165":{"id":"2:2829:165","crate_id":2,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2831:575","2:2832:875"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"5:5518:10088":{"id":"5:5518:10088","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5520:163","5:5521:33538"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3189:199-0:153:1535":{"id":"a:2:3189:199-0:153:1535","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3189:199","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1535","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3177:192-0:987:1978":{"id":"a:2:3177:192-0:987:1978","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3177:192","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:987:1978","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1008:382":{"id":"0:1008:382","crate_id":0,"name":"clone","span":{"filename":"src/memmem/mod.rs","begin":[698,9],"end":[698,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1005:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3255:8959":{"id":"2:3255:8959","crate_id":2,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3257:163","2:3258:860"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:973":{"id":"0:973","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[310,9],"end":[310,14]},"visibility":{"restricted":{"parent":"0:300:1538","path":"::memmem"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10016:103","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:966:1977","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["0:976:630"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:664:2034":{"id":"0:664:2034","crate_id":0,"name":"build_forward","span":{"filename":"src/memmem/mod.rs","begin":[711,4],"end":[716,5]},"visibility":"public","docs":"Build a forward finder using the given needle from the current\nsettings.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["needle",{"kind":"borrowed_ref","inner":{"lifetime":"'n","mutable":false,"type":{"kind":"generic","inner":"B"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:987:1978","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsRef","id":"2:3074:73","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3106-0:987:1978":{"id":"b:2:3106-0:987:1978","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3083:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3080:141","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:987:1978","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["2:3109:3200"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3189:199-0:966:1977":{"id":"a:2:3189:199-0:966:1977","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3189:199","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:966:1977","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9037:8727-0:826:1912":{"id":"a:2:9037:8727-0:826:1912","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9037:8727","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:779:8947":{"id":"5:779:8947","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2780-0:1005:2033":{"id":"b:2:2780-0:1005:2033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2774:92","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1005:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2782:3323"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3716:8992":{"id":"2:3716:8992","crate_id":2,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3110-0:826:1912":{"id":"b:2:3110-0:826:1912","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3083:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3112:651"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2777:9715":{"id":"2:2777:9715","crate_id":2,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2779:53237"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2774:92","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3106-0:153:1535":{"id":"b:2:3106-0:153:1535","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3083:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3080:141","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1535","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3109:3200"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:298:1531":{"id":"0:298:1531","crate_id":0,"name":"memrchr3","span":{"filename":"src/memchr/mod.rs","begin":[378,0],"end":[410,1]},"visibility":"public","docs":"Like `memrchr`, but searches for any of three bytes instead of just one.\n\nThis returns the index corresponding to the last occurrence of `needle1`,\nthe last occurrence of `needle2`, or the last occurrence of `needle3` in\n`haystack` (whichever occurs later), or `None` if none are found. If an\nindex is returned, it is guaranteed to be less than `usize::MAX`.\n\nWhile this is operationally the same as something like\n`haystack.iter().rposition(|&b| b == needle1 || b == needle2 ||\nb == needle3)`, `memrchr3` will use a highly optimized routine that can be\nup to an order of magnitude faster in some cases.\n\n# Example\n\nThis shows how to find the last position of any of three bytes in a byte\nstring.\n\n```\nuse memchr::memrchr3;\n\nlet haystack = b\"the quick brown fox\";\nassert_eq!(memrchr3(b'k', b'q', b'e', haystack), Some(8));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["needle1",{"kind":"primitive","inner":"u8"}],["needle2",{"kind":"primitive","inner":"u8"}],["needle3",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47055:158","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:150":{"id":"0:150","crate_id":0,"name":null,"span":{"filename":"src/memchr/iter.rs","begin":[64,0],"end":[69,1]},"visibility":{"restricted":{"parent":"0:115:747","path":"::memchr::iter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["advance_back_by","rfind","try_rfold","nth_back","rfold"],"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedIterator","id":"2:8151:112","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1534","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:152:1803"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3077:72":{"id":"2:3077:72","crate_id":2,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3079:3001"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:10229:134":{"id":"2:10229:134","crate_id":2,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10230:685","2:10232:57257"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13459:142":{"id":"2:13459:142","crate_id":2,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13460:163","2:13461:142","2:13462:735"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3348:8978":{"id":"2:3348:8978","crate_id":2,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3350:1197"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:8111-0:977:1983":{"id":"b:2:8111-0:977:1983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8302:149","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8107:143","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:977:1983","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["2:8113:1801","2:8114:8903","2:8115:736"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"2:8103:128":{"id":"2:8103:128","crate_id":2,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8105:654"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:4584:8857":{"id":"1:4584:8857","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4585:3335","1:4586:54830","1:4588:54831","1:4589:10347","1:4590:54832","1:4591:54833","1:4592:54834","1:4601:8921"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10037:8867":{"id":"2:10037:8867","crate_id":2,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10038:630"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10033:171":{"id":"2:10033:171","crate_id":2,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10034:630"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:180":{"id":"0:180","crate_id":0,"name":null,"span":{"filename":"src/memchr/iter.rs","begin":[148,0],"end":[163,1]},"visibility":{"restricted":{"parent":"0:115:747","path":"::memchr::iter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["skip","eq_by","gt","min","cloned","reduce","partition","flatten","min_by_key","filter_map","any","nth","chain","is_sorted","cycle","collect","try_reduce","partition_in_place","take","fuse","position","enumerate","peekable","step_by","max_by","lt","ge","eq","all","is_sorted_by","sum","find_map","is_partitioned","inspect","max_by_key","skip_while","rposition","intersperse","partial_cmp","is_sorted_by_key","product","ne","try_find","try_fold","max","zip","by_ref","take_while","intersperse_with","size_hint","cmp","le","__iterator_get_unchecked","cmp_by","map","unzip","try_for_each","try_collect","count","map_while","for_each","last","flat_map","partial_cmp_by","copied","fold","collect_into","scan","min_by","filter","rev","advance_by","find"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8302:149","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:182:1801","0:183:890","0:184:1802"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:772:201":{"id":"5:772:201","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:773:1645","5:774:8947","5:775:8948"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13206:59309":{"id":"2:13206:59309","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:15669:3253","self::pattern":"2:12731:9680"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2782:3323":{"id":"2:2782:3323","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3396:109":{"id":"2:3396:109","crate_id":2,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3397:200","2:3398:514"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3908:1385":{"id":"2:3908:1385","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:45621:9234","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1002":{"id":"0:1002","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[575,16],"end":[575,21]},"visibility":{"restricted":{"parent":"0:300:1538","path":"::memmem"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10016:103","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:996:1984","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["0:1004:630"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3218:8485-0:153:1535":{"id":"a:2:3218:8485-0:153:1535","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3218:8485","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1535","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13109:13744":{"id":"2:13109:13744","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:47055:158"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47055:158","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10632:194","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10632:194","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:187:1803":{"id":"0:187:1803","crate_id":0,"name":"next_back","span":{"filename":"src/memchr/iter.rs","begin":[167,4],"end":[172,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47055:158","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:8302:149","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:634":{"id":"0:634","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[412,0],"end":[433,1]},"visibility":{"restricted":{"parent":"0:300:1538","path":"::memmem"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["skip","eq_by","gt","min","cloned","reduce","partition","flatten","min_by_key","filter_map","any","nth","chain","is_sorted","cycle","collect","try_reduce","partition_in_place","take","fuse","position","enumerate","peekable","step_by","max_by","lt","ge","eq","all","is_sorted_by","sum","find_map","is_partitioned","inspect","max_by_key","skip_while","rposition","intersperse","partial_cmp","is_sorted_by_key","product","ne","try_find","try_fold","max","zip","by_ref","take_while","intersperse_with","size_hint","cmp","le","__iterator_get_unchecked","cmp_by","map","unzip","try_for_each","try_collect","count","map_while","for_each","last","flat_map","partial_cmp_by","copied","fold","collect_into","scan","min_by","filter","rev","advance_by","find"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8302:149","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:977:1983","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["0:637:1801","0:638:890"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:776-0:1005:2033":{"id":"b:5:776-0:1005:2033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2799:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1005:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:778:1645","5:779:8947","5:780:8948"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3218:8485-0:1005:2033":{"id":"a:2:3218:8485-0:1005:2033","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3218:8485","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1005:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13106:53341":{"id":"2:13106:53341","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:15683:3267"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1001:382":{"id":"0:1001:382","crate_id":0,"name":"clone","span":{"filename":"src/memmem/mod.rs","begin":[575,9],"end":[575,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:996:1984","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:624":{"id":"0:624","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[347,0],"end":[367,1]},"visibility":{"restricted":{"parent":"0:300:1538","path":"::memmem"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["skip","eq_by","gt","min","cloned","reduce","partition","flatten","min_by_key","filter_map","any","nth","chain","is_sorted","cycle","collect","try_reduce","partition_in_place","take","fuse","position","enumerate","peekable","step_by","max_by","lt","ge","eq","all","is_sorted_by","sum","find_map","is_partitioned","inspect","max_by_key","skip_while","rposition","intersperse","partial_cmp","is_sorted_by_key","product","ne","try_find","try_fold","max","zip","by_ref","take_while","intersperse_with","size_hint","cmp","le","__iterator_get_unchecked","cmp_by","map","unzip","try_for_each","try_collect","count","map_while","for_each","last","flat_map","partial_cmp_by","copied","fold","collect_into","scan","min_by","filter","rev","advance_by","find"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8302:149","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:966:1977","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["0:627:1801","0:628:890"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2774:92":{"id":"2:2774:92","crate_id":2,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2776:3323"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"a:2:9036:8728-0:170:1536":{"id":"a:2:9036:8728-0:170:1536","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9036:8728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9036:8728-0:996:1984":{"id":"a:2:9036:8728-0:996:1984","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9036:8728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:996:1984","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8107:143":{"id":"2:8107:143","crate_id":2,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8108:1801","2:8109:8903","2:8110:736"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:288:1522":{"id":"0:288:1522","crate_id":0,"name":"memchr","span":{"filename":"src/memchr/mod.rs","begin":[87,0],"end":[125,1]},"visibility":"public","docs":"Search for the first occurrence of a byte in a slice.\n\nThis returns the index corresponding to the first occurrence of `needle` in\n`haystack`, or `None` if one is not found. If an index is returned, it is\nguaranteed to be less than `usize::MAX`.\n\nWhile this is operationally the same as something like\n`haystack.iter().position(|&b| b == needle)`, `memchr` will use a highly\noptimized routine that can be up to an order of magnitude faster in some\ncases.\n\n# Example\n\nThis shows how to find the first position of a byte in a byte string.\n\n```\nuse memchr::memchr;\n\nlet haystack = b\"the quick brown fox\";\nassert_eq!(memchr(b'k', haystack), Some(8));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["needle",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47055:158","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13121:1651":{"id":"2:13121:1651","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:48999:9266","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:1075:9326":{"id":"1:1075:9326","crate_id":1,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:1076:1645","1:1077:10080","1:1078:54355","1:1079:54356","1:1080:53261","1:1081:53262","1:1082:53263"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:834":{"id":"0:834","crate_id":0,"name":null,"span":{"filename":"src/memmem/prefilter/mod.rs","begin":[168,22],"end":[168,27]},"visibility":{"restricted":{"parent":"0:354:1911","path":"::memmem::prefilter"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10016:103","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:835:630"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:6681:9331":{"id":"1:6681:9331","crate_id":1,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6682:55063","1:6683:55064"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10368:9225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3906-0:1005:2033":{"id":"b:2:3906-0:1005:2033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3904:67","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1005:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3908:1385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13127:3002":{"id":"2:13127:3002","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:15669:3253","self::pattern":"2:12731:9680"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13187:59303":{"id":"2:13187:59303","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13216:53262":{"id":"2:13216:53262","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3119:119":{"id":"2:3119:119","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3090:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}},"generics":{"params":[],"where_predicates":[]}}},"0:285:1533":{"id":"0:285:1533","crate_id":0,"name":"memrchr_iter","span":{"filename":"src/memchr/mod.rs","begin":[40,0],"end":[42,1]},"visibility":"public","docs":"An iterator over all occurrences of the needle in a haystack, in reverse.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["needle",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Rev","id":"2:46290:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1534","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"b:2:3116-0:1005:2033":{"id":"b:2:3116-0:1005:2033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3090:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3086:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1005:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3119:119","2:3120:1373"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3116-0:170:1536":{"id":"b:2:3116-0:170:1536","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3090:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3086:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3119:119","2:3120:1373"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:835:630":{"id":"0:835:630","crate_id":0,"name":"fmt","span":{"filename":"src/memmem/prefilter/mod.rs","begin":[168,22],"end":[168,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9976:126","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9965:187","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:169:1803":{"id":"0:169:1803","crate_id":0,"name":"next_back","span":{"filename":"src/memchr/iter.rs","begin":[110,4],"end":[115,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47055:158","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:8302:149","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:780:8948":{"id":"5:780:8948","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5783:59950":{"id":"5:5783:59950","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:421:1646","`String`":"5:8069:196"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:421:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:7774:10092","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8069:196","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:290:1523":{"id":"0:290:1523","crate_id":0,"name":"memchr2","span":{"filename":"src/memchr/mod.rs","begin":[151,0],"end":[178,1]},"visibility":"public","docs":"Like `memchr`, but searches for either of two bytes instead of just one.\n\nThis returns the index corresponding to the first occurrence of `needle1`\nor the first occurrence of `needle2` in `haystack` (whichever occurs\nearlier), or `None` if neither one is found. If an index is returned, it is\nguaranteed to be less than `usize::MAX`.\n\nWhile this is operationally the same as something like\n`haystack.iter().position(|&b| b == needle1 || b == needle2)`, `memchr2`\nwill use a highly optimized routine that can be up to an order of magnitude\nfaster in some cases.\n\n# Example\n\nThis shows how to find the first position of either of two bytes in a byte\nstring.\n\n```\nuse memchr::memchr2;\n\nlet haystack = b\"the quick brown fox\";\nassert_eq!(memchr2(b'k', b'q', haystack), Some(4));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["needle1",{"kind":"primitive","inner":"u8"}],["needle2",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47055:158","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:8302:149":{"id":"2:8302:149","crate_id":2,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8303:1801","2:8304:890","2:8305:1802","2:8306:468","2:8308:8904","2:8311:8905","2:8312:8906","2:8313:8907","2:8314:2744","2:8316:3161","2:8318:8908","2:8319:8909","2:8321:809","2:8324:8910","2:8331:8911","2:8333:8912","2:8336:2897","2:8337:8913","2:8338:8914","2:8340:8915","2:8342:8916","2:8345:1268","2:8346:8474","2:8347:8917","2:8351:2742","2:8354:8918","2:8355:8919","2:8356:8920","2:8358:8921","2:8359:3110","2:8361:8922","2:8364:8923","2:8366:8924","2:8376:8925","2:8391:8926","2:8393:8927","2:8397:8928","2:8406:8929","2:8409:8930","2:8411:8931","2:8414:252","2:8421:269","2:8428:1993","2:8435:8932","2:8444:8933","2:8454:983","2:8461:1807","2:8468:2015","2:8469:1768","2:8470:8853","2:8482:8852","2:8489:8851","2:8501:8850","2:8508:1676","2:8509:8934","2:8514:8935","2:8517:8936","2:8520:8937","2:8521:8938","2:8523:8939","2:8525:388","2:8528:8940","2:8531:966","2:8534:8941","2:8537:575","2:8540:8942","2:8543:875","2:8545:794","2:8547:760","2:8549:683","2:8551:666","2:8553:8943","2:8554:8944","2:8562:8945"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3423:122":{"id":"2:3423:122","crate_id":2,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3425:350"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"2:3426:123","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3106-0:170:1536":{"id":"b:2:3106-0:170:1536","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3083:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3080:141","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3109:3200"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:976:630":{"id":"0:976:630","crate_id":0,"name":"fmt","span":{"filename":"src/memmem/mod.rs","begin":[310,9],"end":[310,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9976:126","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9965:187","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13147:32507":{"id":"2:13147:32507","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:15669:3253","self::pattern":"2:12731:9680"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:12523:9105","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8070:3383":{"id":"2:8070:3383","crate_id":2,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8072:8939"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:662":{"id":"0:662","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[703,0],"end":[735,1]},"visibility":{"restricted":{"parent":"0:300:1538","path":"::memmem"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1005:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:663:888","0:664:2034","0:667:2067","0:670:1911"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:609:1974":{"id":"0:609:1974","crate_id":0,"name":"find_iter","span":{"filename":"src/memmem/mod.rs","begin":[190,0],"end":[195,1]},"visibility":"public","docs":"Returns an iterator over all non-overlapping occurrences of a substring in\na haystack.\n\n# Complexity\n\nThis routine is guaranteed to have worst case linear time complexity\nwith respect to both the needle and the haystack. That is, this runs\nin `O(needle.len() + haystack.len())` time.\n\nThis routine is also guaranteed to have worst case constant space\ncomplexity.\n\n# Examples\n\nBasic usage:\n\n```\nuse memchr::memmem;\n\nlet haystack = b\"foo bar foo baz foo\";\nlet mut it = memmem::find_iter(haystack, b\"foo\");\nassert_eq!(Some(0), it.next());\nassert_eq!(Some(8), it.next());\nassert_eq!(Some(16), it.next());\nassert_eq!(None, it.next());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["haystack",{"kind":"borrowed_ref","inner":{"lifetime":"'h","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["needle",{"kind":"borrowed_ref","inner":{"lifetime":"'n","mutable":false,"type":{"kind":"generic","inner":"N"}}}]],"output":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:966:1977","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}},{"name":"N","kind":{"type":{"bounds":[{"outlives":"'n"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsRef","id":"2:3074:73","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3074:73":{"id":"2:3074:73","crate_id":2,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3076:280"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"a:2:3189:199-0:137:1534":{"id":"a:2:3189:199-0:137:1534","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3189:199","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1534","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3121-0:977:1983":{"id":"b:2:3121-0:977:1983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3080:141","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3090:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:977:1983","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["2:3124:119","2:3125:1372"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2780-0:826:1912":{"id":"b:2:2780-0:826:1912","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2774:92","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2782:3323"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8113:1801":{"id":"2:8113:1801","crate_id":2,"name":"Item","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8302:149","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"generics":{"params":[],"where_predicates":[]}}},"a:2:3189:199-0:996:1984":{"id":"a:2:3189:199-0:996:1984","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3189:199","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:996:1984","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:617:1993":{"id":"0:617:1993","crate_id":0,"name":"find","span":{"filename":"src/memmem/mod.rs","begin":[259,0],"end":[265,1]},"visibility":"public","docs":"Returns the index of the first occurrence of the given needle.\n\nNote that if you're are searching for the same needle in many different\nsmall haystacks, it may be faster to initialize a [`Finder`] once,\nand reuse it for each search.\n\n# Complexity\n\nThis routine is guaranteed to have worst case linear time complexity\nwith respect to both the needle and the haystack. That is, this runs\nin `O(needle.len() + haystack.len())` time.\n\nThis routine is also guaranteed to have worst case constant space\ncomplexity.\n\n# Examples\n\nBasic usage:\n\n```\nuse memchr::memmem;\n\nlet haystack = b\"foo bar baz\";\nassert_eq!(Some(0), memmem::find(haystack, b\"foo\"));\nassert_eq!(Some(4), memmem::find(haystack, b\"bar\"));\nassert_eq!(None, memmem::find(haystack, b\"quux\"));\n```","links":{"`Finder`":"0:987:1978"},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["needle",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47055:158","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:637:1801":{"id":"0:637:1801","crate_id":0,"name":"Item","span":{"filename":"src/memmem/mod.rs","begin":[413,4],"end":[413,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"primitive","inner":"usize"},"generics":{"params":[],"where_predicates":[]}}},"1:5681:9212":{"id":"1:5681:9212","crate_id":1,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5682:55054"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3189:199-0:826:1912":{"id":"a:2:3189:199-0:826:1912","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3189:199","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:162":{"id":"0:162","crate_id":0,"name":null,"span":{"filename":"src/memchr/iter.rs","begin":[94,0],"end":[106,1]},"visibility":{"restricted":{"parent":"0:115:747","path":"::memchr::iter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["skip","eq_by","gt","min","cloned","reduce","partition","flatten","min_by_key","filter_map","any","nth","chain","is_sorted","cycle","collect","try_reduce","partition_in_place","take","fuse","position","enumerate","peekable","step_by","max_by","lt","ge","eq","all","is_sorted_by","sum","find_map","is_partitioned","inspect","max_by_key","skip_while","rposition","intersperse","partial_cmp","is_sorted_by_key","product","ne","try_find","try_fold","max","zip","by_ref","take_while","intersperse_with","size_hint","cmp","le","__iterator_get_unchecked","cmp_by","map","unzip","try_for_each","try_collect","count","map_while","for_each","last","flat_map","partial_cmp_by","copied","fold","collect_into","scan","min_by","filter","rev","advance_by","find"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8302:149","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1535","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:164:1801","0:165:890","0:166:1802"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3177:192-0:1005:2033":{"id":"a:2:3177:192-0:1005:2033","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3177:192","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1005:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13115:9408":{"id":"2:13115:9408","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"crate::ops::Index":"2:3481:8980","str::slice_mut_unchecked":"1:15674:3258","`str`":"1:15674:3258"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3218:8485-0:996:1984":{"id":"a:2:3218:8485-0:996:1984","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3218:8485","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:996:1984","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3110-0:977:1983":{"id":"b:2:3110-0:977:1983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3083:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:977:1983","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["2:3112:651"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12761:9683":{"id":"2:12761:9683","crate_id":2,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12756:9679","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:5786:54356":{"id":"5:5786:54356","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:15674:3258"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8069:196","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2780-0:137:1534":{"id":"b:2:2780-0:137:1534","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2774:92","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1534","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:2782:3323"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2780-0:153:1535":{"id":"b:2:2780-0:153:1535","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2774:92","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1535","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:2782:3323"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1005:2033":{"id":"0:1005:2033","crate_id":0,"name":"FinderBuilder","span":{"filename":"src/memmem/mod.rs","begin":[699,0],"end":[701,1]},"visibility":"public","docs":"A builder for constructing non-default forward or reverse memmem finders.\n\nA builder is primarily useful for configuring a substring searcher.\nCurrently, the only configuration exposed is the ability to disable\nheuristic prefilters used to speed up certain searches.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:662","a:2:3218:8485-0:1005:2033","a:2:3177:192-0:1005:2033","a:2:9036:8728-0:1005:2033","a:2:9037:8727-0:1005:2033","a:2:3189:199-0:1005:2033","b:2:3121-0:1005:2033","b:2:2783-0:1005:2033","b:2:3106-0:1005:2033","b:2:3116-0:1005:2033","b:2:3906-0:1005:2033","b:2:3110-0:1005:2033","b:2:2780-0:1005:2033","b:5:776-0:1005:2033","0:1007","0:1009","0:1011"]}},"2:3276:8963":{"id":"2:3276:8963","crate_id":2,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3278:242"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9037:8727-0:966:1977":{"id":"a:2:9037:8727-0:966:1977","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9037:8727","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:966:1977","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3121-0:153:1535":{"id":"b:2:3121-0:153:1535","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3080:141","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3090:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1535","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3124:119","2:3125:1372"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3110-0:987:1978":{"id":"b:2:3110-0:987:1978","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3083:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:987:1978","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["2:3112:651"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5770:59948":{"id":"5:5770:59948","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:8069:196"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8069:196","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3189:199-0:987:1978":{"id":"a:2:3189:199-0:987:1978","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3189:199","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:987:1978","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:990":{"id":"0:990","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[448,9],"end":[448,14]},"visibility":{"restricted":{"parent":"0:300:1538","path":"::memmem"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2799:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:987:1978","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["0:992:382"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5514:10086":{"id":"5:5514:10086","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5516:163","5:5517:405"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:8116:3382":{"id":"2:8116:3382","crate_id":2,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8118:8900","2:8120:8901","2:8121:8902"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9036:8728-0:826:1912":{"id":"a:2:9036:8728-0:826:1912","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9036:8728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:12741:9681":{"id":"2:12741:9681","crate_id":2,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12743:2031","2:12744:58959","2:12745:58960","2:12746:58961","2:12747:58963","2:12748:58962","2:12749:58964"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5631:9209":{"id":"1:5631:9209","crate_id":1,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5632:11251","1:5633:13434"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8066:3384":{"id":"2:8066:3384","crate_id":2,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8068:8938"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13150:53370":{"id":"2:13150:53370","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12731:9680","`DoubleEndedIterator`":"2:8151:112","str::split":"1:15674:3258","prim@char":"1:15669:3253"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:49031:9092","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12756:9679","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3182:1650":{"id":"2:3182:1650","crate_id":2,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:142":{"id":"0:142","crate_id":0,"name":null,"span":{"filename":"src/memchr/iter.rs","begin":[42,0],"end":[48,1]},"visibility":{"restricted":{"parent":"0:115:747","path":"::memchr::iter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1534","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:144:888"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3121-0:826:1912":{"id":"b:2:3121-0:826:1912","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3080:141","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3090:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3124:119","2:3125:1372"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3106-0:977:1983":{"id":"b:2:3106-0:977:1983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3083:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3080:141","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:977:1983","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["2:3109:3200"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10274:9371":{"id":"2:10274:9371","crate_id":2,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10275:138","2:10276:33728","2:10277:56542"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1009":{"id":"0:1009","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[698,16],"end":[698,21]},"visibility":{"restricted":{"parent":"0:300:1538","path":"::memmem"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10016:103","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1005:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1010:630"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3121-0:1005:2033":{"id":"b:2:3121-0:1005:2033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3080:141","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3090:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1005:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3124:119","2:3125:1372"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:159":{"id":"0:159","crate_id":0,"name":null,"span":{"filename":"src/memchr/iter.rs","begin":[81,0],"end":[92,1]},"visibility":{"restricted":{"parent":"0:115:747","path":"::memchr::iter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1535","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:161:888"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3409:8979":{"id":"2:3409:8979","crate_id":2,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3410:516"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Deref","id":"2:3396:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13159:53372":{"id":"2:13159:53372","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:15669:3253","self::pattern":"2:12731:9680","str::rsplitn":"1:15674:3258"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:49117:9090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:179:888":{"id":"0:179:888","crate_id":0,"name":"new","span":{"filename":"src/memchr/iter.rs","begin":[132,4],"end":[145,5]},"visibility":"public","docs":"Create a new `Memchr3` that's initialized to zero with a haystack","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["needle1",{"kind":"primitive","inner":"u8"}],["needle2",{"kind":"primitive","inner":"u8"}],["needle3",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1536","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3121-0:996:1984":{"id":"b:2:3121-0:996:1984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3080:141","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3090:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:996:1984","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["2:3124:119","2:3125:1372"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3633:203":{"id":"2:3633:203","crate_id":2,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3634:163","2:3635:8986","2:3636:656","2:3637:343"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromResidual","id":"2:3638:129","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"2:3633:203","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2783-0:153:1535":{"id":"b:2:2783-0:153:1535","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2777:9715","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1535","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:2785:53237"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13105:279":{"id":"2:13105:279","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"`u8`":"1:15683:3267","str::as_mut_ptr":"1:15674:3258"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9037:8727-0:1005:2033":{"id":"a:2:9037:8727-0:1005:2033","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9037:8727","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1005:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3272:8960":{"id":"2:3272:8960","crate_id":2,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3273:163","2:3274:881"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3218:8485-0:826:1912":{"id":"a:2:3218:8485-0:826:1912","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3218:8485","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3116-0:977:1983":{"id":"b:2:3116-0:977:1983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3090:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3086:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:977:1983","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["2:3119:119","2:3120:1373"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:833":{"id":"0:833","crate_id":0,"name":null,"span":{"filename":"src/memmem/prefilter/mod.rs","begin":[168,16],"end":[168,20]},"visibility":{"restricted":{"parent":"0:354:1911","path":"::memmem::prefilter"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3187:100","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3177:192-0:137:1534":{"id":"a:2:3177:192-0:137:1534","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3177:192","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1534","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:147:1801":{"id":"0:147:1801","crate_id":0,"name":"Item","span":{"filename":"src/memchr/iter.rs","begin":[51,4],"end":[51,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"primitive","inner":"usize"},"generics":{"params":[],"where_predicates":[]}}},"b:2:3906-0:170:1536":{"id":"b:2:3906-0:170:1536","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3904:67","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3908:1385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2783-0:170:1536":{"id":"b:2:2783-0:170:1536","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2777:9715","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:2785:53237"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10031:8865":{"id":"2:10031:8865","crate_id":2,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10032:630"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3335:8975":{"id":"2:3335:8975","crate_id":2,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3337:328"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:831":{"id":"0:831","crate_id":0,"name":null,"span":{"filename":"src/memmem/prefilter/mod.rs","begin":[168,9],"end":[168,14]},"visibility":{"restricted":{"parent":"0:354:1911","path":"::memmem::prefilter"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2799:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:832:382"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2783-0:826:1912":{"id":"b:2:2783-0:826:1912","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2777:9715","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2785:53237"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3309:8969":{"id":"2:3309:8969","crate_id":2,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3311:163","2:3312:327"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3080:141":{"id":"2:3080:141","crate_id":2,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3082:3200"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13209:59310":{"id":"2:13209:59310","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:12731:9680","prim@char":"1:15669:3253"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12756:9679","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13100:59290":{"id":"2:13100:59290","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"1:15674:3258"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3110-0:1005:2033":{"id":"b:2:3110-0:1005:2033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3083:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1005:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3112:651"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13220:9328":{"id":"2:13220:9328","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:15669:3253"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:49321:9329","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13171:3332":{"id":"2:13171:3332","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"str::matches":"1:15674:3258","prim@char":"1:15669:3253","self::pattern":"2:12731:9680","`DoubleEndedIterator`":"2:8151:112"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:49217:9915","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23386:9736":{"id":"2:23386:9736","crate_id":2,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:23387:9769"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:23382:9225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3187:100","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:0:1522":{"id":"0:0:1522","crate_id":0,"name":"memchr","span":{"filename":"src/lib.rs","begin":[1,0],"end":[181,10]},"visibility":"public","docs":"This library provides heavily optimized routines for string search primitives.\n\n# Overview\n\nThis section gives a brief high level overview of what this crate offers.\n\n* The top-level module provides routines for searching for 1, 2 or 3 bytes\n  in the forward or reverse direction. When searching for more than one byte,\n  positions are considered a match if the byte at that position matches any\n  of the bytes.\n* The [`memmem`] sub-module provides forward and reverse substring search\n  routines.\n\nIn all such cases, routines operate on `&[u8]` without regard to encoding. This\nis exactly what you want when searching either UTF-8 or arbitrary bytes.\n\n# Example: using `memchr`\n\nThis example shows how to use `memchr` to find the first occurrence of `z` in\na haystack:\n\n```\nuse memchr::memchr;\n\nlet haystack = b\"foo bar baz quuz\";\nassert_eq!(Some(10), memchr(b'z', haystack));\n```\n\n# Example: matching one of three possible bytes\n\nThis examples shows how to use `memrchr3` to find occurrences of `a`, `b` or\n`c`, starting at the end of the haystack.\n\n```\nuse memchr::memchr3_iter;\n\nlet haystack = b\"xyzaxyzbxyzc\";\n\nlet mut it = memchr3_iter(b'a', b'b', b'c', haystack).rev();\nassert_eq!(Some(11), it.next());\nassert_eq!(Some(7), it.next());\nassert_eq!(Some(3), it.next());\nassert_eq!(None, it.next());\n```\n\n# Example: iterating over substring matches\n\nThis example shows how to use the [`memmem`] sub-module to find occurrences of\na substring in a haystack.\n\n```\nuse memchr::memmem;\n\nlet haystack = b\"foo bar foo baz foo\";\n\nlet mut it = memmem::find_iter(haystack, \"foo\");\nassert_eq!(Some(0), it.next());\nassert_eq!(Some(8), it.next());\nassert_eq!(Some(16), it.next());\nassert_eq!(None, it.next());\n```\n\n# Example: repeating a search for the same needle\n\nIt may be possible for the overhead of constructing a substring searcher to be\nmeasurable in some workloads. In cases where the same needle is used to search\nmany haystacks, it is possible to do construction once and thus to avoid it for\nsubsequent searches. This can be done with a [`memmem::Finder`]:\n\n```\nuse memchr::memmem;\n\nlet finder = memmem::Finder::new(\"foo\");\n\nassert_eq!(Some(4), finder.find(b\"baz foo quux\"));\nassert_eq!(None, finder.find(b\"quux baz bar\"));\n```\n\n# Why use this crate?\n\nAt first glance, the APIs provided by this crate might seem weird. Why provide\na dedicated routine like `memchr` for something that could be implemented\nclearly and trivially in one line:\n\n```\nfn memchr(needle: u8, haystack: &[u8]) -> Option<usize> {\n    haystack.iter().position(|&b| b == needle)\n}\n```\n\nOr similarly, why does this crate provide substring search routines when Rust's\ncore library already provides them?\n\n```\nfn search(haystack: &str, needle: &str) -> Option<usize> {\n    haystack.find(needle)\n}\n```\n\nThe primary reason for both of them to exist is performance. When it comes to\nperformance, at a high level at least, there are two primary ways to look at\nit:\n\n* **Throughput**: For this, think about it as, \"given some very large haystack\n  and a byte that never occurs in that haystack, how long does it take to\n  search through it and determine that it, in fact, does not occur?\"\n* **Latency**: For this, think about it as, \"given a tiny haystack---just a\n  few bytes---how long does it take to determine if a byte is in it?\"\n\nThe `memchr` routine in this crate has _slightly_ worse latency than the\nsolution presented above, however, its throughput can easily be over an\norder of magnitude faster. This is a good general purpose trade off to make.\nYou rarely lose, but often gain big.\n\n**NOTE:** The name `memchr` comes from the corresponding routine in libc. A key\nadvantage of using this library is that its performance is not tied to its\nquality of implementation in the libc you happen to be using, which can vary\ngreatly from platform to platform.\n\nBut what about substring search? This one is a bit more complicated. The\nprimary reason for its existence is still indeed performance, but it's also\nuseful because Rust's core library doesn't actually expose any substring\nsearch routine on arbitrary bytes. The only substring search routine that\nexists works exclusively on valid UTF-8.\n\nSo if you have valid UTF-8, is there a reason to use this over the standard\nlibrary substring search routine? Yes. This routine is faster on almost every\nmetric, including latency. The natural question then, is why isn't this\nimplementation in the standard library, even if only for searching on UTF-8?\nThe reason is that the implementation details for using SIMD in the standard\nlibrary haven't quite been worked out yet.\n\n**NOTE:** Currently, only `x86_64` targets have highly accelerated\nimplementations of substring search. For `memchr`, all targets have\nsomewhat-accelerated implementations, while only `x86_64` targets have highly\naccelerated implementations. This limitation is expected to be lifted once the\nstandard library exposes a platform independent SIMD API.\n\n# Crate features\n\n* **std** - When enabled (the default), this will permit this crate to use\n  features specific to the standard library. Currently, the only thing used\n  from the standard library is runtime SIMD CPU feature detection. This means\n  that this feature must be enabled to get AVX accelerated routines. When\n  `std` is not enabled, this crate will still attempt to use SSE2 accelerated\n  routines on `x86_64`.\n* **libc** - When enabled (**not** the default), this library will use your\n  platform's libc implementation of `memchr` (and `memrchr` on Linux). This\n  can be useful on non-`x86_64` targets where the fallback implementation in\n  this crate is not as good as the one found in your libc. All other routines\n  (e.g., `memchr[23]` and substring search) unconditionally use the\n  implementation in this crate.","links":{"`memmem`":"0:300:1538","`memmem::Finder`":"0:987:1978"},"attrs":["#![deny(missing_docs)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:300:1538","0:288:1522","0:290:1523","0:283:1524","0:292:1525","0:284:1526","0:282:1527","0:294:1528","0:296:1529","0:286:1530","0:298:1531","0:287:1532","0:285:1533","0:137:1534","0:153:1535","0:170:1536"]}},"2:8584:3380":{"id":"2:8584:3380","crate_id":2,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Step","id":"2:7631:3364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3250:8962":{"id":"2:3250:8962","crate_id":2,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3252:163","2:3253:1315"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:12750:2031":{"id":"2:12750:2031","crate_id":2,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:12752:1670","2:12753:890","2:12754:59112","2:12755:59113"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13197:20461":{"id":"2:13197:20461","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:12731:9680","prim@char":"1:15669:3253"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47055:158","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2783-0:1005:2033":{"id":"b:2:2783-0:1005:2033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2777:9715","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1005:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2785:53237"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3218:8485-0:966:1977":{"id":"a:2:3218:8485-0:966:1977","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3218:8485","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:966:1977","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:4887:9301":{"id":"1:4887:9301","crate_id":1,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4888:9009","1:4889:57568"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3218:8485-0:170:1536":{"id":"a:2:3218:8485-0:170:1536","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3218:8485","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:5693:9215":{"id":"1:5693:9215","crate_id":1,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5694:11251"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3292:8966":{"id":"2:3292:8966","crate_id":2,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3294:1072"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3297:8971":{"id":"2:3297:8971","crate_id":2,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3298:163","2:3299:921"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3185:198":{"id":"2:3185:198","crate_id":2,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:282:1527":{"id":"0:282:1527","crate_id":0,"name":"memchr_iter","span":{"filename":"src/memchr/mod.rs","begin":[17,0],"end":[19,1]},"visibility":"public","docs":"An iterator over all occurrences of the needle in a haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["needle",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1534","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13203:59308":{"id":"2:13203:59308","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:12731:9680","prim@char":"1:15669:3253"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12756:9679","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:986:630":{"id":"0:986:630","crate_id":0,"name":"fmt","span":{"filename":"src/memmem/mod.rs","begin":[375,9],"end":[375,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9976:126","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9965:187","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13111:53339":{"id":"2:13111:53339","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10632:194","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10632:194","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3906-0:153:1535":{"id":"b:2:3906-0:153:1535","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3904:67","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1535","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3908:1385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10035:8866":{"id":"2:10035:8866","crate_id":2,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10036:630"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:148:890":{"id":"0:148:890","crate_id":0,"name":"next","span":{"filename":"src/memchr/iter.rs","begin":[54,4],"end":[56,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47055:158","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3106-0:137:1534":{"id":"b:2:3106-0:137:1534","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3083:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3080:141","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1534","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3109:3200"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:776-0:996:1984":{"id":"b:5:776-0:996:1984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2799:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:996:1984","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["5:778:1645","5:779:8947","5:780:8948"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3679:8991":{"id":"2:3679:8991","crate_id":2,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"a:2:9036:8728-0:987:1978":{"id":"a:2:9036:8728-0:987:1978","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9036:8728","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:987:1978","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:22692:21915":{"id":"2:22692:21915","crate_id":2,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:22693:12203","2:22694:58590","2:22695:58591"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22685:9225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3906-0:966:1977":{"id":"b:2:3906-0:966:1977","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3904:67","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:966:1977","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["2:3908:1385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9037:8727-0:977:1983":{"id":"a:2:9037:8727-0:977:1983","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9037:8727","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:977:1983","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:643:1993":{"id":"0:643:1993","crate_id":0,"name":"find","span":{"filename":"src/memmem/mod.rs","begin":[484,4],"end":[486,5]},"visibility":"public","docs":"Returns the index of the first occurrence of this needle in the given\nhaystack.\n\n# Complexity\n\nThis routine is guaranteed to have worst case linear time complexity\nwith respect to both the needle and the haystack. That is, this runs\nin `O(needle.len() + haystack.len())` time.\n\nThis routine is also guaranteed to have worst case constant space\ncomplexity.\n\n# Examples\n\nBasic usage:\n\n```\nuse memchr::memmem::Finder;\n\nlet haystack = b\"foo bar baz\";\nassert_eq!(Some(0), Finder::new(\"foo\").find(haystack));\nassert_eq!(Some(4), Finder::new(\"bar\").find(haystack));\nassert_eq!(None, Finder::new(\"quux\").find(haystack));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47055:158","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:627:1801":{"id":"0:627:1801","crate_id":0,"name":"Item","span":{"filename":"src/memmem/mod.rs","begin":[348,4],"end":[348,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"primitive","inner":"usize"},"generics":{"params":[],"where_predicates":[]}}},"2:13190:59305":{"id":"2:13190:59305","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:618:2000":{"id":"0:618:2000","crate_id":0,"name":"rfind","span":{"filename":"src/memmem/mod.rs","begin":[296,0],"end":[302,1]},"visibility":"public","docs":"Returns the index of the last occurrence of the given needle.\n\nNote that if you're are searching for the same needle in many different\nsmall haystacks, it may be faster to initialize a [`FinderRev`] once,\nand reuse it for each search.\n\n# Complexity\n\nThis routine is guaranteed to have worst case linear time complexity\nwith respect to both the needle and the haystack. That is, this runs\nin `O(needle.len() + haystack.len())` time.\n\nThis routine is also guaranteed to have worst case constant space\ncomplexity.\n\n# Examples\n\nBasic usage:\n\n```\nuse memchr::memmem;\n\nlet haystack = b\"foo bar baz\";\nassert_eq!(Some(0), memmem::rfind(haystack, b\"foo\"));\nassert_eq!(Some(4), memmem::rfind(haystack, b\"bar\"));\nassert_eq!(Some(8), memmem::rfind(haystack, b\"ba\"));\nassert_eq!(None, memmem::rfind(haystack, b\"quux\"));\n```","links":{"`FinderRev`":"0:996:1984"},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["needle",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47055:158","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:12178:9079":{"id":"2:12178:9079","crate_id":2,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12179:1801","2:12180:1647"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5685:9213":{"id":"1:5685:9213","crate_id":1,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5686:57400"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10368:9225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:987:1978":{"id":"0:987:1978","crate_id":0,"name":"Finder","span":{"filename":"src/memmem/mod.rs","begin":[449,0],"end":[451,1]},"visibility":"public","docs":"A single substring searcher fixed to a particular needle.\n\nThe purpose of this type is to permit callers to construct a substring\nsearcher that can be used to search haystacks without the overhead of\nconstructing the searcher in the first place. This is a somewhat niche\nconcern when it's necessary to re-use the same needle to search multiple\ndifferent haystacks with as little overhead as possible. In general, using\n[`find`] is good enough, but `Finder` is useful when you can meaningfully\nobserve searcher construction time in a profile.\n\nWhen the `std` feature is enabled, then this type has an `into_owned`\nversion which permits building a `Finder` that is not connected to\nthe lifetime of its needle.","links":{"`find`":"0:617:1993"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:639","a:2:3218:8485-0:987:1978","a:2:3177:192-0:987:1978","a:2:9036:8728-0:987:1978","a:2:9037:8727-0:987:1978","a:2:3189:199-0:987:1978","b:2:3121-0:987:1978","b:2:2783-0:987:1978","b:2:3106-0:987:1978","b:2:3116-0:987:1978","b:2:3906-0:987:1978","b:2:3110-0:987:1978","b:2:2780-0:987:1978","b:5:776-0:987:1978","0:990","0:993"]}},"2:13200:53378":{"id":"2:13200:53378","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:15669:3253","self::pattern":"2:12731:9680"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47055:158","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12756:9679","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:22737:9770":{"id":"2:22737:9770","crate_id":2,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdElement","id":"2:23386:9736","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22728:9225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:5623:9208":{"id":"1:5623:9208","crate_id":1,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5624:11251","1:5625:57169","1:5626:57170"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9037:8727-0:137:1534":{"id":"a:2:9037:8727-0:137:1534","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9037:8727","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1534","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:6753:9202":{"id":"1:6753:9202","crate_id":1,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6754:57755"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3106-0:1005:2033":{"id":"b:2:3106-0:1005:2033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3083:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3080:141","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1005:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3109:3200"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3186:197":{"id":"2:3186:197","crate_id":2,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3177:192":{"id":"2:3177:192","crate_id":2,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3906-0:826:1912":{"id":"b:2:3906-0:826:1912","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3904:67","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3908:1385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3177:192-0:966:1977":{"id":"a:2:3177:192-0:966:1977","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3177:192","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:966:1977","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3284:8965":{"id":"2:3284:8965","crate_id":2,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3286:861"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3106-0:996:1984":{"id":"b:2:3106-0:996:1984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3083:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3080:141","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:996:1984","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["2:3109:3200"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1011":{"id":"0:1011","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[698,23],"end":[698,30]},"visibility":{"restricted":{"parent":"0:300:1538","path":"::memmem"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Default","id":"2:3155:108","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1005:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1012:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13140:2000":{"id":"2:13140:2000","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:47055:158","self::pattern":"2:12731:9680","prim@char":"1:15669:3253"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47055:158","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12756:9679","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5785:54355":{"id":"5:5785:54355","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:15674:3258"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8069:196","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:145":{"id":"0:145","crate_id":0,"name":null,"span":{"filename":"src/memchr/iter.rs","begin":[50,0],"end":[62,1]},"visibility":{"restricted":{"parent":"0:115:747","path":"::memchr::iter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["skip","eq_by","gt","min","cloned","reduce","partition","flatten","min_by_key","filter_map","any","nth","chain","is_sorted","cycle","collect","try_reduce","partition_in_place","take","fuse","position","enumerate","peekable","step_by","max_by","lt","ge","eq","all","is_sorted_by","sum","find_map","is_partitioned","inspect","max_by_key","skip_while","rposition","intersperse","partial_cmp","is_sorted_by_key","product","ne","try_find","try_fold","max","zip","by_ref","take_while","intersperse_with","size_hint","cmp","le","__iterator_get_unchecked","cmp_by","map","unzip","try_for_each","try_collect","count","map_while","for_each","last","flat_map","partial_cmp_by","copied","fold","collect_into","scan","min_by","filter","rev","advance_by","find"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8302:149","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1534","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:147:1801","0:148:890","0:149:1802"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9037:8727-0:170:1536":{"id":"a:2:9037:8727-0:170:1536","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9037:8727","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:776-0:826:1912":{"id":"b:5:776-0:826:1912","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2799:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:778:1645","5:779:8947","5:780:8948"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3086:205":{"id":"2:3086:205","crate_id":2,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3088:119","2:3089:1373"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6845:9222":{"id":"1:6845:9222","crate_id":1,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6846:54958"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3552:8983":{"id":"2:3552:8983","crate_id":2,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3554:58244","2:3555:58245","2:3556:3002"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:6579:9210":{"id":"1:6579:9210","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6580:56678","1:6581:13045","1:6582:13046","1:6583:13048","1:6584:13047","1:6585:13049","1:6586:13050","1:6587:13052","1:6588:11293","1:6589:13055","1:6590:13056","1:6591:13057","1:6592:13058","1:6593:13059","1:6594:13060","1:6595:13053","1:6596:13054"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3110-0:966:1977":{"id":"b:2:3110-0:966:1977","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3083:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:966:1977","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["2:3112:651"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13098:59289":{"id":"2:13098:59289","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3331:8974":{"id":"2:3331:8974","crate_id":2,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3333:326"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3218:8485-0:977:1983":{"id":"a:2:3218:8485-0:977:1983","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3218:8485","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:977:1983","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1007":{"id":"0:1007","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[698,9],"end":[698,14]},"visibility":{"restricted":{"parent":"0:300:1538","path":"::memmem"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2799:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1005:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1008:382"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3904:67":{"id":"2:3904:67","crate_id":2,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3905:1385"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"1:5637:9210":{"id":"1:5637:9210","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5638:12700","1:5639:55054","1:5640:11251","1:5641:57707","1:5642:9584","1:5643:9585","1:5644:57708","1:5645:1264","1:5646:57709","1:5647:57710","1:5648:57711","1:5649:57712","1:5650:57713","1:5651:57714","1:5652:57715","1:5653:57716"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13915:9334":{"id":"2:13915:9334","crate_id":2,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13916:57187","2:13917:57188","2:13918:57189","2:13919:57190","2:13920:57191","2:13921:57192","2:13922:8921"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:287:1532":{"id":"0:287:1532","crate_id":0,"name":"memrchr3_iter","span":{"filename":"src/memchr/mod.rs","begin":[56,0],"end":[63,1]},"visibility":"public","docs":"An iterator over all occurrences of the needles in a haystack, in reverse.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["needle1",{"kind":"primitive","inner":"u8"}],["needle2",{"kind":"primitive","inner":"u8"}],["needle3",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Rev","id":"2:46290:1662","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1536","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:144:888":{"id":"0:144:888","crate_id":0,"name":"new","span":{"filename":"src/memchr/iter.rs","begin":[45,4],"end":[47,5]},"visibility":"public","docs":"Creates a new iterator that yields all positions of needle in haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["needle",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1534","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5762":{"id":"5:5762","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5582:1300","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:5763:59946","5:5764:8475","5:5767:59947","5:5770:59948","5:5782:59949","5:5783:59950","5:5784:3371","5:5785:54355","5:5786:54356"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3906-0:977:1983":{"id":"b:2:3906-0:977:1983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3904:67","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:977:1983","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["2:3908:1385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:670:1911":{"id":"0:670:1911","crate_id":0,"name":"prefilter","span":{"filename":"src/memmem/mod.rs","begin":[731,4],"end":[734,5]},"visibility":"public","docs":"Configure the prefilter setting for the finder.\n\nSee the documentation for [`Prefilter`] for more discussion on why\nyou might want to configure this.","links":{"`Prefilter`":"0:826:1912"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["prefilter",{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1005:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2799:98":{"id":"2:2799:98","crate_id":2,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2800:382","2:2801:384"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:778:1645":{"id":"5:778:1645","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"generic","inner":"T"},"generics":{"params":[],"where_predicates":[]}}},"b:2:8111-0:170:1536":{"id":"b:2:8111-0:170:1536","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8302:149","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8107:143","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:8113:1801","2:8114:8903","2:8115:736"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"2:3343:8977":{"id":"2:3343:8977","crate_id":2,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3345:1194"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6684:9322":{"id":"1:6684:9322","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6685:13640"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10368:9225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:659:1659":{"id":"0:659:1659","crate_id":0,"name":"into_owned","span":{"filename":"src/memmem/mod.rs","begin":[662,4],"end":[664,5]},"visibility":"public","docs":"Convert this finder into its owned variant, such that it no longer\nborrows the needle.\n\nIf this is already an owned finder, then this is a no-op. Otherwise,\nthis copies the needle.\n\nThis is only available when the `std` feature is enabled.","links":{},"attrs":["#[cfg(feature = \"std\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:996:1984","args":{"angle_bracketed":{"args":[{"lifetime":"'static"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:170:1536":{"id":"0:170:1536","crate_id":0,"name":"Memchr3","span":{"filename":"src/memchr/iter.rs","begin":[119,0],"end":[127,1]},"visibility":"public","docs":"An iterator for `memchr3`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:177","a:2:3218:8485-0:170:1536","a:2:3177:192-0:170:1536","a:2:9036:8728-0:170:1536","a:2:9037:8727-0:170:1536","a:2:3189:199-0:170:1536","b:2:8111-0:170:1536","b:2:3121-0:170:1536","b:2:2783-0:170:1536","b:2:3106-0:170:1536","b:2:3116-0:170:1536","b:2:3906-0:170:1536","b:2:3110-0:170:1536","b:2:2780-0:170:1536","0:180","0:185"]}},"a:2:9037:8727-0:987:1978":{"id":"a:2:9037:8727-0:987:1978","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9037:8727","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:987:1978","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2783-0:137:1534":{"id":"b:2:2783-0:137:1534","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2777:9715","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1534","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:2785:53237"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3124:119":{"id":"2:3124:119","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:38398:9231","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generics":{"params":[],"where_predicates":[]}}},"0:663:888":{"id":"0:663:888","crate_id":0,"name":"new","span":{"filename":"src/memmem/mod.rs","begin":[705,4],"end":[707,5]},"visibility":"public","docs":"Create a new finder builder with default settings.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1005:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:826:1912":{"id":"0:826:1912","crate_id":0,"name":"Prefilter","span":{"filename":"src/memmem/prefilter/mod.rs","begin":[170,0],"end":[177,1]},"visibility":"public","docs":"Prefilter controls whether heuristics are used to accelerate searching.\n\nA prefilter refers to the idea of detecting candidate matches very quickly,\nand then confirming whether those candidates are full matches. This\nidea can be quite effective since it's often the case that looking for\ncandidates can be a lot faster than running a complete substring search\nover the entire input. Namely, looking for candidates can be done with\nextremely fast vectorized code.\n\nThe downside of a prefilter is that it assumes false positives (which are\ncandidates generated by a prefilter that aren't matches) are somewhat rare\nrelative to the frequency of full matches. That is, if a lot of false\npositives are generated, then it's possible for search time to be worse\nthan if the prefilter wasn't enabled in the first place.\n\nAnother downside of a prefilter is that it can result in highly variable\nperformance, where some cases are extraordinarily fast and others aren't.\nTypically, variable performance isn't a problem, but it may be for your use\ncase.\n\nThe use of prefilters in this implementation does use a heuristic to detect\nwhen a prefilter might not be carrying its weight, and will dynamically\ndisable its use. Nevertheless, this configuration option gives callers\nthe ability to disable prefilters if you have knowledge that they won't be\nuseful.","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:827:156","0:829:2640"],"impls":["a:2:3218:8485-0:826:1912","a:2:3177:192-0:826:1912","a:2:9036:8728-0:826:1912","a:2:9037:8727-0:826:1912","a:2:3189:199-0:826:1912","b:2:3121-0:826:1912","b:2:2783-0:826:1912","b:2:3106-0:826:1912","b:2:3116-0:826:1912","b:2:3906-0:826:1912","b:2:3110-0:826:1912","b:2:2780-0:826:1912","b:5:776-0:826:1912","0:831","0:833","0:834","0:455"]}},"b:2:2783-0:996:1984":{"id":"b:2:2783-0:996:1984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2777:9715","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:996:1984","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["2:2785:53237"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8115:736":{"id":"2:8115:736","crate_id":2,"name":"into_iter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9037:8727":{"id":"2:9037:8727","crate_id":2,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3012:9678":{"id":"2:3012:9678","crate_id":2,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:3011:9225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9037:8727-0:153:1535":{"id":"a:2:9037:8727-0:153:1535","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9037:8727","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1535","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:292:1525":{"id":"0:292:1525","crate_id":0,"name":"memchr3","span":{"filename":"src/memchr/mod.rs","begin":[204,0],"end":[236,1]},"visibility":"public","docs":"Like `memchr`, but searches for any of three bytes instead of just one.\n\nThis returns the index corresponding to the first occurrence of `needle1`,\nthe first occurrence of `needle2`, or the first occurrence of `needle3` in\n`haystack` (whichever occurs earliest), or `None` if none are found. If an\nindex is returned, it is guaranteed to be less than `usize::MAX`.\n\nWhile this is operationally the same as something like\n`haystack.iter().position(|&b| b == needle1 || b == needle2 ||\nb == needle3)`, `memchr3` will use a highly optimized routine that can be\nup to an order of magnitude faster in some cases.\n\n# Example\n\nThis shows how to find the first position of any of three bytes in a byte\nstring.\n\n```\nuse memchr::memchr3;\n\nlet haystack = b\"the quick brown fox\";\nassert_eq!(memchr3(b'k', b'q', b'e', haystack), Some(2));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["needle1",{"kind":"primitive","inner":"u8"}],["needle2",{"kind":"primitive","inner":"u8"}],["needle3",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47055:158","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:638:890":{"id":"0:638:890","crate_id":0,"name":"next","span":{"filename":"src/memmem/mod.rs","begin":[415,4],"end":[432,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47055:158","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3125:1372":{"id":"2:3125:1372","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47182:187","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3090:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:983":{"id":"0:983","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[375,9],"end":[375,14]},"visibility":{"restricted":{"parent":"0:300:1538","path":"::memmem"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10016:103","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:977:1983","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["0:986:630"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2780-0:966:1977":{"id":"b:2:2780-0:966:1977","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2774:92","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:966:1977","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["2:2782:3323"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:628:890":{"id":"0:628:890","crate_id":0,"name":"next","span":{"filename":"src/memmem/mod.rs","begin":[350,4],"end":[366,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47055:158","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8151:112":{"id":"2:8151:112","crate_id":2,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8152:1803","2:8153:8896","2:8154:8897","2:8155:8898","2:8159:8899","2:8162:2000"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8302:149","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3121-0:987:1978":{"id":"b:2:3121-0:987:1978","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3080:141","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3090:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:987:1978","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}},"param_names":[]}},"items":["2:3124:119","2:3125:1372"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}}},"paths":{"16:7514:10497":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:4:948":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"2:23287:9082":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"17:9476:11179":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"2:12449:9910":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"2:23702:9831":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"6:5459:12965":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"1:9664:11040":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"2:47570:85":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"17:13564:11787":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"2:7459:3392":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"17:10814:10836":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"6:5420:12955":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:51683:9808":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"12:976:9357":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"6:1744:12500":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"17:10224:13524":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"5:5217:8784":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"11:54:10364":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"1:7669:9458":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"1:1438:8903":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"5:7858:176":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"2:13444:130":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"17:12287:11422":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"6:3892:12529":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:3348:8978":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"6:3966:12580":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"1:14312:110":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"2:53146:8445":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"17:12537:11480":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"1:2171:9472":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"6:5241:12862":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"12:784:9351":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"6:4347:12718":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"6:5945:13011":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"2:49235:9916":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:49267:9268":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"2:47402:83":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"2:50002:9232":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"1:10625:121":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"2:3409:8979":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:55696:9726":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"0:137:1534":{"crate_id":0,"path":["memchr","Memchr"],"kind":"struct"},"2:24278:9081":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"17:13912:11898":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"2:45859:13294":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"18:790:1977":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:14739:13437":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"2:24482:9970":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"6:4040:12614":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"5:7882:10116":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:22281:59132":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"16:5855:10540":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"2:23846:9984":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:13961:9284":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"12:354:12198":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"2:24108:9962":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"18:837:2031":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"17:13296:11715":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"1:11098:9565":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"0:1005:2033":{"crate_id":0,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"16:6110:10516":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"17:10435:13525":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"1:7321:167":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"5:3603:10215":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"6:5436:12959":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"5:6631:10093":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"17:12073:11393":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"2:48891:9101":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"16:7870:10484":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"6:5386:12938":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"6:5255:12873":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"17:9849:60610":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"5:1422:9359":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"2:23480:9958":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:4258:9547":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"2:49416:9684":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"5:5514:10086":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"1:14899:9410":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"17:12385:11455":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"1:10611:9221":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"6:4183:12669":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"2:45943:10067":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"9:692:10243":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"5:2093:10118":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"17:11186:11241":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"2:9966:8857":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"16:5580:10716":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"1:2852:162":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"17:13978:11910":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"9:996:10309":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"17:13532:11779":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"16:3064:10796":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:10860:9088":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"1:3539:11017":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:12750:2031":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"12:2005:9009":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"6:5407:12951":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"17:11482:11268":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"1:10855:2134":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"6:1736:12496":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"17:10377:10894":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"1:5693:9215":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"1:3955:119":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"2:23644:9836":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"6:6221:13149":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:51074:9807":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"17:10788:13536":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"16:4671:11949":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"1:11257:9415":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"2:46072:9996":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:11975:8789":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"18:650:1912":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"2:3195:8845":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"6:4401:12742":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"16:7392:10483":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"17:12632:11504":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"0:609:1974":{"crate_id":0,"path":["memchr","memmem","find_iter"],"kind":"function"},"1:4545:9260":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"11:0:3228":{"crate_id":11,"path":["adler"],"kind":"module"},"6:5359:12929":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"17:294:13504":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"1:15677:3261":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"1:7135:13629":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"12:1253:9361":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"17:11616:11299":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"2:13843:133":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"1:15682:3266":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"2:46567:3374":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:1152:13618":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"16:7185:10569":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:8176:3381":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:3261:9532":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"6:6636:13159":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"2:2834:116":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"1:11401:9009":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:22596:9769":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"2:50804:13327":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:3086:205":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"1:11786:9455":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"1:11308:9425":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"19:117:11092":{"crate_id":19,"path":["panic_unwind","dwarf","eh","EHContext"],"kind":"struct"},"1:6589:13055":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"1:15651:56289":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"2:23551:9959":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"6:6124:13088":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"1:12478:9516":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"1:10659:9275":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"17:10673:47115":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"16:7738:10577":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"2:52931:9777":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"18:704:2142":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"1:10883:9263":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"1:15688:3272":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"16:6136:10517":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"18:610:1641":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"1:15671:3255":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"2:48922:9097":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:1018:9506":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"1:15679:3263":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"2:10033:171":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"1:14886:9404":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"17:13356:11733":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"5:7517:11007":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"17:13318:11719":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"1:2395:13623":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"1:3953:187":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"1:14905:9411":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"17:12343:11434":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"2:24448:9969":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"1:7666:9456":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"17:11082:10842":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"17:10543:11229":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"6:670:40397":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"12:469:13712":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"2:22543:9240":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:52959:8435":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"17:11458:11267":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"2:47182:187":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"17:9210:46930":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"2:46540:3368":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"6:3978:12584":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:13807:183":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"17:13986:11913":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"1:11093:9564":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"1:13289:13625":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"1:5623:9208":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"16:6731:10772":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"17:10179:11187":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:57005:13346":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"2:47318:86":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"6:6614:13158":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"1:10462:9362":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"6:4470:12773":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"16:3392:10751":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"1:9317:55087":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"2:7867:13717":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"2:46003:10071":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"2:3187:100":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"17:13520:11776":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"5:3660:9349":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"17:9065:46927":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"6:4300:12695":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"16:5522:10528":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"2:49163:9912":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"5:7798:9348":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"2:45512:180":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"17:9649:13510":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:8642:9479":{"crate_id":2,"path":["core","lazy","OnceCell"],"kind":"struct"},"17:12699:11511":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"2:13756:9943":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:22685:9225":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"17:11714:11317":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"18:644:1914":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"16:6166:10546":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"1:15667:3251":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"16:6366:10394":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"17:12234:11415":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"0:300:1538":{"crate_id":0,"path":["memchr","memmem"],"kind":"module"},"1:2765:9230":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"6:578:12334":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"17:8929:46924":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:50762:9802":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"16:7786:10488":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"6:563:12325":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"1:11161:9563":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"6:5185:12836":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"16:7226:10573":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"14:250:12195":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"6:4120:12654":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"17:9971:60609":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"0:966:1977":{"crate_id":0,"path":["memchr","memmem","FindIter"],"kind":"struct"},"17:11555:11288":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"2:10812:9009":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"17:11337:10860":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"2:51097:9810":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"12:2309:12203":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"1:6579:9210":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"2:24176:9964":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"2:3189:199":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"2:8070:3383":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"17:13488:11765":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"1:4887:9301":{"crate_id":1,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"1:5978:9571":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"6:4478:12775":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"1:11771:9454":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"1:14792:13438":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"18:766:2960":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"17:11750:11322":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"1:10594:9300":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2:51193:9783":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"2:3272:8960":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:11418:9431":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"7:38:44900":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"17:12168:11197":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"1:10496:13635":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"1:7612:9452":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:3080:141":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"5:4314:212":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"16:6424:10554":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"12:1235:10377":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"5:1604:176":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"0:292:1525":{"crate_id":0,"path":["memchr","memchr3"],"kind":"function"},"17:12725:11513":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"1:13380:9443":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"16:7823:10489":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"17:8902:46923":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"17:10095:10906":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"5:7774:10092":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"2:22334:59168":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"6:5563:13004":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:3012:9678":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:11960:8788":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"0:829:2640":{"crate_id":0,"path":["memchr","memmem","Prefilter","Auto"],"kind":"variant"},"1:8558:8787":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"5:421:1646":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"5:3548:10990":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"12:2323:12205":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"5:4998:182":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"16:6569:10768":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"12:937:9354":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"17:13429:11746":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"2:50698:9781":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"5:8164:10141":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"9:927:45004":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"1:11001:9336":{"crate_id":1,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"5:1000:9009":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"1:5637:9210":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"1:5615:9207":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"2:23386:9736":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"17:11406:11249":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"5:4015:9010":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"1:6757:9203":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"12:112:13710":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"16:5595:10530":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"16:6208:10548":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"17:12051:11384":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"1:10915:3405":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"2:10942:9089":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:1651:9361":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"16:5360:10519":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"6:4377:12734":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:3218:8485":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"17:9943:60605":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"6:4193:12670":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"17:9659:60603":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"1:11087:9563":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"2:49510:9692":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"6:5998:13040":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"1:9378:8787":{"crate_id":1,"path":["std","sys_common","condvar","Condvar"],"kind":"struct"},"17:11045:46931":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"1:9572:11038":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockWriteGuard"],"kind":"struct"},"17:11026:13551":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"16:6518:10556":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"17:13637:11806":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"6:6185:13130":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"16:3549:11933":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"5:2182:10222":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"17:11147:11239":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"16:5996:10543":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"1:11050:56288":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"2:31955:57970":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"16:4890:11956":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"6:4364:12729":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"2:53031:8440":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"2:47122:8724":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"17:11378:10838":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:10027:8863":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"5:1576:9350":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"1:9193:9238":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"18:660:1915":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"17:9404:11177":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"6:161:40066":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"1:4500:9251":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"1:4609:9265":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"17:13810:11868":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"6:6899:13173":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"2:23730:13205":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"2:3284:8965":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:1497:9352":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"1:1488:9350":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:12761:9683":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:10604:9220":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"1:10905:3393":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"2:3485:8981":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"2:46172:3386":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:4261:9548":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"17:10611:13534":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"15:0:3231":{"crate_id":15,"path":["addr2line"],"kind":"module"},"6:6239:13152":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"6:4341:12715":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:45535:179":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:5826:9612":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"17:10477:10864":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"2:3288:8964":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"6:3918:12549":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"1:5272:9562":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"1:5856:9615":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"6:4419:12751":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:12412:9907":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"2:49462:9691":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:1157:16763":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"18:896:2182":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"5:3152:9475":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"1:8157:9506":{"crate_id":1,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"2:48956:9998":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"17:11809:11345":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"5:6889:9348":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"2:49609:9697":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"6:4331:12709":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"1:10667:9277":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:3481:8980":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:8680:9480":{"crate_id":2,"path":["core","lazy","Lazy"],"kind":"struct"},"5:7492:11002":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"1:2397:13624":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"17:10827:10837":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"2:22739:9769":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"2:9545:81":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:23715:9832":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"2:3276:8963":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"6:531:12303":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"14:11:13578":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"2:3011:9225":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"2:46163:3385":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"16:6269:10551":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"17:542:10453":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"6:1658:12454":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"2:49537:9693":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"17:2484:47015":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"1:4161:9290":{"crate_id":1,"path":["std","io","readbuf","ReadBuf"],"kind":"struct"},"17:11970:11372":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"1:1149:13616":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"2:45402:8990":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"17:11835:11350":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"2:3420:8486":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:9703:9889":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"12:1100:9358":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"16:6152:10477":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"18:152:1535":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"1:10456:16762":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"16:6591:10559":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:50996:9815":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"2:3185:198":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"16:7295:10495":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"1:5394:9569":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"1:2177:9473":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"12:925:9350":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"5:7310:10146":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"1:2582:13628":{"crate_id":1,"path":["std","error","from","StringError"],"kind":"struct"},"16:3506:10746":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"5:2634:10201":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"2:48754:9902":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"17:9719:13511":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"1:9531:9556":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"2:53069:8442":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"17:13386:11738":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"2:46331:3390":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:4295:9285":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"6:5469:12967":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"12:2013:9348":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"2:47097:9009":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"5:7999:10169":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"12:930:9353":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"18:782:2142":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"2:45466:176":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"2:46150:3393":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"6:6176:13127":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:52490:9785":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:6845:9222":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"1:15676:3260":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"1:8349:9388":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"17:13154:11680":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"6:6881:13170":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:47812:8863":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:5671:9211":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"17:10864:11225":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"6:5221:12849":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:49895:183":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"1:10230:11041":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"18:739:2977":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"17:11947:11365":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"5:7828:90":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"2:52990:8437":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"14:194:45271":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"1:4332:9286":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"17:9809:60611":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"1:10368:9225":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:50581:13325":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"0:826:1912":{"crate_id":0,"path":["memchr","memmem","Prefilter"],"kind":"enum"},"6:4033:12611":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"16:4448:11943":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"5:5936:10145":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"2:3662:9716":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"2:46120:11009":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"16:7467:10479":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"16:7856:10580":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"2:11053:9093":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"17:12142:11402":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:46352:3406":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"2:3552:8983":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:49217:9915":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"6:4060:12624":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:10025:8862":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"2:3250:8962":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"6:1723:12493":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:8577:3377":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:2565:119":{"crate_id":1,"path":["std","error","Error"],"kind":"trait"},"1:10500:10205":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"2:13640:59110":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"2:46022:9868":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"2:48842:9095":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"2:4888:8877":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"0:288:1522":{"crate_id":0,"path":["memchr","memchr"],"kind":"function"},"16:7216:10572":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"16:6072:10447":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:48173:8861":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"2:51420:13331":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:50890:9786":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:3644:8986":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:49913:172":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"1:8738:9596":{"crate_id":1,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"1:5681:9212":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"16:3241:10743":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"12:2039:9474":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"7:85:44907":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"5:7789:10161":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"1:15678:3262":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"5:1567:9347":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:4879:9886":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"6:632:12363":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"16:2733:10449":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"6:3972:12581":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"16:7804:10487":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"1:13755:9451":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"18:677:134":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"6:4101:12646":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"2:4600:9673":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"17:12040:11383":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"9:1020:10310":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"1:15685:3269":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"2:3243:932":{"crate_id":2,"path":["core","ops"],"kind":"module"},"2:45881:9864":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:14627:11048":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"14:56:11268":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"6:5210:12841":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:2202:9755":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"6:5197:12840":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"16:547:10718":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"2:52892:9812":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"17:12598:11491":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"17:13394:11740":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"1:10968:9305":{"crate_id":1,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"17:12195:11410":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"17:11779:11333":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"12:877:9349":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"17:10656:11192":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"1:6684:9322":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"6:1533:12372":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"1:894:9485":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"16:7453:10478":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"5:1524:9009":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:47612:80":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"16:5330:11173":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"5:3591:9277":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"17:10529:11189":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"17:12182:11409":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:12202:2728":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"17:12795:11530":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"2:8151:112":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"2:3426:123":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"18:801:1983":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"2:9540:74":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"16:6718:10771":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"12:377:10381":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"5:1080:10990":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"2:27663:9667":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:15026:9561":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:55709:9726":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:11767:11330":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"12:1688:10389":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"16:7119:10469":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"6:6214:13146":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"16:5456:10524":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"5:3130:9473":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"1:1132:9235":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"2:2865:159":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"17:13772:11859":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"12:840:9346":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"2:2429:9674":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"16:7549:10486":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:10146:13593":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"17:13402:11742":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"1:8721:3368":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"2:51320:9776":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:31768:10019":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"17:11231:10885":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"17:11572:11290":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"2:48971:9714":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"16:6176:10547":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"6:4459:12767":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"12:1159:10374":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"9:809:9425":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"6:5400:12949":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"4:0:3224":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"6:1547:12377":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"16:7406:10481":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"17:11499:11273":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"17:13282:11714":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:10274:9371":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:51923:9788":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"17:10516:10869":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"16:7333:10496":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"17:12521:11478":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:47113:8903":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"6:1572:12391":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:8116:3382":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:9516:9555":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"17:10912:13539":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"16:7420:10498":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"17:12442:11467":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"1:11030:13401":{"crate_id":1,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"9:963:10308":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"6:1760:12505":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"6:1729:9575":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"17:13506:11769":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"1:11331:9426":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"17:10988:13548":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"16:7174:10568":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"17:1236:13508":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"16:3091:10797":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"2:53084:8443":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"1:8000:9506":{"crate_id":1,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"6:4227:12673":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:48814:9083":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"17:12610:11493":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"16:2816:10753":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"5:7898:8903":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"1:1642:9360":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"16:5753:10536":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"19:0:963":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"2:3396:109":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"3:300:187":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"2:51272:9772":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"6:4052:12619":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"9:1075:10311":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"1:11891:9391":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"1:10255:11043":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"2:47226:9009":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"16:5960:10723":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"1:10935:9268":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"17:11100:10887":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"5:2896:60524":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"16:2794:10465":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"2:49393:9682":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:7495:9446":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"6:5130:12797":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"1:14871:9403":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"6:4410:12745":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:6591:13057":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"2:2078:1265":{"crate_id":2,"path":["core","mem","size_of"],"kind":"function"},"2:50929:9771":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"17:10975:13547":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"2:52950:1898":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"2:48070:69":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"2:49296:9919":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"16:6238:10480":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"17:12262:11420":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"1:15680:3264":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"16:7477:10499":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"1:10737:9467":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"2:48365:9719":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"2:77:1444":{"crate_id":2,"path":["core","usize"],"kind":"module"},"16:6252:10550":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:50909:13328":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"17:9896:60607":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"6:4371:12731":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"2:2777:9715":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"17:12582:11487":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"9:0:3226":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"1:14759:9338":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"17:13547:11783":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:51557:9816":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"0:996:1984":{"crate_id":0,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"16:4734:11951":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"1:2027:137":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:46578:3376":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"17:10635:11190":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"17:11665:11306":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"1:11989:8797":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"1:15085:9569":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"6:1554:12380":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"16:6949:10779":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"16:2773:10760":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"1:15690:3274":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"17:4157:10846":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"18:712:2183":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"17:9551:10882":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"1:1633:9359":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"16:3018:10738":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"1:11936:9394":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"6:1630:12429":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"12:0:3229":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"17:12221:11413":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"1:8514:8786":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"2:45897:9866":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:10903:9105":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"5:3951:10990":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"6:6028:13062":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"17:13377:11737":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"17:9759:13512":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"17:10106:10907":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"1:696:9481":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:8584:3380":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"2:48600:9113":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"5:375:10168":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"1:8863:8720":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"17:9592:120":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"16:7378:10482":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"9:157:10260":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"2:55670:9726":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:10599:9516":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"1:15689:3273":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"5:7951:9369":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"0:294:1528":{"crate_id":0,"path":["memchr","memrchr"],"kind":"function"},"2:4200:8903":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"17:13041:11635":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"1:7529:9448":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"2:56984:13345":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"17:12756:11519":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"5:5568:11000":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"1:15163:10405":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"1:3529:9274":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"1:1446:9346":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"1:14264:13429":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"16:3604:11101":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"1:11849:9009":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"6:5228:12853":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"2:52743:9809":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"2:12807:9686":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"5:1500:89":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"5:6443:9251":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"17:11519:11283":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"2:10031:8865":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"2:2829:165":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"6:1540:12375":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"16:2945:10759":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"16:5488:10526":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"6:4005:12599":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"17:12275:11421":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"6:3990:12593":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:10742:9468":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:12756:9679":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"2:4688:8874":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"14:47:13578":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"2:6596:3409":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:0:1291":{"crate_id":1,"path":["std"],"kind":"module"},"1:4293:9284":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"6:6644:13161":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"5:7448:211":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"12:181:10382":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"1:3233:9521":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"5:3137:9474":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"2:8066:3384":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:23382:9225":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"17:13370:11735":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"17:0:3233":{"crate_id":17,"path":["object"],"kind":"module"},"2:3266:8961":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"17:13221:11699":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"1:7800:57283":{"crate_id":1,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"16:5421:10522":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"1:13507:9461":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"2:4908:8836":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:1472:9348":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"18:0:1522":{"crate_id":18,"path":["memchr"],"kind":"module"},"2:10029:8864":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"2:23831:10024":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"16:7843:10579":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"17:10353:10896":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"2:47276:79":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:6593:13059":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"16:3118:10750":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"2:51295:9775":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"5:772:201":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:22315:59169":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"17:13172:11685":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"17:13163:11684":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"1:5848:9614":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"2:46321:3404":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"17:13540:11782":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"1:15684:3268":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"16:3800:11936":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"17:13062:11644":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"2:3083:127":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"1:3116:9259":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"2:51797:9796":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:15691:3275":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"5:8045:10171":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:32007:57971":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"16:5384:10520":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"6:4095:12643":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"6:1617:12422":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:3716:8992":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"2:3297:8971":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"5:1179:13716":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"1:14282:13435":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"16:4823:11954":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"1:8061:11020":{"crate_id":1,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"2:47242:8903":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"18:720:2141":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"2:48404:13320":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"16:4641:11948":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"2:3335:8975":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"2:8107:143":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"17:10052:13519":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"17:13446:11753":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"16:7928:10513":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"1:11348:9427":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"6:6091:13072":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"17:13733:11844":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"2:3183:8844":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"16:3365:10726":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"17:10950:13545":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"2:49181:9913":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:11108:9086":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:48983:9903":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"2:47156:8725":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"5:1558:9346":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"6:5528:12979":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:3177:192":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"2:50867:9782":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"16:0:3232":{"crate_id":16,"path":["gimli"],"kind":"module"},"6:5274:12875":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"16:7264:10493":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"2:49431:9687":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"6:5312:12903":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"2:22336:59164":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"2:50948:13329":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"5:1748:10990":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"6:4425:12752":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"17:12480:11472":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"17:11030:119":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:4492:9251":{"crate_id":2,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"1:8898:13630":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"16:5029:11960":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"5:6788:11002":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"17:10266:10806":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"1:10965:9304":{"crate_id":1,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"6:4145:12667":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"2:49445:9690":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:49287:9918":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:47360:76":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:12961:13718":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunksIter"],"kind":"struct"},"1:11756:9453":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"12:853:9347":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"9:234:10268":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"17:13627:11801":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"6:584:12337":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"16:6636:10494":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"17:10128:10909":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"2:50627:9813":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"15:248:10397":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"16:4417:11942":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"17:13205:11696":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"16:5314:11172":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"5:2892:60523":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"5:8092:10082":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"12:892:10366":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"17:8954:10843":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"6:3951:12573":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"6:4203:12671":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"17:510:13506":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"2:52806:9774":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"1:11212:9324":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"2:4931:8878":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:10995:9310":{"crate_id":1,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"2:49958:9942":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:3563:9269":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"16:2912:10736":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"17:11015:13550":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"5:2134:10199":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"2:3292:8966":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"2:49588:9695":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"12:1180:10375":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"15:269:10401":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"1:9069:9477":{"crate_id":1,"path":["std","lazy","SyncOnceCell"],"kind":"struct"},"16:6744:10773":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"1:6681:9331":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"6:3862:12511":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"6:1717:12490":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"17:11932:11361":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"16:5975:10542":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"5:6090:202":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"6:4293:12694":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:8103:128":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"16:7195:10570":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"0:827:156":{"crate_id":0,"path":["memchr","memmem","Prefilter","None"],"kind":"variant"},"2:49312:9921":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"6:605:12348":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"2:37241:2183":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"2:49135:9086":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"2:45558:181":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"2:11136:9087":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"6:5522:12978":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"1:13967:9282":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"1:3113:9518":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"12:2032:9473":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"1:15635:14024":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"2:6154:3398":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:3908:9470":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"6:616:12353":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"17:10028:13517":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"6:519:12297":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"2:46271:3388":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:11920:9393":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"2:49574:9694":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:46233:3399":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"0:987:1978":{"crate_id":0,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:1415:9009":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"12:2315:60595":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"2:46299:3403":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"2:23661:13197":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"17:13331:11725":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"1:15174:10405":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"5:1534:9010":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"12:1118:9359":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"2:4569:9725":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:50785:9806":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"17:13788:11863":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"17:9769:60608":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"2:0:461":{"crate_id":2,"path":["core"],"kind":"module"},"2:49792:10007":{"crate_id":2,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"1:1493:9351":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"16:6964:8724":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"2:46342:3405":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:10390:9490":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"17:11915:11355":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"2:53054:8441":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:4527:9226":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"1:11798:56290":{"crate_id":1,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"17:10468:10865":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"6:5548:12993":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"1:14042:9064":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"5:8063:13186":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"2:46280:3402":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:12471:120":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"2:45935:9922":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"2:55683:9726":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:5269:9561":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"1:14720:9339":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"2:9698:9888":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"5:2418:10202":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"14:244:12193":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"17:681:11247":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"2:24380:9459":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"16:3772:11935":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:49117:9090":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"17:13819:11870":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"17:12552:11484":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"5:5096:9251":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"17:13963:11909":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"6:6864:13165":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"1:2362:571":{"crate_id":1,"path":["std","env"],"kind":"module"},"2:48189:71":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"17:12327:11429":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"16:6691:10561":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"1:6353:9321":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"2:31943:8481":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"5:2887:60588":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"2:48852:9102":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"17:11277:11244":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"12:949:9355":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"12:2018:9349":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"2:49990:9233":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"6:4517:12790":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:52680:9789":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"16:4386:11941":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"2:52970:8436":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"5:2075:10992":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"1:11167:9583":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"2:49972:150":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"17:10844:10867":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"17:11822:11349":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"2:3245:8957":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"17:9689:60606":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"2:38398:9231":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"17:9296:11174":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"1:15683:3267":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:13459:142":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"2:48103:101":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"2:48115:119":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"1:14611:11047":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"2:51954:9791":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"2:49749:9928":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"12:429:10379":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"1:900:9486":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"2:3679:8991":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:6753:9202":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"0:283:1524":{"crate_id":0,"path":["memchr","memchr2_iter"],"kind":"function"},"1:15670:3254":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"6:3997:12597":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:10019:103":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"6:5428:12957":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"6:4387:12737":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"6:6852:13163":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"16:6999:10564":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"1:2433:13625":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"17:13685:11843":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"1:2183:9474":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"12:774:8903":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"17:12917:11532":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"1:12034:9340":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"17:11653:11305":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"1:3251:9527":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"16:7571:10474":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"17:12307:11428":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"1:4602:9262":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"2:31949:8482":{"crate_id":2,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"1:4593:56286":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"12:2009:8903":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2:52853:9792":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:48999:9266":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"2:3343:8977":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:13915:9334":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"2:49321:9329":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:11186:9330":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"6:4215:12672":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"1:11153:9574":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"2:46311:3066":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:15687:3271":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"2:46290:1662":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"17:10200:13522":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"1:11816:13424":{"crate_id":1,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"1:13644:9450":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"5:7050:8903":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"2:3182:1650":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"17:10140:10867":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"2:46219:13305":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"5:4382:10993":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"17:10887:11226":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"2:11122:9091":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"17:14000:11916":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"1:2723:9229":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"5:7981:96":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:3650:8988":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"2:3155:108":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"1:10413:9064":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"17:11001:13549":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"5:912:10159":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:49779:9342":{"crate_id":2,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"17:12741:11515":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"0:170:1536":{"crate_id":0,"path":["memchr","Memchr3"],"kind":"struct"},"2:22313:59166":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:2799:98":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"1:11743:163":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"2:3309:8969":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:5877:9618":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"0:296:1529":{"crate_id":0,"path":["memchr","memrchr2"],"kind":"function"},"2:47528:78":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"2:10980:9106":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"17:9245:10807":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"3:0:403":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"17:11328:11520":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"16:7894:10514":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"2:14041:1508":{"crate_id":2,"path":["core","core_arch","arch","x86_64"],"kind":"module"},"2:2875:166":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"17:13119:11679":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"17:299:13505":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"2:53107:8444":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"2:32107:57969":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"6:1690:12477":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"16:3338:10725":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"2:51876:9784":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"2:5131:10064":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"16:7024:10782":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"2:3638:129":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"12:160:10378":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"17:13933:11904":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"1:11809:57305":{"crate_id":1,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"5:3145:9472":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"17:13942:11906":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:49741:9933":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:8278:10214":{"crate_id":1,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"2:49949:9941":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"6:4494:12780":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"1:4468:3372":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:47833:8865":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"2:23794:39319":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:5303:16766":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2:50836:9794":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:48052:66":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"2:46533:3366":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"17:13898:11891":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"5:1586:9351":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:46181:3394":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:13660:57287":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"16:6087:10475":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"16:3287:10745":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"1:11857:9387":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"6:6887:13171":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"17:12028:11381":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"6:6051:13063":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"17:12456:11469":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"6:4083:12637":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:10037:8867":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"2:48076:125":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"2:4545:9722":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"0:617:1993":{"crate_id":0,"path":["memchr","memmem","find"],"kind":"function"},"6:1665:12458":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"1:2456:13626":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"1:7509:9447":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"17:11604:11296":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"2:51146:9795":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"17:13620:11799":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"12:761:9010":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:2774:92":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"12:747:9009":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"5:6367:10110":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"16:4852:11955":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"16:4955:11958":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"1:6997:8715":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"2:49745:9934":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:2188:9475":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"17:12373:11453":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"1:11794:13423":{"crate_id":1,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"2:23738:13206":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:24210:9509":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"16:4762:11952":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"2:4557:9724":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"6:6106:13077":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"17:9264:11172":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"2:13570:13595":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"5:8147:9349":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"16:4995:11959":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"5:3481:9010":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"2:48386:9425":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"6:5371:12936":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:51043:9803":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"17:13582:11791":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"17:13306:11716":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"6:5292:12887":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"5:1433:9361":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"6:5414:12952":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"16:4535:11946":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"17:9839:10867":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"17:12155:11405":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"12:968:9356":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"2:46210:3397":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"17:2314:10895":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"17:12431:11465":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"16:7360:176":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"16:7073:10565":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"5:7288:10145":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"6:1676:12466":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"17:11539:11284":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"17:10489:10868":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:47444:77":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"17:10304:10855":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"16:7884:10485":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"9:1056:10303":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"16:4704:11950":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"2:53016:8439":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"2:2827:388":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"6:3881:12521":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:47826:8864":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:820:11040":{"crate_id":1,"path":["std","thread","local","os","Key"],"kind":"struct"},"2:48878:9100":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"17:9034:46926":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"2:46201:3396":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"0:282:1527":{"crate_id":0,"path":["memchr","memchr_iter"],"kind":"function"},"17:11847:11353":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"2:10229:134":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:10239:138":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"0:284:1526":{"crate_id":0,"path":["memchr","memchr3_iter"],"kind":"function"},"18:136:1534":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"1:1619:9358":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"2:47819:8862":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:1075:9326":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"6:5379:12937":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:10279:9718":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:3110:9517":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:52347:9817":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"17:10253:10803":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"2:9038:8726":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"2:48357:13315":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:14244:9332":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"7:0:1435":{"crate_id":7,"path":["unwind"],"kind":"module"},"2:47654:87":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"5:69:10140":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"6:88:39999":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"1:14483:9245":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"5:7964:9370":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"16:5927:10541":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"6:5978:13034":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"16:4614:11947":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"1:8248:9506":{"crate_id":1,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"16:5717:10534":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"2:50650:9801":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"16:6014:10544":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:49330:9922":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:46037:95":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"6:525:12300":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:45621:9234":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"1:14855:9402":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"1:11135:9303":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"18:811:1978":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"10:0:3227":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"2:3904:67":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:49599:9696":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"6:6155:13113":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:24414:9968":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"17:10502:11188":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"2:2108:549":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"2:48085:66":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"5:909:91":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"6:4127:12656":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"2:45491:177":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"16:5632:10531":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"1:11391:9428":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"17:13240:11700":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"1:2162:9348":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"6:543:12308":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"1:1459:9347":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"1:11407:9430":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"2:47105:9010":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"1:15148:56582":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"1:11865:8903":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"2:3429:124":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:11904:9392":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"1:5685:9213":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:10016:103":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"17:9729:60604":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"2:47486:84":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"2:3074:73":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"1:6331:9322":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"17:9368:11176":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"1:10472:9363":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"17:3743:10833":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"17:10081:10852":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"18:744:2978":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"2:23824:13218":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"17:13884:11889":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"1:10505:3393":{"crate_id":1,"path":["std","error","Chain"],"kind":"struct"},"1:8787:8793":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"17:11159:11240":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"2:2211:9756":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"17:10279:10852":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"2:10623:9225":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:3108:120":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"1:15686:3270":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"6:5167:12823":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:2690:550":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"17:13842:11883":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"2:52601:9805":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"16:7158:10567":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"2:24244:9965":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"17:12982:11583":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"6:511:12292":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"6:4073:12630":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:10169:11247":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"6:1700:12483":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"17:12685:11508":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"2:45922:10073":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"16:5295:45348":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"17:11254:10883":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"1:11871:9390":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"16:4922:11957":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"5:1595:9352":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"5:1396:9358":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"1:9430:11035":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"17:12494:11474":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"2:46262:3401":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:10441:16760":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"1:9128:9478":{"crate_id":1,"path":["std","lazy","SyncLazy"],"kind":"struct"},"1:13964:9286":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"2:46055:9995":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:9965:187":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"17:10938:13544":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"16:7236:10574":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"17:13180:11686":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"2:48374:138":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"5:6154:9348":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"16:6780:10562":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"17:12671:11507":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"1:8356:9389":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"1:1507:9354":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"2:10035:8866":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"17:10407:10892":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"1:11147:9616":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"17:13348:11730":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"18:829:2033":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"1:14259:13427":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"2:49063:9908":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:45982:9921":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"17:12118:11400":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"1:10380:56583":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"5:4329:10993":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"5:4152:9009":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"15:230:10396":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"17:2512:10893":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"6:1602:12410":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:22728:9225":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"2:22692:21915":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"13:0:3223":{"crate_id":13,"path":["std_detect"],"kind":"module"},"18:620:1643":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"16:6768:10775":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"5:8069:196":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:55722:9726":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:15674:3258":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"9:27:10292":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"17:9528:9266":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"17:10041:13518":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"6:157:40065":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"2:23778:39310":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"2:48989:9904":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"6:5987:13035":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"17:12783:11523":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"5:983:10160":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"1:9577:11039":{"crate_id":1,"path":["std","sys_common","rwlock","MovableRwLock"],"kind":"struct"},"6:599:12345":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"16:2754:10727":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"9:41:10293":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"6:4255:9582":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"17:13465:11760":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"1:5543:9242":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"17:11304:46933":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"1:8616:154":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"6:1596:12408":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:12956:13594":{"crate_id":2,"path":["core","str","lossy","Utf8Lossy"],"kind":"struct"},"2:3090:204":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"18:169:1536":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"17:11794:11339":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"16:3939:11937":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"0:298:1531":{"crate_id":0,"path":["memchr","memrchr3"],"kind":"function"},"0:0:1522":{"crate_id":0,"path":["memchr"],"kind":"module"},"12:1651:10387":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"2:8302:149":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"17:13054:11642":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"2:22268:2183":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"17:9280:11173":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"16:6032:10468":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"16:6807:10563":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"2:11605:9103":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"6:3945:12572":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"1:15139:13442":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"16:4506:11945":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"17:13497:11768":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"16:7303:10576":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"16:6219:10549":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"2:51372:13330":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2:13535:169":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"18:667:1917":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:55735:9726":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:9435:11036":{"crate_id":1,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"16:7205:10571":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"1:15672:3256":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"17:13924:11900":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"16:5433:10523":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"2:3339:8976":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:10871:9261":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"2:10023:111":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"6:4013:12602":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"2:45581:8982":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"2:48349:9372":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"5:0:253":{"crate_id":5,"path":["alloc"],"kind":"module"},"17:10149:13514":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"16:3145:10749":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"17:12467:11470":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:45989:10069":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"17:13258:11708":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"6:5191:12839":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"16:2866:10735":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"1:11737:9451":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"2:4753:8876":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"1:14707:9454":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2:49737:9935":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"16:7250:10575":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"2:45966:10068":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"5:3233:9349":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"1:14295:121":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"1:11190:13044":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"1:8507:8785":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"1:1302:135":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"12:463:13711":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"9:900:12259":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"2:48932:9098":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:8342:184":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:9037:8727":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"16:5766:10537":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"16:5672:10532":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"1:11239:8716":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"17:12771:11520":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"2:46191:3395":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"6:624:12358":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"1:12480:11045":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"17:11118:46932":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"5:5554:10997":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"1:10928:9088":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"5:1219:10197":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2:4757:9879":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"2:45374:8993":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"6:569:12328":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"12:866:9348":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"1:13828:11046":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"17:11199:11243":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"16:4350:11940":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"16:3218:10742":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"1:13143:9576":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"2:38461:8847":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"17:10001:46977":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"1:4373:9283":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"1:14633:11049":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"17:10599:13533":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"2:49753:9929":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"2:31908:8480":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:14800:9462":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:48805:9085":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"17:11981:11375":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"16:6021:10733":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"6:5953:13016":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"17:11628:11300":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"6:1584:12400":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"18:694:1919":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"1:5864:9617":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"17:10962:13546":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"17:13746:11850":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"2:45912:10072":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:49031:9092":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"17:13098:11674":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"2:53005:8438":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"6:5282:12880":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"9:603:14016":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"5:6351:8784":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"17:9162:10884":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"17:9440:11178":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"16:3320:10798":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"2:47088:1801":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"17:12247:11417":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"2:3423:122":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:24346:9967":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"1:15004:9312":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:12488:9914":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:11142:9613":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"16:5790:10538":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"1:5754:9609":{"crate_id":1,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"6:4325:12707":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"5:3123:9009":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"2:47055:158":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"2:48396:13319":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"16:2889:10754":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"17:12659:11506":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:7810:2134":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"16:5505:10527":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"8:0:3225":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"14:216:45277":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"17:9186:10841":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"14:231:10084":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"16:6413:10393":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"5:7904:8903":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"1:10479:17769":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"2:10836:9010":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:2155:9009":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"18:857:2083":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"6:6910:13177":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:45853:9329":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"2:46549:3370":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"1:1428:9010":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"16:3264:10744":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"2:51224:9787":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:7843:11020":{"crate_id":1,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"1:12014:9339":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"5:6331:68":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"16:6101:10473":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"2:11738:11015":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"6:6085:13070":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"16:3041:10739":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:49305:9920":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"2:50602:13326":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:6095:9580":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"1:13308:13720":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"18:774:2142":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"17:9332:10859":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"17:12946:11552":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"1:1041:9320":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"2:10632:194":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"16:3172:10740":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"6:1522:12367":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"17:10117:10908":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"9:686:10241":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"17:13554:11784":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"1:7895:9506":{"crate_id":1,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"2:23859:9983":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:3617:9276":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"13:120:9050":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"0:286:1530":{"crate_id":0,"path":["memchr","memrchr2_iter"],"kind":"function"},"1:8652:13630":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"1:8256:9425":{"crate_id":1,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"2:13746:9675":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"2:12472:9911":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:10369:9482":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"5:7806:10162":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"17:9886:13514":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:3621:8984":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"16:6682:10491":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"12:2045:9475":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"16:6554:10557":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"1:12134:13626":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"2:48596:10078":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"2:22737:9770":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"18:866:2108":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"1:13682:9452":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"12:2303:12202":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"2:2113:8477":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"17:607:13507":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"1:7212:168":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"5:1837:9349":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"6:4112:12650":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"2:11015:9092":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"2:14:3335":{"crate_id":2,"path":["core","write"],"kind":"macro"},"5:7121:10990":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"1:10941:9303":{"crate_id":1,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"1:15669:3253":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"16:7042:10783":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"2:9976:126":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"2:3331:8974":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"5:1410:9360":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"6:4262:12675":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"6:5159:12821":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"1:10862:9289":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"1:10180:13642":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"2:8580:3379":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"17:4008:13509":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:11638:9104":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"2:3255:8959":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"0:285:1533":{"crate_id":0,"path":["memchr","memrchr_iter"],"kind":"function"},"6:4449:12766":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"17:10420:10891":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"1:10922:9266":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"2:48823:9084":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:3304:8968":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:10998:9311":{"crate_id":1,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"17:10926:13543":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"16:6391:10553":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"16:6491:10555":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"16:7971:119":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"17:11678:11307":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"6:5269:12874":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"17:13799:11867":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"6:1908:41369":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"5:3679:10990":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:23756:39318":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"2:49757:113":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"2:12523:9105":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"12:2331:9369":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"17:12208:11412":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"6:3868:12512":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"1:9423:57288":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"1:3440:9273":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"1:10651:9539":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"6:5969:13028":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"1:1530:9357":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"17:10160:11185":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"1:6215:9581":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"1:3235:9522":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"1:5549:9244":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"17:11640:11303":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"2:46042:9994":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"6:6858:13164":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2:51989:9773":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"6:3957:12575":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"2:5567:3411":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:7557:9450":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"17:9933:13515":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"2:48137:70":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"1:4584:8857":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"6:4439:12760":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:3319:8972":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"18:849:2102":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"16:6644:10560":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"17:10331:10867":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"1:1190:16764":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"2:12741:9681":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"0:290:1523":{"crate_id":0,"path":["memchr","memchr2"],"kind":"function"},"2:55748:9726":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"5:5518:10088":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"5:5469:10990":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"6:6200:13137":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"1:15675:3259":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"17:13192:11691":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"6:1708:12484":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:12178:9079":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"16:4477:11944":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"17:10317:10858":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"17:10236:10812":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"1:14479:13635":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"12:1144:9360":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"1:15064:9562":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"16:5561:10529":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"6:537:12305":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"6:6870:13166":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"1:1524:9356":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"6:4395:12741":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:5631:9209":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"17:10801:13538":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"1:2458:13627":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"2:2004:9251":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"16:4304:11939":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"2:51636:9804":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"2:50675:9793":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"17:11696:11316":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"1:8790:8794":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"2:3463:8989":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"1:11073:13407":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"2:47251:160":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"16:3195:10741":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"1:2166:9349":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"2:23677:13200":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"0:287:1532":{"crate_id":0,"path":["memchr","memrchr3_iter"],"kind":"function"},"17:10211:13523":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"14:0:3230":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"16:7279:10784":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"1:14319:9261":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"1:10643:110":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"2:3077:72":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:48832:9094":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"16:5346:10476":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"17:10623:13535":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"1:7543:9449":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"16:7146:10566":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"2:24852:9853":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"2:51452:13332":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"18:820:1984":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:47165:8573":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"6:6893:13172":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:783:11040":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"17:13780:11862":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"1:6825:9204":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"2:24142:9963":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"6:4066:12627":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:10971:9309":{"crate_id":1,"path":["std","net","ip","IpAddr"],"kind":"enum"},"1:7387:111":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"16:2991:10748":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"17:10458:11134":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"16:5707:10533":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"17:1311:10913":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"17:13865:11884":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"17:13590:11793":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"2:49721:9927":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"0:977:1983":{"crate_id":0,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"5:2886:1645":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"17:11993:11377":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"2:12670:9435":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"14:189:13578":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:3633:203":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"16:7342:10510":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"6:4501:12783":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:6227:3387":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:14329:56736":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"16:6357:10552":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"2:7373:3161":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"16:6605:10492":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:45996:10070":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"0:153:1535":{"crate_id":0,"path":["memchr","Memchr2"],"kind":"struct"},"16:3522:11097":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"17:8849:10881":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"6:1563:12385":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"17:13272:11713":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"13:232:12197":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"1:15640:16765":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"1:7795:9505":{"crate_id":1,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"2:49725:9930":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"18:885:2065":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"6:610:12350":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"1:1501:9353":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"5:1199:10196":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"12:396:10380":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"16:5941:171":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"5:8014:9995":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:10558:13529":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"16:2843:10734":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"6:4358:12726":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"17:13574:11790":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"2:21:642":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"6:6812:13162":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:47174:170":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"6:4272:12682":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"9:469:14006":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"17:12507:11475":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"6:6935:13180":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"2:46130:13600":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"1:2159:8903":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"2:7561:9764":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"6:4523:12793":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"1:4255:9546":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:3325:8973":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"6:4241:12674":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:22533:9225":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:11994:9338":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"1:1482:9349":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"16:5472:10525":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"2:6348:59111":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"2:46558:3372":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"17:10071:10912":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"5:3468:9009":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"6:3905:12539":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"1:10747:9278":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"2:55590:9732":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"1:10395:9504":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"2:46362:3407":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"6:4164:12668":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"1:14269:9220":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"9:749:10245":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"1:14694:9453":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:51247:9790":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"5:781:102":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"17:10061:13520":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"1:3249:9526":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"2:45450:178":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"6:4511:12788":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"16:5407:10521":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"9:776:10290":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"16:6620:10766":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"12:1200:10376":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"1:6755:9199":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"2:22537:9239":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"17:10403:10866":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"5:1545:8903":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"12:556:135":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"12:1667:10388":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"5:7852:8903":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2:13494:59066":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"16:5815:10539":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"5:3457:152":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"1:7166:13629":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:45680:9871":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:45868:9863":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"6:6005:13044":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:3280:8967":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"17:12095:11394":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2:12731:9680":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"2:47234:9010":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"0:613:1982":{"crate_id":0,"path":["memchr","memmem","rfind_iter"],"kind":"function"},"17:9088:46928":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"1:15673:3257":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:3314:8970":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"18:729:2972":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"5:1613:10194":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"1:1518:9355":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"1:15419:11050":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"16:3488:10747":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"16:6126:10545":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"1:11980:8790":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"5:4224:10182":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"6:4133:12658":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"2:7883:3367":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"5:8080:10081":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"2:51476:13333":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"2:45614:8985":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"5:8031:10170":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"17:9600:60602":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"2:49733:9931":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:7631:3364":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"12:1855:137":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"16:4230:11938":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"5:2888:13182":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"17:10571:13531":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"6:4306:12698":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"5:6934:10990":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"2:37217:160":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:46242:3400":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"2:48913:9099":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"17:11588:11295":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"5:3924:9348":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"12:1762:10988":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"6:4023:12608":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"1:15668:3252":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"12:2025:9472":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"2:3205:8846":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"6:5347:12924":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"9:722:10244":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"18:636:2142":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"2:22296:59132":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"17:13760:11856":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"17:11738:11321":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"17:9133:46929":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"6:4281:12687":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"6:4317:12704":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"1:15681:3265":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"2:3186:197":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"2:49081:9909":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"16:6577:10558":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"17:9574:10861":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"17:12568:11485":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"2:46251:3408":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"5:7866:10115":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2:4762:9880":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:2188:9753":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:4334:9287":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"6:1622:12424":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"17:12408:11464":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"6:6068:13065":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:51714:9811":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2:9036:8728":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"17:11358:10839":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"2:48904:9096":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"6:1527:12369":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"1:9567:11037":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockReadGuard"],"kind":"struct"},"2:49905:13324":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"0:618:2000":{"crate_id":0,"path":["memchr","memmem","rfind"],"kind":"function"},"17:12010:11380":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"17:13598:11794":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"2:9158:9681":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"6:4431:12755":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"12:812:9352":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"17:9799:13513":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"2:3260:8958":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"17:13453:11754":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"5:7783:8903":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:5350:747":{"crate_id":2,"path":["core","iter"],"kind":"module"},"1:6451:9317":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"17:11962:11370":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"16:6464:10490":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"2:52140:9797":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"2:2318:9664":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"2:4834:8875":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"17:12712:11512":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"17:11434:11253":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"16:5273:10728":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2:4824:9885":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"16:3714:11934":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"17:12645:11505":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"1:2855:161":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:24312:9966":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"2:49622:13613":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunk"],"kind":"struct"},"2:49013:9088":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"6:6923:13178":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:4371:9282":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"2:52979:1846":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:49729:9932":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"16:5231:11961":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"16:5736:10535":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"2:23622:13195":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"6:4046:12616":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"16:2968:10737":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"5:7814:60140":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"17:9961:13516":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"17:10584:10845":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"5:2202:10198":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"17:13477:11761":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"16:4790:11953":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"2:50731:9814":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:14496:9455":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"2:49277:9917":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"17:2543:10863":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"11:46:12208":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"1:11985:8796":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"17:10448:10814":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"16:3429:10466":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"2:5324:9765":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"17:9005:46925":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"17:11726:11320":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"6:591:12340":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"17:13609:11798":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"2:45960:9329":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:11094:9090":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"16:7761:10578":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"18:754:3064":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"6:0:766":{"crate_id":6,"path":["libc"],"kind":"module"},"6:6100:13076":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"}},"external_crates":{"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":15}