{"root":"0:0:1573","crate_version":"2.5.0","includes_private":false,"index":{"2:14426:141":{"id":"2:14426:141","crate_id":2,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14427:278","2:14428:519","2:14429:281","2:14430:1081"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2851-0:995:2038":{"id":"b:2:2851-0:995:2038","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2845:9703","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2038","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:2853:53841"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1001":{"id":"0:1001","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[575,16],"end":[575,21]},"visibility":{"restricted":{"parent":"0:300:1589","path":"::memmem"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10533:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2038","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["0:1003:661"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3195-0:995:2038":{"id":"b:2:3195-0:995:2038","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3154:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2038","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:3198:127","2:3199:1418"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13678:1748":{"id":"2:13678:1748","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:8647-0:170:1587":{"id":"b:2:8647-0:170:1587","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8844:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8643:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1587","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:8649:1855","2:8650:8939","2:8651:769"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"b:2:3180-0:965:2031":{"id":"b:2:3180-0:965:2031","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3157:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3154:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:965:2031","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:3183:3253"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13703:1705":{"id":"2:13703:1705","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:49699:9328","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9504:8797-0:986:2032":{"id":"a:2:9504:8797-0:986:2032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9504:8797","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2032","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:8647-0:153:1586":{"id":"b:2:8647-0:153:1586","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8844:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8643:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1586","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:8649:1855","2:8650:8939","2:8651:769"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"2:23072:9728":{"id":"2:23072:9728","crate_id":2,"name":"SimdInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23073:9732","2:23074:59575","2:23075:1229","2:23076:1230","2:23077:43367","2:23078:59620","2:23079:59621","2:23080:59622","2:23081:59623","2:23082:59624","2:23083:59576","2:23084:59577","2:23085:59578","2:23086:59579","2:23087:59580","2:23088:59581","2:23089:59582"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3357:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23121:9282","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13738:60196":{"id":"2:13738:60196","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"str::split":"1:15750:3311","self::pattern":"2:13302:9753","prim@char":"1:15744:3306","str::split_terminator":"1:15750:3311"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:49781:10000","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:9754","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:9754","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:9756","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4080-0:965:2031":{"id":"b:2:4080-0:965:2031","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4078:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:965:2031","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:4082:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:989":{"id":"0:989","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[448,9],"end":[448,14]},"visibility":{"restricted":{"parent":"0:300:1589","path":"::memmem"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2867:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2032","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["0:991:409"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8639:136":{"id":"2:8639:136","crate_id":2,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8641:685"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:833":{"id":"0:833","crate_id":0,"name":null,"span":{"filename":"src/memmem/prefilter/mod.rs","begin":[168,16],"end":[168,20]},"visibility":{"restricted":{"parent":"0:354:1965","path":"::memmem::prefilter"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3357:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3388:8546-0:170:1587":{"id":"a:2:3388:8546-0:170:1587","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3388:8546","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1587","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:6344:9385":{"id":"1:6344:9385","crate_id":1,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6345:58131","1:6346:58132"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:10":{"id":"0:10","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[172,21],"end":[172,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::memchr::memchr2_iter","name":"memchr2_iter","id":"0:283:1575","glob":false}},"2:10483:8988":{"id":"2:10483:8988","crate_id":2,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10484:1535","2:10485:57599","2:10487:57598"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13686:60192":{"id":"2:13686:60192","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3190-0:826:1966":{"id":"b:2:3190-0:826:1966","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3160:229","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3193:127","2:3194:1419"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:37":{"id":"0:37","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[173,63],"end":[173,75]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::memchr::memrchr_iter","name":"memrchr_iter","id":"0:285:1584","glob":false}},"2:3600:131":{"id":"2:3600:131","crate_id":2,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3602:378"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3603:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:2905:124":{"id":"2:2905:124","crate_id":2,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2900:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2848-0:1004:2087":{"id":"b:2:2848-0:1004:2087","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2842:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2087","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2850:3376"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8844:157":{"id":"2:8844:157","crate_id":2,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8845:1855","2:8846:923","2:8847:8940","2:8850:1856","2:8851:496","2:8853:8941","2:8856:8942","2:8857:8943","2:8858:8944","2:8859:2798","2:8861:3214","2:8863:8945","2:8864:8946","2:8866:842","2:8869:8947","2:8876:8948","2:8878:8949","2:8881:2951","2:8882:8950","2:8883:8951","2:8885:8952","2:8887:8953","2:8890:1310","2:8891:8529","2:8892:8954","2:8896:2796","2:8899:8955","2:8900:8956","2:8901:8957","2:8903:8958","2:8904:3164","2:8906:8959","2:8909:8960","2:8911:8961","2:8921:8962","2:8936:8963","2:8938:8964","2:8942:8965","2:8951:8966","2:8954:8967","2:8956:8968","2:8959:277","2:8966:295","2:8973:2047","2:8980:8969","2:8989:8970","2:8999:1015","2:9006:1861","2:9013:2069","2:9014:1822","2:9015:8928","2:9027:8927","2:9034:8926","2:9046:8925","2:9053:1730","2:9054:8971","2:9059:8972","2:9062:8973","2:9065:8974","2:9066:8975","2:9068:8976","2:9070:8977","2:9072:416","2:9075:8978","2:9078:998","2:9081:8979","2:9084:605","2:9087:8980","2:9090:908","2:9092:827","2:9094:793","2:9096:714","2:9098:697","2:9100:8981","2:9101:8982","2:9109:8983"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:9130:9390":{"id":"1:9130:9390","crate_id":1,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9131:58385","1:9132:58386","1:9133:58387","1:9134:58388","1:9135:58389","1:9136:39969","1:9137:58384"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10355:9282","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:153:1586":{"id":"0:153:1586","crate_id":0,"name":"Memchr2","span":{"filename":"src/memchr/iter.rs","begin":[72,0],"end":[79,1]},"visibility":"public","docs":"An iterator for `memchr2`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:159","a:2:3359:220-0:153:1586","a:2:9503:8798-0:153:1586","a:2:3347:211-0:153:1586","a:2:3388:8546-0:153:1586","a:2:9504:8797-0:153:1586","b:2:2851-0:153:1586","b:2:3184-0:153:1586","b:2:3195-0:153:1586","b:2:8647-0:153:1586","b:2:4080-0:153:1586","b:2:3190-0:153:1586","b:2:2848-0:153:1586","b:2:3180-0:153:1586","0:162","0:167"]}},"2:13685:2302":{"id":"2:13685:2302","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12766:2782"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:8647-0:976:2037":{"id":"b:2:8647-0:976:2037","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8844:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8643:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:976:2037","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:8649:1855","2:8650:8939","2:8651:769"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"b:2:2848-0:153:1586":{"id":"b:2:2848-0:153:1586","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2842:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1586","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2850:3376"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2848-0:965:2031":{"id":"b:2:2848-0:965:2031","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2842:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:965:2031","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:2850:3376"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:851:8985":{"id":"5:851:8985","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:296:1580":{"id":"0:296:1580","crate_id":0,"name":"memrchr2","span":{"filename":"src/memchr/mod.rs","begin":[325,0],"end":[352,1]},"visibility":"public","docs":"Like `memrchr`, but searches for either of two bytes instead of just one.\n\nThis returns the index corresponding to the last occurrence of `needle1` or\nthe last occurrence of `needle2` in `haystack` (whichever occurs later), or\n`None` if neither one is found. If an index is returned, it is guaranteed\nto be less than `usize::MAX`.\n\nWhile this is operationally the same as something like\n`haystack.iter().rposition(|&b| b == needle1 || b == needle2)`, `memrchr2`\nwill use a highly optimized routine that can be up to an order of magnitude\nfaster in some cases.\n\n# Example\n\nThis shows how to find the last position of either of two bytes in a byte\nstring.\n\n```\nuse memchr::memrchr2;\n\nlet haystack = b\"the quick brown fox\";\nassert_eq!(memrchr2(b'k', b'q', haystack), Some(8));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["needle1",{"kind":"primitive","inner":"u8"}],["needle2",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"a:2:9503:8798-0:826:1966":{"id":"a:2:9503:8798-0:826:1966","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9503:8798","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3180-0:995:2038":{"id":"b:2:3180-0:995:2038","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3157:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3154:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2038","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:3183:3253"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3195-0:986:2032":{"id":"b:2:3195-0:986:2032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3154:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2032","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:3198:127","2:3199:1418"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9503:8798-0:170:1587":{"id":"a:2:9503:8798-0:170:1587","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9503:8798","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1587","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3356:217":{"id":"2:3356:217","crate_id":2,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:14510:9478":{"id":"2:14510:9478","crate_id":2,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14511:57857","2:14512:57858","2:14513:57859","2:14514:57860","2:14515:57861","2:14516:57862","2:14517:8958"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13773:60207":{"id":"2:13773:60207","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"self::pattern":"2:13302:9753","prim@char":"1:15744:3306"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:9754","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:9754","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:13332:9757","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:183:923":{"id":"0:183:923","crate_id":0,"name":"next","span":{"filename":"src/memchr/iter.rs","begin":[152,4],"end":[157,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3184-0:137:1585":{"id":"b:2:3184-0:137:1585","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3157:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1585","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3186:682"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2851-0:1004:2087":{"id":"b:2:2851-0:1004:2087","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2845:9703","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2087","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2853:53841"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:848-0:826:1966":{"id":"b:5:848-0:826:1966","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2867:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:850:1699","5:851:8985","5:852:8986"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3184-0:826:1966":{"id":"b:2:3184-0:826:1966","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3157:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3186:682"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:660:306":{"id":"0:660:306","crate_id":0,"name":"as_ref","span":{"filename":"src/memmem/mod.rs","begin":[677,4],"end":[679,5]},"visibility":"public","docs":"Convert this finder into its borrowed variant.\n\nThis is primarily useful if your finder is owned and you'd like to\nstore its borrowed variant in some intermediate data structure.\n\nNote that the lifetime parameter of the returned finder is tied to the\nlifetime of `self`, and may be shorter than the `'n` lifetime of the\nneedle itself. Namely, a finder's needle can be either borrowed or\nowned, so the lifetime of the needle returned must necessarily be the\nshorter of the two.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2038","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:661:1723":{"id":"0:661:1723","crate_id":0,"name":"needle","span":{"filename":"src/memmem/mod.rs","begin":[688,4],"end":[690,5]},"visibility":"public","docs":"Returns the needle that this finder searches for.\n\nNote that the lifetime of the needle returned is tied to the lifetime\nof the finder, and may be shorter than the `'n` lifetime. Namely, a\nfinder's needle can be either borrowed or owned, so the lifetime of the\nneedle returned must necessarily be the shorter of the two.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13769:60204":{"id":"2:13769:60204","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6577:9275":{"id":"1:6577:9275","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6578:13719"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10355:9282","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13803:60213":{"id":"2:13803:60213","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:15744:3306"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:50030:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2842:97":{"id":"2:2842:97","crate_id":2,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2844:3376"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:288:1573":{"id":"0:288:1573","crate_id":0,"name":"memchr","span":{"filename":"src/memchr/mod.rs","begin":[87,0],"end":[125,1]},"visibility":"public","docs":"Search for the first occurrence of a byte in a slice.\n\nThis returns the index corresponding to the first occurrence of `needle` in\n`haystack`, or `None` if one is not found. If an index is returned, it is\nguaranteed to be less than `usize::MAX`.\n\nWhile this is operationally the same as something like\n`haystack.iter().position(|&b| b == needle)`, `memchr` will use a highly\noptimized routine that can be up to an order of magnitude faster in some\ncases.\n\n# Example\n\nThis shows how to find the first position of a byte in a byte string.\n\n```\nuse memchr::memchr;\n\nlet haystack = b\"the quick brown fox\";\nassert_eq!(memchr(b'k', haystack), Some(8));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["needle",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:23738:22190":{"id":"2:23738:22190","crate_id":2,"name":"SimdOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23739:58985","2:23740:58986","2:23741:58987"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdPartialOrd","id":"2:23733:9733","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3190-0:153:1586":{"id":"b:2:3190-0:153:1586","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3160:229","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1586","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3193:127","2:3194:1419"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3474:9043":{"id":"2:3474:9043","crate_id":2,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3476:181","2:3477:352"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3388:8546-0:153:1586":{"id":"a:2:3388:8546-0:153:1586","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3388:8546","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1586","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9504:8797-0:976:2037":{"id":"a:2:9504:8797-0:976:2037","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9504:8797","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:976:2037","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3190-0:137:1585":{"id":"b:2:3190-0:137:1585","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3160:229","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1585","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3193:127","2:3194:1419"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5520:9368":{"id":"1:5520:9368","crate_id":1,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5521:11334","1:5522:13525"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3184-0:1004:2087":{"id":"b:2:3184-0:1004:2087","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3157:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2087","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3186:682"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6165:8530":{"id":"5:6165:8530","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:8455:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:9754","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23108:9907":{"id":"2:23108:9907","crate_id":2,"name":"SimdUint","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23109:59575","2:23110:1229","2:23111:1230","2:23112:59576","2:23113:59577","2:23114:59578","2:23115:59579","2:23116:59580","2:23117:59581","2:23118:59582"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3357:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23121:9282","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:617:2047":{"id":"0:617:2047","crate_id":0,"name":"find","span":{"filename":"src/memmem/mod.rs","begin":[259,0],"end":[265,1]},"visibility":"public","docs":"Returns the index of the first occurrence of the given needle.\n\nNote that if you're are searching for the same needle in many different\nsmall haystacks, it may be faster to initialize a [`Finder`] once,\nand reuse it for each search.\n\n# Complexity\n\nThis routine is guaranteed to have worst case linear time complexity\nwith respect to both the needle and the haystack. That is, this runs\nin `O(needle.len() + haystack.len())` time.\n\nThis routine is also guaranteed to have worst case constant space\ncomplexity.\n\n# Examples\n\nBasic usage:\n\n```\nuse memchr::memmem;\n\nlet haystack = b\"foo bar baz\";\nassert_eq!(Some(0), memmem::find(haystack, b\"foo\"));\nassert_eq!(Some(4), memmem::find(haystack, b\"bar\"));\nassert_eq!(None, memmem::find(haystack, b\"quux\"));\n```","links":{"`Finder`":"0:986:2032"},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["needle",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"a:2:3359:220-0:1004:2087":{"id":"a:2:3359:220-0:1004:2087","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3359:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2087","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3184-0:170:1587":{"id":"b:2:3184-0:170:1587","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3157:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1587","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3186:682"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2848-0:170:1587":{"id":"b:2:2848-0:170:1587","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2842:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1587","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2850:3376"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3446:9038":{"id":"2:3446:9038","crate_id":2,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3448:267"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:115:780":{"id":"0:115:780","crate_id":0,"name":"iter","span":{"filename":"src/memchr/iter.rs","begin":[1,0],"end":[173,1]},"visibility":{"restricted":{"parent":"0:68:1573","path":"::memchr"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:137:1585","0:153:1586","0:170:1587"],"is_stripped":true}},"1:4771:9290":{"id":"1:4771:9290","crate_id":1,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4772:9086","1:4773:57988"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8687:120":{"id":"2:8687:120","crate_id":2,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8688:1857","2:8689:8932","2:8690:8933","2:8691:8934","2:8695:8935","2:8698:2054"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8844:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3388:8546-0:826:1966":{"id":"a:2:3388:8546-0:826:1966","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3388:8546","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:184:1856":{"id":"0:184:1856","crate_id":0,"name":"size_hint","span":{"filename":"src/memchr/iter.rs","begin":[160,4],"end":[162,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3659:9056":{"id":"2:3659:9056","crate_id":2,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3661:755"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Index","id":"2:3655:9055","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:34":{"id":"0:34","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[173,48],"end":[173,61]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::memchr::memrchr3_iter","name":"memrchr3_iter","id":"0:287:1583","glob":false}},"b:2:2848-0:826:1966":{"id":"b:2:2848-0:826:1966","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2842:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2850:3376"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3255:127":{"id":"2:3255:127","crate_id":2,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3256:10086","2:3258:57998","2:3259:57999","2:3260:58000"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10533:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Display","id":"2:10540:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:14042:150":{"id":"2:14042:150","crate_id":2,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:14043:181","2:14044:150","2:14045:768"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1003:661":{"id":"0:1003:661","crate_id":0,"name":"fmt","span":{"filename":"src/memmem/mod.rs","begin":[575,16],"end":[575,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10493:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10482:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4080-0:826:1966":{"id":"b:2:4080-0:826:1966","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4078:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4082:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11175:214":{"id":"2:11175:214","crate_id":2,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:11177:181","2:11178:2811","2:11179:13875","2:11180:55971","2:11181:55972","2:11182:754","2:11183:755"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:11166:9282","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13676":{"id":"2:13676","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:12755:1342","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:13677:794","2:13678:1748","2:13679:60189","2:13680:60190","2:13682:60191","2:13685:2302","2:13686:60192","2:13687:305","2:13688:55973","2:13689:2811","2:13691:13875","2:13693:55971","2:13695:55972","2:13697:9470","2:13698:60193","2:13699:1850","2:13700:55992","2:13701:10030","2:13702:9780","2:13703:1705","2:13704:32895","2:13705:32885","2:13706:10510","2:13707:60194","2:13708:32880","2:13709:3056","2:13712:56007","2:13715:56008","2:13718:2047","2:13722:2054","2:13726:54054","2:13729:32762","2:13732:56001","2:13735:60195","2:13738:60196","2:13741:56003","2:13744:56005","2:13747:60197","2:13750:60198","2:13753:3385","2:13756:60199","2:13759:60200","2:13762:60201","2:13765:60202","2:13767:60203","2:13769:60204","2:13771:60205","2:13772:60206","2:13773:60207","2:13776:60208","2:13779:20690","2:13782:56009","2:13785:60209","2:13788:60210","2:13791:60211","2:13794:9953","2:13796:10163","2:13797:55869","2:13798:55870","2:13799:55871","2:13800:60212","2:13802:9382","2:13803:60213"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2851-0:137:1585":{"id":"b:2:2851-0:137:1585","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2845:9703","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1585","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2853:53841"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:829:2694":{"id":"0:829:2694","crate_id":0,"name":"Auto","span":{"filename":"src/memmem/prefilter/mod.rs","begin":[176,4],"end":[176,8]},"visibility":"default","docs":"Automatically detect whether a heuristic prefilter should be used. If\nit is used, then heuristics will be used to dynamically disable the\nprefilter if it is believed to not be carrying its weight.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:2848-0:986:2032":{"id":"b:2:2848-0:986:2032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2842:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2032","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:2850:3376"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:301":{"id":"0:301","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[69,0],"end":[69,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::prefilter::Prefilter","name":"Prefilter","id":"0:826:1966","glob":false}},"2:3148:75":{"id":"2:3148:75","crate_id":2,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3150:306"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:3160:229":{"id":"2:3160:229","crate_id":2,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3162:127","2:3163:1419"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:569:341":{"id":"0:569:341","crate_id":0,"name":"avx","span":{"filename":"src/memmem/x86/avx.rs","begin":[1,0],"end":[139,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":true}},"a:2:3388:8546-0:976:2037":{"id":"a:2:3388:8546-0:976:2037","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3388:8546","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:976:2037","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1006":{"id":"0:1006","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[698,9],"end":[698,14]},"visibility":{"restricted":{"parent":"0:300:1589","path":"::memmem"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2867:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2087","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1007:409"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3467:9046":{"id":"2:3467:9046","crate_id":2,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3468:181","2:3469:953"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:624":{"id":"0:624","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[347,0],"end":[367,1]},"visibility":{"restricted":{"parent":"0:300:1589","path":"::memmem"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["collect_into","scan","filter","advance_by","chain","collect","le","partial_cmp_by","cloned","map","enumerate","reduce","partition","gt","flatten","filter_map","nth","cmp","min_by","eq","eq_by","take","zip","cycle","try_reduce","rposition","partition_in_place","fuse","ge","peekable","count","step_by","any","min_by_key","all","max","array_chunks","is_sorted","find_map","is_partitioned","size_hint","inspect","skip_while","position","intersperse","max_by","is_sorted_by","sum","try_find","try_fold","by_ref","lt","take_while","intersperse_with","next_chunk","flat_map","partial_cmp","max_by_key","is_sorted_by_key","product","unzip","try_for_each","rev","try_collect","find","map_while","for_each","last","skip","min","__iterator_get_unchecked","cmp_by","copied","ne","fold"],"trait":{"name":"Iterator","id":"2:8844:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:965:2031","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["0:627:1855","0:628:923"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3347:211-0:826:1966":{"id":"a:2:3347:211-0:826:1966","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3347:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13799:55871":{"id":"2:13799:55871","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3359:220-0:995:2038":{"id":"a:2:3359:220-0:995:2038","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3359:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2038","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13695:55972":{"id":"2:13695:55972","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11175:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11175:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:292:1576":{"id":"0:292:1576","crate_id":0,"name":"memchr3","span":{"filename":"src/memchr/mod.rs","begin":[204,0],"end":[236,1]},"visibility":"public","docs":"Like `memchr`, but searches for any of three bytes instead of just one.\n\nThis returns the index corresponding to the first occurrence of `needle1`,\nthe first occurrence of `needle2`, or the first occurrence of `needle3` in\n`haystack` (whichever occurs earliest), or `None` if none are found. If an\nindex is returned, it is guaranteed to be less than `usize::MAX`.\n\nWhile this is operationally the same as something like\n`haystack.iter().position(|&b| b == needle1 || b == needle2 ||\nb == needle3)`, `memchr3` will use a highly optimized routine that can be\nup to an order of magnitude faster in some cases.\n\n# Example\n\nThis shows how to find the first position of any of three bytes in a byte\nstring.\n\n```\nuse memchr::memchr3;\n\nlet haystack = b\"the quick brown fox\";\nassert_eq!(memchr3(b'k', b'q', b'e', haystack), Some(2));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["needle1",{"kind":"primitive","inner":"u8"}],["needle2",{"kind":"primitive","inner":"u8"}],["needle3",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13753:3385":{"id":"2:13753:3385","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:13302:9753","str::matches":"1:15750:3311","prim@char":"1:15744:3306","`DoubleEndedIterator`":"2:8687:120"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:49917:10006","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:9754","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:166:1856":{"id":"0:166:1856","crate_id":0,"name":"size_hint","span":{"filename":"src/memchr/iter.rs","begin":[103,4],"end":[105,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4080-0:1004:2087":{"id":"b:2:4080-0:1004:2087","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4078:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2087","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4082:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:169:1857":{"id":"0:169:1857","crate_id":0,"name":"next_back","span":{"filename":"src/memchr/iter.rs","begin":[110,4],"end":[115,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8844:157","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13688:55973":{"id":"2:13688:55973","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:15761:3320"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3195-0:826:1966":{"id":"b:2:3195-0:826:1966","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3154:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3198:127","2:3199:1418"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10550:189":{"id":"2:10550:189","crate_id":2,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10551:661"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3436:9036":{"id":"2:3436:9036","crate_id":2,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3438:181","2:3439:1104"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:23405:9835":{"id":"2:23405:9835","crate_id":2,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdElement","id":"2:24042:9725","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23396:9282","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:23208:9392":{"id":"2:23208:9392","crate_id":2,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23198:9282","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:8650:8939":{"id":"2:8650:8939","crate_id":2,"name":"IntoIter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"I"}}},"2:8649:1855":{"id":"2:8649:1855","crate_id":2,"name":"Item","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8844:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:13312:9754":{"id":"2:13312:9754","crate_id":2,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13314:2085","2:13315:58628","2:13316:58633","2:13317:58629","2:13318:58631","2:13319:58630","2:13320:58632"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:354:1965":{"id":"0:354:1965","crate_id":0,"name":"prefilter","span":{"filename":"src/memmem/prefilter/mod.rs","begin":[1,0],"end":[570,1]},"visibility":{"restricted":{"parent":"0:300:1589","path":"::memmem"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:826:1966"],"is_stripped":true}},"0:834":{"id":"0:834","crate_id":0,"name":null,"span":{"filename":"src/memmem/prefilter/mod.rs","begin":[168,22],"end":[168,27]},"visibility":{"restricted":{"parent":"0:354:1965","path":"::memmem::prefilter"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10533:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:835:661"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2848-0:995:2038":{"id":"b:2:2848-0:995:2038","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2842:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2038","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:2850:3376"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3388:8546-0:1004:2087":{"id":"a:2:3388:8546-0:1004:2087","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3388:8546","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2087","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3430:9033":{"id":"2:3430:9033","crate_id":2,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3432:181","2:3433:559"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:282:1578":{"id":"0:282:1578","crate_id":0,"name":"memchr_iter","span":{"filename":"src/memchr/mod.rs","begin":[17,0],"end":[19,1]},"visibility":"public","docs":"An iterator over all occurrences of the needle in a haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["needle",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1585","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3151:74":{"id":"2:3151:74","crate_id":2,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3153:3055"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:9124:3429":{"id":"2:9124:3429","crate_id":2,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8844:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3359:220-0:826:1966":{"id":"a:2:3359:220-0:826:1966","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3359:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1000:409":{"id":"0:1000:409","crate_id":0,"name":"clone","span":{"filename":"src/memmem/mod.rs","begin":[575,9],"end":[575,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2038","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13776:60208":{"id":"2:13776:60208","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:15744:3306","self::pattern":"2:13302:9753"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:9754","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10533:109":{"id":"2:10533:109","crate_id":2,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10534:661"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9504:8797-0:170:1587":{"id":"a:2:9504:8797-0:170:1587","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9504:8797","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1587","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:2853:53841":{"id":"2:2853:53841","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:298:1582":{"id":"0:298:1582","crate_id":0,"name":"memrchr3","span":{"filename":"src/memchr/mod.rs","begin":[378,0],"end":[410,1]},"visibility":"public","docs":"Like `memrchr`, but searches for any of three bytes instead of just one.\n\nThis returns the index corresponding to the last occurrence of `needle1`,\nthe last occurrence of `needle2`, or the last occurrence of `needle3` in\n`haystack` (whichever occurs later), or `None` if none are found. If an\nindex is returned, it is guaranteed to be less than `usize::MAX`.\n\nWhile this is operationally the same as something like\n`haystack.iter().rposition(|&b| b == needle1 || b == needle2 ||\nb == needle3)`, `memrchr3` will use a highly optimized routine that can be\nup to an order of magnitude faster in some cases.\n\n# Example\n\nThis shows how to find the last position of any of three bytes in a byte\nstring.\n\n```\nuse memchr::memrchr3;\n\nlet haystack = b\"the quick brown fox\";\nassert_eq!(memrchr3(b'k', b'q', b'e', haystack), Some(8));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["needle1",{"kind":"primitive","inner":"u8"}],["needle2",{"kind":"primitive","inner":"u8"}],["needle3",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"b:2:3184-0:995:2038":{"id":"b:2:3184-0:995:2038","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3157:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2038","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:3186:682"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3484:9045":{"id":"2:3484:9045","crate_id":2,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3486:181","2:3487:357"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:4866:9820":{"id":"2:4866:9820","crate_id":2,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4867:1855","2:4868:58774","2:4869:1856"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2900:183":{"id":"2:2900:183","crate_id":2,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2902:605","2:2903:908"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:982":{"id":"0:982","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[375,9],"end":[375,14]},"visibility":{"restricted":{"parent":"0:300:1589","path":"::memmem"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10533:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:976:2037","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["0:985:661"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:1075:9380":{"id":"1:1075:9380","crate_id":1,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:1076:1699","1:1077:10163","1:1078:55867","1:1079:55868","1:1080:55869","1:1081:55870","1:1082:55871"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3454:9040":{"id":"2:3454:9040","crate_id":2,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3456:894"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6224:9275":{"id":"1:6224:9275","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6225:9652","1:6226:9653","1:6227:13718","1:6228:54219","1:6230:54223","1:6232:54220","1:6233:54221","1:6235:54222"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10355:9282","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:142":{"id":"0:142","crate_id":0,"name":null,"span":{"filename":"src/memchr/iter.rs","begin":[42,0],"end":[48,1]},"visibility":{"restricted":{"parent":"0:115:780","path":"::memchr::iter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1585","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:144:921"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3183:3253":{"id":"2:3183:3253","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3157:135"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3355:218":{"id":"2:3355:218","crate_id":2,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10781:146":{"id":"2:10781:146","crate_id":2,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10782:653","2:10783:3388","2:10784:53933","2:10785:53934","2:10786:53935","2:10787:53936","2:10788:53937","2:10789:53938","2:10790:53939","2:10791:53940","2:10792:53941","2:10793:53942","2:10794:53943","2:10795:53944","2:10796:53945","2:10797:1535"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:991:409":{"id":"0:991:409","crate_id":0,"name":"clone","span":{"filename":"src/memmem/mod.rs","begin":[448,9],"end":[448,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2032","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13756:60199":{"id":"2:13756:60199","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:13302:9753","prim@char":"1:15744:3306","`DoubleEndedIterator`":"2:8687:120","str::matches":"1:15750:3311"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:49935:10007","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:9754","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:9754","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:9756","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3442:9035":{"id":"2:3442:9035","crate_id":2,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3443:181","2:3444:914"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8712:3433":{"id":"2:8712:3433","crate_id":2,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8713:794","2:8714:1748"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8844:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:6164:60848":{"id":"5:6164:60848","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:444:1700","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8200:10170","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:444:1700","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8200:10170","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6168:60849":{"id":"5:6168:60849","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:8455:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:9754","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:19":{"id":"0:19","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[172,58],"end":[172,69]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::memchr::memchr_iter","name":"memchr_iter","id":"0:282:1578","glob":false}},"0:826:1966":{"id":"0:826:1966","crate_id":0,"name":"Prefilter","span":{"filename":"src/memmem/prefilter/mod.rs","begin":[170,0],"end":[177,1]},"visibility":"public","docs":"Prefilter controls whether heuristics are used to accelerate searching.\n\nA prefilter refers to the idea of detecting candidate matches very quickly,\nand then confirming whether those candidates are full matches. This\nidea can be quite effective since it's often the case that looking for\ncandidates can be a lot faster than running a complete substring search\nover the entire input. Namely, looking for candidates can be done with\nextremely fast vectorized code.\n\nThe downside of a prefilter is that it assumes false positives (which are\ncandidates generated by a prefilter that aren't matches) are somewhat rare\nrelative to the frequency of full matches. That is, if a lot of false\npositives are generated, then it's possible for search time to be worse\nthan if the prefilter wasn't enabled in the first place.\n\nAnother downside of a prefilter is that it can result in highly variable\nperformance, where some cases are extraordinarily fast and others aren't.\nTypically, variable performance isn't a problem, but it may be for your use\ncase.\n\nThe use of prefilters in this implementation does use a heuristic to detect\nwhen a prefilter might not be carrying its weight, and will dynamically\ndisable its use. Nevertheless, this configuration option gives callers\nthe ability to disable prefilters if you have knowledge that they won't be\nuseful.","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:827:174","0:829:2694"],"impls":["a:2:3359:220-0:826:1966","a:2:9503:8798-0:826:1966","a:2:3347:211-0:826:1966","a:2:3388:8546-0:826:1966","a:2:9504:8797-0:826:1966","b:2:2851-0:826:1966","b:2:3184-0:826:1966","b:2:3195-0:826:1966","b:2:4080-0:826:1966","b:2:3190-0:826:1966","b:2:2848-0:826:1966","b:2:3180-0:826:1966","b:5:848-0:826:1966","0:831","0:833","0:834","0:455"]}},"2:13788:60210":{"id":"2:13788:60210","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:13302:9753","prim@char":"1:15744:3306"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:9754","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3180-0:976:2037":{"id":"b:2:3180-0:976:2037","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3157:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3154:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:976:2037","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:3183:3253"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6171:60850":{"id":"5:6171:60850","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:8455:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10816:9404":{"id":"2:10816:9404","crate_id":2,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10817:146","2:10818:34132","2:10819:55837"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3195-0:137:1585":{"id":"b:2:3195-0:137:1585","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3154:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1585","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3198:127","2:3199:1418"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13765:60202":{"id":"2:13765:60202","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23733:9733":{"id":"2:23733:9733","crate_id":2,"name":"SimdPartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23734:1272","2:23735:1271","2:23736:1269","2:23737:1268"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdPartialEq","id":"2:23145:9906","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3489:9047":{"id":"2:3489:9047","crate_id":2,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3491:181","2:3492:1235"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9504:8797-0:965:2031":{"id":"a:2:9504:8797-0:965:2031","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9504:8797","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:965:2031","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:79":{"id":"0:79","crate_id":0,"name":null,"span":{"filename":"src/memchr/mod.rs","begin":[3,38],"end":[3,45]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::iter::Memchr3","name":"Memchr3","id":"0:170:1587","glob":false}},"0:568:1721":{"id":"0:568:1721","crate_id":0,"name":"x86","span":{"filename":"src/memmem/x86/mod.rs","begin":[1,0],"end":[2,19]},"visibility":{"restricted":{"parent":"0:300:1589","path":"::memmem"}},"docs":null,"links":{},"attrs":["#[cfg(all(not(miri), target_arch = \"x86_64\", memchr_runtime_simd))]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":true}},"2:2946:184":{"id":"2:2946:184","crate_id":2,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2948:998","2:2949:827","2:2950:793","2:2951:714","2:2952:697"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2900:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3594:8547":{"id":"2:3594:8547","crate_id":2,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3595:579"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3655:9055":{"id":"2:3655:9055","crate_id":2,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3657:181","2:3658:754"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:16":{"id":"0:16","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[172,44],"end":[172,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::memchr::memchr3_iter","name":"memchr3_iter","id":"0:284:1577","glob":false}},"2:3357:106":{"id":"2:3357:106","crate_id":2,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2867:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9503:8798-0:995:2038":{"id":"a:2:9503:8798-0:995:2038","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9503:8798","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2038","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13796:10163":{"id":"2:13796:10163","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13729:32762":{"id":"2:13729:32762","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"self::pattern":"2:13302:9753","prim@char":"1:15744:3306"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:13094:9173","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:9754","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8606:3435":{"id":"2:8606:3435","crate_id":2,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8608:8977"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9503:8798-0:153:1586":{"id":"a:2:9503:8798-0:153:1586","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9503:8798","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1586","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:6746:9280":{"id":"1:6746:9280","crate_id":1,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6747:58048"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3195-0:965:2031":{"id":"b:2:3195-0:965:2031","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3154:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:965:2031","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:3198:127","2:3199:1418"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3853:9066":{"id":"2:3853:9066","crate_id":2,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:201:1721":{"id":"0:201:1721","crate_id":0,"name":"x86","span":{"filename":"src/memchr/x86/mod.rs","begin":[1,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:68:1573","path":"::memchr"}},"docs":null,"links":{},"attrs":["#[cfg(all(not(miri), target_arch = \"x86_64\", memchr_runtime_simd))]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":true}},"2:24042:9725":{"id":"2:24042:9725","crate_id":2,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:24043:9732"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:24038:9282","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"2:3357:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:6184:60852":{"id":"5:6184:60852","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:444:1700","`String`":"5:8455:216"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:444:1700","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8200:10170","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:4078:68":{"id":"2:4078:68","crate_id":2,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4079:1431"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"5:6187:55868":{"id":"5:6187:55868","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:15750:3311"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3420:9037":{"id":"2:3420:9037","crate_id":2,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3422:181","2:3423:1357"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9504:8797-0:995:2038":{"id":"a:2:9504:8797-0:995:2038","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9504:8797","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2038","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:22":{"id":"0:22","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[173,4],"end":[173,11]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::memchr::memrchr","name":"memrchr","id":"0:294:1579","glob":false}},"2:3807:225":{"id":"2:3807:225","crate_id":2,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3808:181","2:3809:9061","2:3810:687","2:3811:370"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FromResidual","id":"2:3812:137","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3807:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3347:211":{"id":"2:3347:211","crate_id":2,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3184-0:153:1586":{"id":"b:2:3184-0:153:1586","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3157:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1586","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3186:682"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13241:9484":{"id":"2:13241:9484","crate_id":2,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13242:126","2:13243:54203"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3190-0:986:2032":{"id":"b:2:3190-0:986:2032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3160:229","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2032","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:3193:127","2:3194:1419"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:623:1713":{"id":"0:623:1713","crate_id":0,"name":"into_owned","span":{"filename":"src/memmem/mod.rs","begin":[337,4],"end":[344,5]},"visibility":"public","docs":"Convert this iterator into its owned variant, such that it no longer\nborrows the finder and needle.\n\nIf this is already an owned iterator, then this is a no-op. Otherwise,\nthis copies the needle.\n\nThis is only available when the `std` feature is enabled.","links":{},"attrs":["#[cfg(feature = \"std\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:965:2031","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'static"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2850:3376":{"id":"2:2850:3376","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:995:2038":{"id":"0:995:2038","crate_id":0,"name":"FinderRev","span":{"filename":"src/memmem/mod.rs","begin":[576,0],"end":[578,1]},"visibility":"public","docs":"A single substring reverse searcher fixed to a particular needle.\n\nThe purpose of this type is to permit callers to construct a substring\nsearcher that can be used to search haystacks without the overhead of\nconstructing the searcher in the first place. This is a somewhat niche\nconcern when it's necessary to re-use the same needle to search multiple\ndifferent haystacks with as little overhead as possible. In general,\nusing [`rfind`] is good enough, but `FinderRev` is useful when you can\nmeaningfully observe searcher construction time in a profile.\n\nWhen the `std` feature is enabled, then this type has an `into_owned`\nversion which permits building a `FinderRev` that is not connected to\nthe lifetime of its needle.","links":{"`rfind`":"0:618:2054"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:650","a:2:3359:220-0:995:2038","a:2:9503:8798-0:995:2038","a:2:3347:211-0:995:2038","a:2:3388:8546-0:995:2038","a:2:9504:8797-0:995:2038","b:2:2851-0:995:2038","b:2:3184-0:995:2038","b:2:3195-0:995:2038","b:2:4080-0:995:2038","b:2:3190-0:995:2038","b:2:2848-0:995:2038","b:2:3180-0:995:2038","b:5:848-0:995:2038","0:998","0:1001"]}},"2:13744:56005":{"id":"2:13744:56005","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"self::pattern":"2:13302:9753","str::splitn":"1:15750:3311","prim@char":"1:15744:3306"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:49835:9155","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:9754","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:9754","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:9756","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:637:1855":{"id":"0:637:1855","crate_id":0,"name":"Item","span":{"filename":"src/memmem/mod.rs","begin":[413,4],"end":[413,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"usize"}}},"2:3458:9039":{"id":"2:3458:9039","crate_id":2,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3460:560"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13693:55971":{"id":"2:13693:55971","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11175:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11175:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:13800:60212":{"id":"2:13800:60212","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"1:15744:3306"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:50012:10012","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3501:9049":{"id":"2:3501:9049","crate_id":2,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3503:353"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13701:10030":{"id":"2:13701:10030","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:15744:3306"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49683:9994","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5574:9371":{"id":"1:5574:9371","crate_id":1,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5575:57524"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10355:9282","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:641:921":{"id":"0:641:921","crate_id":0,"name":"new","span":{"filename":"src/memmem/mod.rs","begin":[456,4],"end":[458,5]},"visibility":"public","docs":"Create a new finder for the given needle.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["needle",{"kind":"borrowed_ref","inner":{"lifetime":"'n","mutable":false,"type":{"kind":"generic","inner":"B"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2032","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"AsRef","id":"2:3148:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3195-0:153:1586":{"id":"b:2:3195-0:153:1586","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3154:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1586","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3198:127","2:3199:1418"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:150":{"id":"0:150","crate_id":0,"name":null,"span":{"filename":"src/memchr/iter.rs","begin":[64,0],"end":[69,1]},"visibility":{"restricted":{"parent":"0:115:780","path":"::memchr::iter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["nth_back","rfold","advance_back_by","try_rfold","rfind"],"trait":{"name":"DoubleEndedIterator","id":"2:8687:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1585","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:152:1857"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:456:59":{"id":"0:456:59","crate_id":0,"name":"default","span":{"filename":"src/memmem/prefilter/mod.rs","begin":[180,4],"end":[182,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:654:2054":{"id":"0:654:2054","crate_id":0,"name":"rfind","span":{"filename":"src/memmem/mod.rs","begin":[614,4],"end":[616,5]},"visibility":"public","docs":"Returns the index of the last occurrence of this needle in the given\nhaystack.\n\nThe haystack may be any type that can be cheaply converted into a\n`&[u8]`. This includes, but is not limited to, `&str` and `&[u8]`.\n\n# Complexity\n\nThis routine is guaranteed to have worst case linear time complexity\nwith respect to both the needle and the haystack. That is, this runs\nin `O(needle.len() + haystack.len())` time.\n\nThis routine is also guaranteed to have worst case constant space\ncomplexity.\n\n# Examples\n\nBasic usage:\n\n```\nuse memchr::memmem::FinderRev;\n\nlet haystack = b\"foo bar baz\";\nassert_eq!(Some(0), FinderRev::new(\"foo\").rfind(haystack));\nassert_eq!(Some(4), FinderRev::new(\"bar\").rfind(haystack));\nassert_eq!(None, FinderRev::new(\"quux\").rfind(haystack));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["haystack",{"kind":"generic","inner":"B"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:3148:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:643:2047":{"id":"0:643:2047","crate_id":0,"name":"find","span":{"filename":"src/memmem/mod.rs","begin":[484,4],"end":[486,5]},"visibility":"public","docs":"Returns the index of the first occurrence of this needle in the given\nhaystack.\n\n# Complexity\n\nThis routine is guaranteed to have worst case linear time complexity\nwith respect to both the needle and the haystack. That is, this runs\nin `O(needle.len() + haystack.len())` time.\n\nThis routine is also guaranteed to have worst case constant space\ncomplexity.\n\n# Examples\n\nBasic usage:\n\n```\nuse memchr::memmem::Finder;\n\nlet haystack = b\"foo bar baz\";\nassert_eq!(Some(0), Finder::new(\"foo\").find(haystack));\nassert_eq!(Some(4), Finder::new(\"bar\").find(haystack));\nassert_eq!(None, Finder::new(\"quux\").find(haystack));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3795:9059":{"id":"2:3795:9059","crate_id":2,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"RangeBounds","id":"2:3726:9058","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:188:1720":{"id":"0:188:1720","crate_id":0,"name":"naive","span":{"filename":"src/memchr/naive.rs","begin":[1,0],"end":[25,1]},"visibility":"public","docs":null,"links":{},"attrs":["#![allow(dead_code)]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":false}},"2:13782:56009":{"id":"2:13782:56009","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:13302:9753","prim@char":"1:15744:3306"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:9754","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:9754","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:9756","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13700:55992":{"id":"2:13700:55992","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"1:15750:3311"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:159":{"id":"0:159","crate_id":0,"name":null,"span":{"filename":"src/memchr/iter.rs","begin":[81,0],"end":[92,1]},"visibility":{"restricted":{"parent":"0:115:780","path":"::memchr::iter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1586","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:161:921"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13691:13875":{"id":"2:13691:13875","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:47750:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11175:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11175:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:177":{"id":"0:177","crate_id":0,"name":null,"span":{"filename":"src/memchr/iter.rs","begin":[129,0],"end":[146,1]},"visibility":{"restricted":{"parent":"0:115:780","path":"::memchr::iter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1587","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:179:921"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:145":{"id":"0:145","crate_id":0,"name":null,"span":{"filename":"src/memchr/iter.rs","begin":[50,0],"end":[62,1]},"visibility":{"restricted":{"parent":"0:115:780","path":"::memchr::iter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["collect_into","scan","filter","advance_by","chain","collect","le","partial_cmp_by","cloned","map","enumerate","reduce","partition","gt","flatten","filter_map","nth","cmp","min_by","eq","eq_by","take","zip","cycle","try_reduce","rposition","partition_in_place","fuse","ge","peekable","count","step_by","any","min_by_key","all","max","array_chunks","is_sorted","find_map","is_partitioned","size_hint","inspect","skip_while","position","intersperse","max_by","is_sorted_by","sum","try_find","try_fold","by_ref","lt","take_while","intersperse_with","next_chunk","flat_map","partial_cmp","max_by_key","is_sorted_by_key","product","unzip","try_for_each","rev","try_collect","find","map_while","for_each","last","skip","min","__iterator_get_unchecked","cmp_by","copied","ne","fold"],"trait":{"name":"Iterator","id":"2:8844:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1585","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:147:1855","0:148:923","0:149:1856"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2851-0:170:1587":{"id":"b:2:2851-0:170:1587","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2845:9703","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1587","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2853:53841"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3180-0:153:1586":{"id":"b:2:3180-0:153:1586","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3157:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3154:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1586","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3183:3253"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3495:9048":{"id":"2:3495:9048","crate_id":2,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3497:181","2:3498:1238"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3359:220-0:976:2037":{"id":"a:2:3359:220-0:976:2037","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3359:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:976:2037","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8652:3434":{"id":"2:8652:3434","crate_id":2,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8654:8936","2:8656:8937","2:8657:8938"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13699:1850":{"id":"2:13699:1850","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"1:15750:3311"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:613:2036":{"id":"0:613:2036","crate_id":0,"name":"rfind_iter","span":{"filename":"src/memmem/mod.rs","begin":[224,0],"end":[229,1]},"visibility":"public","docs":"Returns a reverse iterator over all non-overlapping occurrences of a\nsubstring in a haystack.\n\n# Complexity\n\nThis routine is guaranteed to have worst case linear time complexity\nwith respect to both the needle and the haystack. That is, this runs\nin `O(needle.len() + haystack.len())` time.\n\nThis routine is also guaranteed to have worst case constant space\ncomplexity.\n\n# Examples\n\nBasic usage:\n\n```\nuse memchr::memmem;\n\nlet haystack = b\"foo bar foo baz foo\";\nlet mut it = memmem::rfind_iter(haystack, b\"foo\");\nassert_eq!(Some(16), it.next());\nassert_eq!(Some(8), it.next());\nassert_eq!(Some(0), it.next());\nassert_eq!(None, it.next());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["haystack",{"kind":"borrowed_ref","inner":{"lifetime":"'h","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["needle",{"kind":"borrowed_ref","inner":{"lifetime":"'n","mutable":false,"type":{"kind":"generic","inner":"N"}}}]],"output":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:976:2037","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}},{"name":"N","kind":{"type":{"bounds":[{"outlives":"'n"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"AsRef","id":"2:3148:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13677:794":{"id":"2:13677:794","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:15744:3306"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3198:127":{"id":"2:3198:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:39050:9499","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:3180-0:986:2032":{"id":"b:2:3180-0:986:2032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3157:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3154:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2032","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:3183:3253"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:649:1723":{"id":"0:649:1723","crate_id":0,"name":"needle","span":{"filename":"src/memmem/mod.rs","begin":[557,4],"end":[559,5]},"visibility":"public","docs":"Returns the needle that this finder searches for.\n\nNote that the lifetime of the needle returned is tied to the lifetime\nof the finder, and may be shorter than the `'n` lifetime. Namely, a\nfinder's needle can be either borrowed or owned, so the lifetime of the\nneedle returned must necessarily be the shorter of the two.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:986:2032":{"id":"0:986:2032","crate_id":0,"name":"Finder","span":{"filename":"src/memmem/mod.rs","begin":[449,0],"end":[451,1]},"visibility":"public","docs":"A single substring searcher fixed to a particular needle.\n\nThe purpose of this type is to permit callers to construct a substring\nsearcher that can be used to search haystacks without the overhead of\nconstructing the searcher in the first place. This is a somewhat niche\nconcern when it's necessary to re-use the same needle to search multiple\ndifferent haystacks with as little overhead as possible. In general, using\n[`find`] is good enough, but `Finder` is useful when you can meaningfully\nobserve searcher construction time in a profile.\n\nWhen the `std` feature is enabled, then this type has an `into_owned`\nversion which permits building a `Finder` that is not connected to\nthe lifetime of its needle.","links":{"`find`":"0:617:2047"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:639","a:2:3359:220-0:986:2032","a:2:9503:8798-0:986:2032","a:2:3347:211-0:986:2032","a:2:3388:8546-0:986:2032","a:2:9504:8797-0:986:2032","b:2:2851-0:986:2032","b:2:3184-0:986:2032","b:2:3195-0:986:2032","b:2:4080-0:986:2032","b:2:3190-0:986:2032","b:2:2848-0:986:2032","b:2:3180-0:986:2032","b:5:848-0:986:2032","0:989","0:992"]}},"a:2:9504:8797-0:826:1966":{"id":"a:2:9504:8797-0:826:1966","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9504:8797","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:664:2088":{"id":"0:664:2088","crate_id":0,"name":"build_forward","span":{"filename":"src/memmem/mod.rs","begin":[711,4],"end":[716,5]},"visibility":"public","docs":"Build a forward finder using the given needle from the current\nsettings.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["needle",{"kind":"borrowed_ref","inner":{"lifetime":"'n","mutable":false,"type":{"kind":"generic","inner":"B"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2032","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"AsRef","id":"2:3148:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13791:60211":{"id":"2:13791:60211","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:15744:3306","self::pattern":"2:13302:9753"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:9754","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:9754","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:9756","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:73":{"id":"0:73","crate_id":0,"name":null,"span":{"filename":"src/memchr/mod.rs","begin":[3,21],"end":[3,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::iter::Memchr","name":"Memchr","id":"0:137:1585","glob":false}},"a:2:3388:8546-0:965:2031":{"id":"a:2:3388:8546-0:965:2031","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3388:8546","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:965:2031","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8167:3416":{"id":"2:8167:3416","crate_id":2,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8168:59085","2:8169:59086","2:8170:2200","2:8171:59082","2:8172:59087","2:8173:59084","2:8174:59083"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2867:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2946:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13794:9953":{"id":"2:13794:9953","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:13241:9484","`FromStr`":"2:13241:9484"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47875:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:13241:9484","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:13241:9484","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:633:1713":{"id":"0:633:1713","crate_id":0,"name":"into_owned","span":{"filename":"src/memmem/mod.rs","begin":[403,4],"end":[409,5]},"visibility":"public","docs":"Convert this iterator into its owned variant, such that it no longer\nborrows the finder and needle.\n\nIf this is already an owned iterator, then this is a no-op. Otherwise,\nthis copies the needle.\n\nThis is only available when the `std` feature is enabled.","links":{},"attrs":["#[cfg(feature = \"std\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:976:2037","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'static"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:638:923":{"id":"0:638:923","crate_id":0,"name":"next","span":{"filename":"src/memmem/mod.rs","begin":[415,4],"end":[432,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3086:9727":{"id":"2:3086:9727","crate_id":2,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:3085:9282","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:8602:3436":{"id":"2:8602:3436","crate_id":2,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8604:8976"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:28":{"id":"0:28","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[173,23],"end":[173,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::memchr::memrchr2_iter","name":"memrchr2_iter","id":"0:286:1581","glob":false}},"0:644:2028":{"id":"0:644:2028","crate_id":0,"name":"find_iter","span":{"filename":"src/memmem/mod.rs","begin":[515,4],"end":[520,5]},"visibility":"public","docs":"Returns an iterator over all occurrences of a substring in a haystack.\n\n# Complexity\n\nThis routine is guaranteed to have worst case linear time complexity\nwith respect to both the needle and the haystack. That is, this runs\nin `O(needle.len() + haystack.len())` time.\n\nThis routine is also guaranteed to have worst case constant space\ncomplexity.\n\n# Examples\n\nBasic usage:\n\n```\nuse memchr::memmem::Finder;\n\nlet haystack = b\"foo bar foo baz foo\";\nlet finder = Finder::new(b\"foo\");\nlet mut it = finder.find_iter(haystack);\nassert_eq!(Some(0), it.next());\nassert_eq!(Some(8), it.next());\nassert_eq!(Some(16), it.next());\nassert_eq!(None, it.next());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":"'h","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:965:2031","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'h","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13712:56007":{"id":"2:13712:56007","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"self::pattern":"2:13302:9753","prim@char":"1:15744:3306"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:9754","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:13":{"id":"0:13","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[172,35],"end":[172,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::memchr::memchr3","name":"memchr3","id":"0:292:1576","glob":false}},"0:656:2036":{"id":"0:656:2036","crate_id":0,"name":"rfind_iter","span":{"filename":"src/memmem/mod.rs","begin":[646,4],"end":[651,5]},"visibility":"public","docs":"Returns a reverse iterator over all occurrences of a substring in a\nhaystack.\n\n# Complexity\n\nThis routine is guaranteed to have worst case linear time complexity\nwith respect to both the needle and the haystack. That is, this runs\nin `O(needle.len() + haystack.len())` time.\n\nThis routine is also guaranteed to have worst case constant space\ncomplexity.\n\n# Examples\n\nBasic usage:\n\n```\nuse memchr::memmem::FinderRev;\n\nlet haystack = b\"foo bar foo baz foo\";\nlet finder = FinderRev::new(b\"foo\");\nlet mut it = finder.rfind_iter(haystack);\nassert_eq!(Some(16), it.next());\nassert_eq!(Some(8), it.next());\nassert_eq!(Some(0), it.next());\nassert_eq!(None, it.next());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":"'h","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:976:2037","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'h","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4504:9307":{"id":"1:4504:9307","crate_id":1,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4505:58412","1:4506:40378","1:4507:58414","1:4508:58413"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13698:60193":{"id":"2:13698:60193","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"crate::ops::IndexMut":"2:3659:9056","`str`":"1:15750:3311","str::slice_unchecked":"1:15750:3311"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:23357:22171":{"id":"2:23357:22171","crate_id":2,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23358:12285","2:23359:59398","2:23360:59399"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23350:9282","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:4511:9327":{"id":"1:4511:9327","crate_id":1,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4512:54050","1:4513:54051","1:4514:54053","1:4516:9326","1:4517:54052","1:4519:54054","1:4520:10510"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"1:4429:9321","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:137:1585":{"id":"0:137:1585","crate_id":0,"name":"Memchr","span":{"filename":"src/memchr/iter.rs","begin":[34,0],"end":[40,1]},"visibility":"public","docs":"An iterator for `memchr`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:142","a:2:3359:220-0:137:1585","a:2:9503:8798-0:137:1585","a:2:3347:211-0:137:1585","a:2:3388:8546-0:137:1585","a:2:9504:8797-0:137:1585","b:2:2851-0:137:1585","b:2:3184-0:137:1585","b:2:3195-0:137:1585","b:2:8647-0:137:1585","b:2:4080-0:137:1585","b:2:3190-0:137:1585","b:2:2848-0:137:1585","b:2:3180-0:137:1585","0:145","0:150"]}},"2:13772:60206":{"id":"2:13772:60206","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13706:10510":{"id":"2:13706:10510","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:49967:9330","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6246:9278":{"id":"1:6246:9278","crate_id":1,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6247:58058","1:6248:13204","1:6249:58059","1:6250:58060","1:6251:58061","1:6252:58062"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10355:9282","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13708:32880":{"id":"2:13708:32880","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:50005:10011","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:285:1584":{"id":"0:285:1584","crate_id":0,"name":"memrchr_iter","span":{"filename":"src/memchr/mod.rs","begin":[40,0],"end":[42,1]},"visibility":"public","docs":"An iterator over all occurrences of the needle in a haystack, in reverse.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["needle",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Rev","id":"2:46985:1716","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1585","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"b:2:4080-0:995:2038":{"id":"b:2:4080-0:995:2038","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4078:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2038","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:4082:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13704:32895":{"id":"2:13704:32895","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"1:15750:3311"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:49987:10009","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10546:8995":{"id":"2:10546:8995","crate_id":2,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10547:661"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:187:1857":{"id":"0:187:1857","crate_id":0,"name":"next_back","span":{"filename":"src/memchr/iter.rs","begin":[167,4],"end":[172,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8844:157","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:992":{"id":"0:992","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[448,16],"end":[448,21]},"visibility":{"restricted":{"parent":"0:300:1589","path":"::memmem"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10533:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2032","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["0:994:661"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:161:921":{"id":"0:161:921","crate_id":0,"name":"new","span":{"filename":"src/memchr/iter.rs","begin":[84,4],"end":[91,5]},"visibility":"public","docs":"Creates a new iterator that yields all positions of needle in haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["needle1",{"kind":"primitive","inner":"u8"}],["needle2",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1586","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13709:3056":{"id":"2:13709:3056","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"self::pattern":"2:13302:9753","prim@char":"1:15744:3306"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:9754","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6185:3423":{"id":"5:6185:3423","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:8455:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:848-0:995:2038":{"id":"b:5:848-0:995:2038","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2867:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2038","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["5:850:1699","5:851:8985","5:852:8986"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:152:1857":{"id":"0:152:1857","crate_id":0,"name":"next_back","span":{"filename":"src/memchr/iter.rs","begin":[66,4],"end":[68,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8844:157","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13798:55870":{"id":"2:13798:55870","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13679:60189":{"id":"2:13679:60189","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3726:9058":{"id":"2:3726:9058","crate_id":2,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3728:59695","2:3729:59696","2:3730:3056"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:3450:9042":{"id":"2:3450:9042","crate_id":2,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3452:1358"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:7":{"id":"0:7","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[172,12],"end":[172,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::memchr::memchr2","name":"memchr2","id":"0:290:1574","glob":false}},"0:164:1855":{"id":"0:164:1855","crate_id":0,"name":"Item","span":{"filename":"src/memchr/iter.rs","begin":[95,4],"end":[95,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"usize"}}},"a:2:3359:220-0:137:1585":{"id":"a:2:3359:220-0:137:1585","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3359:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1585","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:648:306":{"id":"0:648:306","crate_id":0,"name":"as_ref","span":{"filename":"src/memmem/mod.rs","begin":[546,4],"end":[548,5]},"visibility":"public","docs":"Convert this finder into its borrowed variant.\n\nThis is primarily useful if your finder is owned and you'd like to\nstore its borrowed variant in some intermediate data structure.\n\nNote that the lifetime parameter of the returned finder is tied to the\nlifetime of `self`, and may be shorter than the `'n` lifetime of the\nneedle itself. Namely, a finder's needle can be either borrowed or\nowned, so the lifetime of the needle returned must necessarily be the\nshorter of the two.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2032","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3199:1418":{"id":"2:3199:1418","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47875:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13718:2047":{"id":"2:13718:2047","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"self::pattern":"2:13302:9753","`None`":"2:47750:176","prim@char":"1:15744:3306"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:9754","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3509:9051":{"id":"2:3509:9051","crate_id":2,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3511:358"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13726:54054":{"id":"2:13726:54054","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"prim@char":"1:15744:3306","`DoubleEndedIterator`":"2:8687:120","str::rsplit":"1:15750:3311","str::split_whitespace":"1:15750:3311","self::pattern":"2:13302:9753"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:49713:9157","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:9754","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3190-0:965:2031":{"id":"b:2:3190-0:965:2031","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3160:229","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:965:2031","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:3193:127","2:3194:1419"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:179:921":{"id":"0:179:921","crate_id":0,"name":"new","span":{"filename":"src/memchr/iter.rs","begin":[132,4],"end":[145,5]},"visibility":"public","docs":"Create a new `Memchr3` that's initialized to zero with a haystack","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["needle1",{"kind":"primitive","inner":"u8"}],["needle2",{"kind":"primitive","inner":"u8"}],["needle3",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1587","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:294:1579":{"id":"0:294:1579","crate_id":0,"name":"memrchr","span":{"filename":"src/memchr/mod.rs","begin":[260,0],"end":[299,1]},"visibility":"public","docs":"Search for the last occurrence of a byte in a slice.\n\nThis returns the index corresponding to the last occurrence of `needle` in\n`haystack`, or `None` if one is not found. If an index is returned, it is\nguaranteed to be less than `usize::MAX`.\n\nWhile this is operationally the same as something like\n`haystack.iter().rposition(|&b| b == needle)`, `memrchr` will use a highly\noptimized routine that can be up to an order of magnitude faster in some\ncases.\n\n# Example\n\nThis shows how to find the last position of a byte in a byte string.\n\n```\nuse memchr::memrchr;\n\nlet haystack = b\"the quick brown fox\";\nassert_eq!(memrchr(b'o', haystack), Some(17));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["needle",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:283:1575":{"id":"0:283:1575","crate_id":0,"name":"memchr2_iter","span":{"filename":"src/memchr/mod.rs","begin":[23,0],"end":[25,1]},"visibility":"public","docs":"An iterator over all occurrences of the needles in a haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["needle1",{"kind":"primitive","inner":"u8"}],["needle2",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1586","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:998":{"id":"0:998","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[575,9],"end":[575,14]},"visibility":{"restricted":{"parent":"0:300:1589","path":"::memmem"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2867:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2038","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["0:1000:409"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:0:1573":{"id":"0:0:1573","crate_id":0,"name":"memchr","span":{"filename":"src/lib.rs","begin":[1,0],"end":[181,10]},"visibility":"public","docs":"This library provides heavily optimized routines for string search primitives.\n\n# Overview\n\nThis section gives a brief high level overview of what this crate offers.\n\n* The top-level module provides routines for searching for 1, 2 or 3 bytes\n  in the forward or reverse direction. When searching for more than one byte,\n  positions are considered a match if the byte at that position matches any\n  of the bytes.\n* The [`memmem`] sub-module provides forward and reverse substring search\n  routines.\n\nIn all such cases, routines operate on `&[u8]` without regard to encoding. This\nis exactly what you want when searching either UTF-8 or arbitrary bytes.\n\n# Example: using `memchr`\n\nThis example shows how to use `memchr` to find the first occurrence of `z` in\na haystack:\n\n```\nuse memchr::memchr;\n\nlet haystack = b\"foo bar baz quuz\";\nassert_eq!(Some(10), memchr(b'z', haystack));\n```\n\n# Example: matching one of three possible bytes\n\nThis examples shows how to use `memrchr3` to find occurrences of `a`, `b` or\n`c`, starting at the end of the haystack.\n\n```\nuse memchr::memchr3_iter;\n\nlet haystack = b\"xyzaxyzbxyzc\";\n\nlet mut it = memchr3_iter(b'a', b'b', b'c', haystack).rev();\nassert_eq!(Some(11), it.next());\nassert_eq!(Some(7), it.next());\nassert_eq!(Some(3), it.next());\nassert_eq!(None, it.next());\n```\n\n# Example: iterating over substring matches\n\nThis example shows how to use the [`memmem`] sub-module to find occurrences of\na substring in a haystack.\n\n```\nuse memchr::memmem;\n\nlet haystack = b\"foo bar foo baz foo\";\n\nlet mut it = memmem::find_iter(haystack, \"foo\");\nassert_eq!(Some(0), it.next());\nassert_eq!(Some(8), it.next());\nassert_eq!(Some(16), it.next());\nassert_eq!(None, it.next());\n```\n\n# Example: repeating a search for the same needle\n\nIt may be possible for the overhead of constructing a substring searcher to be\nmeasurable in some workloads. In cases where the same needle is used to search\nmany haystacks, it is possible to do construction once and thus to avoid it for\nsubsequent searches. This can be done with a [`memmem::Finder`]:\n\n```\nuse memchr::memmem;\n\nlet finder = memmem::Finder::new(\"foo\");\n\nassert_eq!(Some(4), finder.find(b\"baz foo quux\"));\nassert_eq!(None, finder.find(b\"quux baz bar\"));\n```\n\n# Why use this crate?\n\nAt first glance, the APIs provided by this crate might seem weird. Why provide\na dedicated routine like `memchr` for something that could be implemented\nclearly and trivially in one line:\n\n```\nfn memchr(needle: u8, haystack: &[u8]) -> Option<usize> {\n    haystack.iter().position(|&b| b == needle)\n}\n```\n\nOr similarly, why does this crate provide substring search routines when Rust's\ncore library already provides them?\n\n```\nfn search(haystack: &str, needle: &str) -> Option<usize> {\n    haystack.find(needle)\n}\n```\n\nThe primary reason for both of them to exist is performance. When it comes to\nperformance, at a high level at least, there are two primary ways to look at\nit:\n\n* **Throughput**: For this, think about it as, \"given some very large haystack\n  and a byte that never occurs in that haystack, how long does it take to\n  search through it and determine that it, in fact, does not occur?\"\n* **Latency**: For this, think about it as, \"given a tiny haystack---just a\n  few bytes---how long does it take to determine if a byte is in it?\"\n\nThe `memchr` routine in this crate has _slightly_ worse latency than the\nsolution presented above, however, its throughput can easily be over an\norder of magnitude faster. This is a good general purpose trade off to make.\nYou rarely lose, but often gain big.\n\n**NOTE:** The name `memchr` comes from the corresponding routine in libc. A key\nadvantage of using this library is that its performance is not tied to its\nquality of implementation in the libc you happen to be using, which can vary\ngreatly from platform to platform.\n\nBut what about substring search? This one is a bit more complicated. The\nprimary reason for its existence is still indeed performance, but it's also\nuseful because Rust's core library doesn't actually expose any substring\nsearch routine on arbitrary bytes. The only substring search routine that\nexists works exclusively on valid UTF-8.\n\nSo if you have valid UTF-8, is there a reason to use this over the standard\nlibrary substring search routine? Yes. This routine is faster on almost every\nmetric, including latency. The natural question then, is why isn't this\nimplementation in the standard library, even if only for searching on UTF-8?\nThe reason is that the implementation details for using SIMD in the standard\nlibrary haven't quite been worked out yet.\n\n**NOTE:** Currently, only `x86_64` targets have highly accelerated\nimplementations of substring search. For `memchr`, all targets have\nsomewhat-accelerated implementations, while only `x86_64` targets have highly\naccelerated implementations. This limitation is expected to be lifted once the\nstandard library exposes a platform independent SIMD API.\n\n# Crate features\n\n* **std** - When enabled (the default), this will permit this crate to use\n  features specific to the standard library. Currently, the only thing used\n  from the standard library is runtime SIMD CPU feature detection. This means\n  that this feature must be enabled to get AVX accelerated routines. When\n  `std` is not enabled, this crate will still attempt to use SSE2 accelerated\n  routines on `x86_64`.\n* **libc** - When enabled (**not** the default), this library will use your\n  platform's libc implementation of `memchr` (and `memrchr` on Linux). This\n  can be useful on non-`x86_64` targets where the fallback implementation in\n  this crate is not as good as the one found in your libc. All other routines\n  (e.g., `memchr[23]` and substring search) unconditionally use the\n  implementation in this crate.","links":{"`memmem`":"0:300:1589","`memmem::Finder`":"0:986:2032"},"attrs":["#![deny(missing_docs)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:300:1589","0:4","0:7","0:10","0:13","0:16","0:19","0:22","0:25","0:28","0:31","0:34","0:37","0:40","0:43","0:46"],"is_stripped":false}},"0:147:1855":{"id":"0:147:1855","crate_id":0,"name":"Item","span":{"filename":"src/memchr/iter.rs","begin":[51,4],"end":[51,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"usize"}}},"2:13687:305":{"id":"2:13687:305","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"1:15750:3311","`u8`":"1:15761:3320"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:976:2037":{"id":"0:976:2037","crate_id":0,"name":"FindRevIter","span":{"filename":"src/memmem/mod.rs","begin":[376,0],"end":[382,1]},"visibility":"public","docs":"An iterator over non-overlapping substring matches in reverse.\n\nMatches are reported by the byte offset at which they begin.\n\n`'h` is the lifetime of the haystack while `'n` is the lifetime of the\nneedle.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:629","a:2:3359:220-0:976:2037","a:2:9503:8798-0:976:2037","a:2:3347:211-0:976:2037","a:2:3388:8546-0:976:2037","a:2:9504:8797-0:976:2037","b:2:2851-0:976:2037","b:2:3184-0:976:2037","b:2:3195-0:976:2037","b:2:8647-0:976:2037","b:2:4080-0:976:2037","b:2:3190-0:976:2037","b:2:2848-0:976:2037","b:2:3180-0:976:2037","0:982","0:634"]}},"0:667:2121":{"id":"0:667:2121","crate_id":0,"name":"build_reverse","span":{"filename":"src/memmem/mod.rs","begin":[720,4],"end":[725,5]},"visibility":"public","docs":"Build a reverse finder using the given needle from the current\nsettings.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["needle",{"kind":"borrowed_ref","inner":{"lifetime":"'n","mutable":false,"type":{"kind":"generic","inner":"B"}}}]],"output":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2038","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"AsRef","id":"2:3148:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9127:3431":{"id":"2:9127:3431","crate_id":2,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8844:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:25":{"id":"0:25","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[173,13],"end":[173,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::memchr::memrchr2","name":"memrchr2","id":"0:296:1580","glob":false}},"1:6472:9369":{"id":"1:6472:9369","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6473:58087","1:6474:13127","1:6475:13128","1:6476:13130","1:6477:13129","1:6478:13131","1:6479:13132","1:6480:13134","1:6481:11376","1:6482:13137","1:6483:13138","1:6484:13139","1:6485:13140","1:6486:13141","1:6487:13142","1:6488:13135","1:6489:13136"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:287:1583":{"id":"0:287:1583","crate_id":0,"name":"memrchr3_iter","span":{"filename":"src/memchr/mod.rs","begin":[56,0],"end":[63,1]},"visibility":"public","docs":"An iterator over all occurrences of the needles in a haystack, in reverse.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["needle1",{"kind":"primitive","inner":"u8"}],["needle2",{"kind":"primitive","inner":"u8"}],["needle3",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Rev","id":"2:46985:1716","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1587","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:9503:8798":{"id":"2:9503:8798","crate_id":2,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:4080-0:976:2037":{"id":"b:2:4080-0:976:2037","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4078:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:976:2037","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:4082:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:300:1589":{"id":"0:300:1589","crate_id":0,"name":"memmem","span":{"filename":"src/memmem/mod.rs","begin":[1,0],"end":[1321,1]},"visibility":"public","docs":"This module provides forward and reverse substring search routines.\n\nUnlike the standard library's substring search routines, these work on\narbitrary bytes. For all non-empty needles, these routines will report exactly\nthe same values as the corresponding routines in the standard library. For\nthe empty needle, the standard library reports matches only at valid UTF-8\nboundaries, where as these routines will report matches at every position.\n\nOther than being able to work on arbitrary bytes, the primary reason to prefer\nthese routines over the standard library routines is that these will generally\nbe faster. In some cases, significantly so.\n\n# Example: iterating over substring matches\n\nThis example shows how to use [`find_iter`] to find occurrences of a substring\nin a haystack.\n\n```\nuse memchr::memmem;\n\nlet haystack = b\"foo bar foo baz foo\";\n\nlet mut it = memmem::find_iter(haystack, \"foo\");\nassert_eq!(Some(0), it.next());\nassert_eq!(Some(8), it.next());\nassert_eq!(Some(16), it.next());\nassert_eq!(None, it.next());\n```\n\n# Example: iterating over substring matches in reverse\n\nThis example shows how to use [`rfind_iter`] to find occurrences of a substring\nin a haystack starting from the end of the haystack.\n\n**NOTE:** This module does not implement double ended iterators, so reverse\nsearches aren't done by calling `rev` on a forward iterator.\n\n```\nuse memchr::memmem;\n\nlet haystack = b\"foo bar foo baz foo\";\n\nlet mut it = memmem::rfind_iter(haystack, \"foo\");\nassert_eq!(Some(16), it.next());\nassert_eq!(Some(8), it.next());\nassert_eq!(Some(0), it.next());\nassert_eq!(None, it.next());\n```\n\n# Example: repeating a search for the same needle\n\nIt may be possible for the overhead of constructing a substring searcher to be\nmeasurable in some workloads. In cases where the same needle is used to search\nmany haystacks, it is possible to do construction once and thus to avoid it for\nsubsequent searches. This can be done with a [`Finder`] (or a [`FinderRev`] for\nreverse searches).\n\n```\nuse memchr::memmem;\n\nlet finder = memmem::Finder::new(\"foo\");\n\nassert_eq!(Some(4), finder.find(b\"baz foo quux\"));\nassert_eq!(None, finder.find(b\"quux baz bar\"));\n```","links":{"`Finder`":"0:986:2032","`rfind_iter`":"0:613:2036","`find_iter`":"0:609:2028","`FinderRev`":"0:995:2038"},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:301","0:609:2028","0:613:2036","0:617:2047","0:618:2054","0:965:2031","0:976:2037","0:986:2032","0:995:2038","0:1004:2087"],"is_stripped":false}},"2:10552:8997":{"id":"2:10552:8997","crate_id":2,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10553:661"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:68:1573":{"id":"0:68:1573","crate_id":0,"name":"memchr","span":{"filename":"src/memchr/mod.rs","begin":[1,0],"end":[410,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:82:1719","0:188:1720","0:73","0:76","0:79","0:282:1578","0:283:1575","0:284:1577","0:285:1584","0:286:1581","0:287:1583","0:288:1573","0:290:1574","0:292:1576","0:294:1579","0:296:1580","0:298:1582"],"is_stripped":true}},"b:2:4080-0:137:1585":{"id":"b:2:4080-0:137:1585","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4078:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1585","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:4082:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:831":{"id":"0:831","crate_id":0,"name":null,"span":{"filename":"src/memmem/prefilter/mod.rs","begin":[168,9],"end":[168,14]},"visibility":{"restricted":{"parent":"0:354:1965","path":"::memmem::prefilter"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2867:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:832:409"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3415:9032":{"id":"2:3415:9032","crate_id":2,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3417:181","2:3418:266"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3505:9050":{"id":"2:3505:9050","crate_id":2,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3507:355"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3518:9053":{"id":"2:3518:9053","crate_id":2,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3520:1239"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:31":{"id":"0:31","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[173,38],"end":[173,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::memchr::memrchr3","name":"memrchr3","id":"0:298:1582","glob":false}},"5:844:223":{"id":"5:844:223","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:845:1699","5:846:8985","5:847:8986"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5438:9363":{"id":"1:5438:9363","crate_id":1,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5439:10946","1:5440:2302"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10355:9282","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:650":{"id":"0:650","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[580,0],"end":[691,1]},"visibility":{"restricted":{"parent":"0:300:1589","path":"::memmem"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2038","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["0:652:921","0:654:2054","0:656:2036","0:659:1713","0:660:306","0:661:1723"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13767:60203":{"id":"2:13767:60203","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13680:60190":{"id":"2:13680:60190","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:627:1855":{"id":"0:627:1855","crate_id":0,"name":"Item","span":{"filename":"src/memmem/mod.rs","begin":[348,4],"end":[348,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"usize"}}},"2:3164:228":{"id":"2:3164:228","crate_id":2,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3166:127","2:3167:1418"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8651:769":{"id":"2:8651:769","crate_id":2,"name":"into_iter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1010":{"id":"0:1010","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[698,23],"end":[698,30]},"visibility":{"restricted":{"parent":"0:300:1589","path":"::memmem"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3231:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2087","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1011:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3347:211-0:1004:2087":{"id":"a:2:3347:211-0:1004:2087","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3347:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2087","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3190-0:170:1587":{"id":"b:2:3190-0:170:1587","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3160:229","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1587","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3193:127","2:3194:1419"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2851-0:976:2037":{"id":"b:2:2851-0:976:2037","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2845:9703","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:976:2037","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:2853:53841"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12742:9148":{"id":"2:12742:9148","crate_id":2,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12743:1855","2:12744:1701"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3359:220":{"id":"2:3359:220","crate_id":2,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3425:9034":{"id":"2:3425:9034","crate_id":2,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3427:181","2:3428:893"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:180":{"id":"0:180","crate_id":0,"name":null,"span":{"filename":"src/memchr/iter.rs","begin":[148,0],"end":[163,1]},"visibility":{"restricted":{"parent":"0:115:780","path":"::memchr::iter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["collect_into","scan","filter","advance_by","chain","collect","le","partial_cmp_by","cloned","map","enumerate","reduce","partition","gt","flatten","filter_map","nth","cmp","min_by","eq","eq_by","take","zip","cycle","try_reduce","rposition","partition_in_place","fuse","ge","peekable","count","step_by","any","min_by_key","all","max","array_chunks","is_sorted","find_map","is_partitioned","size_hint","inspect","skip_while","position","intersperse","max_by","is_sorted_by","sum","try_find","try_fold","by_ref","lt","take_while","intersperse_with","next_chunk","flat_map","partial_cmp","max_by_key","is_sorted_by_key","product","unzip","try_for_each","rev","try_collect","find","map_while","for_each","last","skip","min","__iterator_get_unchecked","cmp_by","copied","ne","fold"],"trait":{"name":"Iterator","id":"2:8844:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1587","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:182:1855","0:183:923","0:184:1856"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9504:8797-0:1004:2087":{"id":"a:2:9504:8797-0:1004:2087","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9504:8797","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2087","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13779:20690":{"id":"2:13779:20690","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:13302:9753","prim@char":"1:15744:3306"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:9754","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9131:3432":{"id":"2:9131:3432","crate_id":2,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Step","id":"2:8167:3416","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3818:9061":{"id":"2:3818:9061","crate_id":2,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3820:55026"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:848-0:986:2032":{"id":"b:5:848-0:986:2032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2867:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2032","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["5:850:1699","5:851:8985","5:852:8986"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13802:9382":{"id":"2:13802:9382","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:15744:3306"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:50021:9383","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3597:130":{"id":"2:3597:130","crate_id":2,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3599:377"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3600:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:167":{"id":"0:167","crate_id":0,"name":null,"span":{"filename":"src/memchr/iter.rs","begin":[108,0],"end":[116,1]},"visibility":{"restricted":{"parent":"0:115:780","path":"::memchr::iter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["nth_back","rfold","advance_back_by","try_rfold","rfind"],"trait":{"name":"DoubleEndedIterator","id":"2:8687:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1586","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:169:1857"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:23019:9905":{"id":"2:23019:9905","crate_id":2,"name":"SimdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23020:9732","2:23021:59575","2:23022:59839","2:23023:59840","2:23024:59841","2:23025:43367","2:23026:59842","2:23027:59843","2:23028:59844","2:23029:59845","2:23030:59846","2:23031:59847","2:23032:59848","2:23033:59849","2:23034:59850","2:23035:59851","2:23036:59624","2:23037:59852","2:23038:58986","2:23039:58985","2:23040:58987","2:23041:59576","2:23042:59577","2:23043:59578","2:23044:59579"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3357:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23121:9282","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:82:1719":{"id":"0:82:1719","crate_id":0,"name":"fallback","span":{"filename":"src/memchr/fallback.rs","begin":[5,0],"end":[329,1]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(dead_code)]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":false}},"b:2:2851-0:153:1586":{"id":"b:2:2851-0:153:1586","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2845:9703","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1586","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2853:53841"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5526:9369":{"id":"1:5526:9369","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5527:12782","1:5528:57804","1:5529:11334","1:5530:57805","1:5531:9652","1:5532:9653","1:5533:57806","1:5534:1306","1:5535:57807","1:5536:57808","1:5537:57809","1:5538:57810","1:5539:57811","1:5540:57812","1:5541:57813","1:5542:57814"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13785:60209":{"id":"2:13785:60209","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:15744:3306","self::pattern":"2:13302:9753"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:9754","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:9754","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:9756","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4486:8988":{"id":"1:4486:8988","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4487:3388","1:4488:58511","1:4490:58512","1:4491:10433","1:4492:58513","1:4493:58514","1:4494:57598","1:4503:8958"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3184-0:986:2032":{"id":"b:2:3184-0:986:2032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3157:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2032","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:3186:682"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3154:149":{"id":"2:3154:149","crate_id":2,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3156:3253"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:170:1587":{"id":"0:170:1587","crate_id":0,"name":"Memchr3","span":{"filename":"src/memchr/iter.rs","begin":[119,0],"end":[127,1]},"visibility":"public","docs":"An iterator for `memchr3`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:177","a:2:3359:220-0:170:1587","a:2:9503:8798-0:170:1587","a:2:3347:211-0:170:1587","a:2:3388:8546-0:170:1587","a:2:9504:8797-0:170:1587","b:2:2851-0:170:1587","b:2:3184-0:170:1587","b:2:3195-0:170:1587","b:2:8647-0:170:1587","b:2:4080-0:170:1587","b:2:3190-0:170:1587","b:2:2848-0:170:1587","b:2:3180-0:170:1587","0:180","0:185"]}},"0:662":{"id":"0:662","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[703,0],"end":[735,1]},"visibility":{"restricted":{"parent":"0:300:1589","path":"::memmem"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2087","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:663:921","0:664:2088","0:667:2121","0:670:1965"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:23145:9906":{"id":"2:23145:9906","crate_id":2,"name":"SimdPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23146:9732","2:23147:1249","2:23148:1274"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9503:8798-0:986:2032":{"id":"a:2:9503:8798-0:986:2032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9503:8798","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2032","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:5504:9366":{"id":"1:5504:9366","crate_id":1,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5505:53846","1:5506:53848","1:5507:53847","1:5508:53849"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:5906:10164":{"id":"5:5906:10164","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5908:181","5:5909:433"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:3570:116":{"id":"2:3570:116","crate_id":2,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3571:222","2:3572:544"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13697:9470":{"id":"2:13697:9470","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"str::slice_mut_unchecked":"1:15750:3311","`str`":"1:15750:3311","crate::ops::Index":"2:3655:9055"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:46":{"id":"0:46","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[174,21],"end":[174,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::memchr::Memchr3","name":"Memchr3","id":"0:170:1587","glob":false}},"b:2:3190-0:976:2037":{"id":"b:2:3190-0:976:2037","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3160:229","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:976:2037","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:3193:127","2:3194:1419"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13705:32885":{"id":"2:13705:32885","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"1:15750:3311"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:49996:10010","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3194:1419":{"id":"2:3194:1419","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47875:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3157:135":{"id":"2:3157:135","crate_id":2,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3159:682"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3195-0:170:1587":{"id":"b:2:3195-0:170:1587","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3154:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1587","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3198:127","2:3199:1418"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4080-0:986:2032":{"id":"b:2:4080-0:986:2032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4078:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2032","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:4082:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3193:127":{"id":"2:3193:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"0:1009:661":{"id":"0:1009:661","crate_id":0,"name":"fmt","span":{"filename":"src/memmem/mod.rs","begin":[698,16],"end":[698,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10493:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10482:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9504:8797-0:137:1585":{"id":"a:2:9504:8797-0:137:1585","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9504:8797","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1585","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3231:115":{"id":"2:3231:115","crate_id":2,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3232:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2851-0:986:2032":{"id":"b:2:2851-0:986:2032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2845:9703","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2032","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:2853:53841"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6163":{"id":"5:6163","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5976:1342","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:6164:60848","5:6165:8530","5:6168:60849","5:6171:60850","5:6183:60851","5:6184:60852","5:6185:3423","5:6186:55867","5:6187:55868"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3513:9052":{"id":"2:3513:9052","crate_id":2,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3515:1236"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:663:921":{"id":"0:663:921","crate_id":0,"name":"new","span":{"filename":"src/memmem/mod.rs","begin":[705,4],"end":[707,5]},"visibility":"public","docs":"Create a new finder builder with default settings.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2087","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:670:1965":{"id":"0:670:1965","crate_id":0,"name":"prefilter","span":{"filename":"src/memmem/mod.rs","begin":[731,4],"end":[734,5]},"visibility":"public","docs":"Configure the prefilter setting for the finder.\n\nSee the documentation for [`Prefilter`] for more discussion on why\nyou might want to configure this.","links":{"`Prefilter`":"0:826:1966"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["prefilter",{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2087","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1008":{"id":"0:1008","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[698,16],"end":[698,21]},"visibility":{"restricted":{"parent":"0:300:1589","path":"::memmem"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10533:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2087","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1009:661"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:4129:9826":{"id":"2:4129:9826","crate_id":2,"name":"Provider","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4130:58000"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13741:56003":{"id":"2:13741:56003","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"str::rsplitn":"1:15750:3311","prim@char":"1:15744:3306","self::pattern":"2:13302:9753"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:49817:9159","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:9754","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3347:211-0:153:1586":{"id":"a:2:3347:211-0:153:1586","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3347:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1586","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:149:1856":{"id":"0:149:1856","crate_id":0,"name":"size_hint","span":{"filename":"src/memchr/iter.rs","begin":[59,4],"end":[61,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2848-0:137:1585":{"id":"b:2:2848-0:137:1585","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2842:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1585","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2850:3376"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:4429:9321":{"id":"1:4429:9321","crate_id":1,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4430:9587","1:4431:57653","1:4433:57654","1:4434:57655","1:4435:9322","1:4436:57656","1:4437:57517","1:4439:57657","1:4440:8958","1:4441:1705","1:4442:2798","1:4444:8529"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3583:9054":{"id":"2:3583:9054","crate_id":2,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3584:546"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Deref","id":"2:3570:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3347:211-0:965:2031":{"id":"a:2:3347:211-0:965:2031","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3347:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:965:2031","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:10554:8998":{"id":"2:10554:8998","crate_id":2,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10555:661"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:827:174":{"id":"0:827:174","crate_id":0,"name":"None","span":{"filename":"src/memmem/prefilter/mod.rs","begin":[172,4],"end":[172,8]},"visibility":"default","docs":"Never used a prefilter in substring search.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:3184-0:965:2031":{"id":"b:2:3184-0:965:2031","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3157:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:965:2031","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:3186:682"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10548:8996":{"id":"2:10548:8996","crate_id":2,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10549:661"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9503:8798-0:137:1585":{"id":"a:2:9503:8798-0:137:1585","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9503:8798","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1585","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:5582:9373":{"id":"1:5582:9373","crate_id":1,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5583:11334"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:182:1855":{"id":"0:182:1855","crate_id":0,"name":"Item","span":{"filename":"src/memchr/iter.rs","begin":[149,4],"end":[149,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"usize"}}},"0:628:923":{"id":"0:628:923","crate_id":0,"name":"next","span":{"filename":"src/memmem/mod.rs","begin":[350,4],"end":[366,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13702:9780":{"id":"2:13702:9780","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:15744:3306"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49689:9995","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4080-0:153:1586":{"id":"b:2:4080-0:153:1586","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4078:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1586","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:4082:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:619":{"id":"0:619","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[318,0],"end":[345,1]},"visibility":{"restricted":{"parent":"0:300:1589","path":"::memmem"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:965:2031","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["0:623:1713"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13759:60200":{"id":"2:13759:60200","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"`DoubleEndedIterator`":"2:8687:120","self::pattern":"2:13302:9753","str::rmatch_indices":"1:15750:3311","prim@char":"1:15744:3306"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:49863:10003","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:9754","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3347:211-0:170:1587":{"id":"a:2:3347:211-0:170:1587","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3347:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1587","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3347:211-0:995:2038":{"id":"a:2:3347:211-0:995:2038","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3347:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2038","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:2936:177":{"id":"2:2936:177","crate_id":2,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2937:416","2:2938:2069","2:2939:1822","2:2940:8931"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2905:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2946:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:609:2028":{"id":"0:609:2028","crate_id":0,"name":"find_iter","span":{"filename":"src/memmem/mod.rs","begin":[190,0],"end":[195,1]},"visibility":"public","docs":"Returns an iterator over all non-overlapping occurrences of a substring in\na haystack.\n\n# Complexity\n\nThis routine is guaranteed to have worst case linear time complexity\nwith respect to both the needle and the haystack. That is, this runs\nin `O(needle.len() + haystack.len())` time.\n\nThis routine is also guaranteed to have worst case constant space\ncomplexity.\n\n# Examples\n\nBasic usage:\n\n```\nuse memchr::memmem;\n\nlet haystack = b\"foo bar foo baz foo\";\nlet mut it = memmem::find_iter(haystack, b\"foo\");\nassert_eq!(Some(0), it.next());\nassert_eq!(Some(8), it.next());\nassert_eq!(Some(16), it.next());\nassert_eq!(None, it.next());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["haystack",{"kind":"borrowed_ref","inner":{"lifetime":"'h","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["needle",{"kind":"borrowed_ref","inner":{"lifetime":"'n","mutable":false,"type":{"kind":"generic","inner":"N"}}}]],"output":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:965:2031","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}},{"name":"N","kind":{"type":{"bounds":[{"outlives":"'n"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"AsRef","id":"2:3148:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:972":{"id":"0:972","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[310,9],"end":[310,14]},"visibility":{"restricted":{"parent":"0:300:1589","path":"::memmem"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10533:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:965:2031","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["0:975:661"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1007:409":{"id":"0:1007:409","crate_id":0,"name":"clone","span":{"filename":"src/memmem/mod.rs","begin":[698,9],"end":[698,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2087","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5432:9361":{"id":"1:5432:9361","crate_id":1,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5433:54344","1:5434:10263"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10355:9282","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3184-0:976:2037":{"id":"b:2:3184-0:976:2037","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3157:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:976:2037","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:3186:682"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:985:661":{"id":"0:985:661","crate_id":0,"name":"fmt","span":{"filename":"src/memmem/mod.rs","begin":[375,9],"end":[375,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10493:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10482:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:7582:9498":{"id":"1:7582:9498","crate_id":1,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7583:58409"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:284:1577":{"id":"0:284:1577","crate_id":0,"name":"memchr3_iter","span":{"filename":"src/memchr/mod.rs","begin":[29,0],"end":[36,1]},"visibility":"public","docs":"An iterator over all occurrences of the needles in a haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["needle1",{"kind":"primitive","inner":"u8"}],["needle2",{"kind":"primitive","inner":"u8"}],["needle3",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1587","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"b:2:3195-0:1004:2087":{"id":"b:2:3195-0:1004:2087","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3154:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2087","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3198:127","2:3199:1418"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:165:923":{"id":"0:165:923","crate_id":0,"name":"next","span":{"filename":"src/memchr/iter.rs","begin":[98,4],"end":[100,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:618:2054":{"id":"0:618:2054","crate_id":0,"name":"rfind","span":{"filename":"src/memmem/mod.rs","begin":[296,0],"end":[302,1]},"visibility":"public","docs":"Returns the index of the last occurrence of the given needle.\n\nNote that if you're are searching for the same needle in many different\nsmall haystacks, it may be faster to initialize a [`FinderRev`] once,\nand reuse it for each search.\n\n# Complexity\n\nThis routine is guaranteed to have worst case linear time complexity\nwith respect to both the needle and the haystack. That is, this runs\nin `O(needle.len() + haystack.len())` time.\n\nThis routine is also guaranteed to have worst case constant space\ncomplexity.\n\n# Examples\n\nBasic usage:\n\n```\nuse memchr::memmem;\n\nlet haystack = b\"foo bar baz\";\nassert_eq!(Some(0), memmem::rfind(haystack, b\"foo\"));\nassert_eq!(Some(4), memmem::rfind(haystack, b\"bar\"));\nassert_eq!(Some(8), memmem::rfind(haystack, b\"ba\"));\nassert_eq!(None, memmem::rfind(haystack, b\"quux\"));\n```","links":{"`FinderRev`":"0:995:2038"},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["needle",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"a:2:3359:220-0:170:1587":{"id":"a:2:3359:220-0:170:1587","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3359:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1587","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3190-0:995:2038":{"id":"b:2:3190-0:995:2038","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3160:229","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2038","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:3193:127","2:3194:1419"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:148:923":{"id":"0:148:923","crate_id":0,"name":"next","span":{"filename":"src/memchr/iter.rs","begin":[54,4],"end":[56,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9503:8798-0:976:2037":{"id":"a:2:9503:8798-0:976:2037","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9503:8798","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:976:2037","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3180-0:170:1587":{"id":"b:2:3180-0:170:1587","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3157:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3154:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1587","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3183:3253"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5512:9367":{"id":"1:5512:9367","crate_id":1,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5513:11334","1:5514:55619","1:5515:55620"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13750:60198":{"id":"2:13750:60198","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:9754","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:9754","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:9756","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:652:921":{"id":"0:652:921","crate_id":0,"name":"new","span":{"filename":"src/memmem/mod.rs","begin":[583,4],"end":[585,5]},"visibility":"public","docs":"Create a new reverse finder for the given needle.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["needle",{"kind":"borrowed_ref","inner":{"lifetime":"'n","mutable":false,"type":{"kind":"generic","inner":"B"}}}]],"output":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2038","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"AsRef","id":"2:3148:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:850:1699":{"id":"5:850:1699","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:40":{"id":"0:40","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[174,4],"end":[174,10]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::memchr::Memchr","name":"Memchr","id":"0:137:1585","glob":false}},"0:144:921":{"id":"0:144:921","crate_id":0,"name":"new","span":{"filename":"src/memchr/iter.rs","begin":[45,4],"end":[47,5]},"visibility":"public","docs":"Creates a new iterator that yields all positions of needle in haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["needle",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1585","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13332:9757":{"id":"2:13332:9757","crate_id":2,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:9756","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10542:8993":{"id":"2:10542:8993","crate_id":2,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10543:661"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8643:151":{"id":"2:8643:151","crate_id":2,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8644:1855","2:8645:8939","2:8646:769"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:76":{"id":"0:76","crate_id":0,"name":null,"span":{"filename":"src/memchr/mod.rs","begin":[3,29],"end":[3,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::iter::Memchr2","name":"Memchr2","id":"0:153:1586","glob":false}},"b:2:2848-0:976:2037":{"id":"b:2:2848-0:976:2037","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2842:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:976:2037","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:2850:3376"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13747:60197":{"id":"2:13747:60197","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:9754","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3347:211-0:137:1585":{"id":"a:2:3347:211-0:137:1585","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3347:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1585","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:9504:8797":{"id":"2:9504:8797","crate_id":2,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6646:9270":{"id":"1:6646:9270","crate_id":1,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6647:55901"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3180-0:826:1966":{"id":"b:2:3180-0:826:1966","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3157:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3154:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3183:3253"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:286:1581":{"id":"0:286:1581","crate_id":0,"name":"memrchr2_iter","span":{"filename":"src/memchr/mod.rs","begin":[46,0],"end":[52,1]},"visibility":"public","docs":"An iterator over all occurrences of the needles in a haystack, in reverse.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["needle1",{"kind":"primitive","inner":"u8"}],["needle2",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Rev","id":"2:46985:1716","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1586","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"a:2:3359:220-0:965:2031":{"id":"a:2:3359:220-0:965:2031","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3359:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:965:2031","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13732:56001":{"id":"2:13732:56001","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"str::split":"1:15750:3311","self::pattern":"2:13302:9753","`DoubleEndedIterator`":"2:8687:120","prim@char":"1:15744:3306"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:49731:9161","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:9754","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:9754","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:9756","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:848-0:1004:2087":{"id":"b:5:848-0:1004:2087","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2867:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2087","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:850:1699","5:851:8985","5:852:8986"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:852:8986":{"id":"5:852:8986","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:4082:1431":{"id":"2:4082:1431","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:46278:9824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:14027:138":{"id":"2:14027:138","crate_id":2,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:14028:181","2:14029:1014"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3190-0:1004:2087":{"id":"b:2:3190-0:1004:2087","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3160:229","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2087","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3193:127","2:3194:1419"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3359:220-0:153:1586":{"id":"a:2:3359:220-0:153:1586","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3359:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1586","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13715:56008":{"id":"2:13715:56008","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:15744:3306","self::pattern":"2:13302:9753"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:9754","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:9754","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:9756","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3186:682":{"id":"2:3186:682","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:8647-0:965:2031":{"id":"b:2:8647-0:965:2031","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8844:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8643:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:965:2031","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:8649:1855","2:8650:8939","2:8651:769"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:1011:59":{"id":"0:1011:59","crate_id":0,"name":"default","span":{"filename":"src/memmem/mod.rs","begin":[698,23],"end":[698,30]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2087","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:8647-0:137:1585":{"id":"b:2:8647-0:137:1585","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8844:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8643:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1585","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:8649:1855","2:8650:8939","2:8651:769"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"2:13797:55869":{"id":"2:13797:55869","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:832:409":{"id":"0:832:409","crate_id":0,"name":"clone","span":{"filename":"src/memmem/prefilter/mod.rs","begin":[168,9],"end":[168,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:290:1574":{"id":"0:290:1574","crate_id":0,"name":"memchr2","span":{"filename":"src/memchr/mod.rs","begin":[151,0],"end":[178,1]},"visibility":"public","docs":"Like `memchr`, but searches for either of two bytes instead of just one.\n\nThis returns the index corresponding to the first occurrence of `needle1`\nor the first occurrence of `needle2` in `haystack` (whichever occurs\nearlier), or `None` if neither one is found. If an index is returned, it is\nguaranteed to be less than `usize::MAX`.\n\nWhile this is operationally the same as something like\n`haystack.iter().position(|&b| b == needle1 || b == needle2)`, `memchr2`\nwill use a highly optimized routine that can be up to an order of magnitude\nfaster in some cases.\n\n# Example\n\nThis shows how to find the first position of either of two bytes in a byte\nstring.\n\n```\nuse memchr::memchr2;\n\nlet haystack = b\"the quick brown fox\";\nassert_eq!(memchr2(b'k', b'q', haystack), Some(4));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["needle1",{"kind":"primitive","inner":"u8"}],["needle2",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13762:60201":{"id":"2:13762:60201","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"prim@char":"1:15744:3306","self::pattern":"2:13302:9753","`DoubleEndedIterator`":"2:8687:120","str::match_indices":"1:15750:3311"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:49881:10004","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:9754","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:9754","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:9756","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10540:119":{"id":"2:10540:119","crate_id":2,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10541:661"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3352:1704":{"id":"2:3352:1704","crate_id":2,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:634":{"id":"0:634","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[412,0],"end":[433,1]},"visibility":{"restricted":{"parent":"0:300:1589","path":"::memmem"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["collect_into","scan","filter","advance_by","chain","collect","le","partial_cmp_by","cloned","map","enumerate","reduce","partition","gt","flatten","filter_map","nth","cmp","min_by","eq","eq_by","take","zip","cycle","try_reduce","rposition","partition_in_place","fuse","ge","peekable","count","step_by","any","min_by_key","all","max","array_chunks","is_sorted","find_map","is_partitioned","size_hint","inspect","skip_while","position","intersperse","max_by","is_sorted_by","sum","try_find","try_fold","by_ref","lt","take_while","intersperse_with","next_chunk","flat_map","partial_cmp","max_by_key","is_sorted_by_key","product","unzip","try_for_each","rev","try_collect","find","map_while","for_each","last","skip","min","__iterator_get_unchecked","cmp_by","copied","ne","fold"],"trait":{"name":"Iterator","id":"2:8844:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:976:2037","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["0:637:1855","0:638:923"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:965:2031":{"id":"0:965:2031","crate_id":0,"name":"FindIter","span":{"filename":"src/memmem/mod.rs","begin":[311,0],"end":[316,1]},"visibility":"public","docs":"An iterator over non-overlapping substring matches.\n\nMatches are reported by the byte offset at which they begin.\n\n`'h` is the lifetime of the haystack while `'n` is the lifetime of the\nneedle.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:619","a:2:3359:220-0:965:2031","a:2:9503:8798-0:965:2031","a:2:3347:211-0:965:2031","a:2:3388:8546-0:965:2031","a:2:9504:8797-0:965:2031","b:2:2851-0:965:2031","b:2:3184-0:965:2031","b:2:3195-0:965:2031","b:2:8647-0:965:2031","b:2:4080-0:965:2031","b:2:3190-0:965:2031","b:2:2848-0:965:2031","b:2:3180-0:965:2031","0:972","0:624"]}},"5:5910:10166":{"id":"5:5910:10166","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5912:181","5:5913:33888"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10544:8994":{"id":"2:10544:8994","crate_id":2,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10545:661"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3388:8546":{"id":"2:3388:8546","crate_id":2,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6648:9267":{"id":"1:6648:9267","crate_id":1,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6649:57952"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3890:9067":{"id":"2:3890:9067","crate_id":2,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6498:224":{"id":"5:6498:224","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6499:1399"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3388:8546-0:986:2032":{"id":"a:2:3388:8546-0:986:2032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3388:8546","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2032","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:402:1721":{"id":"0:402:1721","crate_id":0,"name":"x86","span":{"filename":"src/memmem/prefilter/x86/mod.rs","begin":[3,0],"end":[5,19]},"visibility":{"restricted":{"parent":"0:354:1965","path":"::memmem::prefilter"}},"docs":null,"links":{},"attrs":["#[cfg(all(not(miri), target_arch = \"x86_64\", memchr_runtime_simd))]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":true}},"2:13722:2054":{"id":"2:13722:2054","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:47750:176","self::pattern":"2:13302:9753","prim@char":"1:15744:3306"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:9754","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:9754","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:9756","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:647:1713":{"id":"0:647:1713","crate_id":0,"name":"into_owned","span":{"filename":"src/memmem/mod.rs","begin":[531,4],"end":[533,5]},"visibility":"public","docs":"Convert this finder into its owned variant, such that it no longer\nborrows the needle.\n\nIf this is already an owned finder, then this is a no-op. Otherwise,\nthis copies the needle.\n\nThis is only available when the `std` feature is enabled.","links":{},"attrs":["#[cfg(feature = \"std\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2032","args":{"angle_bracketed":{"args":[{"lifetime":"'static"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3462:9041":{"id":"2:3462:9041","crate_id":2,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3464:1105"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:629":{"id":"0:629","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[384,0],"end":[410,1]},"visibility":{"restricted":{"parent":"0:300:1589","path":"::memmem"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:976:2037","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["0:633:1713"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3180-0:1004:2087":{"id":"b:2:3180-0:1004:2087","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3157:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3154:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2087","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3183:3253"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3388:8546-0:995:2038":{"id":"a:2:3388:8546-0:995:2038","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3388:8546","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2038","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:659:1713":{"id":"0:659:1713","crate_id":0,"name":"into_owned","span":{"filename":"src/memmem/mod.rs","begin":[662,4],"end":[664,5]},"visibility":"public","docs":"Convert this finder into its owned variant, such that it no longer\nborrows the needle.\n\nIf this is already an owned finder, then this is a no-op. Otherwise,\nthis copies the needle.\n\nThis is only available when the `std` feature is enabled.","links":{},"attrs":["#[cfg(feature = \"std\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2038","args":{"angle_bracketed":{"args":[{"lifetime":"'static"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:975:661":{"id":"0:975:661","crate_id":0,"name":"fmt","span":{"filename":"src/memmem/mod.rs","begin":[310,9],"end":[310,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10493:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10482:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:185":{"id":"0:185","crate_id":0,"name":null,"span":{"filename":"src/memchr/iter.rs","begin":[165,0],"end":[173,1]},"visibility":{"restricted":{"parent":"0:115:780","path":"::memchr::iter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["nth_back","rfold","advance_back_by","try_rfold","rfind"],"trait":{"name":"DoubleEndedIterator","id":"2:8687:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1587","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:187:1857"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:6650:9271":{"id":"1:6650:9271","crate_id":1,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6651:53915"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:835:661":{"id":"0:835:661","crate_id":0,"name":"fmt","span":{"filename":"src/memmem/prefilter/mod.rs","begin":[168,22],"end":[168,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10493:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10482:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2851-0:965:2031":{"id":"b:2:2851-0:965:2031","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2845:9703","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:965:2031","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:2853:53841"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:455":{"id":"0:455","crate_id":0,"name":null,"span":{"filename":"src/memmem/prefilter/mod.rs","begin":[179,0],"end":[183,1]},"visibility":{"restricted":{"parent":"0:354:1965","path":"::memmem::prefilter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3231:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:456:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3479:9044":{"id":"2:3479:9044","crate_id":2,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3481:181","2:3482:354"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9503:8798-0:965:2031":{"id":"a:2:9503:8798-0:965:2031","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9503:8798","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:965:2031","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1004:2087":{"id":"0:1004:2087","crate_id":0,"name":"FinderBuilder","span":{"filename":"src/memmem/mod.rs","begin":[699,0],"end":[701,1]},"visibility":"public","docs":"A builder for constructing non-default forward or reverse memmem finders.\n\nA builder is primarily useful for configuring a substring searcher.\nCurrently, the only configuration exposed is the ability to disable\nheuristic prefilters used to speed up certain searches.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:662","a:2:3359:220-0:1004:2087","a:2:9503:8798-0:1004:2087","a:2:3347:211-0:1004:2087","a:2:3388:8546-0:1004:2087","a:2:9504:8797-0:1004:2087","b:2:2851-0:1004:2087","b:2:3184-0:1004:2087","b:2:3195-0:1004:2087","b:2:4080-0:1004:2087","b:2:3190-0:1004:2087","b:2:2848-0:1004:2087","b:2:3180-0:1004:2087","b:5:848-0:1004:2087","0:1006","0:1008","0:1010"]}},"2:3812:137":{"id":"2:3812:137","crate_id":2,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3814:688"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3807:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:994:661":{"id":"0:994:661","crate_id":0,"name":"fmt","span":{"filename":"src/memmem/mod.rs","begin":[448,16],"end":[448,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10493:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10482:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13707:60194":{"id":"2:13707:60194","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:49977:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13689:2811":{"id":"2:13689:2811","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:47750:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11175:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11175:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2851-0:826:1966":{"id":"b:2:2851-0:826:1966","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2845:9703","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2853:53841"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:639":{"id":"0:639","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[453,0],"end":[560,1]},"visibility":{"restricted":{"parent":"0:300:1589","path":"::memmem"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2032","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["0:641:921","0:643:2047","0:644:2028","0:647:1713","0:648:306","0:649:1723"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9503:8798-0:1004:2087":{"id":"a:2:9503:8798-0:1004:2087","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9503:8798","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2087","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3388:8546-0:137:1585":{"id":"a:2:3388:8546-0:137:1585","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3388:8546","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1585","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3359:220-0:986:2032":{"id":"a:2:3359:220-0:986:2032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3359:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2032","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3603:132":{"id":"2:3603:132","crate_id":2,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3605:181","2:3606:379"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13321:2085":{"id":"2:13321:2085","crate_id":2,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13323:1724","2:13324:923","2:13325:58950","2:13326:58951"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3195-0:976:2037":{"id":"b:2:3195-0:976:2037","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3154:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:976:2037","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:3198:127","2:3199:1418"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6574:9287":{"id":"1:6574:9287","crate_id":1,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6575:13244","1:6576:57538"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10355:9282","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:5570:9365":{"id":"1:5570:9365","crate_id":1,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5571:57804"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6186:55867":{"id":"5:6186:55867","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:15750:3311"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3637:9064":{"id":"2:3637:9064","crate_id":2,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3639:238","2:3640:206","2:3641:59958"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3347:211-0:976:2037":{"id":"a:2:3347:211-0:976:2037","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3347:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:976:2037","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:5560:9370":{"id":"1:5560:9370","crate_id":1,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5561:54347","1:5562:54348","1:5563:54349","1:5564:54350"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13771:60205":{"id":"2:13771:60205","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10771:142":{"id":"2:10771:142","crate_id":2,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10772:716","2:10774:55745"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:43":{"id":"0:43","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[174,12],"end":[174,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::memchr::Memchr2","name":"Memchr2","id":"0:153:1586","glob":false}},"a:2:3347:211-0:986:2032":{"id":"a:2:3347:211-0:986:2032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3347:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2032","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:6183:60851":{"id":"5:6183:60851","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:8455:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:539:2008":{"id":"0:539:2008","crate_id":0,"name":"vector","span":{"filename":"src/memmem/vector.rs","begin":[1,0],"end":[131,1]},"visibility":{"restricted":{"parent":"0:300:1589","path":"::memmem"}},"docs":null,"links":{},"attrs":["#[cfg(memchr_runtime_simd)]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":true}},"2:2845:9703":{"id":"2:2845:9703","crate_id":2,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2847:53841"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2842:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:2867:104":{"id":"2:2867:104","crate_id":2,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2868:409","2:2869:411"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4":{"id":"0:4","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[172,4],"end":[172,10]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::memchr::memchr","name":"memchr","id":"0:288:1573","glob":false}},"2:13682:60191":{"id":"2:13682:60191","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"1:15750:3311"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4080-0:170:1587":{"id":"b:2:4080-0:170:1587","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:1704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4078:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1587","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:4082:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9504:8797-0:153:1586":{"id":"a:2:9504:8797-0:153:1586","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9504:8797","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1586","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13735:60195":{"id":"2:13735:60195","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"str::rsplit_terminator":"1:15750:3311","self::pattern":"2:13302:9753","str::split":"1:15750:3311","`DoubleEndedIterator`":"2:8687:120","prim@char":"1:15744:3306"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:49763:9999","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:9754","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3180-0:137:1585":{"id":"b:2:3180-0:137:1585","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3157:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3154:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1585","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3183:3253"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13327:9756":{"id":"2:13327:9756","crate_id":2,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13329:1857","2:13330:59808","2:13331:59809"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Searcher","id":"2:13321:2085","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:162":{"id":"0:162","crate_id":0,"name":null,"span":{"filename":"src/memchr/iter.rs","begin":[94,0],"end":[106,1]},"visibility":{"restricted":{"parent":"0:115:780","path":"::memchr::iter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["collect_into","scan","filter","advance_by","chain","collect","le","partial_cmp_by","cloned","map","enumerate","reduce","partition","gt","flatten","filter_map","nth","cmp","min_by","eq","eq_by","take","zip","cycle","try_reduce","rposition","partition_in_place","fuse","ge","peekable","count","step_by","any","min_by_key","all","max","array_chunks","is_sorted","find_map","is_partitioned","size_hint","inspect","skip_while","position","intersperse","max_by","is_sorted_by","sum","try_find","try_fold","by_ref","lt","take_while","intersperse_with","next_chunk","flat_map","partial_cmp","max_by_key","is_sorted_by_key","product","unzip","try_for_each","rev","try_collect","find","map_while","for_each","last","skip","min","__iterator_get_unchecked","cmp_by","copied","ne","fold"],"trait":{"name":"Iterator","id":"2:8844:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1586","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:164:1855","0:165:923","0:166:1856"],"negative":false,"synthetic":false,"blanket_impl":null}}},"paths":{"2:3413:964":{"crate_id":2,"path":["core","ops"],"kind":"module"},"16:6949:10867":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"1:13536:9501":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"2:22832:60010":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"2:5048:9006":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"2:57897:13437":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"2:53005:9882":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:46845:3447":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"2:32592:59745":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"2:24334:13291":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:3102:9596":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"5:844:223":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:24890:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"2:32940:8538":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"2:56166:9721":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"5:8224:9395":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"6:6688:13252":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"17:12770:11613":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"16:5698:10621":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"16:7659:10662":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"1:8261:202":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"1:10905:3459":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"2:46557:9931":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"12:399:10466":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"2:37870:178":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:46727:10073":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"13:121:9120":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"1:4429:9321":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"1:1654:9446":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"16:2813:10837":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"2:50616:190":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"17:10015:13609":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"2:10009:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"6:4256:12756":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"6:5260:12944":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"16:2839:10818":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"5:3110:60155":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:46634:9383":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:50432:10021":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:1527:9441":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"6:4410:12823":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"6:4446:12837":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:53756:8498":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"17:10975:13640":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"12:2253:9443":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"7:38:45201":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"17:12716:11598":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"16:3366:10835":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"12:183:10468":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"16:6533:10850":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"17:10545:13621":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"17:12318:11517":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"16:7355:10563":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"2:49996:10010":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"5:8549:10218":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"2:48801:107":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"1:1485:9396":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"6:4538:12875":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"17:11797:11432":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"6:1634:12511":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"1:11450:9521":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"17:11212:10969":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"17:12700:11596":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"6:6229:13219":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"17:12557:11570":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"1:15744:3306":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"6:6007:13116":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:4447:9323":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"6:4362:12800":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"16:7309:10566":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"16:4660:12033":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"16:4198:12021":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"17:13859:11972":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"5:1296:10269":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"6:521:12379":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"2:50659:10033":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"18:754:3118":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:50012:10012":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"17:9746:13604":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"17:10240:10958":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"16:6012:10560":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"16:7247:10595":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"5:2376:10308":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"2:49689:9995":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"2:10542:8993":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"16:7379:10584":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"16:4599:12031":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"6:1669:12540":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"8:0:3278":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"5:3905:11074":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"6:4048:12693":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:11379:9087":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:5867:9639":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"12:1256:9446":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"2:9625:9754":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"1:8525:8870":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"2:47791:9086":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"17:13404:11829":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"5:3114:60157":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"16:7684:10573":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"1:12004:8862":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"16:4942:12042":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"6:6856:13253":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"17:13440:11843":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"2:46573:9933":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:1449:9433":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"5:5906:10164":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"1:2185:9398":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"17:12607:11587":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"17:11017:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:53581:9842":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:23198:9282":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"6:4425:12827":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"15:0:3284":{"crate_id":15,"path":["addr2line"],"kind":"module"},"5:8356:9450":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"2:14426:141":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"2:25490:9920":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"5:3106:13273":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"9:603:14189":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"17:12687:11595":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"2:49713:9157":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"6:527:12382":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"17:13584:11881":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"17:11945:11455":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"2:49591:9169":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:46609:10013":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"17:12237:11503":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"18:152:1586":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"1:15742:3304":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"6:4110:12725":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"17:10435:10911":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"5:3402:9398":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"12:750:9086":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"2:48094:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"5:5861:11074":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"16:3576:11184":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"18:611:1695":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"1:11202:9651":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"1:12014:8869":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"2:3430:9033":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"1:11170:9292":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"2:3446:9038":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"6:6896:13254":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:47273:3428":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"16:5902:10626":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"6:6027:13122":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"16:5998:10532":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"16:3265:10829":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"2:5194:9007":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"2:39126:8922":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"2:50005:10011":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"17:11563:11378":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"16:6717:10647":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"5:3960:10286":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"1:11177:9683":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"6:1600:12490":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"1:9648:11124":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"1:1533:9442":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"16:5668:10619":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"2:48813:127":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"6:6250:13231":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"1:3793:9536":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"9:27:10378":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"1:7714:9568":{"crate_id":1,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"16:3297:10882":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"2:49072:146":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"16:4628:12032":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"1:9520:9624":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"6:1712:12566":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:4197:9347":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"2:3583:9054":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"16:4573:12030":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"2:3518:9053":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"2:46305:9898":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"17:12170:11493":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"17:13147:11768":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"1:14350:9586":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"16:2792:10550":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"1:0:1333":{"crate_id":1,"path":["std"],"kind":"module"},"5:2284:10185":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"17:681:11330":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"2:3600:131":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"2:49531:9163":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"2:49863:10003":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:4511:9327":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"17:13612:11889":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"6:5301:12962":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"17:10166:11270":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"16:5649:10618":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"2:46357:9910":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"16:5238:45948":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:46914:13396":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"16:7449:10571":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"17:607:13599":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"2:2271:9813":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:11999:8861":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"1:10356:9545":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"6:513:12374":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"16:5784:10624":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"17:12496:11561":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:50030:10013":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"17:10266:10885":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"17:13953:11993":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"2:47037:3459":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"17:13306:11808":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"2:3154:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"9:0:3279":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"17:11142:11323":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"16:6656:10857":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"16:7090:10653":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:46129:194":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"2:47262:3426":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"6:571:12410":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"17:9587:61523":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"18:885:2119":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"16:5460:10612":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"1:7980:11106":{"crate_id":1,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"17:9326:10893":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"1:14798:9457":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"6:545:12390":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"17:9948:13608":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"2:12198:9172":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"2:51300:13417":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"2:10821:9736":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"11:46:12290":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"17:4008:13601":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:46312:9007":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"12:353:12280":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"18:857:2137":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"2:47875:205":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"6:4509:12862":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"2:3356:217":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"17:13481:11852":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"16:6433:10640":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"5:3395:9086":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"1:2955:9585":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"1:9414:57920":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"2:47006:3120":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"17:13369:11823":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"2:52649:9838":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:6574:9287":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"1:11086:54040":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"1:10895:3447":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"2:24210:10045":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"6:1740:12578":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:3231:115":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"1:3086:9591":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"12:2072:9400":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"2:47849:8795":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"2:46039:9068":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"17:13495:11859":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"1:7416:9487":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"12:2036:8939":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"17:12957:11666":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"1:11917:9421":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"5:8389:10260":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"2:13241:9484":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:3084:9590":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"2:10215:9979":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"16:5530:10614":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"1:15768:3327":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"12:787:9436":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"17:13037:11727":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"17:10988:13641":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"16:7079:10652":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"9:963:10394":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"17:9646:61525":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"6:3896:12603":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:50093:9755":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"17:13747:11942":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"5:8209:8939":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"1:12057:9458":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"1:11020:9298":{"crate_id":1,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"2:50464:121":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"2:46966:3442":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"17:12348:11536":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"5:5910:10166":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"2:50448:10024":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"6:1588:12482":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:2196:9400":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"17:13908:11987":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"17:8902:47523":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"1:1622:9443":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"17:11701:11403":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"5:4765:11079":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"1:7919:9569":{"crate_id":1,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"1:14864:13529":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"5:853:108":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"16:7169:10578":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"2:4811:9787":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"17:11013:13643":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"2:46836:3438":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:14927:9464":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2:46597:10156":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"6:1704:12565":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"17:9240:10892":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"1:4236:9349":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"1:2191:9399":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"1:15750:3311":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"5:4665:11077":{"crate_id":5,"path":["alloc","collections","vec_deque","spec_extend","spec_extend","WrapAddOnDrop"],"kind":"struct"},"0:613:2036":{"crate_id":0,"path":["memchr","memmem","rfind_iter"],"kind":"function"},"6:161:40339":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:14223:58771":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"16:7155:10659":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"16:4743:12036":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"2:3890:9067":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"11:0:3281":{"crate_id":11,"path":["adler"],"kind":"module"},"17:13463:11848":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"2:51993:9841":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:49047:9451":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"17:13129:11763":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:24509:10061":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"5:1740:9437":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"17:9396:11260":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:6482:13137":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"9:1056:10389":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"5:1547:9446":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"12:815:9437":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"18:169:1587":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"17:9466:11262":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"2:50341:10082":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:12160:13705":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"6:5274:12955":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"6:4142:12738":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"6:4242:12755":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"16:3221:10827":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"5:2328:10271":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"2:13312:9754":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:10587:9378":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"17:13155:11769":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"1:14957:9466":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"2:3347:211":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"1:5570:9365":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"12:1238:10463":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"2:47026:3444":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"12:1703:10475":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"6:4075:12706":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:53599:1952":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"17:10949:13638":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"16:7868:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"2:23208:9392":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"6:5433:13034":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"17:9561:10904":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"1:15767:3326":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"12:472:13846":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"2:3148:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"6:6954:13268":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:11652:9155":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"16:2905:10820":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"1:7762:11106":{"crate_id":1,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"2:46677:10154":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"6:6205:13209":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"1:7073:13707":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:15743:3305":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"5:3825:9086":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"12:1682:10474":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"1:13323:13704":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"17:13029:11725":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"17:10136:13606":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:22872:60041":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"17:9206:47530":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"17:11002:13642":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:8346:2188":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"17:10788:13630":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"2:51525:9859":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:7228:185":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"17:11689:11400":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"1:1132:9581":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"17:11713:11404":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"2:52349:9873":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"2:47228:3418":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"17:10558:13623":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"2:46896:3450":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"16:7295:10568":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"17:12117:11485":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:3160:229":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"12:979:9442":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"2:25022:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"17:11335:10896":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"1:9421:11121":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"17:10586:13625":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"5:3554:9396":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"1:5715:9682":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"2:50161:9765":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:50672:158":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"16:4439:12027":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"17:10422:13617":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"6:6643:13240":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"2:50308:9771":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"15:248:10483":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"1:10242:11127":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"2:49063:9737":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"5:3948:9339":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"16:4467:12028":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"17:9087:47528":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"2:22817:60010":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"1:8626:13708":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"1:12497:9584":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"17:12585:11576":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"1:1645:9445":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"5:1152:11074":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"6:3993:12666":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"17:9826:10913":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"1:11774:181":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"1:14835:9429":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"2:5268:8912":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"17:13961:11996":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:10622:11273":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"17:11784:11428":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"5:1719:9435":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"1:14872:9502":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:48531:8996":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:8275:9419":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"2:53639:8491":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:52225:9881":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:2698:179":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"17:10598:13626":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:10688:13686":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"2:51476:9871":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"2:32404:10105":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"2:56562:237":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:49935:10007":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:52303:9869":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"6:157:40338":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"16:5869:189":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"2:24038:9282":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"9:692:10329":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"1:11003:9297":{"crate_id":1,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"1:10367:54034":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"16:6858:10863":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"6:6120:13154":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:3450:9042":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"18:774:2196":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"17:13917:11989":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"17:8849:10965":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"16:7782:10570":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"16:4316:12023":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"1:15710:14197":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"5:2619:10274":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"2:46663:10152":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"1:10456:9406":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"1:8477:8859":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"6:3987:12663":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:25121:10048":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"5:6340:10221":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"1:10931:9292":{"crate_id":1,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"17:13602:11884":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"6:3877:12593":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:49977:10008":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"5:8449:13277":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"1:1157:16948":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"2:3086:9727":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:7519:9492":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"9:157:10346":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"1:1510:9439":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"1:2403:13702":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"17:11433:11350":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"16:7281:10567":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"1:11898:9420":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"17:12455:11555":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"5:1684:8939":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"2:8419:3419":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"17:12282:11511":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"16:7200:10580":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"2:32584:8537":{"crate_id":2,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"1:1017:9569":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"2:51777:9875":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"12:432:10465":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"5:383:10255":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"2:51346:9866":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:6650:9271":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"2:5184:9976":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"2:3505:9050":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"2:24791:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"18:866:2162":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"1:11188:9642":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"2:52379:9876":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2:3353:8919":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"6:5541:13060":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"16:3177:10825":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"16:5374:10607":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"2:9503:8798":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:11837:57516":{"crate_id":1,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"16:6482:10852":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"2:5117:9970":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"16:3077:10881":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"17:8954:10903":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"1:11826:54037":{"crate_id":1,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"17:10115:10993":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"6:1621:12504":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"0:986:2032":{"crate_id":0,"path":["memchr","memmem","Finder"],"kind":"struct"},"2:49763:9999":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:25088:164":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"6:4287:12764":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"2:10554:8998":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"2:14:3388":{"crate_id":2,"path":["core","write"],"kind":"macro"},"6:565:12407":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"1:4370:3424":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"14:231:10180":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"16:3521:12016":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"2:56549:237":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:8433:8858":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"6:4340:12789":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"17:11031:47531":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"16:6490:10642":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"17:9431:11261":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"1:14556:9364":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"2:47016:3458":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"2:49835:9155":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:1149:13695":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"16:6060:10601":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"1:10156:11330":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"1:7579:9496":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"2:3597:130":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"16:6407:10639":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"9:1020:10396":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"2:3570:116":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"17:11457:11351":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"6:5178:12903":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:46710:100":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"17:12130:11488":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"16:3103:10834":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"2:49683:9994":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"1:15131:9630":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"2:24431:39687":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"2:49541:9164":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"16:5639:10617":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"17:12921:11635":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"1:8076:9569":{"crate_id":1,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"17:9275:11256":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"1:15214:13533":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"2:48783:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"1:14975:9473":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"16:7323:10583":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"2:49512:9152":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"5:7714:10221":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"2:49613:9168":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"2:47799:9087":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"17:11102:47532":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"6:4179:12750":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:8602:3436":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:46928:3453":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"5:8432:10262":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:52091:13422":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"17:10093:10991":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"17:13138:11767":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"2:48052:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"16:5396:10608":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"1:6344:9385":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"6:5247:12935":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"2:49094:13410":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"2:53665:8493":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"2:49294:10161":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"2:56536:237":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:14552:13713":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"2:3501:9049":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:10489:13713":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"6:6979:13271":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"6:634:12445":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"5:6498:224":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"17:13472:11851":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"1:12490:128":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"9:996:10395":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"1:4163:9616":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"17:11547:11373":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"18:811:2032":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:7042:13707":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:50298:9770":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"5:3407:10182":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2:4144:9830":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"16:5566:10615":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:3495:9048":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:10650:9337":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"2:53680:8494":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"17:9883:61524":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"17:10028:13610":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"1:8426:8857":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"12:2280:9445":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"6:4081:12709":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"2:3474:9043":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:7814:9569":{"crate_id":1,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"6:5229:12923":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:53718:8496":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:5574:9371":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"17:10364:10978":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"2:11638:9159":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"6:6671:13243":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:23072:9728":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"5:1502:9443":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"6:5149:12879":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"1:7450:9489":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"1:15766:3325":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"17:11474:11356":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"2:6687:3441":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:11822:13514":{"crate_id":1,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"2:53703:8495":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"17:10082:10990":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"2:48750:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"2:49055:13406":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:11786:9493":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"17:10464:10909":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"5:8291:8939":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"16:7754:10664":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"16:4871:12040":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"5:1760:10266":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"6:6931:13262":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"6:1680:12548":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:23357:22171":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"2:46217:199":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"2:49623:9166":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"2:10550:189":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"6:580:12416":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"17:13233:11791":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"17:12183:11495":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"2:47867:188":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"2:4835:102":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:5697:9884":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"12:2059:9398":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"6:0:799":{"crate_id":6,"path":["libc"],"kind":"module"},"2:10493:134":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"13:233:12279":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"17:9579:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"5:1055:10190":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"16:7184:10868":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"1:1041:9388":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"2:47816:8794":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:4823:9788":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"16:4381:12025":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:46858:3439":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:48346:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:48136:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"17:12222:11500":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"1:10577:9384":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"6:612:12432":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"16:5257:11255":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:48220:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"5:8240:60074":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"1:5582:9373":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"17:9920:13607":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"6:4028:12684":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"5:2843:10273":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"11:54:10450":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"2:50021:9383":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"6:5998:13110":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:49917:10006":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"17:10814:10940":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"5:0:278":{"crate_id":5,"path":["alloc"],"kind":"module"},"2:14637:1559":{"crate_id":2,"path":["core","core_arch","arch","x86_64"],"kind":"module"},"6:4474:12849":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"6:6908:13256":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"18:801:2037":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"6:4440:12834":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"18:739:3031":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"2:5239:9977":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"6:6184:13195":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"5:1518:9445":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"17:10610:13627":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"16:6286:10480":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"1:2464:13705":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:49967:9330":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"6:1567:12467":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"1:14705:11133":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"1:11246:9281":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"2:51825:9860":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"17:13361:11821":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"17:11579:11379":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"1:11273:8786":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"2:56588:237":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"16:3494:11180":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"1:15755:3314":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"17:13073:11757":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"6:5488:13049":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:4078:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"6:539:12387":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"1:5512:9367":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"17:1311:10997":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"6:4198:12751":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"16:6075:10562":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"6:4218:12753":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"6:3920:12621":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"1:15749:3310":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"1:4234:9348":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"1:15769:3328":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"12:1881:145":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"16:5326:10604":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"1:11768:9491":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"17:11591:11382":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"17:13755:11945":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"17:11603:11383":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"2:51555:9847":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"1:3112:9601":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"18:720:2195":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"17:10211:13616":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"16:547:10802":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"6:1576:12473":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:11404:9157":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:4129:9826":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"16:4975:12043":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"6:4308:12776":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"6:6665:13241":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"2:13530:109":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"17:10039:13611":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"1:4275:9345":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"2:46696:9935":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"17:13180:11779":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"2:13094:9173":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:47047:3460":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"5:8372:101":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:8643:151":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"2:47807:8939":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"16:3770:12019":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"1:10733:9534":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"17:12026:11467":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"2:10540:119":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"2:46790:11096":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"5:8215:10191":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"18:621:1697":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"14:0:3283":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"16:7208:10660":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"1:1521:9440":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"12:162:10464":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"6:5478:13047":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"5:1751:194":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"2:47858:8633":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"5:6562:9395":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"2:52615:9856":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"16:6035:10600":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"1:11381:9517":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"1:9553:11122":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockReadGuard"],"kind":"struct"},"12:379:10467":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"1:14300:9289":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"17:13522:11866":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:3255:127":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:22849:60039":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:3442:9035":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:10912:9328":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"1:10450:16947":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"17:12383:11547":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"16:4775:12037":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"1:13853:11130":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"6:3972:12657":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"17:11822:11436":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"5:6739:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"2:51424:9879":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2:23145:9906":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"2:50608:13415":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"1:900:9549":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"6:4038:12690":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"16:4689:12034":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"12:880:9396":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"1:15763:3322":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"6:4020:12681":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"17:13573:11877":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"2:47750:176":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"2:46617:10150":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"2:2842:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"17:13167:11774":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"6:4485:12855":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"6:1606:12492":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"16:7051:10650":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"5:5962:11086":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"2:51494:13418":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"18:782:2196":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"2:49298:9181":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"5:8232:10192":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"1:1475:9395":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"17:542:10538":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"17:10187:13614":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"2:2845:9703":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"5:2266:11076":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"2:46278:9824":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"17:13352:11820":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"1:10853:9351":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"2:4968:9968":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"17:12731:11602":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"6:1733:9643":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"17:11985:11463":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"1:6224:9275":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"1:4771:9290":{"crate_id":1,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"5:4036:11074":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"0:609:2028":{"crate_id":0,"path":["memchr","memmem","find_iter"],"kind":"function"},"5:8262:194":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"17:10390:10912":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"5:4372:9087":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"17:11381:11332":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"2:8403:13851":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"2:12165:9171":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"6:5186:12905":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:77:1493":{"crate_id":2,"path":["core","usize"],"kind":"module"},"5:1673:9087":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"1:11220:9288":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"6:6268:13234":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:11447:9173":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"5:6759:8855":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"17:9836:61531":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"16:5289:10561":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"16:7721:10574":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"17:10503:10915":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"2:53654:8492":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:9130:9390":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"6:3883:12594":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"6:6057:13144":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"6:5455:13041":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"1:15071:9299":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:24318:13288":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:12528:13714":{"crate_id":1,"path":["std","sys","unix","fs","TimespecDebugAdapter"],"kind":"struct"},"5:8477:10178":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"1:5766:9688":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"2:46985:1716":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"2:7129:3463":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:49657:10077":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:11166:9282":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"17:9796:61526":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"1:6648:9267":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"2:8844:157":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"16:6331:10479":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"2:3812:137":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"6:4532:12872":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"5:777:13674":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"1:8760:8871":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"12:2398:12285":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:10004:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:46066:9065":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"6:4516:12865":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"1:2466:13706":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"17:10318:10913":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"1:820:11124":{"crate_id":1,"path":["std","thread","local","os","Key"],"kind":"struct"},"5:5948:11083":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"16:5959:10553":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"12:777:8939":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"2:3375:8921":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"2:9504:8797":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"17:12360:11538":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"17:13507:11862":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"5:8455:216":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"1:13989:9348":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"2:3467:9046":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"1:5161:9630":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"17:11514:11367":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"1:10355:9282":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"17:10660:47715":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"5:3462:9400":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"12:2419:9403":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"2:10771:142":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"1:6486:13141":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"5:8532:9396":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"16:5923:10627":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"1:6246:9278":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"2:32644:59743":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"6:4373:12808":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"16:6504:10643":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"9:1075:10397":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"16:6173:10634":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:32744:59744":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"1:4495:57597":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"17:10516:11272":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"2:51871:9848":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"17:13817:11966":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"5:7547:11074":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"1:7464:9490":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:10816:9404":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"6:5216:12922":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:2895:416":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"6:4356:12797":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:52539:9849":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"16:7121:10656":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"12:2045:9396":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"2:11680:9156":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"6:4055:12696":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:56601:237":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:11354:10895":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"18:849:2156":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"17:13281:11799":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"2:51947:9837":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:7436:9488":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"2:46820:3437":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"9:776:10376":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"1:4273:9344":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"6:4379:12811":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"16:3461:10831":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"18:729:3026":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"9:686:10327":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"16:6089:10630":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"17:12646:11590":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"2:51392:9846":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"2:23261:9732":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:2554:9580":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"6:5240:12931":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:25055:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"2:24042:9725":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"18:0:1573":{"crate_id":18,"path":["memchr"],"kind":"module"},"6:586:12419":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"1:15756:3315":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"9:749:10331":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"5:984:10189":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"5:6851:9313":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"2:50130:9761":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"2:4459:8939":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"16:6381:10575":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"17:13196:11782":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"5:1909:11074":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"2:23202:9391":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"6:5547:13061":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"17:13840:11967":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"1:9254:58505":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"2:50273:9768":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:11182:9686":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"2:14153:13687":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"2:10546:8995":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"12:971:9441":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"12:1666:10473":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"1:6106:9649":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"2:52044:13421":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"6:4296:12769":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"16:6159:10565":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"1:11109:13498":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"5:4694:236":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"12:856:9434":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"17:9361:11259":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"1:11814:9495":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"12:2269:9444":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"14:56:11351":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"16:6873:8794":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"2:23019:9905":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"2:23407:9732":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"19:0:995":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"17:9160:10968":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"1:10435:16945":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"18:744:3032":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"1:11291:9505":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"2:23121:9282":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"2:2198:1051":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"17:12262:11505":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"1:13342:13852":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"16:4495:12029":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"16:7141:10658":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"6:4098:12719":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"1:15758:3317":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"17:11653:11390":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"17:2512:10977":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"1:15760:3319":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"16:5887:10807":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"5:1276:10268":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"17:12302:11512":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:50452:10025":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"2:22851:60042":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"17:13735:11939":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"1:10594:9586":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"1:5643:9679":{"crate_id":1,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"0:976:2037":{"crate_id":0,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"17:12048:11476":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"17:4157:10943":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"14:194:45871":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"1:5560:9370":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"16:6342:10638":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"1:7719:55738":{"crate_id":1,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"9:927:45305":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"17:13721:11933":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"6:672:40672":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"1:15249:10491":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"2:48768:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"17:11085:10971":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2:51923:9855":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:15726:54035":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"2:48178:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:6577:9275":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"2:52585:9853":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"5:6775:10249":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"17:12746:11603":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"16:5685:10620":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"6:1662:12536":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:15765:3324":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"5:3814:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"17:10340:10980":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"2:53505:9857":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"6:5419:13031":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"2:3458:9039":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"2:50701:9900":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"2:8652:3434":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"2:49699:9328":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"17:11234:10967":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"5:7351:11074":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"6:6097:13147":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"6:1531:12451":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"1:14391:54041":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"16:7238:10581":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"1:11037:9538":{"crate_id":1,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"2:46530:9383":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"17:2543:10907":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"16:6604:10645":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"1:13410:9485":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"18:704:2196":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"17:12620:11588":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"16:7741:10663":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"18:790:2031":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"16:5855:10625":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"1:5984:9648":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"17:12431:11552":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"2:14510:9478":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"1:11196:9631":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"2:46113:196":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:9426:57922":{"crate_id":1,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"2:14027:138":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"6:4464:12848":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"17:2314:10979":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"2:2748:580":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"6:5366:13006":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"16:3743:12018":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:13020:10001":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:3100:9595":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"2:51755:9872":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:11128:9632":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"1:10874:9325":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"17:13938:11992":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"6:3960:12654":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"1:10466:9447":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"17:13257:11797":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"17:9064:47527":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"5:8344:9403":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"2:50287:9769":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"17:9706:13603":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"6:4067:12701":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:53397:9874":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"16:4803:12038":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"6:1721:12572":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"17:9756:61529":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"6:4416:12824":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"16:6099:10631":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:9124:3429":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"16:2883:10838":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"6:6135:13159":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"1:12009:8868":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"2:46876:3448":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:2179:9397":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"17:13549:11873":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"6:5288:12956":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"6:601:12427":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"6:6967:13269":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"12:2066:9399":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"17:9539:10966":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"6:5293:12957":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"2:3462:9041":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"2:5291:9010":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"2:46271:9060":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:14766:9493":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"16:7063:10651":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"0:965:2031":{"crate_id":0,"path":["memchr","memmem","FindIter"],"kind":"struct"},"5:4509:9086":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"16:2861:10819":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"16:7131:10657":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"2:46867:3440":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"16:3007:10822":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"17:11754:11416":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:23108:9907":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"14:244:12275":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"17:9183:10901":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"17:12482:11558":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"2:50485:9460":{"crate_id":2,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"2:49503:9154":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:14699:11132":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"17:12758:11606":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:52461:9861":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"5:4281:9395":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"2:46957:3455":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:8268:9418":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"2:8097:9889":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:5753:9687":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"6:5311:12969":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:4402:9313":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"17:10407:10975":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"17:10874:11309":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"1:11433:9086":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"17:9873:13606":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:48524:8995":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:14338:13526":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"9:469:14179":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"5:8403:10073":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:48510:8994":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:3594:8547":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:3603:132":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2:49671:9904":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"2:4866:9820":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:10642:9608":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:3157:135":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"17:10775:13628":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"16:2981:10832":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"1:10862:9324":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"1:3419:11104":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"1:15762:3321":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"17:9786:13605":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"16:6277:10636":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"16:2754:10811":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"5:5488:9313":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"2:6610:3452":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"6:4127:12732":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"5:1729:9436":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"1:1496:9436":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"1:10658:9339":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"1:15745:3307":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"2:3795:9059":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"2:24302:9960":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"17:11494:11366":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"1:10473:17956":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"16:2772:10844":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"2:53147:9850":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"5:3104:1699":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"16:3314:10809":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"16:7369:10564":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"6:4148:12740":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"16:4903:12041":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"17:13887:11981":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"1:5520:9368":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"2:14339:10034":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"17:10445:11217":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"2:8687:120":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"17:12093:11483":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"2:49521:9153":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"6:6080:13145":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"17:10048:13612":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"6:4061:12698":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"1:11985:8860":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"6:3933:12631":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"1:2167:8939":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"2:3365:8920":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"12:466:13845":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"1:14325:9378":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"2:7992:3446":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"17:10962:13639":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"12:928:9435":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"1:11946:9423":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"12:2392:12284":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"16:3199:10826":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"2:24370:9956":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"12:869:9395":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"6:4208:12752":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"2:46656:10012":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:11364:9516":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"1:1462:9434":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"17:9291:11257":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"17:10530:11312":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"1:2958:9587":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"2:11486:9158":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:10582:9584":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"17:12250:11504":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:47235:3420":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"5:1533:9444":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"17:13323:11813":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"1:10728:9533":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"1:5438:9363":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"17:12442:11553":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:24410:39695":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"17:10476:10914":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:46536:13385":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"17:11810:11433":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"2:51614:9836":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:14816:13528":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"1:5504:9366":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"17:9033:47526":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"12:114:13844":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"16:3129:10833":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"1:2170:9395":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"1:12019:9429":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"17:11742:11413":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"2:10220:9980":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:2163:9086":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"6:4392:12816":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:50115:9758":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"16:6518:10577":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"5:4709:11079":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"2:51632:13420":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"2:3355:218":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"4:0:3277":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"2:50689:9902":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"17:12892:11615":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"1:2370:601":{"crate_id":1,"path":["std","env"],"kind":"module"},"2:51280:13416":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:4195:9346":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"5:8297:8939":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"2:9127:3431":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"17:13660:11926":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"1:10954:9293":{"crate_id":1,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"16:7702:10572":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"1:3322:9335":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"17:10304:10891":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"17:10127:10913":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"2:3454:9040":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"5:8466:10177":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"5:7473:8939":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"17:13595:11882":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"2:53733:8497":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"1:6904:8785":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"2:3509:9051":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"2:46298:9897":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"12:2404:61517":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"1:14790:54038":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"3:321:205":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"16:2937:10843":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"2:49817:9159":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"2:56575:237":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"12:2412:12287":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"17:12209:11498":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"17:12634:11589":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"17:10913:13635":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"17:12469:11557":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"17:10198:13615":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"2:50444:10026":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"6:626:12440":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"10:0:3280":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"17:13763:11946":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"6:4270:9650":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"16:5176:12044":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"18:694:1973":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:23396:9282":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"6:4454:12842":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:50460:10020":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"6:6243:13228":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"6:5204:12918":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:11175:214":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:46195:197":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"12:843:9433":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"2:48517:8993":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"16:6549:10579":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"1:15751:3312":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"2:22870:60037":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:10966:9294":{"crate_id":1,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"15:269:10487":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"2:2376:9540":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"6:6914:13257":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:24385:13296":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"17:10643:11275":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"2:49552:9170":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:49731:9161":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"17:13785:11951":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"1:11133:9633":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"17:10489:11271":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"2:46975:3456":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"12:1203:10462":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"16:7025:10554":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"2:24483:10110":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"2:53459:9839":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"14:11:13670":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"16:6907:10648":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"2:51454:9867":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"2:50144:9764":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"18:637:2196":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"2:46946:3462":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"2:14077:58773":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"12:1162:10460":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"2:50209:9766":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"12:895:10452":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"2:5122:9971":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:11844:13515":{"crate_id":1,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"17:12417:11550":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"2:2262:9812":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"2:46937:3454":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:12499:11129":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"17:9958:61530":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"6:607:12430":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"17:11907:11444":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"2:2867:104":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:13059:10005":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"17:12143:11280":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"16:2733:10534":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"1:9558:11123":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockWriteGuard"],"kind":"struct"},"2:50651:10032":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:8712:9664":{"crate_id":1,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"2:46994:3457":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:10493:10277":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"2:49633:9167":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"5:3838:9087":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"2:24923:9150":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"17:9259:11255":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"17:2484:47615":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"2:39086:10277":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"6:1727:12575":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"16:5721:10622":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"6:4493:12857":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"6:1912:41646":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"2:8712:3433":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"0:617:2047":{"crate_id":0,"path":["memchr","memmem","find"],"kind":"function"},"1:12038:9457":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"16:5498:10613":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"17:10394:10976":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"6:6943:13264":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"6:1558:12462":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"1:8847:8865":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"2:13332:9757":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:10980:9296":{"crate_id":1,"path":["std","net","ip","IpAddr"],"kind":"enum"},"2:24989:165":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"1:11122:9631":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"2:3388:8546":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"17:11922:11448":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"2:49452:9993":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"5:2005:9396":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"18:651:1966":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"2:2248:9809":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"16:4411:12026":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"2:3359:220":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"17:13565:11876":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"5:3436:9397":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"2:13043:10002":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:47926:9087":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"7:85:45208":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"5:1626:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"2:46153:195":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"5:4017:9396":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"1:11962:9424":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"2:50598:201":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"2:49781:10000":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"16:7826:9897":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"17:11314:10897":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"9:900:12341":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"2:14118:187":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"2:28300:9793":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"16:7415:10582":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:21:673":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"0:995:2038":{"crate_id":0,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"5:1663:9086":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:51901:9852":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"17:13708:11927":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"1:9505:9623":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"1:1152:13697":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:14329:9821":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"0:0:1573":{"crate_id":0,"path":["memchr"],"kind":"module"},"16:7100:10654":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"1:2695:180":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"17:12406:11548":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"6:1694:12559":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"17:294:13596":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"17:11256:11327":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"16:6691:10646":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"2:52145:13424":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"2:11666:9160":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"6:5405:13020":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"6:3907:12611":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"17:9517:9328":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"6:4277:12757":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:4753:9313":{"crate_id":2,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"0:1004:2087":{"crate_id":0,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"1:14067:9133":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"1:1500:9437":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"2:3479:9044":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"6:5210:12921":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:3726:9058":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:49102:13411":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"6:5447:13039":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"1:6746:9280":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"17:11181:11326":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"6:3981:12662":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"5:3105:60158":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"12:1147:9445":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"2:24824:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"1:3497:9338":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"6:4160:12749":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"1:4848:9539":{"crate_id":1,"path":["std","net","ip","display_buffer","IpDisplayBuffer"],"kind":"struct"},"6:5974:13093":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"17:10068:10885":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"16:6190:10635":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"2:51324:9878":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:10918:9157":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"1:10738:9340":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"6:593:12422":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"17:11130:11322":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"1:4160:9615":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"2:50428:10018":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"2:2041:9313":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"6:88:40272":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"17:10925:13636":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"5:8419:10261":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"12:1183:10461":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"1:11892:8939":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"2:47934:8939":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"5:7205:11088":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"6:4346:12791":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:22804:2237":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"17:11305:11603":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"17:13331:11816":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"6:5398:13019":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:53257:9870":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"17:12015:11466":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"17:12070:11477":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2:2936:177":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"6:6925:13261":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:24447:39696":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:2136:1307":{"crate_id":2,"path":["core","mem","size_of"],"kind":"function"},"2:32578:8536":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"17:9636:13602":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"1:13673:9490":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"6:1551:12459":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"1:4063:9352":{"crate_id":1,"path":["std","io","readbuf","ReadBuf"],"kind":"struct"},"1:2035:145":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"6:4116:12728":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"2:57876:13436":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"6:1544:12457":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"1:10604:9379":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"2:12298:11102":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"17:12003:11464":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"1:6646:9270":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"1:8695:3420":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"16:4351:12024":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"2:0:489":{"crate_id":2,"path":["core"],"kind":"module"},"2:8167:3416":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"1:15238:10491":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"2:12742:9148":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:15757:3316":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"1:15494:11134":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"6:5426:13033":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:49604:9165":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"12:0:3282":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"1:7119:186":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"6:5390:13018":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"6:4434:12833":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"6:6214:13212":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:23350:9282":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"6:6937:13263":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:46239:9057":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"1:1431:9087":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"1:1504:9438":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"17:13452:11844":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"2:50236:9767":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"2:3836:9887":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"2:23932:9151":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"16:6130:10632":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"18:766:3014":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:49084:9515":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"2:9131:3432":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"5:7736:10222":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"6:4230:12754":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"17:10147:11268":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"1:4486:8988":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"1:11066:13492":{"crate_id":1,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"12:1103:9443":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"1:13711:9492":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"17:12196:11496":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"2:24758:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"17:11282:47533":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"2:32544:8535":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:11800:9494":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"2:53543:9877":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"2:11524:9174":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"9:41:10379":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"1:11423:9518":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"17:0:3286":{"crate_id":17,"path":["object"],"kind":"module"},"1:11876:9086":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"17:13899:11983":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:48010:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:53628:1900":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"6:1626:12506":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:3436:9036":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"17:11890:11438":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"17:12660:11591":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"17:13794:11953":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"2:3637:9064":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"1:11439:9520":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"5:3428:9399":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"1:13689:55739":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"1:4157:9614":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:23944:60013":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"2:52799:9862":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"17:9988:47577":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"6:3966:12655":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:5745:9685":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"17:10899:13631":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"1:13784:9491":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"6:4135:12736":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"17:13539:11870":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"1:10634:118":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"17:13557:11874":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"1:8175:9515":{"crate_id":1,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"1:14358:129":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"17:12527:11567":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"12:1784:11072":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"16:6557:10644":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:15761:3320":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"1:8197:10285":{"crate_id":1,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"2:10482:205":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"2:6870:58949":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"16:7264:194":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"1:10846:2188":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"1:5285:9637":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"2:46886:3449":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"16:4271:12022":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"2:50440:10022":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"16:7637:10661":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"17:10223:10906":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"16:6643:10856":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"17:12674:11594":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"16:3243:10828":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"5:69:10217":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"2:46670:10153":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"17:10291:10888":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"17:10571:10942":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"1:7402:9486":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"2:10781:146":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"16:5516:10800":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"2:46640:10151":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"12:933:9438":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"12:559:143":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"2:11559:9161":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"16:7110:10655":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"2:13302:9753":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"12:2040:9395":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"0:618:2054":{"crate_id":0,"path":["memchr","memmem","rfind"],"kind":"function"},"1:11930:9422":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"1:10925:9330":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"2:3655:9055":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:37894:2237":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"2:24857:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"1:696:9544":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:3513:9052":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"17:13428:11837":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"6:4321:12780":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"1:5526:9369":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"2:10548:8996":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"2:46587:10155":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"6:4005:12675":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"2:50497:10093":{"crate_id":2,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"2:24476:13309":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"17:11769:11422":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"17:10937:13637":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"2:3352:1704":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"16:3340:10810":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"17:9131:47529":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"2:53619:8490":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:13177:9644":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"2:50456:10019":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"17:11409:11336":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"6:4012:12679":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"16:6468:10641":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"2:14390:201":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"1:2441:13704":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"1:11884:9417":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"2:3415:9032":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"2:46173:198":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"2:8606:3435":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"16:3686:12017":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"17:13094:11762":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"1:8926:8790":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"2:3425:9034":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"2:47253:3424":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"5:7943:11094":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"18:712:2237":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"2:46905:3451":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"16:6310:10637":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"14:189:13670":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:49881:10004":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:48887:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"5:8270:10174":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"16:5362:10606":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"1:15715:16950":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"2:3357:106":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"1:4504:9307":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"1:1305:143":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"1:1418:9086":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"16:7768:10569":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"17:13293:11802":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"16:3478:10830":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"2:3807:225":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"2:47968:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:11341:9515":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"12:1121:9444":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"2:48262:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"9:722:10330":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"17:10851:11308":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"16:2959:10821":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"9:234:10354":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"2:2487:9823":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:15764:3323":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"1:2174:9396":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"17:3743:10936":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"1:15223:54032":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"1:11224:13126":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"2:3085:9282":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"5:3441:10183":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"6:4332:12786":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"17:9930:61528":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"6:4526:12870":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"2:51577:9851":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:894:9548":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"2:47782:1855":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:23733:9733":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"17:11725:11405":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"16:6050:10629":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"2:23738:22190":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"1:14320:13520":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"17:10455:10910":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"1:1441:8939":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"16:5941:10628":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"1:15747:3308":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"1:6472:9369":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"2:51595:13419":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:47057:3461":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"6:4088:12712":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"0:300:1589":{"crate_id":0,"path":["memchr","memmem"],"kind":"module"},"14:216:45877":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:3484:9045":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"6:4386:12813":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"16:6595:10576":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"14:250:12277":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"16:5745:10623":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"1:2525:9579":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"2:5004:9969":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"17:13247:11796":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"16:6931:10866":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"5:4308:11074":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"17:13421:11836":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"17:11068:10902":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"17:10104:10992":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"12:952:9440":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"17:11640:11389":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"2:10533:109":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:56523:237":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"13:0:3276":{"crate_id":13,"path":["std_detect"],"kind":"module"},"12:2052:9397":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"2:48871:8992":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"16:5217:10812":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"17:13377:11825":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"16:0:3285":{"crate_id":16,"path":["gimli"],"kind":"module"},"12:764:9087":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"16:4716:12035":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"16:5412:10609":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"16:6679:10859":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"6:1537:12454":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"1:15759:3318":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"2:49578:3437":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"6:6034:13126":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"1:14683:11131":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"2:3151:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"7:0:1483":{"crate_id":7,"path":["unwind"],"kind":"module"},"1:8961:13708":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"5:7306:9395":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"2:48774:133":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"2:5676:16951":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"6:5331:12985":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"16:5948:10817":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"5:1256:13850":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"1:14381:9324":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"1:3841:127":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"6:6129:13158":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"1:3839:205":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"2:47943:178":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"17:11671:11399":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"17:13529:11867":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"17:299:13597":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"2:51969:9840":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:3164:228":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"1:10382:9567":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"1:8167:9569":{"crate_id":1,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"2:5723:780":{"crate_id":2,"path":["core","iter"],"kind":"module"},"2:11597:9162":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:5113:9008":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"2:46715:10072":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"17:13271:11798":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"17:12573:11574":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"18:896:2236":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:47244:3422":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"2:12983:9998":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"14:47:13670":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"5:1072:9086":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"16:7471:10559":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"6:1764:12587":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:48304:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:51370:9858":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"16:3051:10880":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"16:3155:10824":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"18:829:2087":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"1:1491:9435":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"5:1710:9434":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"6:6016:13117":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"18:837:2085":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"16:5605:10616":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"1:7582:9498":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"1:1075:9380":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"5:8254:8939":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"5:8200:10170":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"1:5158:9629":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"2:3659:9056":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"2:10536:109":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"2:39090:3447":{"crate_id":2,"path":["core","error","Chain"],"kind":"struct"},"17:12512:11563":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"5:3366:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"17:13774:11950":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"2:4:980":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"16:5348:10605":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"2:49987:10009":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:9505:8796":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"2:24393:13297":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:3420:9037":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"15:230:10482":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"2:53795:8499":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:2405:13703":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2:3818:9061":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1:14969:9472":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"6:5439:13037":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"5:5609:8855":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"17:10801:10939":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"2:13327:9756":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:15754:3313":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:50436:10023":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"16:6026:10558":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"2:14042:150":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"17:8929:47524":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:23405:9835":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"2:2166:579":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"1:14569:9495":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"16:6630:10855":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"17:510:13598":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"2:46800:13692":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"1:10617:129":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"1:2961:9322":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"2:24956:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"17:13975:11999":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"17:13345:11818":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:2946:184":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"16:6141:10633":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"1:13992:9344":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"17:9004:47525":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"17:10831:10913":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"1:1636:9444":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"2:39050:9499":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"1:7294:119":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"6:618:12435":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"1:8850:8866":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"9:809:9515":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"16:5303:10603":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"6:6902:13255":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"17:13215:11783":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"2:13321:2085":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"17:11937:11453":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"1:2953:128":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"17:1236:13600":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"18:820:2038":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"12:940:9439":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"16:3908:12020":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"5:2396:10270":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"17:11615:11386":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"2:13378:9760":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"5:7048:10175":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"16:5273:11256":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"5:981:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"16:3029:10823":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"1:3443:9331":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"2:10483:8988":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"6:5567:13075":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"2:5248:9009":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"1:14315:13518":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"2:12766:2782":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"18:645:1968":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"17:11628:11388":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"17:13016:11718":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"17:13873:11974":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"2:48835:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"19:117:11175":{"crate_id":19,"path":["panic_unwind","dwarf","eh","EHContext"],"kind":"struct"},"17:9716:61527":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"17:10058:10996":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"1:10377:9553":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"1:1190:16949":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"16:4840:12039":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"1:5737:9684":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"17:11530:11371":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"16:3402:10551":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"6:1748:12582":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"5:5388:200":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:47918:9086":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"2:24281:13286":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"18:136:1585":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"1:5432:9361":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:11355:9086":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"17:12157:11492":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"16:6980:10649":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"17:12543:11568":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"1:10167:13721":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"6:5378:13011":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"6:4402:12819":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"6:5982:13098":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"1:15748:3309":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"2:46743:10074":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"16:7792:10598":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"17:13515:11865":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"5:1701:9433":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"5:7874:235":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"18:668:1971":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:2900:183":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:6484:13139":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"2:24358:9955":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:10407:9133":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"17:10253:10961":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"1:6724:9272":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"2:2173:8532":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"2:50321:10081":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"2:46545:9930":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"12:2032:9086":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"1:10217:11125":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"1:8590:162":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"5:444:1700":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"1:15093:9629":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"17:11168:11324":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"6:1526:12449":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:8639:136":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"17:11956:11458":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"1:14778:9494":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"1:14942:9465":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"17:9676:61532":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"16:5443:10611":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"2:24497:10062":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:3409:9336":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"2:2905:124":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"2:10544:8994":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"2:10552:8997":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"6:6153:13170":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"18:678:142":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:53335:9854":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"5:4581:10296":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"2:52122:13423":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"17:11968:11460":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"2:51679:9880":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"2:51725:9868":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"2:53608:8489":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:783:11124":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"18:661:1969":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:7906:3214":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"6:4315:12777":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:3489:9047":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"2:3824:9063":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:13986:9346":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"6:533:12385":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"2:5499:10147":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"6:5582:13086":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:48388:8856":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"6:6114:13152":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:3853:9066":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"3:0:431":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:24139:10044":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"5:7918:11088":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"16:5427:10610":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"1:14374:118":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"1:15152:9637":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"1:9381:11120":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"}},"external_crates":{"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":18}