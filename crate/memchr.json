{"root":"0:0:1587","crate_version":"2.5.0","includes_private":false,"index":{"0:0:1587":{"id":"0:0:1587","crate_id":0,"name":"memchr","span":{"filename":"src/lib.rs","begin":[1,0],"end":[181,10]},"visibility":"public","docs":"This library provides heavily optimized routines for string search primitives.\n\n# Overview\n\nThis section gives a brief high level overview of what this crate offers.\n\n* The top-level module provides routines for searching for 1, 2 or 3 bytes\n  in the forward or reverse direction. When searching for more than one byte,\n  positions are considered a match if the byte at that position matches any\n  of the bytes.\n* The [`memmem`] sub-module provides forward and reverse substring search\n  routines.\n\nIn all such cases, routines operate on `&[u8]` without regard to encoding. This\nis exactly what you want when searching either UTF-8 or arbitrary bytes.\n\n# Example: using `memchr`\n\nThis example shows how to use `memchr` to find the first occurrence of `z` in\na haystack:\n\n```\nuse memchr::memchr;\n\nlet haystack = b\"foo bar baz quuz\";\nassert_eq!(Some(10), memchr(b'z', haystack));\n```\n\n# Example: matching one of three possible bytes\n\nThis examples shows how to use `memrchr3` to find occurrences of `a`, `b` or\n`c`, starting at the end of the haystack.\n\n```\nuse memchr::memchr3_iter;\n\nlet haystack = b\"xyzaxyzbxyzc\";\n\nlet mut it = memchr3_iter(b'a', b'b', b'c', haystack).rev();\nassert_eq!(Some(11), it.next());\nassert_eq!(Some(7), it.next());\nassert_eq!(Some(3), it.next());\nassert_eq!(None, it.next());\n```\n\n# Example: iterating over substring matches\n\nThis example shows how to use the [`memmem`] sub-module to find occurrences of\na substring in a haystack.\n\n```\nuse memchr::memmem;\n\nlet haystack = b\"foo bar foo baz foo\";\n\nlet mut it = memmem::find_iter(haystack, \"foo\");\nassert_eq!(Some(0), it.next());\nassert_eq!(Some(8), it.next());\nassert_eq!(Some(16), it.next());\nassert_eq!(None, it.next());\n```\n\n# Example: repeating a search for the same needle\n\nIt may be possible for the overhead of constructing a substring searcher to be\nmeasurable in some workloads. In cases where the same needle is used to search\nmany haystacks, it is possible to do construction once and thus to avoid it for\nsubsequent searches. This can be done with a [`memmem::Finder`]:\n\n```\nuse memchr::memmem;\n\nlet finder = memmem::Finder::new(\"foo\");\n\nassert_eq!(Some(4), finder.find(b\"baz foo quux\"));\nassert_eq!(None, finder.find(b\"quux baz bar\"));\n```\n\n# Why use this crate?\n\nAt first glance, the APIs provided by this crate might seem weird. Why provide\na dedicated routine like `memchr` for something that could be implemented\nclearly and trivially in one line:\n\n```\nfn memchr(needle: u8, haystack: &[u8]) -> Option<usize> {\n    haystack.iter().position(|&b| b == needle)\n}\n```\n\nOr similarly, why does this crate provide substring search routines when Rust's\ncore library already provides them?\n\n```\nfn search(haystack: &str, needle: &str) -> Option<usize> {\n    haystack.find(needle)\n}\n```\n\nThe primary reason for both of them to exist is performance. When it comes to\nperformance, at a high level at least, there are two primary ways to look at\nit:\n\n* **Throughput**: For this, think about it as, \"given some very large haystack\n  and a byte that never occurs in that haystack, how long does it take to\n  search through it and determine that it, in fact, does not occur?\"\n* **Latency**: For this, think about it as, \"given a tiny haystack---just a\n  few bytes---how long does it take to determine if a byte is in it?\"\n\nThe `memchr` routine in this crate has _slightly_ worse latency than the\nsolution presented above, however, its throughput can easily be over an\norder of magnitude faster. This is a good general purpose trade off to make.\nYou rarely lose, but often gain big.\n\n**NOTE:** The name `memchr` comes from the corresponding routine in libc. A key\nadvantage of using this library is that its performance is not tied to its\nquality of implementation in the libc you happen to be using, which can vary\ngreatly from platform to platform.\n\nBut what about substring search? This one is a bit more complicated. The\nprimary reason for its existence is still indeed performance, but it's also\nuseful because Rust's core library doesn't actually expose any substring\nsearch routine on arbitrary bytes. The only substring search routine that\nexists works exclusively on valid UTF-8.\n\nSo if you have valid UTF-8, is there a reason to use this over the standard\nlibrary substring search routine? Yes. This routine is faster on almost every\nmetric, including latency. The natural question then, is why isn't this\nimplementation in the standard library, even if only for searching on UTF-8?\nThe reason is that the implementation details for using SIMD in the standard\nlibrary haven't quite been worked out yet.\n\n**NOTE:** Currently, only `x86_64` targets have highly accelerated\nimplementations of substring search. For `memchr`, all targets have\nsomewhat-accelerated implementations, while only `x86_64` targets have highly\naccelerated implementations. This limitation is expected to be lifted once the\nstandard library exposes a platform independent SIMD API.\n\n# Crate features\n\n* **std** - When enabled (the default), this will permit this crate to use\n  features specific to the standard library. Currently, the only thing used\n  from the standard library is runtime SIMD CPU feature detection. This means\n  that this feature must be enabled to get AVX accelerated routines. When\n  `std` is not enabled, this crate will still attempt to use SSE2 accelerated\n  routines on `x86_64`.\n* **libc** - When enabled (**not** the default), this library will use your\n  platform's libc implementation of `memchr` (and `memrchr` on Linux). This\n  can be useful on non-`x86_64` targets where the fallback implementation in\n  this crate is not as good as the one found in your libc. All other routines\n  (e.g., `memchr[23]` and substring search) unconditionally use the\n  implementation in this crate.","links":{"`memmem`":"0:300:1603","`memmem::Finder`":"0:986:2046"},"attrs":["#![deny(missing_docs)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:300:1603","0:4","0:7","0:10","0:13","0:16","0:19","0:22","0:25","0:28","0:31","0:34","0:37","0:40","0:43","0:46"],"is_stripped":false}},"b:2:3201-0:1004:2101":{"id":"b:2:3201-0:1004:2101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2101","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13768:60685":{"id":"2:13768:60685","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"str::split":"2:13756:56570","str::split_terminator":"2:13765:60684","prim@char":"1:15883:3321","self::pattern":"2:13332:9771"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:49857:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:9770","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13342:9770","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13357:9773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1000:414":{"id":"0:1000:414","crate_id":0,"name":"clone","span":{"filename":"src/memmem/mod.rs","begin":[575,9],"end":[575,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2052","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10811:147":{"id":"2:10811:147","crate_id":2,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10812:656","2:10813:3403","2:10814:58157","2:10815:58158","2:10816:58159","2:10817:58160","2:10818:58161","2:10819:58162","2:10820:58163","2:10821:58164","2:10822:58165","2:10823:58166","2:10824:58167","2:10825:58168","2:10826:58169","2:10827:1549"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2865-0:137:1599":{"id":"b:2:2865-0:137:1599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1599","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2867:3391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3197-0:965:2045":{"id":"b:2:3197-0:965:2045","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:965:2045","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:3200:3267"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3103:9758":{"id":"2:3103:9758","crate_id":2,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:3102:9292","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3168:74":{"id":"2:3168:74","crate_id":2,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3170:3069"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:3484:9054":{"id":"2:3484:9054","crate_id":2,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3485:183","2:3486:958"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3587:117":{"id":"2:3587:117","crate_id":2,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3588:226","2:3589:548"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3518:9057":{"id":"2:3518:9057","crate_id":2,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3520:358"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3212-0:986:2046":{"id":"b:2:3212-0:986:2046","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2046","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:976:2051":{"id":"0:976:2051","crate_id":0,"name":"FindRevIter","span":{"filename":"src/memmem/mod.rs","begin":[376,0],"end":[382,1]},"visibility":"public","docs":"An iterator over non-overlapping substring matches in reverse.\n\nMatches are reported by the byte offset at which they begin.\n\n`'h` is the lifetime of the haystack while `'n` is the lifetime of the\nneedle.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:629","a:2:3376:224-0:976:2051","a:2:3405:8557-0:976:2051","a:2:9533:8809-0:976:2051","a:2:9534:8808-0:976:2051","a:2:3364:215-0:976:2051","b:2:3201-0:976:2051","b:2:3197-0:976:2051","b:2:3207-0:976:2051","b:2:2868-0:976:2051","b:2:4097-0:976:2051","b:2:8677-0:976:2051","b:2:2865-0:976:2051","b:2:3212-0:976:2051","0:982","0:634"]}},"0:137:1599":{"id":"0:137:1599","crate_id":0,"name":"Memchr","span":{"filename":"src/memchr/iter.rs","begin":[34,0],"end":[40,1]},"visibility":"public","docs":"An iterator for `memchr`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:142","a:2:3376:224-0:137:1599","a:2:3405:8557-0:137:1599","a:2:9533:8809-0:137:1599","a:2:9534:8808-0:137:1599","a:2:3364:215-0:137:1599","b:2:3201-0:137:1599","b:2:3197-0:137:1599","b:2:3207-0:137:1599","b:2:2868-0:137:1599","b:2:4097-0:137:1599","b:2:8677-0:137:1599","b:2:2865-0:137:1599","b:2:3212-0:137:1599","0:145","0:150"]}},"0:637:1869":{"id":"0:637:1869","crate_id":0,"name":"Item","span":{"filename":"src/memmem/mod.rs","begin":[413,4],"end":[413,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"usize"}}},"2:13715:2316":{"id":"2:13715:2316","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12796:2796"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:834":{"id":"0:834","crate_id":0,"name":null,"span":{"filename":"src/memmem/prefilter/mod.rs","begin":[168,22],"end":[168,27]},"visibility":{"restricted":{"parent":"0:354:1979","path":"::memmem::prefilter"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:835:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3212-0:170:1601":{"id":"b:2:3212-0:170:1601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:142":{"id":"0:142","crate_id":0,"name":null,"span":{"filename":"src/memchr/iter.rs","begin":[42,0],"end":[48,1]},"visibility":{"restricted":{"parent":"0:115:784","path":"::memchr::iter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1599","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:144:926"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5553:9355":{"id":"1:5553:9355","crate_id":1,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5554:53992","1:5555:53993","1:5556:53994","1:5557:53995"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3248:116":{"id":"2:3248:116","crate_id":2,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3249:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3373:221":{"id":"2:3373:221","crate_id":2,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:833":{"id":"0:833","crate_id":0,"name":null,"span":{"filename":"src/memmem/prefilter/mod.rs","begin":[168,16],"end":[168,20]},"visibility":{"restricted":{"parent":"0:354:1979","path":"::memmem::prefilter"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3374:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:456:59":{"id":"0:456:59","crate_id":0,"name":"default","span":{"filename":"src/memmem/prefilter/mod.rs","begin":[180,4],"end":[182,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13821:60700":{"id":"2:13821:60700","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:15883:3321","self::pattern":"2:13332:9771"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:9770","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13342:9770","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13357:9773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13759:32802":{"id":"2:13759:32802","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:15883:3321","self::pattern":"2:13332:9771"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:13124:9181","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:9770","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:22":{"id":"0:22","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[173,4],"end":[173,11]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::memchr::memrchr","name":"memrchr","id":"0:294:1593","glob":false}},"0:991:414":{"id":"0:991:414","crate_id":0,"name":"clone","span":{"filename":"src/memmem/mod.rs","begin":[448,9],"end":[448,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2046","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3212-0:137:1599":{"id":"b:2:3212-0:137:1599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1599","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:844:227":{"id":"5:844:227","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:845:1713","5:846:8993","5:847:8994"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3197-0:137:1599":{"id":"b:2:3197-0:137:1599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1599","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3200:3267"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:14072:151":{"id":"2:14072:151","crate_id":2,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:14073:183","2:14074:151","2:14075:772"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3207-0:995:2052":{"id":"b:2:3207-0:995:2052","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2052","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:10":{"id":"0:10","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[172,21],"end":[172,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::memchr::memchr2_iter","name":"memchr2_iter","id":"0:283:1589","glob":false}},"2:11205:218":{"id":"2:11205:218","crate_id":2,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:11207:183","2:11208:2825","2:11209:13888","2:11210:56542","2:11211:56543","2:11212:757","2:11213:758"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:11196:9292","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3522:9058":{"id":"2:3522:9058","crate_id":2,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3524:360"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9533:8809-0:995:2052":{"id":"a:2:9533:8809-0:995:2052","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:8809","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2052","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:13":{"id":"0:13","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[172,35],"end":[172,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::memchr::memchr3","name":"memchr3","id":"0:292:1590","glob":false}},"b:2:3197-0:995:2052":{"id":"b:2:3197-0:995:2052","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2052","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:3200:3267"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8874:158":{"id":"2:8874:158","crate_id":2,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8875:1869","2:8876:928","2:8877:8948","2:8880:1870","2:8881:500","2:8883:8949","2:8886:8950","2:8887:8951","2:8888:8952","2:8889:2812","2:8891:3228","2:8893:8953","2:8894:8954","2:8896:847","2:8899:8955","2:8906:8956","2:8908:8957","2:8911:2965","2:8912:8958","2:8913:8959","2:8915:8960","2:8917:8961","2:8920:1321","2:8921:8544","2:8922:8962","2:8926:2810","2:8929:8963","2:8930:8964","2:8931:8965","2:8933:8966","2:8934:3178","2:8936:8967","2:8939:8968","2:8941:8969","2:8951:8970","2:8966:8971","2:8968:8972","2:8972:8973","2:8981:8974","2:8984:8975","2:8986:8976","2:8989:282","2:8996:300","2:9003:2061","2:9010:8977","2:9019:8978","2:9029:1021","2:9036:1875","2:9043:2083","2:9044:1836","2:9045:8936","2:9057:8935","2:9064:8934","2:9076:8933","2:9083:1744","2:9084:8979","2:9089:8980","2:9092:8981","2:9095:8982","2:9096:8983","2:9098:8984","2:9100:8985","2:9102:421","2:9105:8986","2:9108:1004","2:9111:8987","2:9114:608","2:9117:8988","2:9120:913","2:9122:832","2:9124:797","2:9126:716","2:9128:700","2:9130:8989","2:9131:8990","2:9139:8991"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13742:56579":{"id":"2:13742:56579","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"self::pattern":"2:13332:9771","prim@char":"1:15883:3321"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:9770","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9533:8809-0:170:1601":{"id":"a:2:9533:8809-0:170:1601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:8809","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13795:60691":{"id":"2:13795:60691","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:664:2102":{"id":"0:664:2102","crate_id":0,"name":"build_forward","span":{"filename":"src/memmem/mod.rs","begin":[711,4],"end":[716,5]},"visibility":"public","docs":"Build a forward finder using the given needle from the current\nsettings.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["needle",{"kind":"borrowed_ref","inner":{"lifetime":"'n","mutable":false,"type":{"kind":"generic","inner":"B"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2046","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"AsRef","id":"2:3165:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8680:8947":{"id":"2:8680:8947","crate_id":2,"name":"IntoIter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"I"}}},"2:3611:8558":{"id":"2:3611:8558","crate_id":2,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3612:583"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1003:664":{"id":"0:1003:664","crate_id":0,"name":"fmt","span":{"filename":"src/memmem/mod.rs","begin":[575,16],"end":[575,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13806:60697":{"id":"2:13806:60697","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:15883:3321","self::pattern":"2:13332:9771"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:9770","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:152:1871":{"id":"0:152:1871","crate_id":0,"name":"next_back","span":{"filename":"src/memchr/iter.rs","begin":[66,4],"end":[68,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8874:158","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3364:215-0:1004:2101":{"id":"a:2:3364:215-0:1004:2101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2101","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13828:55350":{"id":"2:13828:55350","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5431:9389":{"id":"1:5431:9389","crate_id":1,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5432:10897","1:5433:2316"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10416:9292","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3812:9067":{"id":"2:3812:9067","crate_id":2,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"RangeBounds","id":"2:3743:9066","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:4":{"id":"0:4","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[172,4],"end":[172,10]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::memchr::memchr","name":"memchr","id":"0:288:1587","glob":false}},"2:3491:9051":{"id":"2:3491:9051","crate_id":2,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3493:183","2:3494:357"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3207-0:826:1980":{"id":"b:2:3207-0:826:1980","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9534:8808-0:995:2052":{"id":"a:2:9534:8808-0:995:2052","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:8808","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2052","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:10572:9001":{"id":"2:10572:9001","crate_id":2,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10573:664"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3174:136":{"id":"2:3174:136","crate_id":2,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3176:685"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:643:2061":{"id":"0:643:2061","crate_id":0,"name":"find","span":{"filename":"src/memmem/mod.rs","begin":[484,4],"end":[486,5]},"visibility":"public","docs":"Returns the index of the first occurrence of this needle in the given\nhaystack.\n\n# Complexity\n\nThis routine is guaranteed to have worst case linear time complexity\nwith respect to both the needle and the haystack. That is, this runs\nin `O(needle.len() + haystack.len())` time.\n\nThis routine is also guaranteed to have worst case constant space\ncomplexity.\n\n# Examples\n\nBasic usage:\n\n```\nuse memchr::memmem::Finder;\n\nlet haystack = b\"foo bar baz\";\nassert_eq!(Some(0), Finder::new(\"foo\").find(haystack));\nassert_eq!(Some(4), Finder::new(\"bar\").find(haystack));\nassert_eq!(None, Finder::new(\"quux\").find(haystack));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9534:8808-0:965:2045":{"id":"a:2:9534:8808-0:965:2045","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:8808","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:965:2045","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:4097-0:965:2045":{"id":"b:2:4097-0:965:2045","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:965:2045","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:296:1594":{"id":"0:296:1594","crate_id":0,"name":"memrchr2","span":{"filename":"src/memchr/mod.rs","begin":[325,0],"end":[352,1]},"visibility":"public","docs":"Like `memrchr`, but searches for either of two bytes instead of just one.\n\nThis returns the index corresponding to the last occurrence of `needle1` or\nthe last occurrence of `needle2` in `haystack` (whichever occurs later), or\n`None` if neither one is found. If an index is returned, it is guaranteed\nto be less than `usize::MAX`.\n\nWhile this is operationally the same as something like\n`haystack.iter().rposition(|&b| b == needle1 || b == needle2)`, `memrchr2`\nwill use a highly optimized routine that can be up to an order of magnitude\nfaster in some cases.\n\n# Example\n\nThis shows how to find the last position of either of two bytes in a byte\nstring.\n\n```\nuse memchr::memrchr2;\n\nlet haystack = b\"the quick brown fox\";\nassert_eq!(memrchr2(b'k', b'q', haystack), Some(8));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["needle1",{"kind":"primitive","inner":"u8"}],["needle2",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3496:9052":{"id":"2:3496:9052","crate_id":2,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3498:183","2:3499:359"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9533:8809-0:986:2046":{"id":"a:2:9533:8809-0:986:2046","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:8809","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2046","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:827:176":{"id":"0:827:176","crate_id":0,"name":"None","span":{"filename":"src/memmem/prefilter/mod.rs","begin":[172,4],"end":[172,8]},"visibility":"default","docs":"Never used a prefilter in substring search.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"2:14057:139":{"id":"2:14057:139","crate_id":2,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:14058:183","2:14059:1020"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13735:32925":{"id":"2:13735:32925","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"2:13734:32935"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:50072:10023","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:609:2042":{"id":"0:609:2042","crate_id":0,"name":"find_iter","span":{"filename":"src/memmem/mod.rs","begin":[190,0],"end":[195,1]},"visibility":"public","docs":"Returns an iterator over all non-overlapping occurrences of a substring in\na haystack.\n\n# Complexity\n\nThis routine is guaranteed to have worst case linear time complexity\nwith respect to both the needle and the haystack. That is, this runs\nin `O(needle.len() + haystack.len())` time.\n\nThis routine is also guaranteed to have worst case constant space\ncomplexity.\n\n# Examples\n\nBasic usage:\n\n```\nuse memchr::memmem;\n\nlet haystack = b\"foo bar foo baz foo\";\nlet mut it = memmem::find_iter(haystack, b\"foo\");\nassert_eq!(Some(0), it.next());\nassert_eq!(Some(8), it.next());\nassert_eq!(Some(16), it.next());\nassert_eq!(None, it.next());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["haystack",{"kind":"borrowed_ref","inner":{"lifetime":"'h","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["needle",{"kind":"borrowed_ref","inner":{"lifetime":"'n","mutable":false,"type":{"kind":"generic","inner":"N"}}}]],"output":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:965:2045","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}},{"name":"N","kind":{"type":{"bounds":[{"outlives":"'n"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"AsRef","id":"2:3165:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"b:2:4097-0:986:2046":{"id":"b:2:4097-0:986:2046","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2046","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3197-0:986:2046":{"id":"b:2:3197-0:986:2046","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2046","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:3200:3267"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:182:1869":{"id":"0:182:1869","crate_id":0,"name":"Item","span":{"filename":"src/memchr/iter.rs","begin":[149,4],"end":[149,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"usize"}}},"2:3471:9048":{"id":"2:3471:9048","crate_id":2,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3473:899"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3405:8557-0:153:1600":{"id":"a:2:3405:8557-0:153:1600","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:8557","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1600","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3376:224-0:826:1980":{"id":"a:2:3376:224-0:826:1980","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3376:224-0:965:2045":{"id":"a:2:3376:224-0:965:2045","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:965:2045","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9534:8808-0:826:1980":{"id":"a:2:9534:8808-0:826:1980","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:8808","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13789:60689":{"id":"2:13789:60689","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:13332:9771","prim@char":"1:15883:3321","str::rmatch_indices":"2:13792:60690","`DoubleEndedIterator`":"2:8717:121"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:49939:10016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:9770","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:46":{"id":"0:46","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[174,21],"end":[174,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::memchr::Memchr3","name":"Memchr3","id":"0:170:1601","glob":false}},"a:2:9533:8809-0:826:1980":{"id":"a:2:9533:8809-0:826:1980","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:8809","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3743:9066":{"id":"2:3743:9066","crate_id":2,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3745:59565","2:3746:59566","2:3747:3070"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:647:1727":{"id":"0:647:1727","crate_id":0,"name":"into_owned","span":{"filename":"src/memmem/mod.rs","begin":[531,4],"end":[533,5]},"visibility":"public","docs":"Convert this finder into its owned variant, such that it no longer\nborrows the needle.\n\nIf this is already an owned finder, then this is a no-op. Otherwise,\nthis copies the needle.\n\nThis is only available when the `std` feature is enabled.","links":{},"attrs":["#[cfg(feature = \"std\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2046","args":{"angle_bracketed":{"args":[{"lifetime":"'static"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:982":{"id":"0:982","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[375,9],"end":[375,14]},"visibility":{"restricted":{"parent":"0:300:1603","path":"::memmem"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:976:2051","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["0:985:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:23138:9918":{"id":"2:23138:9918","crate_id":2,"name":"SimdUint","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23139:58705","2:23140:1238","2:23141:1239","2:23142:58706","2:23143:58707","2:23144:58708","2:23145:58709","2:23146:58710","2:23147:58711","2:23148:58712"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3374:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23151:9292","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:5910:10181":{"id":"5:5910:10181","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5912:183","5:5913:33928"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:170:1601":{"id":"0:170:1601","crate_id":0,"name":"Memchr3","span":{"filename":"src/memchr/iter.rs","begin":[119,0],"end":[127,1]},"visibility":"public","docs":"An iterator for `memchr3`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:177","a:2:3376:224-0:170:1601","a:2:3405:8557-0:170:1601","a:2:9533:8809-0:170:1601","a:2:9534:8808-0:170:1601","a:2:3364:215-0:170:1601","b:2:3201-0:170:1601","b:2:3197-0:170:1601","b:2:3207-0:170:1601","b:2:2868-0:170:1601","b:2:4097-0:170:1601","b:2:8677-0:170:1601","b:2:2865-0:170:1601","b:2:3212-0:170:1601","0:180","0:185"]}},"5:6165:8545":{"id":"5:6165:8545","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:8472:220"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:9770","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3207-0:976:2051":{"id":"b:2:3207-0:976:2051","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:976:2051","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:19":{"id":"0:19","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[172,58],"end":[172,69]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::memchr::memchr_iter","name":"memchr_iter","id":"0:282:1592","glob":false}},"2:9534:8808":{"id":"2:9534:8808","crate_id":2,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3617:132":{"id":"2:3617:132","crate_id":2,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3619:383"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3620:133","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10801:143":{"id":"2:10801:143","crate_id":2,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10802:718","2:10804:55823"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:994:664":{"id":"0:994:664","crate_id":0,"name":"fmt","span":{"filename":"src/memmem/mod.rs","begin":[448,16],"end":[448,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3207-0:153:1600":{"id":"b:2:3207-0:153:1600","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1600","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:656:2050":{"id":"0:656:2050","crate_id":0,"name":"rfind_iter","span":{"filename":"src/memmem/mod.rs","begin":[646,4],"end":[651,5]},"visibility":"public","docs":"Returns a reverse iterator over all occurrences of a substring in a\nhaystack.\n\n# Complexity\n\nThis routine is guaranteed to have worst case linear time complexity\nwith respect to both the needle and the haystack. That is, this runs\nin `O(needle.len() + haystack.len())` time.\n\nThis routine is also guaranteed to have worst case constant space\ncomplexity.\n\n# Examples\n\nBasic usage:\n\n```\nuse memchr::memmem::FinderRev;\n\nlet haystack = b\"foo bar foo baz foo\";\nlet finder = FinderRev::new(b\"foo\");\nlet mut it = finder.rfind_iter(haystack);\nassert_eq!(Some(16), it.next());\nassert_eq!(Some(8), it.next());\nassert_eq!(Some(0), it.next());\nassert_eq!(None, it.next());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":"'h","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:976:2051","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'h","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:165:928":{"id":"0:165:928","crate_id":0,"name":"next","span":{"filename":"src/memchr/iter.rs","begin":[98,4],"end":[100,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:292:1590":{"id":"0:292:1590","crate_id":0,"name":"memchr3","span":{"filename":"src/memchr/mod.rs","begin":[204,0],"end":[236,1]},"visibility":"public","docs":"Like `memchr`, but searches for any of three bytes instead of just one.\n\nThis returns the index corresponding to the first occurrence of `needle1`,\nthe first occurrence of `needle2`, or the first occurrence of `needle3` in\n`haystack` (whichever occurs earliest), or `None` if none are found. If an\nindex is returned, it is guaranteed to be less than `usize::MAX`.\n\nWhile this is operationally the same as something like\n`haystack.iter().position(|&b| b == needle1 || b == needle2 ||\nb == needle3)`, `memchr3` will use a highly optimized routine that can be\nup to an order of magnitude faster in some cases.\n\n# Example\n\nThis shows how to find the first position of any of three bytes in a byte\nstring.\n\n```\nuse memchr::memchr3;\n\nlet haystack = b\"the quick brown fox\";\nassert_eq!(memchr3(b'k', b'q', b'e', haystack), Some(2));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["needle1",{"kind":"primitive","inner":"u8"}],["needle2",{"kind":"primitive","inner":"u8"}],["needle3",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"b:2:3197-0:1004:2101":{"id":"b:2:3197-0:1004:2101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2101","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:3267"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6184:61341":{"id":"5:6184:61341","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:444:1714","`String`":"5:8472:220"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:444:1714","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8217:10185","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9533:8809-0:153:1600":{"id":"a:2:9533:8809-0:153:1600","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:8809","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1600","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:12772:9156":{"id":"2:12772:9156","crate_id":2,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12773:1869","2:12774:1715"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:4095:68":{"id":"2:4095:68","crate_id":2,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4096:1443"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"2:13708:1762":{"id":"2:13708:1762","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:831":{"id":"0:831","crate_id":0,"name":null,"span":{"filename":"src/memmem/prefilter/mod.rs","begin":[168,9],"end":[168,14]},"visibility":{"restricted":{"parent":"0:354:1979","path":"::memmem::prefilter"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:832:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:852:8994":{"id":"5:852:8994","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:14540:9544":{"id":"2:14540:9544","crate_id":2,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14541:58101","2:14542:58102","2:14543:58103","2:14544:58104","2:14545:58105","2:14546:58106","2:14547:8966"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3405:8557":{"id":"2:3405:8557","crate_id":2,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:8677-0:137:1599":{"id":"b:2:8677-0:137:1599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8874:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8673:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1599","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:8679:1869","2:8680:8947","2:8681:773"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"2:3463:9046":{"id":"2:3463:9046","crate_id":2,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3465:271"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6241:9393":{"id":"1:6241:9393","crate_id":1,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6242:58530","1:6243:13212","1:6244:58531","1:6245:58532","1:6246:58533","1:6247:58534"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10416:9292","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:4410:9311":{"id":"1:4410:9311","crate_id":1,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4411:9596","1:4412:56219","1:4414:56220","1:4415:56221","1:4416:9312","1:4417:56222","1:4418:55470","1:4420:56223","1:4421:8966","1:4422:1719","1:4423:2812","1:4425:8544"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6339:9395":{"id":"1:6339:9395","crate_id":1,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6340:58695","1:6341:58696"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2963:186":{"id":"2:2963:186","crate_id":2,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2965:1004","2:2966:832","2:2967:797","2:2968:716","2:2969:700"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2917:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:287:1597":{"id":"0:287:1597","crate_id":0,"name":"memrchr3_iter","span":{"filename":"src/memchr/mod.rs","begin":[56,0],"end":[63,1]},"visibility":"public","docs":"An iterator over all occurrences of the needles in a haystack, in reverse.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["needle1",{"kind":"primitive","inner":"u8"}],["needle2",{"kind":"primitive","inner":"u8"}],["needle3",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Rev","id":"2:47043:1730","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1601","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13710:60679":{"id":"2:13710:60679","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2922:125":{"id":"2:2922:125","crate_id":2,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2917:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13729:1864":{"id":"2:13729:1864","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:13730:56563"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:34":{"id":"0:34","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[173,48],"end":[173,61]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::memchr::memrchr3_iter","name":"memrchr3_iter","id":"0:287:1597","glob":false}},"0:159":{"id":"0:159","crate_id":0,"name":null,"span":{"filename":"src/memchr/iter.rs","begin":[81,0],"end":[92,1]},"visibility":{"restricted":{"parent":"0:115:784","path":"::memchr::iter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1600","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:161:926"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3201-0:153:1600":{"id":"b:2:3201-0:153:1600","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1600","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:179:926":{"id":"0:179:926","crate_id":0,"name":"new","span":{"filename":"src/memchr/iter.rs","begin":[132,4],"end":[145,5]},"visibility":"public","docs":"Create a new `Memchr3` that's initialized to zero with a haystack","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["needle1",{"kind":"primitive","inner":"u8"}],["needle2",{"kind":"primitive","inner":"u8"}],["needle3",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1601","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13718:56544":{"id":"2:13718:56544","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:15900:3335"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9534:8808-0:137:1599":{"id":"a:2:9534:8808-0:137:1599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:8808","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1599","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13833:60702":{"id":"2:13833:60702","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:5443:60702"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:50106:10026","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:7602:9495":{"id":"1:7602:9495","crate_id":1,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7603:55451"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:166:1870":{"id":"0:166:1870","crate_id":0,"name":"size_hint","span":{"filename":"src/memchr/iter.rs","begin":[103,4],"end":[105,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:989":{"id":"0:989","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[448,9],"end":[448,14]},"visibility":{"restricted":{"parent":"0:300:1603","path":"::memmem"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2046","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["0:991:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:848-0:1004:2101":{"id":"b:5:848-0:1004:2101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2101","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:850:1713","5:851:8993","5:852:8994"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:613:2050":{"id":"0:613:2050","crate_id":0,"name":"rfind_iter","span":{"filename":"src/memmem/mod.rs","begin":[224,0],"end":[229,1]},"visibility":"public","docs":"Returns a reverse iterator over all non-overlapping occurrences of a\nsubstring in a haystack.\n\n# Complexity\n\nThis routine is guaranteed to have worst case linear time complexity\nwith respect to both the needle and the haystack. That is, this runs\nin `O(needle.len() + haystack.len())` time.\n\nThis routine is also guaranteed to have worst case constant space\ncomplexity.\n\n# Examples\n\nBasic usage:\n\n```\nuse memchr::memmem;\n\nlet haystack = b\"foo bar foo baz foo\";\nlet mut it = memmem::rfind_iter(haystack, b\"foo\");\nassert_eq!(Some(16), it.next());\nassert_eq!(Some(8), it.next());\nassert_eq!(Some(0), it.next());\nassert_eq!(None, it.next());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["haystack",{"kind":"borrowed_ref","inner":{"lifetime":"'h","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["needle",{"kind":"borrowed_ref","inner":{"lifetime":"'n","mutable":false,"type":{"kind":"generic","inner":"N"}}}]],"output":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:976:2051","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}},{"name":"N","kind":{"type":{"bounds":[{"outlives":"'n"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"AsRef","id":"2:3165:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"b:2:3212-0:153:1600":{"id":"b:2:3212-0:153:1600","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1600","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:619":{"id":"0:619","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[318,0],"end":[345,1]},"visibility":{"restricted":{"parent":"0:300:1603","path":"::memmem"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:965:2045","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["0:623:1727"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:629":{"id":"0:629","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[384,0],"end":[410,1]},"visibility":{"restricted":{"parent":"0:300:1603","path":"::memmem"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:976:2051","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["0:633:1727"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3405:8557-0:170:1601":{"id":"a:2:3405:8557-0:170:1601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:8557","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13801:60694":{"id":"2:13801:60694","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5575:9359":{"id":"1:5575:9359","crate_id":1,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5576:11343"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13756:56570":{"id":"2:13756:56570","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"str::rsplit":"2:13762:56573","prim@char":"1:15883:3321","`DoubleEndedIterator`":"2:8717:121","self::pattern":"2:13332:9771","str::split_whitespace":"2:13734:32935"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:49789:9165","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:9770","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6647:9281":{"id":"1:6647:9281","crate_id":1,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6648:56386"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:9157:3446":{"id":"2:9157:3446","crate_id":2,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8874:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:2884:105":{"id":"2:2884:105","crate_id":2,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2885:414","2:2886:416"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13748:2061":{"id":"2:13748:2061","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"prim@char":"1:15883:3321","self::pattern":"2:13332:9771","`None`":"2:47810:176"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:9770","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6576:9291":{"id":"1:6576:9291","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6577:13732"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10416:9292","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13824:9929":{"id":"2:13824:9929","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:13272:127","`FromStr`":"2:13271:9533"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47933:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:13271:9533","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:13271:9533","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5906:10179":{"id":"5:5906:10179","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5908:183","5:5909:438"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:5505:9351":{"id":"1:5505:9351","crate_id":1,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5506:11343","1:5507:55381","1:5508:55382"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3364:215-0:986:2046":{"id":"a:2:3364:215-0:986:2046","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2046","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9534:8808-0:170:1601":{"id":"a:2:9534:8808-0:170:1601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:8808","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3364:215-0:826:1980":{"id":"a:2:3364:215-0:826:1980","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:8677-0:965:2045":{"id":"b:2:8677-0:965:2045","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8874:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8673:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:965:2045","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:8679:1869","2:8680:8947","2:8681:773"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:283:1589":{"id":"0:283:1589","crate_id":0,"name":"memchr2_iter","span":{"filename":"src/memchr/mod.rs","begin":[23,0],"end":[25,1]},"visibility":"public","docs":"An iterator over all occurrences of the needles in a haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["needle1",{"kind":"primitive","inner":"u8"}],["needle2",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1600","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"b:2:3197-0:170:1601":{"id":"b:2:3197-0:170:1601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3200:3267"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9533:8809-0:965:2045":{"id":"a:2:9533:8809-0:965:2045","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:8809","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:965:2045","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:8677-0:170:1601":{"id":"b:2:8677-0:170:1601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8874:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8673:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:8679:1869","2:8680:8947","2:8681:773"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"2:3526:9059":{"id":"2:3526:9059","crate_id":2,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3528:363"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13719:2825":{"id":"2:13719:2825","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:47810:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11205:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11205:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:832:414":{"id":"0:832:414","crate_id":0,"name":"clone","span":{"filename":"src/memmem/prefilter/mod.rs","begin":[168,9],"end":[168,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:31":{"id":"0:31","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[173,38],"end":[173,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::memchr::memrchr3","name":"memrchr3","id":"0:298:1596","glob":false}},"b:5:848-0:826:1980":{"id":"b:5:848-0:826:1980","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:850:1713","5:851:8993","5:852:8994"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2868-0:995:2052":{"id":"b:2:2868-0:995:2052","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2052","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:2870:53893"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3201-0:170:1601":{"id":"b:2:3201-0:170:1601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4097-0:995:2052":{"id":"b:2:4097-0:995:2052","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2052","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13762:56573":{"id":"2:13762:56573","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"`DoubleEndedIterator`":"2:8717:121","str::split":"2:13756:56570","prim@char":"1:15883:3321","self::pattern":"2:13332:9771"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:49807:9169","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:9770","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13342:9770","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13357:9773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:150":{"id":"0:150","crate_id":0,"name":null,"span":{"filename":"src/memchr/iter.rs","begin":[64,0],"end":[69,1]},"visibility":{"restricted":{"parent":"0:115:784","path":"::memchr::iter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["nth_back","rfold","advance_back_by","rfind","try_rfold"],"trait":{"name":"DoubleEndedIterator","id":"2:8717:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1599","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:152:1871"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9533:8809-0:137:1599":{"id":"a:2:9533:8809-0:137:1599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:8809","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1599","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3181:232":{"id":"2:3181:232","crate_id":2,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3183:128","2:3184:1430"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1010":{"id":"0:1010","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[698,23],"end":[698,30]},"visibility":{"restricted":{"parent":"0:300:1603","path":"::memmem"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3248:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2101","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1011:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:187:1871":{"id":"0:187:1871","crate_id":0,"name":"next_back","span":{"filename":"src/memchr/iter.rs","begin":[167,4],"end":[172,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8874:158","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6183:61340":{"id":"5:6183:61340","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:8472:220"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:188:1734":{"id":"0:188:1734","crate_id":0,"name":"naive","span":{"filename":"src/memchr/naive.rs","begin":[1,0],"end":[25,1]},"visibility":"public","docs":null,"links":{},"attrs":["#![allow(dead_code)]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":false}},"0:153:1600":{"id":"0:153:1600","crate_id":0,"name":"Memchr2","span":{"filename":"src/memchr/iter.rs","begin":[72,0],"end":[79,1]},"visibility":"public","docs":"An iterator for `memchr2`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:159","a:2:3376:224-0:153:1600","a:2:3405:8557-0:153:1600","a:2:9533:8809-0:153:1600","a:2:9534:8808-0:153:1600","a:2:3364:215-0:153:1600","b:2:3201-0:153:1600","b:2:3197-0:153:1600","b:2:3207-0:153:1600","b:2:2868-0:153:1600","b:2:4097-0:153:1600","b:2:8677-0:153:1600","b:2:2865-0:153:1600","b:2:3212-0:153:1600","0:162","0:167"]}},"0:167":{"id":"0:167","crate_id":0,"name":null,"span":{"filename":"src/memchr/iter.rs","begin":[108,0],"end":[116,1]},"visibility":{"restricted":{"parent":"0:115:784","path":"::memchr::iter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["nth_back","rfold","advance_back_by","rfind","try_rfold"],"trait":{"name":"DoubleEndedIterator","id":"2:8717:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1600","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:169:1871"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:6745:9275":{"id":"1:6745:9275","crate_id":1,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6746:56424"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:9143:9400":{"id":"1:9143:9400","crate_id":1,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9144:53973","1:9145:53974","1:9146:53975","1:9147:53976","1:9148:53977","1:9149:40018","1:9150:53972"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10416:9292","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:285:1598":{"id":"0:285:1598","crate_id":0,"name":"memrchr_iter","span":{"filename":"src/memchr/mod.rs","begin":[40,0],"end":[42,1]},"visibility":"public","docs":"An iterator over all occurrences of the needle in a haystack, in reverse.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["needle",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Rev","id":"2:47043:1730","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1599","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3870:9074":{"id":"2:3870:9074","crate_id":2,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:73":{"id":"0:73","crate_id":0,"name":null,"span":{"filename":"src/memchr/mod.rs","begin":[3,21],"end":[3,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::iter::Memchr","name":"Memchr","id":"0:137:1599","glob":false}},"b:2:3207-0:965:2045":{"id":"b:2:3207-0:965:2045","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:965:2045","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:965:2045":{"id":"0:965:2045","crate_id":0,"name":"FindIter","span":{"filename":"src/memmem/mod.rs","begin":[311,0],"end":[316,1]},"visibility":"public","docs":"An iterator over non-overlapping substring matches.\n\nMatches are reported by the byte offset at which they begin.\n\n`'h` is the lifetime of the haystack while `'n` is the lifetime of the\nneedle.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:619","a:2:3376:224-0:965:2045","a:2:3405:8557-0:965:2045","a:2:9533:8809-0:965:2045","a:2:9534:8808-0:965:2045","a:2:3364:215-0:965:2045","b:2:3201-0:965:2045","b:2:3197-0:965:2045","b:2:3207-0:965:2045","b:2:2868-0:965:2045","b:2:4097-0:965:2045","b:2:8677-0:965:2045","b:2:2865-0:965:2045","b:2:3212-0:965:2045","0:972","0:624"]}},"2:13709:60678":{"id":"2:13709:60678","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10563:110":{"id":"2:10563:110","crate_id":2,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10564:664"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:9161:3447":{"id":"2:9161:3447","crate_id":2,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Step","id":"2:8197:3431","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3207-0:137:1599":{"id":"b:2:3207-0:137:1599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1599","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:161:926":{"id":"0:161:926","crate_id":0,"name":"new","span":{"filename":"src/memchr/iter.rs","begin":[84,4],"end":[91,5]},"visibility":"public","docs":"Creates a new iterator that yields all positions of needle in haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["needle1",{"kind":"primitive","inner":"u8"}],["needle2",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1600","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1001":{"id":"0:1001","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[575,16],"end":[575,21]},"visibility":{"restricted":{"parent":"0:300:1603","path":"::memmem"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2052","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["0:1003:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13792:60690":{"id":"2:13792:60690","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"`DoubleEndedIterator`":"2:8717:121","self::pattern":"2:13332:9771","str::match_indices":"2:13789:60689","prim@char":"1:15883:3321"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:49957:10017","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:9770","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13342:9770","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13357:9773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13815:60698":{"id":"2:13815:60698","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:15883:3321","self::pattern":"2:13332:9771"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:9770","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13342:9770","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13357:9773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8632:3451":{"id":"2:8632:3451","crate_id":2,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8634:8984"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13783:3400":{"id":"2:13783:3400","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:13332:9771","prim@char":"1:15883:3321","`DoubleEndedIterator`":"2:8717:121","str::matches":"2:13783:3400"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:49993:10019","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:9770","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1004:2101":{"id":"0:1004:2101","crate_id":0,"name":"FinderBuilder","span":{"filename":"src/memmem/mod.rs","begin":[699,0],"end":[701,1]},"visibility":"public","docs":"A builder for constructing non-default forward or reverse memmem finders.\n\nA builder is primarily useful for configuring a substring searcher.\nCurrently, the only configuration exposed is the ability to disable\nheuristic prefilters used to speed up certain searches.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:662","a:2:3376:224-0:1004:2101","a:2:3405:8557-0:1004:2101","a:2:9533:8809-0:1004:2101","a:2:9534:8808-0:1004:2101","a:2:3364:215-0:1004:2101","b:2:3201-0:1004:2101","b:2:3197-0:1004:2101","b:2:3207-0:1004:2101","b:2:2868-0:1004:2101","b:2:4097-0:1004:2101","b:2:2865-0:1004:2101","b:2:3212-0:1004:2101","b:5:848-0:1004:2101","0:1006","0:1008","0:1010"]}},"0:633:1727":{"id":"0:633:1727","crate_id":0,"name":"into_owned","span":{"filename":"src/memmem/mod.rs","begin":[403,4],"end":[409,5]},"visibility":"public","docs":"Convert this iterator into its owned variant, such that it no longer\nborrows the finder and needle.\n\nIf this is already an owned iterator, then this is a no-op. Otherwise,\nthis copies the needle.\n\nThis is only available when the `std` feature is enabled.","links":{},"attrs":["#[cfg(feature = \"std\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:976:2051","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'static"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1007:414":{"id":"0:1007:414","crate_id":0,"name":"clone","span":{"filename":"src/memmem/mod.rs","begin":[698,9],"end":[698,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2101","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3212-0:965:2045":{"id":"b:2:3212-0:965:2045","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:965:2045","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13342:9770":{"id":"2:13342:9770","crate_id":2,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13344:2099","2:13345:59511","2:13346:59516","2:13347:59512","2:13348:59514","2:13349:59513","2:13350:59515"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1011:59":{"id":"0:1011:59","crate_id":0,"name":"default","span":{"filename":"src/memmem/mod.rs","begin":[698,23],"end":[698,30]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2101","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:998":{"id":"0:998","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[575,9],"end":[575,14]},"visibility":{"restricted":{"parent":"0:300:1603","path":"::memmem"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2052","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["0:1000:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3405:8557-0:965:2045":{"id":"a:2:3405:8557-0:965:2045","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:8557","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:965:2045","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:4752:9370":{"id":"1:4752:9370","crate_id":1,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4753:9094","1:4754:56434"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10576:9003":{"id":"2:10576:9003","crate_id":2,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10577:664"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5513:9353":{"id":"1:5513:9353","crate_id":1,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5514:11343","1:5515:13532"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3376:224-0:976:2051":{"id":"a:2:3376:224-0:976:2051","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:976:2051","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13797:60692":{"id":"2:13797:60692","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13707:798":{"id":"2:13707:798","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:15883:3321"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3201-0:976:2051":{"id":"b:2:3201-0:976:2051","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:976:2051","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:652:926":{"id":"0:652:926","crate_id":0,"name":"new","span":{"filename":"src/memmem/mod.rs","begin":[583,4],"end":[585,5]},"visibility":"public","docs":"Create a new reverse finder for the given needle.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["needle",{"kind":"borrowed_ref","inner":{"lifetime":"'n","mutable":false,"type":{"kind":"generic","inner":"B"}}}]],"output":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2052","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"AsRef","id":"2:3165:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:995:2052":{"id":"0:995:2052","crate_id":0,"name":"FinderRev","span":{"filename":"src/memmem/mod.rs","begin":[576,0],"end":[578,1]},"visibility":"public","docs":"A single substring reverse searcher fixed to a particular needle.\n\nThe purpose of this type is to permit callers to construct a substring\nsearcher that can be used to search haystacks without the overhead of\nconstructing the searcher in the first place. This is a somewhat niche\nconcern when it's necessary to re-use the same needle to search multiple\ndifferent haystacks with as little overhead as possible. In general,\nusing [`rfind`] is good enough, but `FinderRev` is useful when you can\nmeaningfully observe searcher construction time in a profile.\n\nWhen the `std` feature is enabled, then this type has an `into_owned`\nversion which permits building a `FinderRev` that is not connected to\nthe lifetime of its needle.","links":{"`rfind`":"0:618:2068"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:650","a:2:3376:224-0:995:2052","a:2:3405:8557-0:995:2052","a:2:9533:8809-0:995:2052","a:2:9534:8808-0:995:2052","a:2:3364:215-0:995:2052","b:2:3201-0:995:2052","b:2:3197-0:995:2052","b:2:3207-0:995:2052","b:2:2868-0:995:2052","b:2:4097-0:995:2052","b:2:2865-0:995:2052","b:2:3212-0:995:2052","b:5:848-0:995:2052","0:998","0:1001"]}},"0:144:926":{"id":"0:144:926","crate_id":0,"name":"new","span":{"filename":"src/memchr/iter.rs","begin":[45,4],"end":[47,5]},"visibility":"public","docs":"Creates a new iterator that yields all positions of needle in haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["needle",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1599","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13745:56580":{"id":"2:13745:56580","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"self::pattern":"2:13332:9771","prim@char":"1:15883:3321"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:9770","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13342:9770","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13357:9773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13774:56577":{"id":"2:13774:56577","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"self::pattern":"2:13332:9771","prim@char":"1:15883:3321","str::splitn":"2:13771:56575"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:49911:9163","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:9770","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13342:9770","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13357:9773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13712:60680":{"id":"2:13712:60680","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:13710:60679"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:170:1601":{"id":"b:2:2868-0:170:1601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2870:53893"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3212-0:826:1980":{"id":"b:2:3212-0:826:1980","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3207-0:986:2046":{"id":"b:2:3207-0:986:2046","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2046","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10513:8996":{"id":"2:10513:8996","crate_id":2,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10514:1549","2:10515:56473","2:10517:56474"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3272:128":{"id":"2:3272:128","crate_id":2,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3273:10099","2:3275:54058","2:3276:54059","2:3277:54060"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Display","id":"2:10570:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3364:215-0:976:2051":{"id":"a:2:3364:215-0:976:2051","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:976:2051","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3535:9061":{"id":"2:3535:9061","crate_id":2,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3537:1248"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:37":{"id":"0:37","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[173,63],"end":[173,75]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::memchr::memrchr_iter","name":"memrchr_iter","id":"0:285:1598","glob":false}},"2:8673:152":{"id":"2:8673:152","crate_id":2,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8674:1869","2:8675:8947","2:8676:773"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13271:9533":{"id":"2:13271:9533","crate_id":2,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13272:127","2:13273:56411"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:650":{"id":"0:650","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[580,0],"end":[691,1]},"visibility":{"restricted":{"parent":"0:300:1603","path":"::memmem"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2052","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["0:652:926","0:654:2068","0:656:2050","0:659:1727","0:660:311","0:661:1737"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:639":{"id":"0:639","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[453,0],"end":[560,1]},"visibility":{"restricted":{"parent":"0:300:1603","path":"::memmem"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2046","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["0:641:926","0:643:2061","0:644:2042","0:647:1727","0:648:311","0:649:1737"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3197-0:153:1600":{"id":"b:2:3197-0:153:1600","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1600","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3200:3267"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:184:1870":{"id":"0:184:1870","crate_id":0,"name":"size_hint","span":{"filename":"src/memchr/iter.rs","begin":[160,4],"end":[162,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6841:9295":{"id":"1:6841:9295","crate_id":1,"name":"TcpStreamExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6842:55668","1:6843:55669"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10416:9292","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13829:55351":{"id":"2:13829:55351","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:4896:9838":{"id":"2:4896:9838","crate_id":2,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4897:1869","2:4898:59696","2:4899:1870"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13730:56563":{"id":"2:13730:56563","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:13729:1864"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13717:310":{"id":"2:13717:310","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:13718:56544","`u8`":"1:15900:3335"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9534:8808-0:1004:2101":{"id":"a:2:9534:8808-0:1004:2101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:8808","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2101","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:627:1869":{"id":"0:627:1869","crate_id":0,"name":"Item","span":{"filename":"src/memmem/mod.rs","begin":[348,4],"end":[348,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"usize"}}},"0:298:1596":{"id":"0:298:1596","crate_id":0,"name":"memrchr3","span":{"filename":"src/memchr/mod.rs","begin":[378,0],"end":[410,1]},"visibility":"public","docs":"Like `memrchr`, but searches for any of three bytes instead of just one.\n\nThis returns the index corresponding to the last occurrence of `needle1`,\nthe last occurrence of `needle2`, or the last occurrence of `needle3` in\n`haystack` (whichever occurs later), or `None` if none are found. If an\nindex is returned, it is guaranteed to be less than `usize::MAX`.\n\nWhile this is operationally the same as something like\n`haystack.iter().rposition(|&b| b == needle1 || b == needle2 ||\nb == needle3)`, `memrchr3` will use a highly optimized routine that can be\nup to an order of magnitude faster in some cases.\n\n# Example\n\nThis shows how to find the last position of any of three bytes in a byte\nstring.\n\n```\nuse memchr::memrchr3;\n\nlet haystack = b\"the quick brown fox\";\nassert_eq!(memrchr3(b'k', b'q', b'e', haystack), Some(8));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["needle1",{"kind":"primitive","inner":"u8"}],["needle2",{"kind":"primitive","inner":"u8"}],["needle3",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:670:1979":{"id":"0:670:1979","crate_id":0,"name":"prefilter","span":{"filename":"src/memmem/mod.rs","begin":[731,4],"end":[734,5]},"visibility":"public","docs":"Configure the prefilter setting for the finder.\n\nSee the documentation for [`Prefilter`] for more discussion on why\nyou might want to configure this.","links":{"`Prefilter`":"0:826:1980"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["prefilter",{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2101","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4467:8996":{"id":"1:4467:8996","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4468:3403","1:4469:58406","1:4471:58407","1:4472:10446","1:4473:58408","1:4474:58409","1:4475:56474","1:4484:8966"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3203:685":{"id":"2:3203:685","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3171:150":{"id":"2:3171:150","crate_id":2,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3173:3267"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9534:8808-0:976:2051":{"id":"a:2:9534:8808-0:976:2051","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:8808","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:976:2051","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13731:10043":{"id":"2:13731:10043","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:15883:3321"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49759:10007","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3216:1430":{"id":"2:3216:1430","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47933:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6649:9282":{"id":"1:6649:9282","crate_id":1,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6650:58395"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10574:9002":{"id":"2:10574:9002","crate_id":2,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10575:664"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:848-0:995:2052":{"id":"b:5:848-0:995:2052","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2052","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["5:850:1713","5:851:8993","5:852:8994"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2868-0:965:2045":{"id":"b:2:2868-0:965:2045","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:965:2045","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:2870:53893"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:185":{"id":"0:185","crate_id":0,"name":null,"span":{"filename":"src/memchr/iter.rs","begin":[165,0],"end":[173,1]},"visibility":{"restricted":{"parent":"0:115:784","path":"::memchr::iter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["nth_back","rfold","advance_back_by","rfind","try_rfold"],"trait":{"name":"DoubleEndedIterator","id":"2:8717:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:187:1871"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5519:9354":{"id":"1:5519:9354","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5520:12790","1:5521:55902","1:5522:11343","1:5523:55903","1:5524:9659","1:5525:9660","1:5526:55904","1:5527:1317","1:5528:55905","1:5529:55906","1:5530:55907","1:5531:55908","1:5532:55909","1:5533:55910","1:5534:55911","1:5535:55912"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3405:8557-0:986:2046":{"id":"a:2:3405:8557-0:986:2046","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:8557","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2046","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8742:3448":{"id":"2:8742:3448","crate_id":2,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8743:798","2:8744:1762"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8874:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:147:1869":{"id":"0:147:1869","crate_id":0,"name":"Item","span":{"filename":"src/memchr/iter.rs","begin":[51,4],"end":[51,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"usize"}}},"0:654:2068":{"id":"0:654:2068","crate_id":0,"name":"rfind","span":{"filename":"src/memmem/mod.rs","begin":[614,4],"end":[616,5]},"visibility":"public","docs":"Returns the index of the last occurrence of this needle in the given\nhaystack.\n\nThe haystack may be any type that can be cheaply converted into a\n`&[u8]`. This includes, but is not limited to, `&str` and `&[u8]`.\n\n# Complexity\n\nThis routine is guaranteed to have worst case linear time complexity\nwith respect to both the needle and the haystack. That is, this runs\nin `O(needle.len() + haystack.len())` time.\n\nThis routine is also guaranteed to have worst case constant space\ncomplexity.\n\n# Examples\n\nBasic usage:\n\n```\nuse memchr::memmem::FinderRev;\n\nlet haystack = b\"foo bar baz\";\nassert_eq!(Some(0), FinderRev::new(\"foo\").rfind(haystack));\nassert_eq!(Some(4), FinderRev::new(\"bar\").rfind(haystack));\nassert_eq!(None, FinderRev::new(\"quux\").rfind(haystack));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["haystack",{"kind":"generic","inner":"B"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:3165:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:137:1599":{"id":"b:2:2868-0:137:1599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1599","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2870:53893"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3374:107":{"id":"2:3374:107","crate_id":2,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3512:9056":{"id":"2:3512:9056","crate_id":2,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3514:183","2:3515:1247"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3212-0:1004:2101":{"id":"b:2:3212-0:1004:2101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2101","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:835:664":{"id":"0:835:664","crate_id":0,"name":"fmt","span":{"filename":"src/memmem/prefilter/mod.rs","begin":[168,22],"end":[168,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3207-0:170:1601":{"id":"b:2:3207-0:170:1601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13771:56575":{"id":"2:13771:56575","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"str::rsplitn":"2:13774:56577","prim@char":"1:15883:3321","self::pattern":"2:13332:9771"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:49893:9167","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:9770","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:288:1587":{"id":"0:288:1587","crate_id":0,"name":"memchr","span":{"filename":"src/memchr/mod.rs","begin":[87,0],"end":[125,1]},"visibility":"public","docs":"Search for the first occurrence of a byte in a slice.\n\nThis returns the index corresponding to the first occurrence of `needle` in\n`haystack`, or `None` if one is not found. If an index is returned, it is\nguaranteed to be less than `usize::MAX`.\n\nWhile this is operationally the same as something like\n`haystack.iter().position(|&b| b == needle)`, `memchr` will use a highly\noptimized routine that can be up to an order of magnitude faster in some\ncases.\n\n# Example\n\nThis shows how to find the first position of a byte in a byte string.\n\n```\nuse memchr::memchr;\n\nlet haystack = b\"the quick brown fox\";\nassert_eq!(memchr(b'k', haystack), Some(8));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["needle",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3479:9049":{"id":"2:3479:9049","crate_id":2,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3481:1111"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13737:60683":{"id":"2:13737:60683","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:50053:10021","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9534:8808-0:986:2046":{"id":"a:2:9534:8808-0:986:2046","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:8808","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2046","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13727:9451":{"id":"2:13727:9451","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"str::slice_mut_unchecked":"2:13728:60682","crate::ops::Index":"2:3672:9063","`str`":"1:15889:3326"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:25":{"id":"0:25","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[173,13],"end":[173,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::memchr::memrchr2","name":"memrchr2","id":"0:296:1594","glob":false}},"b:2:4097-0:976:2051":{"id":"b:2:4097-0:976:2051","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:976:2051","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13827:55349":{"id":"2:13827:55349","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:284:1591":{"id":"0:284:1591","crate_id":0,"name":"memchr3_iter","span":{"filename":"src/memchr/mod.rs","begin":[29,0],"end":[36,1]},"visibility":"public","docs":"An iterator over all occurrences of the needles in a haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["needle1",{"kind":"primitive","inner":"u8"}],["needle2",{"kind":"primitive","inner":"u8"}],["needle3",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1601","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:992":{"id":"0:992","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[448,16],"end":[448,21]},"visibility":{"restricted":{"parent":"0:300:1603","path":"::memmem"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2046","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["0:994:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:286:1595":{"id":"0:286:1595","crate_id":0,"name":"memrchr2_iter","span":{"filename":"src/memchr/mod.rs","begin":[46,0],"end":[52,1]},"visibility":"public","docs":"An iterator over all occurrences of the needles in a haystack, in reverse.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["needle1",{"kind":"primitive","inner":"u8"}],["needle2",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Rev","id":"2:47043:1730","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1600","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3835:9069":{"id":"2:3835:9069","crate_id":2,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3837:54779"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:148:928":{"id":"0:148:928","crate_id":0,"name":"next","span":{"filename":"src/memchr/iter.rs","begin":[54,4],"end":[56,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13786:60688":{"id":"2:13786:60688","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"str::matches":"2:13783:3400","self::pattern":"2:13332:9771","`DoubleEndedIterator`":"2:8717:121","prim@char":"1:15883:3321"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:50011:10020","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:9770","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13342:9770","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13357:9773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13752:2068":{"id":"2:13752:2068","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"prim@char":"1:15883:3321","self::pattern":"2:13332:9771","`None`":"2:47810:176"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:9770","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13342:9770","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13357:9773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:14456:142":{"id":"2:14456:142","crate_id":2,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14457:283","2:14458:523","2:14459:286","2:14460:1087"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3197-0:826:1980":{"id":"b:2:3197-0:826:1980","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:3267"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:659:1727":{"id":"0:659:1727","crate_id":0,"name":"into_owned","span":{"filename":"src/memmem/mod.rs","begin":[662,4],"end":[664,5]},"visibility":"public","docs":"Convert this finder into its owned variant, such that it no longer\nborrows the needle.\n\nIf this is already an owned finder, then this is a no-op. Otherwise,\nthis copies the needle.\n\nThis is only available when the `std` feature is enabled.","links":{},"attrs":["#[cfg(feature = \"std\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2052","args":{"angle_bracketed":{"args":[{"lifetime":"'static"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3376:224-0:1004:2101":{"id":"a:2:3376:224-0:1004:2101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2101","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3405:8557-0:995:2052":{"id":"a:2:3405:8557-0:995:2052","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:8557","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2052","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13351:2099":{"id":"2:13351:2099","crate_id":2,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13353:1738","2:13354:928","2:13355:59957","2:13356:59958"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6187:55348":{"id":"5:6187:55348","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:13829:55351"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3201-0:965:2045":{"id":"b:2:3201-0:965:2045","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:965:2045","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8669:137":{"id":"2:8669:137","crate_id":2,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8671:688"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:628:928":{"id":"0:628:928","crate_id":0,"name":"next","span":{"filename":"src/memmem/mod.rs","begin":[350,4],"end":[366,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3442:9042":{"id":"2:3442:9042","crate_id":2,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3444:183","2:3445:898"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3600:9062":{"id":"2:3600:9062","crate_id":2,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3601:550"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Deref","id":"2:3587:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13723:56542":{"id":"2:13723:56542","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11205:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11205:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:3432:9040":{"id":"2:3432:9040","crate_id":2,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3434:183","2:3435:270"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3501:9053":{"id":"2:3501:9053","crate_id":2,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3503:183","2:3504:362"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10578:9004":{"id":"2:10578:9004","crate_id":2,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10579:664"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3364:215-0:170:1601":{"id":"a:2:3364:215-0:170:1601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:24072:9736":{"id":"2:24072:9736","crate_id":2,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:24073:9735"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:24068:9292","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"2:3374:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:6163":{"id":"5:6163","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5976:1353","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:6164:61337","5:6165:8545","5:6168:61338","5:6171:61339","5:6183:61340","5:6184:61341","5:6185:3438","5:6186:55347","5:6187:55348"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:294:1593":{"id":"0:294:1593","crate_id":0,"name":"memrchr","span":{"filename":"src/memchr/mod.rs","begin":[260,0],"end":[299,1]},"visibility":"public","docs":"Search for the last occurrence of a byte in a slice.\n\nThis returns the index corresponding to the last occurrence of `needle` in\n`haystack`, or `None` if one is not found. If an index is returned, it is\nguaranteed to be less than `usize::MAX`.\n\nWhile this is operationally the same as something like\n`haystack.iter().rposition(|&b| b == needle)`, `memrchr` will use a highly\noptimized routine that can be up to an order of magnitude faster in some\ncases.\n\n# Example\n\nThis shows how to find the last position of a byte in a byte string.\n\n```\nuse memchr::memrchr;\n\nlet haystack = b\"the quick brown fox\";\nassert_eq!(memrchr(b'o', haystack), Some(17));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["needle",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:985:664":{"id":"0:985:664","crate_id":0,"name":"fmt","span":{"filename":"src/memmem/mod.rs","begin":[375,9],"end":[375,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6168:61338":{"id":"5:6168:61338","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:8472:220"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:9770","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13706":{"id":"2:13706","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:12785:1353","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:13707:798","2:13708:1762","2:13709:60678","2:13710:60679","2:13712:60680","2:13715:2316","2:13716:60681","2:13717:310","2:13718:56544","2:13719:2825","2:13721:13888","2:13723:56542","2:13725:56543","2:13727:9451","2:13728:60682","2:13729:1864","2:13730:56563","2:13731:10043","2:13732:9797","2:13733:1719","2:13734:32935","2:13735:32925","2:13736:10523","2:13737:60683","2:13738:32920","2:13739:3070","2:13742:56579","2:13745:56580","2:13748:2061","2:13752:2068","2:13756:56570","2:13759:32802","2:13762:56573","2:13765:60684","2:13768:60685","2:13771:56575","2:13774:56577","2:13777:60686","2:13780:60687","2:13783:3400","2:13786:60688","2:13789:60689","2:13792:60690","2:13795:60691","2:13797:60692","2:13799:60693","2:13801:60694","2:13802:60695","2:13803:60696","2:13806:60697","2:13809:20725","2:13812:56581","2:13815:60698","2:13818:60699","2:13821:60700","2:13824:9929","2:13826:10176","2:13827:55349","2:13828:55350","2:13829:55351","2:13830:60701","2:13832:9368","2:13833:60702"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3376:224-0:153:1600":{"id":"a:2:3376:224-0:153:1600","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1600","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3459:9043":{"id":"2:3459:9043","crate_id":2,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3460:183","2:3461:919"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8679:1869":{"id":"2:8679:1869","crate_id":2,"name":"Item","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8874:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:13780:60687":{"id":"2:13780:60687","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:9770","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13342:9770","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13357:9773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13803:60696":{"id":"2:13803:60696","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"self::pattern":"2:13332:9771","prim@char":"1:15883:3321"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:9770","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13342:9770","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:13362:9774","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6185:3438":{"id":"5:6185:3438","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:8472:220"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:644:2042":{"id":"0:644:2042","crate_id":0,"name":"find_iter","span":{"filename":"src/memmem/mod.rs","begin":[515,4],"end":[520,5]},"visibility":"public","docs":"Returns an iterator over all occurrences of a substring in a haystack.\n\n# Complexity\n\nThis routine is guaranteed to have worst case linear time complexity\nwith respect to both the needle and the haystack. That is, this runs\nin `O(needle.len() + haystack.len())` time.\n\nThis routine is also guaranteed to have worst case constant space\ncomplexity.\n\n# Examples\n\nBasic usage:\n\n```\nuse memchr::memmem::Finder;\n\nlet haystack = b\"foo bar foo baz foo\";\nlet finder = Finder::new(b\"foo\");\nlet mut it = finder.find_iter(haystack);\nassert_eq!(Some(0), it.next());\nassert_eq!(Some(8), it.next());\nassert_eq!(Some(16), it.next());\nassert_eq!(None, it.next());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":"'h","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:965:2045","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'h","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:282:1592":{"id":"0:282:1592","crate_id":0,"name":"memchr_iter","span":{"filename":"src/memchr/mod.rs","begin":[17,0],"end":[19,1]},"visibility":"public","docs":"An iterator over all occurrences of the needle in a haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["needle",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1599","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:82:1733":{"id":"0:82:1733","crate_id":0,"name":"fallback","span":{"filename":"src/memchr/fallback.rs","begin":[5,0],"end":[329,1]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(dead_code)]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":false}},"b:2:2865-0:826:1980":{"id":"b:2:2865-0:826:1980","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2867:3391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13734:32935":{"id":"2:13734:32935","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"2:13735:32925"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:50063:10022","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9533:8809-0:1004:2101":{"id":"a:2:9533:8809-0:1004:2101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:8809","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2101","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:4097-0:170:1601":{"id":"b:2:4097-0:170:1601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:8677-0:153:1600":{"id":"b:2:8677-0:153:1600","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8874:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8673:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1600","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:8679:1869","2:8680:8947","2:8681:773"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:177":{"id":"0:177","crate_id":0,"name":null,"span":{"filename":"src/memchr/iter.rs","begin":[129,0],"end":[146,1]},"visibility":{"restricted":{"parent":"0:115:784","path":"::memchr::iter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:179:926"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:662":{"id":"0:662","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[703,0],"end":[735,1]},"visibility":{"restricted":{"parent":"0:300:1603","path":"::memmem"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2101","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:663:926","0:664:2102","0:667:2135","0:670:1979"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13765:60684":{"id":"2:13765:60684","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"str::rsplit_terminator":"2:13768:60685","`DoubleEndedIterator`":"2:8717:121","self::pattern":"2:13332:9771","prim@char":"1:15883:3321","str::split":"2:13756:56570"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:49839:10012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:9770","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5567:9357":{"id":"1:5567:9357","crate_id":1,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5568:55660"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10416:9292","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:9154:3444":{"id":"2:9154:3444","crate_id":2,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8874:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:183:928":{"id":"0:183:928","crate_id":0,"name":"next","span":{"filename":"src/memchr/iter.rs","begin":[152,4],"end":[157,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23435:9843":{"id":"2:23435:9843","crate_id":2,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdElement","id":"2:24072:9736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23426:9292","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:8681:773":{"id":"2:8681:773","crate_id":2,"name":"into_iter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13736:10523":{"id":"2:13736:10523","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:50043:9320","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3207-0:1004:2101":{"id":"b:2:3207-0:1004:2101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2101","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5497:9352":{"id":"1:5497:9352","crate_id":1,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5498:58350","1:5499:58352","1:5500:58351","1:5501:58353"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:301":{"id":"0:301","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[69,0],"end":[69,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::prefilter::Prefilter","name":"Prefilter","id":"0:826:1980","glob":false}},"2:13721:13888":{"id":"2:13721:13888","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:47810:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11205:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11205:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:986:2046":{"id":"b:2:2868-0:986:2046","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2046","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:2870:53893"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4097-0:137:1599":{"id":"b:2:4097-0:137:1599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1599","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:7":{"id":"0:7","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[172,12],"end":[172,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::memchr::memchr2","name":"memchr2","id":"0:290:1588","glob":false}},"0:660:311":{"id":"0:660:311","crate_id":0,"name":"as_ref","span":{"filename":"src/memmem/mod.rs","begin":[677,4],"end":[679,5]},"visibility":"public","docs":"Convert this finder into its borrowed variant.\n\nThis is primarily useful if your finder is owned and you'd like to\nstore its borrowed variant in some intermediate data structure.\n\nNote that the lifetime parameter of the returned finder is tied to the\nlifetime of `self`, and may be shorter than the `'n` lifetime of the\nneedle itself. Namely, a finder's needle can be either borrowed or\nowned, so the lifetime of the needle returned must necessarily be the\nshorter of the two.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2052","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2865-0:1004:2101":{"id":"b:2:2865-0:1004:2101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2101","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2867:3391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4097-0:1004:2101":{"id":"b:2:4097-0:1004:2101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2101","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:149:1870":{"id":"0:149:1870","crate_id":0,"name":"size_hint","span":{"filename":"src/memchr/iter.rs","begin":[59,4],"end":[61,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3376:224-0:137:1599":{"id":"a:2:3376:224-0:137:1599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1599","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9533:8809-0:976:2051":{"id":"a:2:9533:8809-0:976:2051","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:8809","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:976:2051","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2868-0:826:1980":{"id":"b:2:2868-0:826:1980","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2870:53893"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:986:2046":{"id":"0:986:2046","crate_id":0,"name":"Finder","span":{"filename":"src/memmem/mod.rs","begin":[449,0],"end":[451,1]},"visibility":"public","docs":"A single substring searcher fixed to a particular needle.\n\nThe purpose of this type is to permit callers to construct a substring\nsearcher that can be used to search haystacks without the overhead of\nconstructing the searcher in the first place. This is a somewhat niche\nconcern when it's necessary to re-use the same needle to search multiple\ndifferent haystacks with as little overhead as possible. In general, using\n[`find`] is good enough, but `Finder` is useful when you can meaningfully\nobserve searcher construction time in a profile.\n\nWhen the `std` feature is enabled, then this type has an `into_owned`\nversion which permits building a `Finder` that is not connected to\nthe lifetime of its needle.","links":{"`find`":"0:617:2061"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:639","a:2:3376:224-0:986:2046","a:2:3405:8557-0:986:2046","a:2:9533:8809-0:986:2046","a:2:9534:8808-0:986:2046","a:2:3364:215-0:986:2046","b:2:3201-0:986:2046","b:2:3197-0:986:2046","b:2:3207-0:986:2046","b:2:2868-0:986:2046","b:2:4097-0:986:2046","b:2:2865-0:986:2046","b:2:3212-0:986:2046","b:5:848-0:986:2046","0:989","0:992"]}},"0:624":{"id":"0:624","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[347,0],"end":[367,1]},"visibility":{"restricted":{"parent":"0:300:1603","path":"::memmem"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["take_while","intersperse_with","flat_map","next_chunk","count","max_by_key","cmp","is_sorted_by_key","product","unzip","rev","try_for_each","find","try_collect","map_while","for_each","last","any","min","__iterator_get_unchecked","all","cmp_by","copied","fold","collect_into","scan","filter","chain","advance_by","collect","partial_cmp_by","cloned","enumerate","reduce","gt","partition","flatten","lt","filter_map","position","nth","min_by","zip","eq_by","cycle","rposition","try_reduce","partition_in_place","fuse","peekable","step_by","partial_cmp","skip","min_by_key","max","take","eq","le","array_chunks","is_sorted","find_map","size_hint","is_partitioned","ne","inspect","skip_while","ge","intersperse","max_by","is_sorted_by","sum","try_find","map","try_fold","by_ref"],"trait":{"name":"Iterator","id":"2:8874:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:965:2045","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["0:627:1869","0:628:928"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10580:191":{"id":"2:10580:191","crate_id":2,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10581:664"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13732:9797":{"id":"2:13732:9797","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:15883:3321"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49765:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:164:1869":{"id":"0:164:1869","crate_id":0,"name":"Item","span":{"filename":"src/memchr/iter.rs","begin":[95,4],"end":[95,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"usize"}}},"2:4099:1443":{"id":"2:4099:1443","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:46336:9743","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3654:9072":{"id":"2:3654:9072","crate_id":2,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3656:242","2:3657:208","2:3658:59901"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3364:215-0:995:2052":{"id":"a:2:3364:215-0:995:2052","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2052","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13799:60693":{"id":"2:13799:60693","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:972":{"id":"0:972","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[310,9],"end":[310,14]},"visibility":{"restricted":{"parent":"0:300:1603","path":"::memmem"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:965:2045","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["0:975:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:6498:228":{"id":"5:6498:228","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6499:1410"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3364:215-0:137:1599":{"id":"a:2:3364:215-0:137:1599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1599","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2865-0:986:2046":{"id":"b:2:2865-0:986:2046","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2046","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:2867:3391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3376:224-0:170:1601":{"id":"a:2:3376:224-0:170:1601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3165:75":{"id":"2:3165:75","crate_id":2,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3167:311"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:10570:120":{"id":"2:10570:120","crate_id":2,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10571:664"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3405:8557-0:976:2051":{"id":"a:2:3405:8557-0:976:2051","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:8557","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:976:2051","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3376:224":{"id":"2:3376:224","crate_id":2,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10584:9006":{"id":"2:10584:9006","crate_id":2,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10585:664"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:848-0:986:2046":{"id":"b:5:848-0:986:2046","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2046","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["5:850:1713","5:851:8993","5:852:8994"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3177:233":{"id":"2:3177:233","crate_id":2,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3179:128","2:3180:1431"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3506:9055":{"id":"2:3506:9055","crate_id":2,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3508:183","2:3509:1244"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:826:1980":{"id":"0:826:1980","crate_id":0,"name":"Prefilter","span":{"filename":"src/memmem/prefilter/mod.rs","begin":[170,0],"end":[177,1]},"visibility":"public","docs":"Prefilter controls whether heuristics are used to accelerate searching.\n\nA prefilter refers to the idea of detecting candidate matches very quickly,\nand then confirming whether those candidates are full matches. This\nidea can be quite effective since it's often the case that looking for\ncandidates can be a lot faster than running a complete substring search\nover the entire input. Namely, looking for candidates can be done with\nextremely fast vectorized code.\n\nThe downside of a prefilter is that it assumes false positives (which are\ncandidates generated by a prefilter that aren't matches) are somewhat rare\nrelative to the frequency of full matches. That is, if a lot of false\npositives are generated, then it's possible for search time to be worse\nthan if the prefilter wasn't enabled in the first place.\n\nAnother downside of a prefilter is that it can result in highly variable\nperformance, where some cases are extraordinarily fast and others aren't.\nTypically, variable performance isn't a problem, but it may be for your use\ncase.\n\nThe use of prefilters in this implementation does use a heuristic to detect\nwhen a prefilter might not be carrying its weight, and will dynamically\ndisable its use. Nevertheless, this configuration option gives callers\nthe ability to disable prefilters if you have knowledge that they won't be\nuseful.","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:827:176","0:829:2708"],"impls":["a:2:3376:224-0:826:1980","a:2:3405:8557-0:826:1980","a:2:9533:8809-0:826:1980","a:2:9534:8808-0:826:1980","a:2:3364:215-0:826:1980","b:2:3201-0:826:1980","b:2:3197-0:826:1980","b:2:3207-0:826:1980","b:2:2868-0:826:1980","b:2:4097-0:826:1980","b:2:2865-0:826:1980","b:2:3212-0:826:1980","b:5:848-0:826:1980","0:831","0:833","0:834","0:455"]}},"2:13728:60682":{"id":"2:13728:60682","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:15889:3326","crate::ops::IndexMut":"2:3676:9064","str::slice_unchecked":"2:13727:9451"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4097-0:153:1600":{"id":"b:2:4097-0:153:1600","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1600","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13777:60686":{"id":"2:13777:60686","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:9770","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2865-0:170:1601":{"id":"b:2:2865-0:170:1601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2867:3391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:634":{"id":"0:634","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[412,0],"end":[433,1]},"visibility":{"restricted":{"parent":"0:300:1603","path":"::memmem"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["take_while","intersperse_with","flat_map","next_chunk","count","max_by_key","cmp","is_sorted_by_key","product","unzip","rev","try_for_each","find","try_collect","map_while","for_each","last","any","min","__iterator_get_unchecked","all","cmp_by","copied","fold","collect_into","scan","filter","chain","advance_by","collect","partial_cmp_by","cloned","enumerate","reduce","gt","partition","flatten","lt","filter_map","position","nth","min_by","zip","eq_by","cycle","rposition","try_reduce","partition_in_place","fuse","peekable","step_by","partial_cmp","skip","min_by_key","max","take","eq","le","array_chunks","is_sorted","find_map","size_hint","is_partitioned","ne","inspect","skip_while","ge","intersperse","max_by","is_sorted_by","sum","try_find","map","try_fold","by_ref"],"trait":{"name":"Iterator","id":"2:8874:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:976:2051","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["0:637:1869","0:638:928"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3405:8557-0:137:1599":{"id":"a:2:3405:8557-0:137:1599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:8557","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1599","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3200:3267":{"id":"2:3200:3267","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3174:136"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23102:9731":{"id":"2:23102:9731","crate_id":2,"name":"SimdInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23103:9735","2:23104:58705","2:23105:1238","2:23106:1239","2:23107:43415","2:23108:58751","2:23109:58752","2:23110:58753","2:23111:58754","2:23112:58755","2:23113:58706","2:23114:58707","2:23115:58708","2:23116:58709","2:23117:58710","2:23118:58711","2:23119:58712"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3374:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23151:9292","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3376:224-0:986:2046":{"id":"a:2:3376:224-0:986:2046","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2046","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3467:9050":{"id":"2:3467:9050","crate_id":2,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3469:1369"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:145":{"id":"0:145","crate_id":0,"name":null,"span":{"filename":"src/memchr/iter.rs","begin":[50,0],"end":[62,1]},"visibility":{"restricted":{"parent":"0:115:784","path":"::memchr::iter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["take_while","intersperse_with","flat_map","next_chunk","count","max_by_key","cmp","is_sorted_by_key","product","unzip","rev","try_for_each","find","try_collect","map_while","for_each","last","any","min","__iterator_get_unchecked","all","cmp_by","copied","fold","collect_into","scan","filter","chain","advance_by","collect","partial_cmp_by","cloned","enumerate","reduce","gt","partition","flatten","lt","filter_map","position","nth","min_by","zip","eq_by","cycle","rposition","try_reduce","partition_in_place","fuse","peekable","step_by","partial_cmp","skip","min_by_key","max","take","eq","le","array_chunks","is_sorted","find_map","size_hint","is_partitioned","ne","inspect","skip_while","ge","intersperse","max_by","is_sorted_by","sum","try_find","map","try_fold","by_ref"],"trait":{"name":"Iterator","id":"2:8874:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1599","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:147:1869","0:148:928","0:149:1870"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13357:9773":{"id":"2:13357:9773","crate_id":2,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13359:1871","2:13360:58922","2:13361:58923"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Searcher","id":"2:13351:2099","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13830:60701":{"id":"2:13830:60701","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:5445:60701"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:50088:10025","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4485:9297":{"id":"1:4485:9297","crate_id":1,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4486:58256","1:4487:40426","1:4488:58257","1:4489:58258"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3824:229":{"id":"2:3824:229","crate_id":2,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3825:183","2:3826:9069","2:3827:690","2:3828:375"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FromResidual","id":"2:3829:138","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3824:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1008":{"id":"0:1008","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[698,16],"end":[698,21]},"visibility":{"restricted":{"parent":"0:300:1603","path":"::memmem"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2101","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1009:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5425:9387":{"id":"1:5425:9387","crate_id":1,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5426:54010","1:5427:10269"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10416:9292","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:23175:9912":{"id":"2:23175:9912","crate_id":2,"name":"SimdPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23176:9735","2:23177:1260","2:23178:1285"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9534:8808-0:153:1600":{"id":"a:2:9534:8808-0:153:1600","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:8808","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1600","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:2870:53893":{"id":"2:2870:53893","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:618:2068":{"id":"0:618:2068","crate_id":0,"name":"rfind","span":{"filename":"src/memmem/mod.rs","begin":[296,0],"end":[302,1]},"visibility":"public","docs":"Returns the index of the last occurrence of the given needle.\n\nNote that if you're are searching for the same needle in many different\nsmall haystacks, it may be faster to initialize a [`FinderRev`] once,\nand reuse it for each search.\n\n# Complexity\n\nThis routine is guaranteed to have worst case linear time complexity\nwith respect to both the needle and the haystack. That is, this runs\nin `O(needle.len() + haystack.len())` time.\n\nThis routine is also guaranteed to have worst case constant space\ncomplexity.\n\n# Examples\n\nBasic usage:\n\n```\nuse memchr::memmem;\n\nlet haystack = b\"foo bar baz\";\nassert_eq!(Some(0), memmem::rfind(haystack, b\"foo\"));\nassert_eq!(Some(4), memmem::rfind(haystack, b\"bar\"));\nassert_eq!(Some(8), memmem::rfind(haystack, b\"ba\"));\nassert_eq!(None, memmem::rfind(haystack, b\"quux\"));\n```","links":{"`FinderRev`":"0:995:2052"},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["needle",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:28":{"id":"0:28","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[173,23],"end":[173,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::memchr::memrchr2_iter","name":"memrchr2_iter","id":"0:286:1595","glob":false}},"2:8717:121":{"id":"2:8717:121","crate_id":2,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8718:1871","2:8719:8940","2:8720:8941","2:8721:8942","2:8725:8943","2:8728:2068"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8874:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:2867:3391":{"id":"2:2867:3391","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13818:60699":{"id":"2:13818:60699","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:15883:3321","self::pattern":"2:13332:9771"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:9770","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9533:8809":{"id":"2:9533:8809","crate_id":2,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:23763:9737":{"id":"2:23763:9737","crate_id":2,"name":"SimdPartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23764:1283","2:23765:1282","2:23766:1280","2:23767:1279"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdPartialEq","id":"2:23175:9912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:23049:9911":{"id":"2:23049:9911","crate_id":2,"name":"SimdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23050:9735","2:23051:58705","2:23052:58948","2:23053:58949","2:23054:58950","2:23055:43415","2:23056:58951","2:23057:58952","2:23058:58953","2:23059:58954","2:23060:58955","2:23061:58956","2:23062:58957","2:23063:58958","2:23064:58959","2:23065:58960","2:23066:58755","2:23067:58961","2:23068:58962","2:23069:58963","2:23070:58964","2:23071:58706","2:23072:58707","2:23073:58708","2:23074:58709"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3374:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23151:9292","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:16":{"id":"0:16","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[172,44],"end":[172,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::memchr::memchr3_iter","name":"memchr3_iter","id":"0:284:1591","glob":false}},"2:3475:9047":{"id":"2:3475:9047","crate_id":2,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3477:564"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2865-0:965:2045":{"id":"b:2:2865-0:965:2045","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:965:2045","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:2867:3391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3369:1718":{"id":"2:3369:1718","crate_id":2,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13826:10176":{"id":"2:13826:10176","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:4146:9742":{"id":"2:4146:9742","crate_id":2,"name":"Provider","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4147:54060"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:641:926":{"id":"0:641:926","crate_id":0,"name":"new","span":{"filename":"src/memmem/mod.rs","begin":[456,4],"end":[458,5]},"visibility":"public","docs":"Create a new finder for the given needle.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["needle",{"kind":"borrowed_ref","inner":{"lifetime":"'n","mutable":false,"type":{"kind":"generic","inner":"B"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2046","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"AsRef","id":"2:3165:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:169:1871":{"id":"0:169:1871","crate_id":0,"name":"next_back","span":{"filename":"src/memchr/iter.rs","begin":[110,4],"end":[115,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8874:158","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:76":{"id":"0:76","crate_id":0,"name":null,"span":{"filename":"src/memchr/mod.rs","begin":[3,29],"end":[3,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::iter::Memchr2","name":"Memchr2","id":"0:153:1600","glob":false}},"2:23238:9402":{"id":"2:23238:9402","crate_id":2,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23228:9292","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13733:1719":{"id":"2:13733:1719","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:49775:9318","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:40":{"id":"0:40","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[174,4],"end":[174,10]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::memchr::Memchr","name":"Memchr","id":"0:137:1599","glob":false}},"5:850:1713":{"id":"5:850:1713","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"a:2:3364:215-0:153:1600":{"id":"a:2:3364:215-0:153:1600","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1600","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3405:8557-0:826:1980":{"id":"a:2:3405:8557-0:826:1980","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:8557","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3372:222":{"id":"2:3372:222","crate_id":2,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3197-0:976:2051":{"id":"b:2:3197-0:976:2051","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:976:2051","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:3200:3267"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:649:1737":{"id":"0:649:1737","crate_id":0,"name":"needle","span":{"filename":"src/memmem/mod.rs","begin":[557,4],"end":[559,5]},"visibility":"public","docs":"Returns the needle that this finder searches for.\n\nNote that the lifetime of the needle returned is tied to the lifetime\nof the finder, and may be shorter than the `'n` lifetime. Namely, a\nfinder's needle can be either borrowed or owned, so the lifetime of the\nneedle returned must necessarily be the shorter of the two.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3364:215":{"id":"2:3364:215","crate_id":2,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6645:9280":{"id":"1:6645:9280","crate_id":1,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6646:55419"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:8677-0:976:2051":{"id":"b:2:8677-0:976:2051","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8874:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8673:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:976:2051","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:8679:1869","2:8680:8947","2:8681:773"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"2:10846:9437":{"id":"2:10846:9437","crate_id":2,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10847:147","2:10848:34172","2:10849:54108"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13739:3070":{"id":"2:13739:3070","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"self::pattern":"2:13332:9771","prim@char":"1:15883:3321"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:9770","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13809:20725":{"id":"2:13809:20725","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:15883:3321","self::pattern":"2:13332:9771"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:9770","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2953:179":{"id":"2:2953:179","crate_id":2,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2954:421","2:2955:2083","2:2956:1836","2:2957:8939"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2922:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2963:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13802:60695":{"id":"2:13802:60695","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1006":{"id":"0:1006","crate_id":0,"name":null,"span":{"filename":"src/memmem/mod.rs","begin":[698,9],"end":[698,14]},"visibility":{"restricted":{"parent":"0:300:1603","path":"::memmem"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2101","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1007:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3614:131":{"id":"2:3614:131","crate_id":2,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3616:382"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3617:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:623:1727":{"id":"0:623:1727","crate_id":0,"name":"into_owned","span":{"filename":"src/memmem/mod.rs","begin":[337,4],"end":[344,5]},"visibility":"public","docs":"Convert this iterator into its owned variant, such that it no longer\nborrows the finder and needle.\n\nIf this is already an owned iterator, then this is a no-op. Otherwise,\nthis copies the needle.\n\nThis is only available when the `std` feature is enabled.","links":{},"attrs":["#[cfg(feature = \"std\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:965:2045","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'static"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:667:2135":{"id":"0:667:2135","crate_id":0,"name":"build_reverse","span":{"filename":"src/memmem/mod.rs","begin":[720,4],"end":[725,5]},"visibility":"public","docs":"Build a reverse finder using the given needle from the current\nsettings.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["needle",{"kind":"borrowed_ref","inner":{"lifetime":"'n","mutable":false,"type":{"kind":"generic","inner":"B"}}}]],"output":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2052","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"AsRef","id":"2:3165:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5563:9356":{"id":"1:5563:9356","crate_id":1,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5564:55902"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3907:9075":{"id":"2:3907:9075","crate_id":2,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:1031:9366":{"id":"1:1031:9366","crate_id":1,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:1032:1713","1:1033:10176","1:1034:55347","1:1035:55348","1:1036:55349","1:1037:55350","1:1038:55351"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3212-0:995:2052":{"id":"b:2:3212-0:995:2052","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2052","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23768:22225":{"id":"2:23768:22225","crate_id":2,"name":"SimdOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23769:58963","2:23770:58962","2:23771:58964"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdPartialOrd","id":"2:23763:9737","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2868-0:153:1600":{"id":"b:2:2868-0:153:1600","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1600","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2870:53893"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3210:128":{"id":"2:3210:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"2:13716:60681":{"id":"2:13716:60681","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:13832:9368":{"id":"2:13832:9368","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:5446:9368"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:50097:9369","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3530:9060":{"id":"2:3530:9060","crate_id":2,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3532:1245"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:829:2708":{"id":"0:829:2708","crate_id":0,"name":"Auto","span":{"filename":"src/memmem/prefilter/mod.rs","begin":[176,4],"end":[176,8]},"visibility":"default","docs":"Automatically detect whether a heuristic prefilter should be used. If\nit is used, then heuristics will be used to dynamically disable the\nprefilter if it is believed to not be carrying its weight.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:180":{"id":"0:180","crate_id":0,"name":null,"span":{"filename":"src/memchr/iter.rs","begin":[148,0],"end":[163,1]},"visibility":{"restricted":{"parent":"0:115:784","path":"::memchr::iter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["take_while","intersperse_with","flat_map","next_chunk","count","max_by_key","cmp","is_sorted_by_key","product","unzip","rev","try_for_each","find","try_collect","map_while","for_each","last","any","min","__iterator_get_unchecked","all","cmp_by","copied","fold","collect_into","scan","filter","chain","advance_by","collect","partial_cmp_by","cloned","enumerate","reduce","gt","partition","flatten","lt","filter_map","position","nth","min_by","zip","eq_by","cycle","rposition","try_reduce","partition_in_place","fuse","peekable","step_by","partial_cmp","skip","min_by_key","max","take","eq","le","array_chunks","is_sorted","find_map","size_hint","is_partitioned","ne","inspect","skip_while","ge","intersperse","max_by","is_sorted_by","sum","try_find","map","try_fold","by_ref"],"trait":{"name":"Iterator","id":"2:8874:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr3","id":"0:170:1601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:182:1869","0:183:928","0:184:1870"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3201-0:986:2046":{"id":"b:2:3201-0:986:2046","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2046","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3201-0:826:1980":{"id":"b:2:3201-0:826:1980","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:638:928":{"id":"0:638:928","crate_id":0,"name":"next","span":{"filename":"src/memmem/mod.rs","begin":[415,4],"end":[432,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3829:138":{"id":"2:3829:138","crate_id":2,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3831:691"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3824:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6219:9291":{"id":"1:6219:9291","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6220:9659","1:6221:9660","1:6222:13731","1:6223:55533","1:6225:55537","1:6227:55534","1:6228:55535","1:6230:55536"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10416:9292","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:6573:9289":{"id":"1:6573:9289","crate_id":1,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6574:13252","1:6575:55715"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10416:9292","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2865-0:995:2052":{"id":"b:2:2865-0:995:2052","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2052","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:2867:3391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3201-0:137:1599":{"id":"b:2:3201-0:137:1599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr","id":"0:137:1599","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:300:1603":{"id":"0:300:1603","crate_id":0,"name":"memmem","span":{"filename":"src/memmem/mod.rs","begin":[1,0],"end":[1321,1]},"visibility":"public","docs":"This module provides forward and reverse substring search routines.\n\nUnlike the standard library's substring search routines, these work on\narbitrary bytes. For all non-empty needles, these routines will report exactly\nthe same values as the corresponding routines in the standard library. For\nthe empty needle, the standard library reports matches only at valid UTF-8\nboundaries, where as these routines will report matches at every position.\n\nOther than being able to work on arbitrary bytes, the primary reason to prefer\nthese routines over the standard library routines is that these will generally\nbe faster. In some cases, significantly so.\n\n# Example: iterating over substring matches\n\nThis example shows how to use [`find_iter`] to find occurrences of a substring\nin a haystack.\n\n```\nuse memchr::memmem;\n\nlet haystack = b\"foo bar foo baz foo\";\n\nlet mut it = memmem::find_iter(haystack, \"foo\");\nassert_eq!(Some(0), it.next());\nassert_eq!(Some(8), it.next());\nassert_eq!(Some(16), it.next());\nassert_eq!(None, it.next());\n```\n\n# Example: iterating over substring matches in reverse\n\nThis example shows how to use [`rfind_iter`] to find occurrences of a substring\nin a haystack starting from the end of the haystack.\n\n**NOTE:** This module does not implement double ended iterators, so reverse\nsearches aren't done by calling `rev` on a forward iterator.\n\n```\nuse memchr::memmem;\n\nlet haystack = b\"foo bar foo baz foo\";\n\nlet mut it = memmem::rfind_iter(haystack, \"foo\");\nassert_eq!(Some(16), it.next());\nassert_eq!(Some(8), it.next());\nassert_eq!(Some(0), it.next());\nassert_eq!(None, it.next());\n```\n\n# Example: repeating a search for the same needle\n\nIt may be possible for the overhead of constructing a substring searcher to be\nmeasurable in some workloads. In cases where the same needle is used to search\nmany haystacks, it is possible to do construction once and thus to avoid it for\nsubsequent searches. This can be done with a [`Finder`] (or a [`FinderRev`] for\nreverse searches).\n\n```\nuse memchr::memmem;\n\nlet finder = memmem::Finder::new(\"foo\");\n\nassert_eq!(Some(4), finder.find(b\"baz foo quux\"));\nassert_eq!(None, finder.find(b\"quux baz bar\"));\n```","links":{"`rfind_iter`":"0:613:2050","`find_iter`":"0:609:2042","`FinderRev`":"0:995:2052","`Finder`":"0:986:2046"},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:301","0:609:2042","0:613:2050","0:617:2061","0:618:2068","0:965:2045","0:976:2051","0:986:2046","0:995:2052","0:1004:2101"],"is_stripped":false}},"2:3215:128":{"id":"2:3215:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:39108:9496","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:13362:9774":{"id":"2:13362:9774","crate_id":2,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13357:9773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13812:56581":{"id":"2:13812:56581","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:15883:3321","self::pattern":"2:13332:9771"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:9770","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13342:9770","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13357:9773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3447:9041":{"id":"2:3447:9041","crate_id":2,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3449:183","2:3450:563"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:4492:9317":{"id":"1:4492:9317","crate_id":1,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4493:58566","1:4494:58567","1:4495:58569","1:4497:9316","1:4498:58568","1:4500:56570","1:4501:10523"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"1:4410:9311","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2865-0:153:1600":{"id":"b:2:2865-0:153:1600","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1600","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2867:3391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1009:664":{"id":"0:1009:664","crate_id":0,"name":"fmt","span":{"filename":"src/memmem/mod.rs","begin":[698,16],"end":[698,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:1004:2101":{"id":"b:2:2868-0:1004:2101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2101","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2870:53893"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6171:61339":{"id":"5:6171:61339","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:8472:220"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6467:9354":{"id":"1:6467:9354","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6468:53894","1:6469:13135","1:6470:13136","1:6471:13138","1:6472:13137","1:6473:13139","1:6474:13140","1:6475:13142","1:6476:11385","1:6477:13145","1:6478:13146","1:6479:13147","1:6480:13148","1:6481:13149","1:6482:13150","1:6483:13143","1:6484:13144"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3676:9064":{"id":"2:3676:9064","crate_id":2,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3678:758"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Index","id":"2:3672:9063","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:43":{"id":"0:43","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[174,12],"end":[174,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::memchr::Memchr2","name":"Memchr2","id":"0:153:1600","glob":false}},"5:6186:55347":{"id":"5:6186:55347","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:13828:55350"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6164:61337":{"id":"5:6164:61337","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:444:1714","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8217:10185","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:444:1714","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8217:10185","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13738:32920":{"id":"2:13738:32920","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:50081:10024","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:162":{"id":"0:162","crate_id":0,"name":null,"span":{"filename":"src/memchr/iter.rs","begin":[94,0],"end":[106,1]},"visibility":{"restricted":{"parent":"0:115:784","path":"::memchr::iter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["take_while","intersperse_with","flat_map","next_chunk","count","max_by_key","cmp","is_sorted_by_key","product","unzip","rev","try_for_each","find","try_collect","map_while","for_each","last","any","min","__iterator_get_unchecked","all","cmp_by","copied","fold","collect_into","scan","filter","chain","advance_by","collect","partial_cmp_by","cloned","enumerate","reduce","gt","partition","flatten","lt","filter_map","position","nth","min_by","zip","eq_by","cycle","rposition","try_reduce","partition_in_place","fuse","peekable","step_by","partial_cmp","skip","min_by_key","max","take","eq","le","array_chunks","is_sorted","find_map","size_hint","is_partitioned","ne","inspect","skip_while","ge","intersperse","max_by","is_sorted_by","sum","try_find","map","try_fold","by_ref"],"trait":{"name":"Iterator","id":"2:8874:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Memchr2","id":"0:153:1600","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:164:1869","0:165:928","0:166:1870"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:23387:22206":{"id":"2:23387:22206","crate_id":2,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23388:12293","2:23389:60109","2:23390:60110"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23380:9292","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:290:1588":{"id":"0:290:1588","crate_id":0,"name":"memchr2","span":{"filename":"src/memchr/mod.rs","begin":[151,0],"end":[178,1]},"visibility":"public","docs":"Like `memchr`, but searches for either of two bytes instead of just one.\n\nThis returns the index corresponding to the first occurrence of `needle1`\nor the first occurrence of `needle2` in `haystack` (whichever occurs\nearlier), or `None` if neither one is found. If an index is returned, it is\nguaranteed to be less than `usize::MAX`.\n\nWhile this is operationally the same as something like\n`haystack.iter().position(|&b| b == needle1 || b == needle2)`, `memchr2`\nwill use a highly optimized routine that can be up to an order of magnitude\nfaster in some cases.\n\n# Example\n\nThis shows how to find the first position of either of two bytes in a byte\nstring.\n\n```\nuse memchr::memchr2;\n\nlet haystack = b\"the quick brown fox\";\nassert_eq!(memchr2(b'k', b'q', haystack), Some(4));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["needle1",{"kind":"primitive","inner":"u8"}],["needle2",{"kind":"primitive","inner":"u8"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:2862:98":{"id":"2:2862:98","crate_id":2,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2864:53893"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10582:9005":{"id":"2:10582:9005","crate_id":2,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10583:664"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:648:311":{"id":"0:648:311","crate_id":0,"name":"as_ref","span":{"filename":"src/memmem/mod.rs","begin":[546,4],"end":[548,5]},"visibility":"public","docs":"Convert this finder into its borrowed variant.\n\nThis is primarily useful if your finder is owned and you'd like to\nstore its borrowed variant in some intermediate data structure.\n\nNote that the lifetime parameter of the returned finder is tied to the\nlifetime of `self`, and may be shorter than the `'n` lifetime of the\nneedle itself. Namely, a finder's needle can be either borrowed or\nowned, so the lifetime of the needle returned must necessarily be the\nshorter of the two.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Finder","id":"0:986:2046","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3201-0:995:2052":{"id":"b:2:3201-0:995:2052","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2052","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8636:3450":{"id":"2:8636:3450","crate_id":2,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8638:8985"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:661:1737":{"id":"0:661:1737","crate_id":0,"name":"needle","span":{"filename":"src/memmem/mod.rs","begin":[688,4],"end":[690,5]},"visibility":"public","docs":"Returns the needle that this finder searches for.\n\nNote that the lifetime of the needle returned is tied to the lifetime\nof the finder, and may be shorter than the `'n` lifetime. Namely, a\nfinder's needle can be either borrowed or owned, so the lifetime of the\nneedle returned must necessarily be the shorter of the two.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3364:215-0:965:2045":{"id":"a:2:3364:215-0:965:2045","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindIter","id":"0:965:2045","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:617:2061":{"id":"0:617:2061","crate_id":0,"name":"find","span":{"filename":"src/memmem/mod.rs","begin":[259,0],"end":[265,1]},"visibility":"public","docs":"Returns the index of the first occurrence of the given needle.\n\nNote that if you're are searching for the same needle in many different\nsmall haystacks, it may be faster to initialize a [`Finder`] once,\nand reuse it for each search.\n\n# Complexity\n\nThis routine is guaranteed to have worst case linear time complexity\nwith respect to both the needle and the haystack. That is, this runs\nin `O(needle.len() + haystack.len())` time.\n\nThis routine is also guaranteed to have worst case constant space\ncomplexity.\n\n# Examples\n\nBasic usage:\n\n```\nuse memchr::memmem;\n\nlet haystack = b\"foo bar baz\";\nassert_eq!(Some(0), memmem::find(haystack, b\"foo\"));\nassert_eq!(Some(4), memmem::find(haystack, b\"bar\"));\nassert_eq!(None, memmem::find(haystack, b\"quux\"));\n```","links":{"`Finder`":"0:986:2046"},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["needle",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3211:1431":{"id":"2:3211:1431","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47933:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:79":{"id":"0:79","crate_id":0,"name":null,"span":{"filename":"src/memchr/mod.rs","begin":[3,38],"end":[3,45]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::iter::Memchr3","name":"Memchr3","id":"0:170:1601","glob":false}},"a:2:3376:224-0:995:2052":{"id":"a:2:3376:224-0:995:2052","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'n","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderRev","id":"0:995:2052","args":{"angle_bracketed":{"args":[{"lifetime":"'n"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:2917:185":{"id":"2:2917:185","crate_id":2,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2919:608","2:2920:913"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:3437:9045":{"id":"2:3437:9045","crate_id":2,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3439:183","2:3440:1368"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8682:3449":{"id":"2:8682:3449","crate_id":2,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8684:8944","2:8686:8945","2:8687:8946"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2868-0:976:2051":{"id":"b:2:2868-0:976:2051","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:976:2051","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:2870:53893"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2859:97":{"id":"2:2859:97","crate_id":2,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2861:3391"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:3672:9063":{"id":"2:3672:9063","crate_id":2,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3674:183","2:3675:757"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:455":{"id":"0:455","crate_id":0,"name":null,"span":{"filename":"src/memmem/prefilter/mod.rs","begin":[179,0],"end":[183,1]},"visibility":{"restricted":{"parent":"0:354:1979","path":"::memmem::prefilter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3248:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:456:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4097-0:826:1980":{"id":"b:2:4097-0:826:1980","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Prefilter","id":"0:826:1980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3620:133":{"id":"2:3620:133","crate_id":2,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3622:183","2:3623:384"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3453:9044":{"id":"2:3453:9044","crate_id":2,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3455:183","2:3456:1110"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:851:8993":{"id":"5:851:8993","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13725:56543":{"id":"2:13725:56543","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11205:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11205:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:975:664":{"id":"0:975:664","crate_id":0,"name":"fmt","span":{"filename":"src/memmem/mod.rs","begin":[310,9],"end":[310,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8197:3431":{"id":"2:8197:3431","crate_id":2,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8198:60013","2:8199:60014","2:8200:2214","2:8201:60008","2:8202:60015","2:8203:60012","2:8204:60011"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2963:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2865-0:976:2051":{"id":"b:2:2865-0:976:2051","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:976:2051","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:2867:3391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3405:8557-0:1004:2101":{"id":"a:2:3405:8557-0:1004:2101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:8557","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2101","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:663:926":{"id":"0:663:926","crate_id":0,"name":"new","span":{"filename":"src/memmem/mod.rs","begin":[705,4],"end":[707,5]},"visibility":"public","docs":"Create a new finder builder with default settings.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"FinderBuilder","id":"0:1004:2101","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3212-0:976:2051":{"id":"b:2:3212-0:976:2051","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FindRevIter","id":"0:976:2051","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'n"}],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}}},"paths":{"2:52023:9845":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:39144:10310":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"2:23232:9401":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:15884:3322":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"1:1261:144":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:3437:9045":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"2:48929:9000":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"1:6745:9275":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"17:9206:47578":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"1:9558:11135":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockReadGuard"],"kind":"struct"},"12:0:3296":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"2:10811:147":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"2:47302:3437":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"2:22900:59505":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:11071:9377":{"crate_id":1,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"17:13463:11857":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"1:5154:9637":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"2:23238:9402":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"17:13549:11882":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"5:4694:240":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"1:11314:9278":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"1:10527:9473":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"2:10566:110":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"2:13408:9777":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"16:7090:10728":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"1:15865:54022":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"6:4005:12683":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"2:47286:3433":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"17:11922:11457":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"6:4270:9657":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"16:7323:10681":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"2:46972:13404":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:11894:55460":{"crate_id":1,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"6:1567:12475":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"1:15900:3335":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:3369:1718":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"16:7637:10736":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"3:0:436":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"14:250:12285":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"18:729:3040":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"1:1610:9472":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2:46894:3453":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"16:2905:10832":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"16:3221:10839":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"1:15889:3326":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"12:2040:9428":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"6:6943:13272":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"1:9439:55489":{"crate_id":1,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"1:10902:9343":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"2:48152:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"2:47084:3459":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:46171:198":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:3755:9508":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"16:6099:10706":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"1:10703:9617":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:51999:9863":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:10534:17972":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"1:11154:9688":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"17:10988:13653":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:49657:9177":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"17:12196:11505":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"6:3883:12602":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"16:4573:12039":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"2:47808:178":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"17:10622:11282":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"1:8732:9671":{"crate_id":1,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"2:32640:59608":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"16:7025:10589":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"2:52455:9884":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"17:12048:11485":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"1:7739:55495":{"crate_id":1,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"8:0:3292":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"16:5784:10572":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"9:722:10343":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"17:10340:10992":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"2:53333:9878":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:3518:9057":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"17:9466:11271":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"2:25019:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"5:6851:9303":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"1:15897:3332":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"1:11952:9411":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"2:47874:8805":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"17:10304:10954":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"1:13607:9498":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"2:5529:10160":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"6:6205:13217":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:49160:13419":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:10228:13734":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"1:11288:9290":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"2:46297:9065":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"5:8373:9476":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"1:10980:9318":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"1:5746:9700":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"16:6075:10660":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"2:49699:9175":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"0:618:2068":{"crate_id":0,"path":["memchr","memmem","rfind"],"kind":"function"},"16:5923:10702":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"17:10068:10948":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"17:11130:11331":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"5:4509:9094":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"17:9517:9318":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"2:46231:200":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"18:837:2099":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"16:4903:12050":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"17:12250:11513":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"1:10973:3474":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"1:6479:13147":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"1:7436:9484":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"1:11966:9414":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"9:469:14193":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"5:7551:11086":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:4896:9838":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"17:12282:11520":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"17:542:10592":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"17:10975:13652":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"6:6016:13125":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"2:51690:9844":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:46363:9817":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"6:618:12443":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"2:23974:59108":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"17:9259:11264":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"17:11181:11335":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"16:6060:10699":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"6:5455:13049":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"17:10445:11226":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"5:4281:9428":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"17:11754:11425":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"1:1452:9462":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"1:2909:129":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"17:12442:11562":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"1:5519:9354":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"0:300:1603":{"crate_id":0,"path":["memchr","memmem"],"kind":"module"},"5:3960:10276":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"12:466:13858":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"1:14874:9491":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"12:2398:12293":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:46692:9369":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:51901:9868":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:2914:9596":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"6:1576:12481":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"1:11985:9415":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"1:11912:13522":{"crate_id":1,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"16:7238:10679":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"1:7314:120":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"1:14064:9338":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"1:5575:9359":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"6:4277:12765":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:50540:122":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"17:11822:11445":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"2:3370:8927":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"1:12072:8872":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"16:7051:10725":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"6:5149:12887":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"6:6643:13248":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"6:6954:13276":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:14148:189":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"2:5214:9989":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"17:13495:11868":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"6:1727:12583":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:2953:179":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"2:8127:9920":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"7:0:1496":{"crate_id":7,"path":["unwind"],"kind":"module"},"17:10643:11284":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"17:10586:13637":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"17:11212:10981":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"2:48026:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"17:9587:61605":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"12:559:144":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"1:5563:9356":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"17:10318:10963":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"6:1558:12470":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"17:11742:11422":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"18:152:1600":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"2:49644:3452":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"16:7208:10735":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"16:7281:10665":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"17:10082:11002":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"2:5078:9014":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"9:776:10389":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"2:24527:10075":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"5:6759:8866":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"2:51977:9860":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"2:46615:9955":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"2:3654:9072":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"2:49152:13418":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"18:766:3028":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"1:9526:9633":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"2:13089:10018":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"2:48568:9002":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"6:5186:12913":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"1:14912:13536":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"2:4489:8947":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"16:6089:10705":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"17:13196:11791":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"16:3297:10894":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"16:5721:10570":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"17:12716:11607":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"17:13404:11838":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"2:9157:3446":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"17:13147:11777":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"6:4340:12797":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"17:11628:11397":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"5:3825:9094":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"6:6243:13236":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"17:11530:11380":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"2:46934:3463":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"16:3521:12025":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"1:4146:9625":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"16:4271:12031":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"2:2859:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"1:8217:10275":{"crate_id":1,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"16:5649:10564":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"5:8406:10266":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"12:1103:9469":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"5:7731:10244":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"1:15890:3327":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"18:811:2046":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"2:10039:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:3177:233":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"17:12431:11561":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"12:1147:9471":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"2:10250:9993":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"6:5547:13069":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"5:2266:11088":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"5:1152:11086":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"17:11068:10938":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"6:539:12395":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"1:12067:164":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"1:7602:9495":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"1:13245:9651":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"17:11305:11612":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"1:10999:9372":{"crate_id":1,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"1:2510:9589":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"1:11177:9689":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"16:3029:10835":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"1:10550:13725":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"17:13584:11890":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"6:4538:12883":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"2:47320:3441":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"18:668:1985":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:53223:9858":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"6:5378:13019":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"15:0:3298":{"crate_id":15,"path":["addr2line"],"kind":"module"},"6:601:12435":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"6:4434:12841":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"17:11013:13655":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"2:12796:2796":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"5:1663:9094":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"17:9326:10955":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"1:2141:9431":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"16:6482:10864":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"2:51376:13425":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:3060:9605":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:47849:9094":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"17:11381:11341":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"6:4142:12746":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"6:3987:12671":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:5978:9655":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"2:46275:201":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"2:8449:3434":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"6:593:12430":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"6:5974:13101":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"1:7484:9487":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:10580:191":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"17:13774:11959":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"16:3007:10834":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"17:13247:11805":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"2:10718:13698":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"6:1621:12512":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:23138:9918":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"1:6100:9656":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"17:12302:11521":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"17:12130:11497":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"2:50220:9781":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:3522:9058":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:6924:8796":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"1:4036:9342":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"5:2328:10304":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"6:1912:41694":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"6:5567:13083":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"19:0:1000":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"16:7247:10693":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"2:8669:137":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:23426:9292":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"2:50374:9787":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"17:9396:11269":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:14437:130":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"6:1748:12590":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:13332:9771":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"2:8742:3448":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:46336:9743":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"1:4829:9512":{"crate_id":1,"path":["std","net","ip","display_buffer","IpDisplayBuffer"],"kind":"struct"},"17:9361:11268":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"16:2792:10583":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"6:4208:12760":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"2:10578:9004":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"5:3436:9430":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"1:2135:9430":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"1:5425:9387":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:32792:59607":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"6:5405:13028":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:14667:1573":{"crate_id":2,"path":["core","core_arch","arch","x86_64"],"kind":"module"},"16:5530:10559":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"2:53832:8513":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:4752:9370":{"crate_id":1,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"12:750:9094":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"16:7659:10737":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"16:7868:128":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"17:10801:10932":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"2:2963:186":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"6:5247:12943":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"17:13428:11846":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"5:8494:10191":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"16:7754:10739":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"17:11985:11472":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"2:52875:9870":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"2:10846:9437":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"17:13037:11736":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"2:50520:10039":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"6:5426:13041":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:24887:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"6:521:12387":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"6:4392:12824":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"1:15633:11147":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"1:13928:11143":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"17:9716:61606":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"2:49679:9176":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"5:5948:11095":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"17:11784:11437":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"6:4296:12777":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"16:7295:10666":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"2:3103:9758":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:15906:3341":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"1:11501:9094":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"17:11956:11467":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"17:12892:11624":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"2:51947:9856":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"16:6504:10718":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"5:6739:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"1:5636:9692":{"crate_id":1,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"2:14420:203":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"2:50011:10020":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"17:11457:11360":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"12:843:9459":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"6:1764:12595":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"1:14665:9492":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"9:686:10340":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"17:12383:11556":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"17:12573:11583":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"16:4381:12034":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:10582:9005":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"16:6277:10711":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"17:12557:11579":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"1:6576:9291":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"17:11653:11399":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"1:1447:9461":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:4161:9741":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"17:11168:11333":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"2:2917:185":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"2:46645:10168":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"17:8929:47572":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:52301:9889":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"17:10136:13618":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:12772:9156":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:14379:9293":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"6:4532:12880":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"17:10949:13650":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"1:2130:9429":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"2:9533:8809":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"16:3366:10847":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"5:7477:8947":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"2:53411:9862":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"5:844:227":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"17:12117:11494":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:47976:9094":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"2:53619:9885":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"0:1004:2101":{"crate_id":0,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"17:9796:61603":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"2:52221:13432":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"2:49857:10013":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"5:3814:161":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"17:10925:13648":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"2:12328:11115":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"6:4287:12772":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"1:14142:9141":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"2:46963:3466":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:696:9554":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"1:7422:9483":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"5:7048:10177":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"2:46903:3462":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"6:4346:12799":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"16:5566:10560":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:50536:10033":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:10695:119":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"17:11689:11409":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"6:6979:13279":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"17:13306:11817":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"12:2280:9471":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"17:10390:10962":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"1:14647:54030":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"17:13522:11875":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"14:244:12283":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"1:2147:9432":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"2:13362:9774":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:15899:3334":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"2:5278:9017":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"5:8549:9429":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"16:547:10566":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"6:6908:13264":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"1:1146:16965":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"1:11238:9372":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"5:853:109":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"2:14540:9544":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"1:15895:3330":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"17:9291:11266":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:51500:9887":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2:4146:9742":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"1:11022:9373":{"crate_id":1,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"6:1634:12519":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"16:5668:10565":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"2:24513:10123":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"12:183:10481":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"17:13735:11948":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"2:53473:9882":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"2:46858:13704":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"17:13763:11955":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"1:2422:13718":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"1:4383:9303":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"17:12527:11576":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"1:2911:9594":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"5:1740:9463":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"12:1666:10486":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"1:15882:3320":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"1:6647:9281":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"2:50063:10022":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"17:13345:11827":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:24953:9158":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"16:2981:10844":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"5:3110:60260":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:46631:9957":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"13:121:9128":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"2:49113:13414":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"17:9087:47576":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"5:2619:10307":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"17:9958:61597":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"2:3829:138":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:10655:9595":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"2:23763:9737":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"1:8777:8879":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"6:1600:12498":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"18:720:2209":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"6:1606:12500":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"17:11591:11391":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"1:11432:9524":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"5:2284:10217":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"2:50206:9778":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"17:11474:11365":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"1:10416:9292":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:49957:10017":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:1418:9460":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"1:15071:9454":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"2:47004:3477":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:2326:604":{"crate_id":1,"path":["std","env"],"kind":"module"},"2:50417:10095":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"2:49911:9163":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:2152:9433":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"1:14067:9334":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"12:928:9461":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"2:48582:9003":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"16:4198:12030":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"2:46667:10026":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"5:8361:9436":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"16:5998:10643":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"6:612:12440":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"2:3432:9040":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"2:46801:10087":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:10942:9315":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"5:5388:202":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:48236:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"12:952:9466":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"16:6557:10719":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"2:23151:9292":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"2:23435:9843":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"17:13708:11936":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"0:965:2045":{"crate_id":0,"path":["memchr","memmem","FindIter"],"kind":"struct"},"16:5745:10571":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"17:11890:11447":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"5:3462:9433":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"1:10496:16961":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"6:4218:12761":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"16:3314:10579":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"17:12512:11572":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"17:10571:10941":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"6:3920:12629":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:48808:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"2:48859:108":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"5:1701:9459":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"6:1740:12586":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"1:1105:13707":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"2:3475:9047":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:14404:9364":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"16:7415:10680":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:50765:9910":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"2:8717:121":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"16:7768:10667":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"1:11264:9638":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"2:23437:9735":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"16:3265:10841":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"5:777:13686":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"5:1719:9461":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"2:3479:9049":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:14630:13725":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"2:3248:116":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"1:11882:9492":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"5:444:1714":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"2:47933:207":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"1:4410:9311":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"1:14470:58564":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"2:51446:9866":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:5513:9353":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"1:859:9559":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"17:10831:10963":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:47840:1869":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:47857:9095":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"17:9183:10937":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"17:12183:11504":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"5:5609:8866":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"1:15053:9447":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"17:0:3300":{"crate_id":17,"path":["object"],"kind":"module"},"2:3484:9054":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:49747:9917":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"2:14057:139":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"6:1626:12514":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"1:10217:11339":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"6:4416:12832":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"1:5759:9701":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"1:13744:9487":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"1:11449:9525":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"2:10572:9001":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"17:12687:11604":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"6:533:12393":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"16:3103:10846":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"18:704:2210":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"17:11797:11441":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"2:50053:10021":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:8446:8868":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"5:8241:9428":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"1:4428:9313":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"16:2733:10582":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"16:5217:10586":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"5:3105:60263":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"17:294:13608":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"1:10517:9439":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"1:14886:58562":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"1:13783:9489":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"17:11547:11382":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"5:3402:9431":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:7936:3228":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"17:12700:11605":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"17:9873:13618":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:53704:1914":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"6:565:12415":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"1:11105:9511":{"crate_id":1,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"2:50106:10026":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"12:2045:9429":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"1:3803:128":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"16:7100:10729":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"17:11409:11345":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"12:1682:10487":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"17:3743:10929":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"17:13440:11852":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"17:10147:11277":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"17:12731:11611":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"17:9706:13615":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"17:9646:61599":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"1:11868:9491":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"12:764:9095":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"17:9431:11270":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"6:6214:13220":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:48446:8867":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"2:4095:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"17:10253:10913":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"5:69:10239":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"1:4219:9339":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"17:11494:11375":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"2:3453:9044":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"11:54:10463":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"1:12558:129":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"1:1441:9429":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"6:4526:12878":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"2:11682:9163":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:51653:9859":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"6:4055:12704":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"1:1456:9463":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"2:13073:10015":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:7093:13719":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"16:4628:12041":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"17:10814:10933":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"6:5240:12939":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:23380:9292":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"1:1466:9465":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"6:1544:12465":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"1:6477:13145":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"1:12087:9423":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"17:12585:11585":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"1:7782:11119":{"crate_id":1,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"17:11256:11336":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"17:12607:11596":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"2:50777:9908":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"12:1881:146":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"1:10963:3462":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"16:5273:11265":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"17:10598:13638":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"1:5151:9636":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"17:12646:11599":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"2:9161:3447":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"3:321:207":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:12596:13726":{"crate_id":1,"path":["std","sys","unix","fs","TimespecDebugAdapter"],"kind":"struct"},"2:47331:3443":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"2:3463:9046":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"16:2839:10830":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"2:5727:9914":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:9427:55490":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"17:4157:10942":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"17:2543:10959":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"1:15888:3325":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:3102:9292":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"14:216:45925":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"6:3933:12639":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"1:2359:13714":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"2:52661:9861":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"2:3364:215":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"16:7169:10676":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"2:8673:152":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"2:3870:9074":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"16:0:3299":{"crate_id":16,"path":["gimli"],"kind":"module"},"5:7891:239":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"17:12143:11289":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"2:50312:9784":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"16:3461:10843":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"1:15903:3338":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"1:3284:9325":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"16:4716:12044":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"2:5143:9016":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"5:3838:9095":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"2:48893:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"1:1483:9467":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"12:2269:9470":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2:3506:9055":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:10789:9505":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"2:12195:9179":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"17:11085:10983":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"17:13073:11766":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"1:14460:9314":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"1:1031:9366":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"5:1072:9094":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"2:51601:9867":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:50528:10038":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:12082:214":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"5:3441:10215":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"16:6630:10867":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"2:3743:9066":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"12:895:10465":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"2:51853:9883":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"5:7960:11106":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"17:11002:13654":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:49518:10006":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"16:5498:10557":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"2:47105:3475":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"2:11627:9170":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:8000:11119":{"crate_id":1,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"6:571:12418":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"16:6873:8805":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"9:157:10359":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"6:4061:12706":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:4841:9804":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"6:6856:13261":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"17:9676:61601":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"17:12543:11577":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"2:5152:9984":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"5:2396:10303":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"17:8849:10977":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"2:24240:10058":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"18:790:2045":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"5:1055:10260":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"1:8497:8870":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"2:14:3403":{"crate_id":2,"path":["core","write"],"kind":"macro"},"17:12157:11501":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"1:8096:9579":{"crate_id":1,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"2:22879:59508":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"1:1578:9469":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"17:299:13609":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"12:2419:9436":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"17:9004:47573":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"1:5567:9357":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"17:9275:11265":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"6:5311:12977":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:6649:9282":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"1:4143:9624":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"2:5034:9982":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"18:637:2210":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"16:2883:10850":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"6:5288:12964":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"2:11385:9094":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"18:801:2051":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"6:4332:12794":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"1:13761:55488":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"2:46588:9369":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"16:4840:12048":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:48841:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"2:2044:9303":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"18:661:1983":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"1:10678:130":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"2:50532:10032":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"16:5303:10544":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"6:1551:12467":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"17:11579:11388":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"16:5257:11264":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"1:2397:13716":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"2:2502:9839":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"5:4372:9095":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"1:4258:9335":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"2:53779:8510":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"2:2912:421":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"6:5982:13106":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"6:626:12448":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"12:869:9428":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"2:8022:3461":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"2:14369:10047":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:5147:9983":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"18:0:1587":{"crate_id":18,"path":["memchr"],"kind":"module"},"17:12770:11622":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"17:11937:11462":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"2:52198:13431":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"17:12406:11557":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:10513:8996":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"1:15901:3336":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"2:25118:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"16:7792:10696":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"17:10407:10987":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2:24400:9932":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"2:3812:9067":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"2:24986:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"6:4242:12763":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"18:829:2101":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"16:5959:10588":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"6:5229:12931":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"17:13975:12008":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"2:23102:9731":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"16:4975:12052":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"1:10711:9327":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"6:3981:12670":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:3535:9061":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:14061:9336":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"17:10913:13647":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"2:47064:3134":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"2:46698:10164":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"1:14779:11144":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"1:6219:9291":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"17:12417:11559":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"12:1784:11084":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"6:6931:13270":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:47907:8806":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:12106:9547":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"17:2512:10989":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"17:13660:11935":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"2:22834:2251":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"17:13873:11983":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"17:13840:11976":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"16:6130:10707":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"1:7062:13719":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"16:4439:12036":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"2:22847:59109":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"6:4048:12701":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"5:7935:11100":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"1:11134:13500":{"crate_id":1,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"16:7264:196":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"6:6114:13160":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"1:8288:9412":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"17:13180:11788":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"17:2314:10991":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"2:50349:9785":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"17:13859:11981":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"2:47043:1730":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"5:8472:220":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:56638:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"16:5698:10569":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"6:3896:12611":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"1:14399:13527":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"2:51468:9854":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"2:50504:10031":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"17:13129:11772":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:50524:10037":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"16:6533:10862":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"1:14931:9423":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"17:12070:11486":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"1:5738:9698":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"1:3381:11117":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"17:13257:11806":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:56242:9828":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"2:46124:9073":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"2:13271:9533":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"17:13167:11783":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"17:13539:11879":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"16:3340:10580":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"6:5204:12926":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"17:13233:11800":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"2:53741:8508":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:9434:11134":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"2:48589:9004":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"2:48278:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"2:52725:9846":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"6:5178:12911":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"17:10115:11005":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"16:6050:10704":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"17:13155:11778":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"16:5941:10703":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:48832:134":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"2:11196:9292":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"2:46754:9959":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"17:10127:10963":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"2:46916:3454":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:47052:3472":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"2:47074:3473":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"2:5706:16967":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2:10584:9006":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"16:6310:10712":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"1:15887:3324":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"17:12482:11567":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"1:4256:9334":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"17:12262:11514":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"6:6184:13203":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"17:13557:11883":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"16:5516:10558":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"6:6097:13155":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:24415:13304":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"2:24332:9936":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:22862:59109":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"6:5419:13039":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"2:46878:3452":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:8939:8801":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"1:10665:9365":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"16:3402:10584":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"6:5260:12952":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:53535:9847":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"6:4110:12733":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"16:3177:10837":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"0:609:2042":{"crate_id":0,"path":["memchr","memmem","find_iter"],"kind":"function"},"2:10512:207":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"2:14253:59688":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"6:4410:12831":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"5:8466:13285":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"6:5216:12930":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:9655:9770":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"1:10986:9165":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:49352:10174":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:15388:10504":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"18:739:3045":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"2:48404:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:997:9398":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"9:0:3293":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"16:3770:12028":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:57952:13444":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"2:28330:9837":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"6:6967:13277":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"16:7684:10671":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"6:4098:12727":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"1:10794:9506":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"9:1075:10410":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"5:4709:11091":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"5:4581:10287":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"17:12003:11473":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"6:4386:12821":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"16:5348:10546":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"2:48575:9001":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"2:48945:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"2:11516:9166":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:11359:9513":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"6:4454:12850":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"16:7200:10678":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"1:7734:9578":{"crate_id":1,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"1:15023:9445":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2:50692:192":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"2:2188:8547":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"5:6562:9428":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"5:8566:10240":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"1:12565:9593":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"5:4308:11086":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"2:24854:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"12:2032:9094":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"1:11854:9490":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"1:15907:3342":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"11:0:3295":{"crate_id":11,"path":["adler"],"kind":"module"},"2:46785:10086":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:10104:11004":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"12:2392:12292":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"1:8545:8878":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"1:11491:9526":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"17:13281:11808":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"17:11314:10956":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"5:1729:9462":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:4853:9805":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"5:3905:11086":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"5:8257:60178":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"17:9930:61598":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"1:2654:181":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:3181:232":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"6:634:12453":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"5:4765:11091":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"17:9160:10980":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"6:3907:12619":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"5:1684:8947":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"16:6286:10493":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"16:3743:12027":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"16:3243:10840":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"17:13573:11886":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"17:13138:11776":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"16:7782:10668":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"5:1760:10299":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"5:1518:9471":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:973:9579":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"1:7139:188":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"6:527:12390":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"1:10799:9330":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"14:11:13682":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"1:12125:9548":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"18:136:1599":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"17:9579:129":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"6:4116:12736":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"6:580:12424":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:24423:13305":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"18:866:2176":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"6:4440:12842":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"0:613:2050":{"crate_id":0,"path":["memchr","memmem","rfind_iter"],"kind":"function"},"17:9883:61604":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"1:14894:9547":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"2:46714:10025":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:7248:187":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"16:4743:12045":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"12:432:10478":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"2:5224:9015":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"2:48362:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"18:712:2251":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"9:749:10344":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"17:13908:11996":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"1:15902:3337":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"5:984:10259":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:52045:9848":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:56612:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"12:933:9464":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"12:979:9468":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"17:11671:11408":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"5:6340:10244":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"2:2862:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"2:46356:9816":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"2:49733:10090":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:1108:13709":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"6:4379:12819":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"2:51671:13427":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:53756:8509":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"5:1909:11086":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"2:3372:222":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:7599:9493":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"16:5605:10561":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"6:3966:12663":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"16:7355:10661":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"12:2059:9431":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"16:5289:10659":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"1:11341:8797":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"5:5906:10179":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"6:4179:12758":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:52120:13429":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"9:927:45353":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"6:6120:13162":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"17:12209:11507":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"17:13794:11962":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"16:5427:10553":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"2:46925:3455":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"16:7309:10664":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"2:24348:13296":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"17:10455:10961":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"1:3459:9328":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"17:13938:12001":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:52167:13430":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"17:11514:11376":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"6:5390:13026":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"5:0:283":{"crate_id":5,"path":["alloc"],"kind":"module"},"2:3617:132":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"5:5962:11098":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"6:5331:12993":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"1:3070:9610":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:11205:218":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:14862:9490":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:47984:9095":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"2:14359:9840":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"1:15904:3339":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"17:13271:11807":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"17:10937:13649":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"2:51831:9880":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"2:49356:9189":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"17:10516:11281":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"2:50088:10025":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"5:3366:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"2:49807:9169":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"9:603:14203":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"17:11335:10935":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"1:8646:13720":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"1:1387:9095":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"1:10438:9563":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"17:13961:12005":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:13029:11734":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"5:6775:10197":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"2:2151:1318":{"crate_id":2,"path":["core","mem","size_of"],"kind":"function"},"2:47015:3470":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"6:4321:12788":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"17:13323:11822":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"1:11507:9528":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"2:5269:9990":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:10468:9141":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"5:3554:9429":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"2:3611:8558":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"17:13785:11960":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"1:4492:9317":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"12:2072:9433":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"2:2884:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"16:6595:10674":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"2:46944:3464":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"17:13293:11811":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"1:10417:9555":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"17:10187:13626":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"1:10914:2202":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"6:5274:12963":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:6723:9279":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"16:6407:10714":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"1:14453:119":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"2:14107:59687":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"2:32626:8551":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"16:5855:10575":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"2:24388:9931":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"2:50516:10035":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"16:6381:10673":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"16:6141:10708":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"2:37952:2251":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"2:32692:59611":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"2:14183:13699":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"16:6342:10713":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"6:5301:12970":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"17:9033:47574":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"1:8610:163":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"6:6896:13262":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:9512:9632":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"2:23387:22206":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"17:13421:11845":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"5:1547:9472":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"2:48110:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:9143:9400":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"6:4067:12709":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"6:5998:13118":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:2765:584":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:25085:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"5:2005:9429":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"1:2126:9428":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"6:4075:12714":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:49939:10016":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"2:3853:9824":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:4351:3439":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"6:3877:12601":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"17:12455:11564":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"1:11905:55471":{"crate_id":1,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"2:24461:39736":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"17:11725:11414":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"18:611:1709":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"2:47916:8644":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"6:4081:12717":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"17:13747:11951":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"2:49765:10008":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"2:24068:9292":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:15192:9636":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"14:194:45919":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"17:13481:11861":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:4:985":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"2:48320:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"5:8249:10262":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"2:25151:10061":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"2:22902:59503":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"17:10660:47763":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"17:10476:10964":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:53695:8505":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"17:12746:11612":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"1:4217:9338":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"2:50748:159":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:15065:9453":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"1:7539:9489":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"1:10638:9399":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"16:2937:10855":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"16:3155:10836":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"2:3467:9050":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"12:777:8947":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"12:856:9460":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"2:50735:10046":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"17:12957:11675":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"2:3447:9041":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"1:11960:8947":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"14:47:13682":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"2:46370:9015":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"2:3835:9069":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"18:621:1711":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"1:11836:9488":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"2:13342:9770":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"5:7312:9428":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"1:13394:13716":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"2:51400:9886":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"16:5887:10577":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"6:4308:12784":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:51755:9888":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"2:3491:9051":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"2:39108:9496":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:51570:13426":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:10034:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"17:9948:13620":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"2:8636:3450":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"12:815:9463":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"1:10443:9577":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"6:6902:13263":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2:53871:8514":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"2:10801:143":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"17:1311:11009":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"16:6190:10710":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"6:4464:12856":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"6:6135:13167":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"16:4316:12032":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"5:4036:11086":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"16:3478:10842":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"16:7721:10672":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"16:7369:10662":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"12:1203:10475":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"5:5488:9303":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"1:13859:9488":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"2:2277:9762":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"1:4180:9337":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"1:6467:9354":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"12:2066:9432":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"2:4998:9981":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"16:4599:12040":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"6:4038:12698":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"1:4178:9336":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"2:50043:9320":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"2:53081:9890":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"6:4485:12863":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"2:46986:3468":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"2:3374:107":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"5:3407:10214":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"17:10874:11318":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"1:2123:8947":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"16:4411:12035":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"2:49759:10007":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"1:15849:14211":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"2:51631:9855":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"17:13755:11954":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"9:809:9523":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"16:5396:10549":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"2:3171:150":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:3382:8928":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"2:47033:3471":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"2:53809:8512":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"6:6671:13251":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"17:10223:10918":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"2:2213:1057":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"17:12170:11502":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"18:754:3132":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"1:11518:9529":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"17:11603:11392":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"1:12228:13717":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"6:1526:12457":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:23175:9912":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"17:13595:11891":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"1:14394:13525":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"2:23049:9911":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"1:14795:11145":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"17:10503:10965":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"6:3960:12662":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"1:14634:9390":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"5:8449:10268":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:3526:9059":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"16:4942:12051":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"1:8195:9523":{"crate_id":1,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"2:10851:9833":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"2:24364:13299":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"2:51422:9874":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"17:10240:10910":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"16:6468:10716":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"2:50072:10023":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"16:7449:10669":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:50363:9786":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"9:1056:10402":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"5:8217:10185":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"17:10093:11003":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"16:6173:10709":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:3376:224":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"9:692:10342":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"1:6241:9393":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"6:5478:13055":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"5:4017:9429":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"2:49105:9477":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"16:6012:10658":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"17:13817:11975":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"17:12620:11597":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"16:4803:12047":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"17:11234:10979":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"6:1669:12548":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"1:783:11137":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"2:46954:3465":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"17:9988:47625":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"17:11031:47579":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"16:3199:10838":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"6:4028:12692":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:13515:11874":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"2:9154:3444":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"2:49587:9161":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"16:7141:10733":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"6:1662:12544":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"11:46:12298":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"1:5553:9355":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"15:248:10496":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"5:8483:10190":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"17:10558:13635":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"2:49618:9178":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:10993:9320":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"1:4467:8996":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"2:11477:9181":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"0:995:2052":{"crate_id":0,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"16:3908:12029":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"1:8863:8876":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"1:11201:9640":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"2:48001:180":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:11190:9638":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"2:5753:784":{"crate_id":2,"path":["core","iter"],"kind":"module"},"17:11102:47580":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"5:7207:11100":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"2:49893:9167":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"6:0:803":{"crate_id":6,"path":["libc"],"kind":"module"},"1:15905:3340":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"12:1703:10488":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"13:0:3290":{"crate_id":13,"path":["std_detect"],"kind":"module"},"2:2181:583":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"2:3471:9048":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"17:13016:11727":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"16:6643:10868":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"6:4256:12764":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"17:13953:12002":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"17:12360:11547":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"5:8226:8947":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:3430:969":{"crate_id":2,"path":["core","ops"],"kind":"module"},"2:49775:9318":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"2:50384:9788":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"2:24539:10074":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"6:1680:12556":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"17:13472:11860":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"16:5238:45996":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"16:6549:10677":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"6:4425:12835":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"2:46675:10163":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"6:4356:12805":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:14968:9499":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:46995:3469":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"16:7131:10732":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"2:46329:9068":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"16:4660:12042":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"1:11842:183":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"2:13050:10014":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"5:8314:8947":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"5:1276:10301":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"2:49569:9162":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"6:1694:12567":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"1:11944:9094":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"2:10523:135":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"16:3686:12026":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"16:7379:10682":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"12:2036:8947":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"1:15886:3323":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"5:1626:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"17:9786:13617":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"2:14072:151":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"2:50684:13423":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"17:9131:47577":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"1:1405:9459":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"18:645:1982":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"2:52537:9869":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"2:77:1506":{"crate_id":2,"path":["core","usize"],"kind":"module"},"2:32632:8552":{"crate_id":2,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"2:48826:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"2:53675:1966":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"2:47293:3435":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"6:1531:12459":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"9:1020:10409":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"1:12567:11142":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"17:11945:11464":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"2:0:493":{"crate_id":2,"path":["core"],"kind":"module"},"16:6931:10878":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"1:15339:13542":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"2:50727:10045":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"2:56664:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:3405:8557":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"16:6433:10715":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"18:744:3046":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"1:1431:9428":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"1:8187:9579":{"crate_id":1,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"9:41:10392":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"6:4446:12845":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"6:5447:13047":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:11434:9165":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"1:6481:13149":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"18:849:2170":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"1:4485:9297":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"5:1533:9470":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"17:11701:11412":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"5:3104:1713":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"17:8954:10939":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"2:10570:120":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"16:3494:11189":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"5:2376:10321":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"2:51708:13428":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:0:1344":{"crate_id":1,"path":["std"],"kind":"module"},"1:5505:9351":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"6:607:12438":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"17:12222:11509":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"1:10303:11140":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"16:5639:10562":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"5:8287:10189":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"2:49607:9172":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"17:13369:11832":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"16:7826:9816":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"2:3841:9071":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"12:1183:10474":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"1:5860:9646":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"1:12014:9417":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"1:11048:9376":{"crate_id":1,"path":["std","net","ip","IpAddr"],"kind":"enum"},"17:10166:11279":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"1:1088:9590":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"2:49578:9160":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:15894:3329":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"16:5685:10568":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"2:3530:9060":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"6:4474:12857":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:10563:110":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:24311:13294":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"2:22881:59506":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:15893:3328":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"18:169:1601":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"6:1704:12573":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"5:5861:11086":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"18:885:2133":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"5:1710:9460":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:46253:199":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"16:4689:12043":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"16:5902:10701":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"17:10899:13643":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"12:2253:9469":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"16:7702:10670":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:46415:9962":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"16:6717:10722":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"17:11433:11359":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"7:38:45249":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"6:6080:13153":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"17:9836:61600":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"6:3993:12674":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"0:0:1587":{"crate_id":0,"path":["memchr"],"kind":"module"},"2:13560:110":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"17:11968:11469":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"17:11640:11398":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"2:53794:8511":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"18:782:2210":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"2:47992:8947":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"1:1397:8947":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:3614:131":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:3168:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"17:10489:11280":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"2:50674:203":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"2:46603:9954":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"6:6914:13265":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"1:15854:16966":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"16:6907:10723":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"17:10775:13640":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"2:37928:180":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"1:2651:182":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"2:3392:8929":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"2:24477:39745":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:24440:39744":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"17:9746:13616":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"2:53684:8504":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"16:5412:10552":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"0:986:2046":{"crate_id":0,"path":["memchr","memmem","Finder"],"kind":"struct"},"5:3395:9094":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"6:4402:12827":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"6:6034:13134":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:46594:13393":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"2:51801:9876":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"2:3587:117":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"2:50191:9775":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:15896:3331":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"17:13377:11834":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"5:1296:10302":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"16:3129:10845":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"1:1592:9470":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"1:3405:9321":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"12:1121:9470":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"2:24821:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"1:13413:13865":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"2:50097:9369":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:3044:9600":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"6:1733:9650":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"17:11769:11431":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"17:13529:11876":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"0:617:2061":{"crate_id":0,"path":["memchr","memmem","find"],"kind":"function"},"17:10198:13627":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"2:6900:59843":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"2:10245:9992":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:10428:54029":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"6:161:40387":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"17:12496:11570":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:53581:9865":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"16:6518:10675":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"17:12348:11545":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"1:8860:8875":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"18:651:1980":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"2:49130:147":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:11250:9699":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"1:14960:13537":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"15:230:10495":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"2:3620:133":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"5:4665:11089":{"crate_id":5,"path":["alloc","collections","vec_deque","spec_extend","spec_extend","WrapAddOnDrop"],"kind":"struct"},"16:5362:10547":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"1:11292:13134":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"17:10039:13623":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"2:56677:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:8682:3449":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:15038:9446":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"17:8902:47571":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"5:8232:10261":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"1:8453:8869":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"5:8279:196":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"5:8308:8947":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"14:231:10193":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"17:11142:11332":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"1:5431:9389":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"2:50561:9550":{"crate_id":2,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"6:6665:13249":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"2:53730:8507":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"6:1588:12490":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:23962:9159":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:49142:9523":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"18:694:1987":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:32446:10118":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"6:4012:12687":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"12:353:12288":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"1:9267:58100":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"17:607:13611":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"17:1236:13612":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"1:11270:9658":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"6:3972:12665":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"14:0:3297":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"2:51552:9879":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"2:3442:9042":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"2:52615:9857":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"2:39184:8930":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"17:12634:11598":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:24072:9736":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"16:7079:10727":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"1:2119:9094":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:4865:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"16:4495:12038":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"17:13331:11825":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"17:11563:11387":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"2:48068:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"17:10610:13639":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"2:49993:10019":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"1:5730:9697":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"2:3672:9063":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"17:11907:11453":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"17:13721:11942":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"17:11713:11413":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"2:47115:3476":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:9394:11133":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"1:14801:11146":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"1:10921:9341":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"1:11409:9523":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"17:13612:11898":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:14456:142":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"12:787:9462":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:52691:9864":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"12:379:10480":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"1:5497:9352":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"16:7110:10730":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"16:6656:10869":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"7:85:45256":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"16:5869:191":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"17:13452:11853":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"2:3600:9062":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:32988:8553":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"2:56651:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"16:6679:10871":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"2:46187:196":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"2:46721:10165":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"18:820:2052":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"6:4135:12744":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"6:4160:12757":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"5:981:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"1:10930:9314":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"1:13481:9541":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"6:5398:13027":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:25520:9944":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"17:13899:11992":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"17:10015:13621":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"9:963:10407":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"1:10643:9593":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"1:10511:16963":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"16:6949:10879":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"2:47311:3439":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:48194:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"5:7358:11086":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"17:11810:11442":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"6:5293:12965":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"16:2754:10581":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"17:10364:10990":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"1:4140:9623":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"17:10464:10960":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"2:10576:9003":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"2:49121:9834":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"2:39148:9740":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"6:6057:13152":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"1:2917:9312":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"2:3272:128":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"9:900:12349":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"1:15324:54027":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"14:189:13682":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"1:11890:13521":{"crate_id":1,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"1:2361:13715":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"6:5488:13057":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"6:5541:13068":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:46773:10085":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"6:157:40386":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"16:6159:10663":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"17:11282:47581":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"2:10574:9002":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"17:510:13610":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"2:8376:2202":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"17:9064:47575":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:51356:13424":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2:24169:10057":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"16:2861:10831":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"16:7121:10731":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"2:50573:10106":{"crate_id":2,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"1:15170:9379":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"1:6339:9395":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"5:1673:9095":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"1:11256:9649":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"6:6268:13242":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"6:6153:13178":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"17:681:11339":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"2:49689:9174":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"16:6980:10724":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"13:233:12287":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"16:6490:10717":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"6:1537:12462":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"1:15883:3321":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"2:49597:9171":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"2:52425:9881":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"6:672:40720":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"1:11196:9639":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"6:4362:12808":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"6:586:12427":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"17:10962:13651":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"2:3676:9064":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"4:0:3291":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"6:545:12398":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"9:234:10367":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"2:50508:10034":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"17:10788:13642":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"2:8197:3431":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"2:47865:8947":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:53657:9850":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:21:676":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"5:8436:10267":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"1:1477:9466":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"17:10266:10948":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"1:8281:204":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"5:6498:228":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"2:50285:9783":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"2:46735:10167":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:11245:9696":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"17:10058:11008":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"17:10211:13628":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"1:12030:9418":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"1:7939:9579":{"crate_id":1,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"0:976:2051":{"crate_id":0,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"17:12093:11492":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"2:49789:9165":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"12:971:9467":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"6:88:40320":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"17:13565:11885":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"17:12026:11476":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"16:6331:10492":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"16:6026:10656":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"6:4198:12759":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"17:2484:47663":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"2:48871:128":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"17:9240:10914":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"5:2843:10306":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"2:46768:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"2:8433:13864":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"6:6229:13227":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:2286:9763":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"17:11615:11395":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"6:4516:12873":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:8632:3451":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:49839:10012":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"6:4127:12740":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"6:4230:12762":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:11710:9164":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"2:5298:8920":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"2:56599:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:10554:10310":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"5:5910:10181":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"5:8420:10086":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:9539:10978":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"1:11998:9416":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"1:11088:9378":{"crate_id":1,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"5:383:10273":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"16:6691:10721":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"12:940:9465":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"1:15315:13541":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"2:8874:158":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:5321:9018":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"17:12318:11526":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"2:11589:9169":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:11034:9374":{"crate_id":1,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"2:3907:9075":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"6:1721:12580":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"1:7456:9485":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"2:50081:10024":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"6:5439:13045":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"17:10048:13624":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"5:1256:13863":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"1:853:9558":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"1:15898:3333":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"2:25052:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"17:12660:11600":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"2:11409:9095":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"5:8389:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"17:11354:10934":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"17:13917:11998":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"6:5210:12929":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:56625:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"12:1238:10476":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"1:4476:56506":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"5:3106:13281":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"16:5443:10554":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"2:13124:9181":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:52379:9877":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:1374:9094":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"1:2481:9588":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"1:15881:3319":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"16:3051:10892":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:46728:10166":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"5:3948:9329":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"16:6604:10720":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"17:12237:11512":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"17:9561:10957":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"17:13215:11792":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"2:11668:9167":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:50169:9772":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"2:3459:9043":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:8715:3435":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"2:7159:3478":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:2263:9760":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"2:46848:11109":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"2:53715:8506":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:9535:8807":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"2:13013:10011":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"12:162:10477":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"1:8974:13720":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"6:1712:12574":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:6640:3467":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:6841:9295":{"crate_id":1,"path":["std","os","net","tcp","TcpStreamExt"],"kind":"trait"},"1:10278:11138":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"16:7063:10726":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"2:2922:125":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"16:3576:11193":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"17:9826:10963":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"5:3114:60261":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"17:10545:13633":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"17:12469:11566":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"12:1256:9472":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"17:4008:13613":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:3165:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"1:15377:10504":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"6:6027:13130":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"18:857:2151":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"14:56:11360":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"17:12674:11603":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"2:23228:9292":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"2:49670:9173":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"16:7155:10734":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"2:23768:22225":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"1:6573:9289":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"6:5433:13042":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"16:6035:10698":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"1:5278:9644":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"1:10648:9364":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"2:12228:9180":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"17:13887:11990":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"16:2959:10833":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"1:7470:9486":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"16:4351:12033":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"6:4088:12720":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:12077:213":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"16:2813:10849":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"9:996:10408":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"12:399:10479":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"1:3042:9599":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"1:7834:9579":{"crate_id":1,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"17:10435:10920":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"6:4493:12865":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"1:14417:13533":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"17:10028:13622":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"12:1162:10473":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"18:678:143":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"17:13507:11871":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"17:11017:128":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"6:4509:12870":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"9:27:10391":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"6:6688:13260":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"16:5326:10545":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:2391:9509":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"17:12758:11615":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:3174:136":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"1:3058:9604":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"17:10394:10988":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"6:6129:13166":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"6:513:12382":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"2:24788:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"17:9920:13619":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"2:3512:9056":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"2:46097:9076":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"2:13357:9773":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"17:10291:10951":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"5:7753:10245":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"1:5708:9695":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"2:47095:3474":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"16:3077:10893":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"6:4315:12785":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:50512:10036":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"17:13352:11829":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"16:6858:10875":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"16:7184:10880":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"1:2420:13717":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"1:9653:11137":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"17:10851:11317":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"2:3501:9053":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"18:896:2250":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"12:880:9429":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"16:7741:10738":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"2:6717:3456":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"6:5366:13014":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"12:2404:61591":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"2:11696:9168":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"6:6250:13239":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:12921:11644":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:3373:221":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"1:10719:9329":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"16:4467:12037":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"2:9534:8808":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"12:114:13857":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"15:269:10500":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"5:1751:196":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"1:3801:207":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"16:5948:10829":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"17:9756:61602":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"2:47024:3457":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"6:4148:12748":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"5:1502:9469":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"2:52069:9849":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"16:5374:10548":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"2:4783:9303":{"crate_id":2,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"1:12053:8871":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"1:1460:9464":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"6:4373:12816":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"6:6937:13271":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:47925:190":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"1:6645:9280":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"2:46655:10169":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"10:0:3294":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"2:23291:9735":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:1489:9468":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"2:50397:10094":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"17:13094:11771":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"12:2052:9430":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"17:10530:11321":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"17:12015:11475":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"2:32592:8550":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"5:8271:8947":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2:51530:9875":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:3371:9326":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"16:4871:12049":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"17:9636:13614":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"16:5176:12053":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"1:1991:146":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:3496:9052":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"16:7471:10657":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"5:3428:9432":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"12:2412:12295":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"1:15232:9637":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"2:24920:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"2:24506:13317":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"17:13361:11830":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"2:13351:2099":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"18:774:2210":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"12:472:13859":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"6:4020:12689":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:3824:229":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"6:6925:13269":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:11554:9182":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"16:4775:12046":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"2:50237:9782":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:46211:197":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:15253:9644":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"1:1113:16964":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"1:8295:9413":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"17:10422:13629":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"16:2772:10856":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"2:57973:13445":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"6:6007:13124":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"17:13602:11893":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"1:9563:11136":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockWriteGuard"],"kind":"struct"},"1:1601:9471":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"16:5460:10555":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"1:14429:9595":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"6:5582:13094":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"1:15908:3343":{"crate_id":1,"path":["std","fn"],"kind":"primitive"}},"external_crates":{"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":21}