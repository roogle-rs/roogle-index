{"root":"0:0:1616","crate_version":"0.2.3","includes_private":false,"index":{"0:188":{"id":"0:188","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[499,9],"end":[499,14]},"visibility":{"restricted":{"parent":"0:51:1590","path":"::uts46"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2867:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Config","id":"0:182:1591","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:189:409"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13704:35328":{"id":"2:13704:35328","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"1:15750:1984"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:49987:6412","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13709:59285":{"id":"2:13709:59285","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:15744:1979","self::pattern":"2:13302:6270"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:6403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:121":{"id":"0:121","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[636,0],"end":[689,1]},"visibility":{"restricted":{"parent":"0:51:1590","path":"::uts46"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10533:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Errors","id":"0:191:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:122:661"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3184-0:176:1593":{"id":"b:2:3184-0:176:1593","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3157:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Idna","id":"0:176:1593","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3186:682"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3186:682":{"id":"2:3186:682","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3505:7045":{"id":"2:3505:7045","crate_id":2,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3507:355"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13726:1907":{"id":"2:13726:1907","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"prim@char":"1:15744:1979","`DoubleEndedIterator`":"2:8687:120","self::pattern":"2:13302:6270","str::rsplit":"1:15750:1984","str::split_whitespace":"1:15750:1984"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:49713:6429","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:6403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3388:2179":{"id":"2:3388:2179","crate_id":2,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13679:63501":{"id":"2:13679:63501","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:109":{"id":"0:109","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[525,0],"end":[570,1]},"visibility":{"restricted":{"parent":"0:51:1590","path":"::uts46"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Config","id":"0:182:1591","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:110:1605","0:111:1851","0:112:1606","0:113:1883","0:114:1855","0:115:1601","0:117:1613"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:9131:7002":{"id":"2:9131:7002","crate_id":2,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Step","id":"2:8167:7003","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10552:6472":{"id":"2:10552:6472","crate_id":2,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10553:661"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:14042:150":{"id":"2:14042:150","crate_id":2,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:14043:181","2:14044:150","2:14045:769"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:205:59":{"id":"0:205:59","crate_id":0,"name":"default","span":{"filename":"src/uts46.rs","begin":[589,9],"end":[589,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Errors","id":"0:191:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:181:59":{"id":"0:181:59","crate_id":0,"name":"default","span":{"filename":"src/uts46.rs","begin":[435,9],"end":[435,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Idna","id":"0:176:1593","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3190-0:191:1592":{"id":"b:2:3190-0:191:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3160:229","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Errors","id":"0:191:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3193:127","2:3194:1420"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:129":{"id":"0:129","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[41,23],"end":[41,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::uts46::Config","name":"Config","id":"0:182:1591","glob":false}},"1:6344:6530":{"id":"1:6344:6530","crate_id":1,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6345:61397","1:6346:61398"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10533:109":{"id":"2:10533:109","crate_id":2,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10534:661"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:23072:7267":{"id":"2:23072:7267","crate_id":2,"name":"SimdInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23073:7191","2:23074:62884","2:23075:1230","2:23076:1231","2:23077:46191","2:23078:62929","2:23079:62930","2:23080:62931","2:23081:62932","2:23082:62933","2:23083:62885","2:23084:62886","2:23085:62887","2:23086:62888","2:23087:62889","2:23088:62890","2:23089:62891"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3357:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23121:6522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13722:1759":{"id":"2:13722:1759","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:47750:176","prim@char":"1:15744:1979","self::pattern":"2:13302:6270"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:6403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:6403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:6404","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4429:6549":{"id":"1:4429:6549","crate_id":1,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4430:6859","1:4431:61029","1:4433:61030","1:4434:61031","1:4435:6586","1:4436:61032","1:4437:60813","1:4439:61033","1:4440:6316","1:4441:1765","1:4442:6299","1:4444:6310"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3355:218":{"id":"2:3355:218","crate_id":2,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:4129:7129":{"id":"2:4129:7129","crate_id":2,"name":"Provider","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4130:6500"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:4082:1432":{"id":"2:4082:1432","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:46278:7127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3436:7020":{"id":"2:3436:7020","crate_id":2,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3438:181","2:3439:1105"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5582:6542":{"id":"1:5582:6542","crate_id":1,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5583:9108"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2900:183":{"id":"2:2900:183","crate_id":2,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2902:605","2:2903:909"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:3198:127":{"id":"2:3198:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:39050:6790","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:23405:7215":{"id":"2:23405:7215","crate_id":2,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdElement","id":"2:24042:7192","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23396:6522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10546:6470":{"id":"2:10546:6470","crate_id":2,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10547:661"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5438:6634":{"id":"1:5438:6634","crate_id":1,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5439:8314","1:5440:58884"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10355:6522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3388:2179-0:191:1592":{"id":"a:2:3388:2179-0:191:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3388:2179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Errors","id":"0:191:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13744:59283":{"id":"2:13744:59283","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:15744:1979","self::pattern":"2:13302:6270","str::splitn":"1:15750:1984"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:49835:6430","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:6403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:6403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:6404","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13747:63509":{"id":"2:13747:63509","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:6403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6186:59129":{"id":"5:6186:59129","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:15750:1984"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10483:2092":{"id":"2:10483:2092","crate_id":2,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10484:1536","2:10485:61180","2:10487:61179"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3425:7015":{"id":"2:3425:7015","crate_id":2,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3427:181","2:3428:894"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3356:217":{"id":"2:3356:217","crate_id":2,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3442:7012":{"id":"2:3442:7012","crate_id":2,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3443:181","2:3444:915"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3180-0:176:1593":{"id":"b:2:3180-0:176:1593","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3157:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3154:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Idna","id":"0:176:1593","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3183:1918"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23738:19416":{"id":"2:23738:19416","crate_id":2,"name":"SimdOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23739:62293","2:23740:62294","2:23741:62295"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdPartialOrd","id":"2:23733:7194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13750:63510":{"id":"2:13750:63510","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:6403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:6403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:6404","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13715:1885":{"id":"2:13715:1885","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"self::pattern":"2:13302:6270","prim@char":"1:15744:1979"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:6403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:6403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:6404","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3264:6500":{"id":"2:3264:6500","crate_id":2,"name":"provide","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["req",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Demand","id":"2:4144:7133","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13700:59270":{"id":"2:13700:59270","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"1:15750:1984"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13688:59250":{"id":"2:13688:59250","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:15761:1993"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13732:59279":{"id":"2:13732:59279","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"prim@char":"1:15744:1979","str::split":"1:15750:1984","`DoubleEndedIterator`":"2:8687:120","self::pattern":"2:13302:6270"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:49731:6428","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:6403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:6403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:6404","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2848-0:176:1593":{"id":"b:2:2848-0:176:1593","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2842:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Idna","id":"0:176:1593","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2850:2049"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10816:6651":{"id":"2:10816:6651","crate_id":2,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10817:146","2:10818:36659","2:10819:59162"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13677:795":{"id":"2:13677:795","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:15744:1979"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2946:184":{"id":"2:2946:184","crate_id":2,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2948:999","2:2949:828","2:2950:794","2:2951:714","2:2952:697"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2900:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:8639:136":{"id":"2:8639:136","crate_id":2,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8641:685"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:9127:7001":{"id":"2:9127:7001","crate_id":2,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8844:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13772:63518":{"id":"2:13772:63518","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3359:220":{"id":"2:3359:220","crate_id":2,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9504:2213-0:176:1593":{"id":"a:2:9504:2213-0:176:1593","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9504:2213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Idna","id":"0:176:1593","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:5574:6540":{"id":"1:5574:6540","crate_id":1,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5575:60881"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10355:6522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13707:63506":{"id":"2:13707:63506","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:49977:6423","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:139:1604":{"id":"0:139:1604","crate_id":0,"name":"domain_to_ascii_strict","span":{"filename":"src/lib.rs","begin":[56,0],"end":[61,1]},"visibility":"public","docs":"The [domain to ASCII](https://url.spec.whatwg.org/#concept-domain-to-ascii) algorithm,\nwith the `beStrict` flag set.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["domain",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47875:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"uts46::Errors","id":"0:191:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:99":{"id":"0:99","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[442,0],"end":[497,1]},"visibility":{"restricted":{"parent":"0:51:1590","path":"::uts46"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Idna","id":"0:176:1593","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:100:922","0:101:1601","0:105:1613"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:4486:2092":{"id":"1:4486:2092","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4487:2066","1:4488:61805","1:4490:61806","1:4491:7823","1:4492:61807","1:4493:61808","1:4494:61179","1:4503:6316"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3812:137":{"id":"2:3812:137","crate_id":2,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3814:688"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3807:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13699:59269":{"id":"2:13699:59269","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"1:15750:1984"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:851:6349":{"id":"5:851:6349","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:126":{"id":"0:126","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[703,0],"end":[707,1]},"visibility":{"restricted":{"parent":"0:51:1590","path":"::uts46"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10540:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Errors","id":"0:191:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:127:661"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:6183:64163":{"id":"5:6183:64163","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:8455:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13797:59131":{"id":"2:13797:59131","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:110:1605":{"id":"0:110:1605","crate_id":0,"name":"use_std3_ascii_rules","span":{"filename":"src/uts46.rs","begin":[527,4],"end":[530,5]},"visibility":"public","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["value",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13788:63522":{"id":"2:13788:63522","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:13302:6270","prim@char":"1:15744:1979"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:6403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3513:7049":{"id":"2:3513:7049","crate_id":2,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3515:1237"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:850:6348":{"id":"5:850:6348","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"2:3726:7481":{"id":"2:3726:7481","crate_id":2,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3728:63004","2:3729:63005","2:3730:59285"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:4511:6592":{"id":"1:4511:6592","crate_id":1,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4512:58613","1:4513:58614","1:4514:58615","1:4516:6591","1:4517:58616","1:4519:1907","1:4520:7900"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"1:4429:6549","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13712:1884":{"id":"2:13712:1884","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"self::pattern":"2:13302:6270","prim@char":"1:15744:1979"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:6403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3359:220-0:191:1592":{"id":"a:2:3359:220-0:191:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3359:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Errors","id":"0:191:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:844:223":{"id":"5:844:223","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:845:6348","5:846:6349","5:847:6350"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3357:106":{"id":"2:3357:106","crate_id":2,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2867:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:14510:6738":{"id":"2:14510:6738","crate_id":2,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14511:61214","2:14512:61215","2:14513:61216","2:14514:61217","2:14515:61218","2:14516:61219","2:14517:6316"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:4080-0:182:1591":{"id":"b:2:4080-0:182:1591","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4078:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Config","id":"0:182:1591","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4082:1432"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13327:6404":{"id":"2:13327:6404","crate_id":2,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13329:6287","2:13330:63117","2:13331:63118"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Searcher","id":"2:13321:6405","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10542:6468":{"id":"2:10542:6468","crate_id":2,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10543:661"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:6500-0:191:1592":{"id":"b:5:6500-0:191:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10540:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6498:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Errors","id":"0:191:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:6502:1400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3195-0:182:1591":{"id":"b:2:3195-0:182:1591","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3154:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Config","id":"0:182:1591","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3198:127","2:3199:1419"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5526:6538":{"id":"1:5526:6538","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5527:10875","1:5528:60955","1:5529:9108","1:5530:60956","1:5531:6923","1:5532:6924","1:5533:60957","1:5534:1307","1:5535:60958","1:5536:60959","1:5537:60960","1:5538:60961","1:5539:60962","1:5540:60963","1:5541:60964","1:5542:60965"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:12742:7549":{"id":"2:12742:7549","crate_id":2,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12743:1783","2:12744:62257"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:4866:7266":{"id":"2:4866:7266","crate_id":2,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4867:1783","2:4868:62081","2:4869:1786"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13697:6731":{"id":"2:13697:6731","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"str::slice_mut_unchecked":"1:15750:1984","`str`":"1:15750:1984","crate::ops::Index":"2:3655:6708"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4080-0:191:1592":{"id":"b:2:4080-0:191:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4078:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Errors","id":"0:191:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4082:1432"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:127:661":{"id":"0:127:661","crate_id":0,"name":"fmt","span":{"filename":"src/uts46.rs","begin":[704,4],"end":[706,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10493:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10482:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10771:142":{"id":"2:10771:142","crate_id":2,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10772:716","2:10774:59078"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3157:135":{"id":"2:3157:135","crate_id":2,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3159:682"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:115:1601":{"id":"0:115:1601","crate_id":0,"name":"to_ascii","span":{"filename":"src/uts46.rs","begin":[557,4],"end":[561,5]},"visibility":"public","docs":"http://www.unicode.org/reports/tr46/#ToASCII","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["domain",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47875:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Errors","id":"0:191:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3154:149":{"id":"2:3154:149","crate_id":2,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3156:1918"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3583:6596":{"id":"2:3583:6596","crate_id":2,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3584:546"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Deref","id":"2:3570:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3597:130":{"id":"2:3597:130","crate_id":2,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3599:377"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3600:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13718:6327":{"id":"2:13718:6327","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"self::pattern":"2:13302:6270","`None`":"2:47750:176","prim@char":"1:15744:1979"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:6403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9503:2214-0:182:1591":{"id":"a:2:9503:2214-0:182:1591","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9503:2214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Config","id":"0:182:1591","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:124:682":{"id":"0:124:682","crate_id":0,"name":"from","span":{"filename":"src/uts46.rs","begin":[692,4],"end":[698,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["e",{"kind":"resolved_path","inner":{"name":"Errors","id":"0:191:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47875:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Errors","id":"0:191:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2845:6401":{"id":"2:2845:6401","crate_id":2,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2847:58400"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2842:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13241:6420":{"id":"2:13241:6420","crate_id":2,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13242:126","2:13243:58756"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3193:127":{"id":"2:3193:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"b:2:3184-0:182:1591":{"id":"b:2:3184-0:182:1591","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3157:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Config","id":"0:182:1591","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3186:682"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3518:7052":{"id":"2:3518:7052","crate_id":2,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3520:1240"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13332:6402":{"id":"2:13332:6402","crate_id":2,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:6404","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:6163":{"id":"5:6163","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5976:1343","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:6164:64160","5:6165:2147","5:6168:64161","5:6171:64162","5:6183:64163","5:6184:64164","5:6185:2117","5:6186:59129","5:6187:59130"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3184-0:191:1592":{"id":"b:2:3184-0:191:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3157:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Errors","id":"0:191:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3186:682"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13776:63520":{"id":"2:13776:63520","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:15744:1979","self::pattern":"2:13302:6270"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:6403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10781:146":{"id":"2:10781:146","crate_id":2,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10782:653","2:10783:2066","2:10784:58496","2:10785:58497","2:10786:58498","2:10787:58499","2:10788:58500","2:10789:58501","2:10790:58502","2:10791:58503","2:10792:58504","2:10793:58505","2:10794:58506","2:10795:58507","2:10796:58508","2:10797:1536"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:101:1601":{"id":"0:101:1601","crate_id":0,"name":"to_ascii","span":{"filename":"src/uts46.rs","begin":[453,4],"end":[490,5]},"visibility":"public","docs":"http://www.unicode.org/reports/tr46/#ToASCII","links":{},"attrs":["#[allow(clippy :: wrong_self_convention)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["domain",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["out",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47875:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Errors","id":"0:191:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13769:63516":{"id":"2:13769:63516","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:114:1855":{"id":"0:114:1855","crate_id":0,"name":"use_idna_2008_rules","span":{"filename":"src/uts46.rs","begin":[551,4],"end":[554,5]},"visibility":"public","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["value",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13695:59249":{"id":"2:13695:59249","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11175:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11175:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:13779:17910":{"id":"2:13779:17910","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:13302:6270","prim@char":"1:15744:1979"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:6403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3190-0:182:1591":{"id":"b:2:3190-0:182:1591","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3160:229","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Config","id":"0:182:1591","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3193:127","2:3194:1420"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6646:6516":{"id":"1:6646:6516","crate_id":1,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6647:59102"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:132":{"id":"0:132","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[41,31],"end":[41,37]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::uts46::Errors","name":"Errors","id":"0:191:1592","glob":false}},"a:2:3347:211-0:191:1592":{"id":"a:2:3347:211-0:191:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3347:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Errors","id":"0:191:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3180-0:191:1592":{"id":"b:2:3180-0:191:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3157:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3154:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Errors","id":"0:191:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3183:1918"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2905:124":{"id":"2:2905:124","crate_id":2,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2900:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:4080-0:176:1593":{"id":"b:2:4080-0:176:1593","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4078:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Idna","id":"0:176:1593","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4082:1432"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13765:63514":{"id":"2:13765:63514","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3818:7005":{"id":"2:3818:7005","crate_id":2,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3820:57753"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:23733:7194":{"id":"2:23733:7194","crate_id":2,"name":"SimdPartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23734:1273","2:23735:1272","2:23736:1270","2:23737:1269"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdPartialEq","id":"2:23145:7193","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13762:63513":{"id":"2:13762:63513","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"str::match_indices":"1:15750:1984","prim@char":"1:15744:1979","self::pattern":"2:13302:6270","`DoubleEndedIterator`":"2:8687:120"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:49881:6425","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:6403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:6403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:6404","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3359:220-0:182:1591":{"id":"a:2:3359:220-0:182:1591","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3359:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Config","id":"0:182:1591","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3420:6655":{"id":"2:3420:6655","crate_id":2,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3422:181","2:3423:1358"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13800:63524":{"id":"2:13800:63524","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"1:15744:1979"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:50012:6375","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3458:7028":{"id":"2:3458:7028","crate_id":2,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3460:560"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3600:131":{"id":"2:3600:131","crate_id":2,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3602:378"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3603:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:8844:157":{"id":"2:8844:157","crate_id":2,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8845:1783","2:8846:924","2:8847:6295","2:8850:1786","2:8851:496","2:8853:1877","2:8856:6296","2:8857:6297","2:8858:6298","2:8859:6299","2:8861:6300","2:8863:6301","2:8864:6302","2:8866:843","2:8869:6303","2:8876:1803","2:8878:6304","2:8881:6305","2:8882:6306","2:8883:6307","2:8885:6308","2:8887:6309","2:8890:1311","2:8891:6310","2:8892:6311","2:8896:6312","2:8899:6313","2:8900:6314","2:8901:6315","2:8903:6316","2:8904:1747","2:8906:6317","2:8909:6318","2:8911:6319","2:8921:6320","2:8936:6321","2:8938:6322","2:8942:6323","2:8951:6324","2:8954:6325","2:8956:6326","2:8959:277","2:8966:295","2:8973:6327","2:8980:6328","2:8989:6329","2:8999:1016","2:9006:6330","2:9013:2116","2:9014:1804","2:9015:6331","2:9027:6332","2:9034:6333","2:9046:6334","2:9053:1869","2:9054:6335","2:9059:1796","2:9062:6336","2:9065:6337","2:9066:6338","2:9068:6339","2:9070:6340","2:9072:416","2:9075:6341","2:9078:999","2:9081:6342","2:9084:605","2:9087:6343","2:9090:909","2:9092:828","2:9094:794","2:9096:714","2:9098:697","2:9100:6344","2:9101:6345","2:9109:6346"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13701:1746":{"id":"2:13701:1746","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:15744:1979"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49683:1782","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13703:1765":{"id":"2:13703:1765","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:49699:6415","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13676":{"id":"2:13676","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:12755:1343","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:13677:795","2:13678:1896","2:13679:63501","2:13680:63502","2:13682:63503","2:13685:58884","2:13686:63504","2:13687:305","2:13688:59250","2:13689:1784","2:13691:59247","2:13693:59248","2:13695:59249","2:13697:6731","2:13698:63505","2:13699:59269","2:13700:59270","2:13701:1746","2:13702:7164","2:13703:1765","2:13704:35328","2:13705:35318","2:13706:7900","2:13707:63506","2:13708:35313","2:13709:59285","2:13712:1884","2:13715:1885","2:13718:6327","2:13722:1759","2:13726:1907","2:13729:35195","2:13732:59279","2:13735:63507","2:13738:63508","2:13741:59281","2:13744:59283","2:13747:63509","2:13750:63510","2:13753:1588","2:13756:63511","2:13759:63512","2:13762:63513","2:13765:63514","2:13767:63515","2:13769:63516","2:13771:63517","2:13772:63518","2:13773:63519","2:13776:63520","2:13779:17910","2:13782:59286","2:13785:63521","2:13788:63522","2:13791:63523","2:13794:7329","2:13796:1760","2:13797:59131","2:13798:59132","2:13799:59133","2:13800:63524","2:13802:6640","2:13803:63525"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11175:214":{"id":"2:11175:214","crate_id":2,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:11177:181","2:11178:1784","2:11179:59247","2:11180:59248","2:11181:59249","2:11182:755","2:11183:756"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:11166:6522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10554:6473":{"id":"2:10554:6473","crate_id":2,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10555:661"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6171:64162":{"id":"5:6171:64162","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:8455:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3509:7047":{"id":"2:3509:7047","crate_id":2,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3511:358"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8602:7102":{"id":"2:8602:7102","crate_id":2,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8604:6339"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:24042:7192":{"id":"2:24042:7192","crate_id":2,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:24043:7191"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:24038:6522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"2:3357:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13321:6405":{"id":"2:13321:6405","crate_id":2,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13323:7157","2:13324:924","2:13325:62260","2:13326:62261"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5512:6536":{"id":"1:5512:6536","crate_id":1,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5513:9108","1:5514:58963","1:5515:58964"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:14426:141":{"id":"2:14426:141","crate_id":2,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14427:278","2:14428:519","2:14429:281","2:14430:1082"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2842:97":{"id":"2:2842:97","crate_id":2,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2844:2049"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:22:533":{"id":"0:22:533","crate_id":0,"name":"decode","span":{"filename":"src/punycode.rs","begin":[54,0],"end":[56,1]},"visibility":"public","docs":"Convert Punycode to Unicode.\n\nReturn None on malformed input or overflow.\nOverflow can only happen on inputs that take more than\n63 encoded bytes, the DNS limit on domain name labels.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7874:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"char"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"1:5504:6535":{"id":"1:5504:6535","crate_id":1,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5505:58404","1:5506:58406","1:5507:58405","1:5508:58407"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3262-0:191:1592":{"id":"b:2:3262-0:191:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:3255:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:4129:7129","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Errors","id":"0:191:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3264:6500"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"E"}}},"2:8167:7003":{"id":"2:8167:7003","crate_id":2,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8168:62394","2:8169:62395","2:8170:62392","2:8171:62390","2:8172:62396","2:8173:62393","2:8174:62391"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2867:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2946:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13759:63512":{"id":"2:13759:63512","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:13302:6270","prim@char":"1:15744:1979","str::rmatch_indices":"1:15750:1984","`DoubleEndedIterator`":"2:8687:120"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:49863:6424","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:6403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9504:2213-0:182:1591":{"id":"a:2:9504:2213-0:182:1591","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9504:2213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Config","id":"0:182:1591","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"21:10:2110":{"id":"21:10:2110","crate_id":21,"name":"BidiDataSource","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["21:11:1814"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13756:63511":{"id":"2:13756:63511","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"`DoubleEndedIterator`":"2:8687:120","self::pattern":"2:13302:6270","prim@char":"1:15744:1979","str::matches":"1:15750:1984"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:49935:6427","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:6403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:6403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:6404","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13678:1896":{"id":"2:13678:1896","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13708:35313":{"id":"2:13708:35313","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:50005:6409","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2851-0:191:1592":{"id":"b:2:2851-0:191:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2845:6401","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Errors","id":"0:191:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2853:58400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:9504:2213":{"id":"2:9504:2213","crate_id":2,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2848-0:191:1592":{"id":"b:2:2848-0:191:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2842:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Errors","id":"0:191:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2850:2049"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3160:229":{"id":"2:3160:229","crate_id":2,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3162:127","2:3163:1420"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9503:2214-0:176:1593":{"id":"a:2:9503:2214-0:176:1593","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9503:2214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Idna","id":"0:176:1593","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:6187:59130":{"id":"5:6187:59130","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:15750:1984"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13691:59247":{"id":"2:13691:59247","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:47750:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11175:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11175:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13803:63525":{"id":"2:13803:63525","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:15744:1979"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:50030:6371","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23208:6570":{"id":"2:23208:6570","crate_id":2,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23198:6522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13794:7329":{"id":"2:13794:7329","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:13241:6420","`FromStr`":"2:13241:6420"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47875:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:13241:6420","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:13241:6420","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:51:1590":{"id":"0:51:1590","crate_id":0,"name":"uts46","span":{"filename":"src/uts46.rs","begin":[9,0],"end":[727,1]},"visibility":"crate","docs":"[*Unicode IDNA Compatibility Processing*\n(Unicode Technical Standard #46)](http://www.unicode.org/reports/tr46/)","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:176:1593","0:182:1591","0:191:1592"],"is_stripped":true}},"2:13689:1784":{"id":"2:13689:1784","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:47750:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11175:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11175:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6746:6515":{"id":"1:6746:6515","crate_id":1,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6747:61376"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:122:661":{"id":"0:122:661","crate_id":0,"name":"fmt","span":{"filename":"src/uts46.rs","begin":[637,4],"end":[688,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10493:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10482:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13741:59281":{"id":"2:13741:59281","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"str::rsplitn":"1:15750:1984","self::pattern":"2:13302:6270","prim@char":"1:15744:1979"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:49817:6431","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:6403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:9130:6567":{"id":"1:9130:6567","crate_id":1,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9131:61687","1:9132:61688","1:9133:61689","1:9134:61690","1:9135:61691","1:9136:42792","1:9137:61686"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10355:6522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3430:7017":{"id":"2:3430:7017","crate_id":2,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3432:181","2:3433:559"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:112:1606":{"id":"0:112:1606","crate_id":0,"name":"verify_dns_length","span":{"filename":"src/uts46.rs","begin":[539,4],"end":[542,5]},"visibility":"public","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["value",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3194:1420":{"id":"2:3194:1420","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47875:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13753:1588":{"id":"2:13753:1588","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"str::matches":"1:15750:1984","self::pattern":"2:13302:6270","prim@char":"1:15744:1979","`DoubleEndedIterator`":"2:8687:120"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:49917:6426","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:6403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:189:409":{"id":"0:189:409","crate_id":0,"name":"clone","span":{"filename":"src/uts46.rs","begin":[499,9],"end":[499,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Config","id":"0:182:1591","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13791:63523":{"id":"2:13791:63523","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:13302:6270","prim@char":"1:15744:1979"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:6403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:6403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:6404","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13682:63503":{"id":"2:13682:63503","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"1:15750:1984"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13799:59133":{"id":"2:13799:59133","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:107":{"id":"0:107","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[509,0],"end":[523,1]},"visibility":{"restricted":{"parent":"0:51:1590","path":"::uts46"}},"docs":"The defaults are that of https://url.spec.whatwg.org/#idna","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3231:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Config","id":"0:182:1591","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:108:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:4504:6589":{"id":"1:4504:6589","crate_id":1,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4505:61719","1:4506:43202","1:4507:61721","1:4508:61720"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13698:63505":{"id":"2:13698:63505","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"crate::ops::IndexMut":"2:3659:7114","str::slice_unchecked":"1:15750:1984","`str`":"1:15750:1984"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:8687:120":{"id":"2:8687:120","crate_id":2,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8688:6287","2:8689:6288","2:8690:6289","2:8691:6290","2:8695:6291","2:8698:1759"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8844:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3180-0:182:1591":{"id":"b:2:3180-0:182:1591","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3157:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3154:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Config","id":"0:182:1591","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3183:1918"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:204":{"id":"0:204","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[589,9],"end":[589,16]},"visibility":{"restricted":{"parent":"0:51:1590","path":"::uts46"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3231:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Errors","id":"0:191:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:205:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3454:7026":{"id":"2:3454:7026","crate_id":2,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3456:895"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3347:211-0:182:1591":{"id":"a:2:3347:211-0:182:1591","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3347:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Config","id":"0:182:1591","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3347:211-0:176:1593":{"id":"a:2:3347:211-0:176:1593","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3347:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Idna","id":"0:176:1593","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13798:59132":{"id":"2:13798:59132","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3655:6708":{"id":"2:3655:6708","crate_id":2,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3657:181","2:3658:755"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:3199:1419":{"id":"2:3199:1419","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47875:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:103:8423":{"id":"23:103:8423","crate_id":23,"name":"Array","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:104:1783","23:105:64872","23:106:62257","23:107:64873","23:108:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5432:6636":{"id":"1:5432:6636","crate_id":1,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5433:58906","1:5434:7671"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10355:6522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:9124:6386":{"id":"2:9124:6386","crate_id":2,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8844:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9504:2213-0:191:1592":{"id":"a:2:9504:2213-0:191:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9504:2213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Errors","id":"0:191:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13705:35318":{"id":"2:13705:35318","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"1:15750:1984"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:49996:6410","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5520:6537":{"id":"1:5520:6537","crate_id":1,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5521:9108","1:5522:10323"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3501:7043":{"id":"2:3501:7043","crate_id":2,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3503:353"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6165:2147":{"id":"5:6165:2147","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:8455:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:6403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:20:1744":{"id":"0:20:1744","crate_id":0,"name":"decode_to_string","span":{"filename":"src/punycode.rs","begin":[45,0],"end":[47,1]},"visibility":"public","docs":"Convert Punycode to an Unicode `String`.\n\nThis is a convenience wrapper around `decode`.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"5:6502:1400":{"id":"5:6502:1400","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4771:6550":{"id":"1:4771:6550","crate_id":1,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4772:6642","1:4773:61351"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3853:7174":{"id":"2:3853:7174","crate_id":2,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:3462:7030":{"id":"2:3462:7030","crate_id":2,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3464:1106"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3484:6654":{"id":"2:3484:6654","crate_id":2,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3486:181","2:3487:357"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3495:7040":{"id":"2:3495:7040","crate_id":2,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3497:181","2:3498:1239"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6185:2117":{"id":"5:6185:2117","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:8455:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6246:6510":{"id":"1:6246:6510","crate_id":1,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6247:61328","1:6248:11294","1:6249:61329","1:6250:61330","1:6251:61331","1:6252:61332"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10355:6522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3352:2178":{"id":"2:3352:2178","crate_id":2,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3479:6653":{"id":"2:3479:6653","crate_id":2,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3481:181","2:3482:354"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:852:6350":{"id":"5:852:6350","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13802:6640":{"id":"2:13802:6640","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:15744:1979"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:50021:6373","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:108:59":{"id":"0:108:59","crate_id":0,"name":"default","span":{"filename":"src/uts46.rs","begin":[510,4],"end":[522,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3807:225":{"id":"2:3807:225","crate_id":2,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3808:181","2:3809:7005","2:3810:687","2:3811:370"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FromResidual","id":"2:3812:137","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3807:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13693:59248":{"id":"2:13693:59248","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11175:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11175:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"1:6577:6513":{"id":"1:6577:6513","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6578:10318"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10355:6522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3388:2179-0:182:1591":{"id":"a:2:3388:2179-0:182:1591","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3388:2179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Config","id":"0:182:1591","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3659:7114":{"id":"2:3659:7114","crate_id":2,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3661:756"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Index","id":"2:3655:6708","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3388:2179-0:176:1593":{"id":"a:2:3388:2179-0:176:1593","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3388:2179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Idna","id":"0:176:1593","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3415:6717":{"id":"2:3415:6717","crate_id":2,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3417:181","2:3418:266"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6472:6538":{"id":"1:6472:6538","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6473:61404","1:6474:11218","1:6475:11219","1:6476:11221","1:6477:11220","1:6478:11222","1:6479:11223","1:6480:11225","1:6481:9144","1:6482:11228","1:6483:11229","1:6484:11230","1:6485:11231","1:6486:11232","1:6487:11233","1:6488:11226","1:6489:11227"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3195-0:191:1592":{"id":"b:2:3195-0:191:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3154:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Errors","id":"0:191:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3198:127","2:3199:1419"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:9503:2214":{"id":"2:9503:2214","crate_id":2,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6224:6513":{"id":"1:6224:6513","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6225:6923","1:6226:6924","1:6227:10317","1:6228:58769","1:6230:58773","1:6232:58770","1:6233:58771","1:6235:58772"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10355:6522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13680:63502":{"id":"2:13680:63502","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6168:64161":{"id":"5:6168:64161","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:8455:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:6403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10544:6469":{"id":"2:10544:6469","crate_id":2,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10545:661"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:14027:138":{"id":"2:14027:138","crate_id":2,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:14028:181","2:14029:1015"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:105:1613":{"id":"0:105:1613","crate_id":0,"name":"to_unicode","span":{"filename":"src/uts46.rs","begin":[494,4],"end":[496,5]},"visibility":"public","docs":"http://www.unicode.org/reports/tr46/#ToUnicode","links":{},"attrs":["#[allow(clippy :: wrong_self_convention)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["domain",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["out",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47875:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Errors","id":"0:191:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13729:35195":{"id":"2:13729:35195","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:15744:1979","self::pattern":"2:13302:6270"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:13094:6411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:6403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:182:1591":{"id":"0:182:1591","crate_id":0,"name":"Config","span":{"filename":"src/uts46.rs","begin":[500,0],"end":[506,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:109","a:2:3388:2179-0:182:1591","a:2:3347:211-0:182:1591","a:2:3359:220-0:182:1591","a:2:9503:2214-0:182:1591","a:2:9504:2213-0:182:1591","b:2:3195-0:182:1591","b:2:3184-0:182:1591","b:2:4080-0:182:1591","b:2:2851-0:182:1591","b:2:3180-0:182:1591","b:2:3190-0:182:1591","b:2:2848-0:182:1591","b:5:848-0:182:1591","0:188","0:190","0:107"]}},"2:23019:7188":{"id":"2:23019:7188","crate_id":2,"name":"SimdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23020:7191","2:23021:62884","2:23022:63148","2:23023:63149","2:23024:63150","2:23025:46191","2:23026:63151","2:23027:63152","2:23028:63153","2:23029:63154","2:23030:63155","2:23031:63156","2:23032:63157","2:23033:63158","2:23034:63159","2:23035:63160","2:23036:62933","2:23037:63161","2:23038:62294","2:23039:62293","2:23040:62295","2:23041:62885","2:23042:62886","2:23043:62887","2:23044:62888"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3357:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23121:6522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10548:6471":{"id":"2:10548:6471","crate_id":2,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10549:661"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3183:1918":{"id":"2:3183:1918","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3157:135"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13312:6403":{"id":"2:13312:6403","crate_id":2,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13314:6405","2:13315:61935","2:13316:61936","2:13317:61937","2:13318:61939","2:13319:61938","2:13320:61940"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:140:1612":{"id":"0:140:1612","crate_id":0,"name":"domain_to_unicode","span":{"filename":"src/lib.rs","begin":[71,0],"end":[73,1]},"visibility":"public","docs":"The [domain to Unicode](https://url.spec.whatwg.org/#concept-domain-to-unicode) algorithm.\n\nReturn the Unicode representation of a domain name,\nnormalizing characters (upper-case to lower-case and other kinds of equivalence)\nand decoding Punycode as necessary.\n\nThis may indicate [syntax violations](https://url.spec.whatwg.org/#syntax-violation)\nbut always returns a string for the mapped domain.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["domain",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"kind":"resolved_path","inner":{"name":"Result","id":"2:47875:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"uts46::Errors","id":"0:191:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13796:1760":{"id":"2:13796:1760","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13686:63504":{"id":"2:13686:63504","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:2867:104":{"id":"2:2867:104","crate_id":2,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2868:409","2:2869:411"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3594:2180":{"id":"2:3594:2180","crate_id":2,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3595:579"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2853:58400":{"id":"2:2853:58400","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6164:64160":{"id":"5:6164:64160","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:444:2182","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8200:7564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:444:2182","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8200:7564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23108:7270":{"id":"2:23108:7270","crate_id":2,"name":"SimdUint","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23109:62884","2:23110:1230","2:23111:1231","2:23112:62885","2:23113:62886","2:23114:62887","2:23115:62888","2:23116:62889","2:23117:62890","2:23118:62891"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3357:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23121:6522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3359:220-0:176:1593":{"id":"a:2:3359:220-0:176:1593","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3359:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Idna","id":"0:176:1593","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:117:1613":{"id":"0:117:1613","crate_id":0,"name":"to_unicode","span":{"filename":"src/uts46.rs","begin":[564,4],"end":[569,5]},"visibility":"public","docs":"http://www.unicode.org/reports/tr46/#ToUnicode","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["domain",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"kind":"resolved_path","inner":{"name":"Result","id":"2:47875:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Errors","id":"0:191:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:123":{"id":"0:123","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[691,0],"end":[699,1]},"visibility":{"restricted":{"parent":"0:51:1590","path":"::uts46"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3157:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Errors","id":"0:191:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47875:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Errors","id":"0:191:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:124:682"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8606:7101":{"id":"2:8606:7101","crate_id":2,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8608:6340"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3190-0:176:1593":{"id":"b:2:3190-0:176:1593","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3160:229","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Idna","id":"0:176:1593","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3193:127","2:3194:1420"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13687:305":{"id":"2:13687:305","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"1:15750:1984","`u8`":"1:15761:1993"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13738:63508":{"id":"2:13738:63508","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:13302:6270","str::split_terminator":"1:15750:1984","str::split":"1:15750:1984","prim@char":"1:15744:1979"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:49781:6432","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:6403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:6403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:6404","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2936:177":{"id":"2:2936:177","crate_id":2,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2937:416","2:2938:2116","2:2939:1804","2:2940:6285"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2905:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2946:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:6648:6518":{"id":"1:6648:6518","crate_id":1,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6649:61275"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:113:1883":{"id":"0:113:1883","crate_id":0,"name":"check_hyphens","span":{"filename":"src/uts46.rs","begin":[545,4],"end":[548,5]},"visibility":"public","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["value",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2850:2049":{"id":"2:2850:2049","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:44:599":{"id":"0:44:599","crate_id":0,"name":"encode","span":{"filename":"src/punycode.rs","begin":[225,0],"end":[230,1]},"visibility":"public","docs":"Convert Unicode to Punycode.\n\nReturn None on overflow, which can only happen on inputs that would take more than\n63 encoded bytes, the DNS limit on domain name labels.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"char"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13782:59286":{"id":"2:13782:59286","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:15744:1979","self::pattern":"2:13302:6270"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:6403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:6403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:6404","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8643:151":{"id":"2:8643:151","crate_id":2,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8644:1783","2:8645:6294","2:8646:770"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13773:63519":{"id":"2:13773:63519","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"self::pattern":"2:13302:6270","prim@char":"1:15744:1979"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:6403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:6403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:13332:6402","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3148:75":{"id":"2:3148:75","crate_id":2,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3150:306"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:10540:119":{"id":"2:10540:119","crate_id":2,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10541:661"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:848-0:182:1591":{"id":"b:5:848-0:182:1591","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2867:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Config","id":"0:182:1591","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:850:6348","5:851:6349","5:852:6350"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:42:1790":{"id":"0:42:1790","crate_id":0,"name":"encode_str","span":{"filename":"src/punycode.rs","begin":[216,0],"end":[219,1]},"visibility":"public","docs":"Convert an Unicode `str` to Punycode.\n\nThis is a convenience wrapper around `encode`.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47750:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"b:2:2848-0:182:1591":{"id":"b:2:2848-0:182:1591","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2842:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Config","id":"0:182:1591","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2850:2049"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13685:58884":{"id":"2:13685:58884","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12766:6413"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:191:1592":{"id":"0:191:1592","crate_id":0,"name":"Errors","span":{"filename":"src/uts46.rs","begin":[590,0],"end":[603,1]},"visibility":"public","docs":"Errors recorded during UTS #46 processing.\n\nThis is opaque for now, indicating what types of errors have been encountered at least once.\nMore details may be exposed in the future.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3388:2179-0:191:1592","a:2:3347:211-0:191:1592","a:2:3359:220-0:191:1592","a:2:9503:2214-0:191:1592","a:2:9504:2213-0:191:1592","b:2:3195-0:191:1592","b:2:3184-0:191:1592","b:2:4080-0:191:1592","b:2:2851-0:191:1592","b:2:3180-0:191:1592","b:2:3190-0:191:1592","b:2:2848-0:191:1592","b:2:3262-0:191:1592","b:5:6500-0:191:1592","0:204","0:121","0:123","0:125","0:126"]}},"1:5570:6539":{"id":"1:5570:6539","crate_id":1,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5571:60955"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13785:63521":{"id":"2:13785:63521","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:13302:6270","prim@char":"1:15744:1979"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:6403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13312:6403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13327:6404","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:1075:6638":{"id":"1:1075:6638","crate_id":1,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:1076:6348","1:1077:1760","1:1078:59129","1:1079:59130","1:1080:59131","1:1081:59132","1:1082:59133"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8652:2181":{"id":"2:8652:2181","crate_id":2,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8654:1901","2:8656:6292","2:8657:6293"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3231:115":{"id":"2:3231:115","crate_id":2,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3232:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6498:224":{"id":"5:6498:224","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6499:1400"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3164:228":{"id":"2:3164:228","crate_id":2,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3166:127","2:3167:1419"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:100:922":{"id":"0:100:922","crate_id":0,"name":"new","span":{"filename":"src/uts46.rs","begin":[443,4],"end":[449,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["config",{"kind":"resolved_path","inner":{"name":"Config","id":"0:182:1591","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6574:6630":{"id":"1:6574:6630","crate_id":1,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6575:11334","1:6576:60895"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10355:6522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:135":{"id":"0:135","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[41,39],"end":[41,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::uts46::Idna","name":"Idna","id":"0:176:1593","glob":false}},"0:4:1589":{"id":"0:4:1589","crate_id":0,"name":"punycode","span":{"filename":"src/punycode.rs","begin":[9,0],"end":[315,1]},"visibility":"public","docs":"Punycode ([RFC 3492](http://tools.ietf.org/html/rfc3492)) implementation.\n\nSince Punycode fundamentally works on unicode code points,\n`encode` and `decode` take and return slices and vectors of `char`.\n`encode_str` and `decode_to_string` provide convenience wrappers\nthat convert from and to Rust’s UTF-8 based `str` and `String` types.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:20:1744","0:22:533","0:42:1790","0:44:599"],"is_stripped":false}},"2:3637:7268":{"id":"2:3637:7268","crate_id":2,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3639:238","2:3640:206","2:3641:63275"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:7582:6789":{"id":"1:7582:6789","crate_id":1,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7583:61713"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3570:116":{"id":"2:3570:116","crate_id":2,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3571:222","2:3572:544"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3255:127":{"id":"2:3255:127","crate_id":2,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3256:6444","2:3258:6498","2:3259:6499","2:3260:6500"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10533:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Display","id":"2:10540:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:5910:6408":{"id":"5:5910:6408","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5912:181","5:5913:36415"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:125":{"id":"0:125","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[701,0],"end":[701,27]},"visibility":{"restricted":{"parent":"0:51:1590","path":"::uts46"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["type_id","description","source","provide","cause"],"trait":{"name":"Error","id":"2:3255:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Errors","id":"0:191:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3446:6718":{"id":"2:3446:6718","crate_id":2,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3448:267"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"22:344:1818":{"id":"22:344:1818","crate_id":22,"name":"UnicodeNormalization","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["22:346:6501","22:347:6502","22:348:1902","22:349:6503","22:350:6504","22:351:2148"],"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8844:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"char"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:6650:6519":{"id":"1:6650:6519","crate_id":1,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6651:58473"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2851-0:176:1593":{"id":"b:2:2851-0:176:1593","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2845:6401","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Idna","id":"0:176:1593","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2853:58400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3890:7175":{"id":"2:3890:7175","crate_id":2,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3347:211":{"id":"2:3347:211","crate_id":2,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:176:1593":{"id":"0:176:1593","crate_id":0,"name":"Idna","span":{"filename":"src/uts46.rs","begin":[436,0],"end":[440,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:99","a:2:3388:2179-0:176:1593","a:2:3347:211-0:176:1593","a:2:3359:220-0:176:1593","a:2:9503:2214-0:176:1593","a:2:9504:2213-0:176:1593","b:2:3195-0:176:1593","b:2:3184-0:176:1593","b:2:4080-0:176:1593","b:2:2851-0:176:1593","b:2:3180-0:176:1593","b:2:3190-0:176:1593","b:2:2848-0:176:1593","0:180"]}},"b:2:3195-0:176:1593":{"id":"b:2:3195-0:176:1593","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3154:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3164:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Idna","id":"0:176:1593","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3198:127","2:3199:1419"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13767:63515":{"id":"2:13767:63515","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3450:6719":{"id":"2:3450:6719","crate_id":2,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3452:1359"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3467:7033":{"id":"2:3467:7033","crate_id":2,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3468:181","2:3469:954"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13771:63517":{"id":"2:13771:63517","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3603:132":{"id":"2:3603:132","crate_id":2,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3605:181","2:3606:379"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:190":{"id":"0:190","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[499,16],"end":[499,20]},"visibility":{"restricted":{"parent":"0:51:1590","path":"::uts46"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3357:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Config","id":"0:182:1591","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3086:7105":{"id":"2:3086:7105","crate_id":2,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:3085:6522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13735:63507":{"id":"2:13735:63507","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"`DoubleEndedIterator`":"2:8687:120","str::rsplit_terminator":"1:15750:1984","str::split":"1:15750:1984","self::pattern":"2:13302:6270","prim@char":"1:15744:1979"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:49763:6433","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13312:6403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:180":{"id":"0:180","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[435,9],"end":[435,16]},"visibility":{"restricted":{"parent":"0:51:1590","path":"::uts46"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3231:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Idna","id":"0:176:1593","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:181:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:23357:19397":{"id":"2:23357:19397","crate_id":2,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23358:10457","2:23359:62707","2:23360:62708"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23350:6522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:138:1599":{"id":"0:138:1599","crate_id":0,"name":"domain_to_ascii","span":{"filename":"src/lib.rs","begin":[50,0],"end":[52,1]},"visibility":"public","docs":"The [domain to ASCII](https://url.spec.whatwg.org/#concept-domain-to-ascii) algorithm.\n\nReturn the ASCII representation a domain name,\nnormalizing characters (upper-case to lower-case and other kinds of equivalence)\nand using Punycode as necessary.\n\nThis process may fail.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["domain",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47875:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"uts46::Errors","id":"0:191:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"5:5906:6407":{"id":"5:5906:6407","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5908:181","5:5909:433"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:111:1851":{"id":"0:111:1851","crate_id":0,"name":"transitional_processing","span":{"filename":"src/uts46.rs","begin":[533,4],"end":[536,5]},"visibility":"public","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["value",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5560:6534":{"id":"1:5560:6534","crate_id":1,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5561:58888","1:5562:58889","1:5563:58890","1:5564:58891"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3474:6652":{"id":"2:3474:6652","crate_id":2,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3476:181","2:3477:352"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10550:189":{"id":"2:10550:189","crate_id":2,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10551:661"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:0:1616":{"id":"0:0:1616","crate_id":0,"name":"idna","span":{"filename":"src/lib.rs","begin":[9,0],"end":[73,1]},"visibility":"public","docs":"This Rust crate implements IDNA\n[per the WHATWG URL Standard](https://url.spec.whatwg.org/#idna).\n\nIt also exposes the underlying algorithms from [*Unicode IDNA Compatibility Processing*\n(Unicode Technical Standard #46)](http://www.unicode.org/reports/tr46/)\nand [Punycode (RFC 3492)](https://tools.ietf.org/html/rfc3492).\n\nQuoting from [UTS #46’s introduction](http://www.unicode.org/reports/tr46/#Introduction):\n\n> Initially, domain names were restricted to ASCII characters.\n> A system was introduced in 2003 for internationalized domain names (IDN).\n> This system is called Internationalizing Domain Names for Applications,\n> or IDNA2003 for short.\n> This mechanism supports IDNs by means of a client software transformation\n> into a format known as Punycode.\n> A revision of IDNA was approved in 2010 (IDNA2008).\n> This revision has a number of incompatibilities with IDNA2003.\n>\n> The incompatibilities force implementers of client software,\n> such as browsers and emailers,\n> to face difficult choices during the transition period\n> as registries shift from IDNA2003 to IDNA2008.\n> This document specifies a mechanism\n> that minimizes the impact of this transition for client software,\n> allowing client software to access domains that are valid under either system.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:4:1589","0:129","0:132","0:135","0:138:1599","0:139:1604","0:140:1612"],"is_stripped":false}},"2:23145:7193":{"id":"2:23145:7193","crate_id":2,"name":"SimdPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23146:7191","2:23147:1250","2:23148:1275"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3151:74":{"id":"2:3151:74","crate_id":2,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3153:6286"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"a:2:9503:2214-0:191:1592":{"id":"a:2:9503:2214-0:191:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9503:2214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Errors","id":"0:191:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13702:7164":{"id":"2:13702:7164","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:15744:1979"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49689:6416","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3795:7482":{"id":"2:3795:7482","crate_id":2,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"RangeBounds","id":"2:3726:7481","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:8712:1787":{"id":"2:8712:1787","crate_id":2,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8713:795","2:8714:1896"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8844:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13706:7900":{"id":"2:13706:7900","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:49967:6422","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:4078:68":{"id":"2:4078:68","crate_id":2,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4079:1432"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"2:3489:7032":{"id":"2:3489:7032","crate_id":2,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3491:181","2:3492:1236"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2851-0:182:1591":{"id":"b:2:2851-0:182:1591","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3352:2178","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2845:6401","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Config","id":"0:182:1591","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2853:58400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6184:64164":{"id":"5:6184:64164","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:444:2182","`String`":"5:8455:216"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:444:2182","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8200:7564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8455:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"paths":{"6:5247:11026":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"12:880:6644":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"1:12004:6941":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"17:13961:9761":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"18:661:8410":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:9625:6403":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"2:49699:6415":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"17:12070:9245":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2:49967:6422":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"6:6205:11299":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:50440:7434":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:11273:2202":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"16:5923:8013":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"1:3419:8559":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"5:1296:7684":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"6:6097:11238":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"17:12746:9102":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"12:183:7858":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"2:49977:6423":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"22:436:8920":{"crate_id":22,"path":["unicode_normalization","stream_safe","Decomposition"],"kind":"struct"},"2:4129:7129":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"1:13986:6612":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"2:49531:7408":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"12:466:8780":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"1:14067:6456":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"1:2163:6642":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"12:928:6691":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"12:1666:7863":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"2:14077:62080":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:1462:6690":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"2:3446:6718":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"2:8097:7061":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"16:6035:7986":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:53543:7258":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"6:4446:10930":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"5:4581:7658":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"16:6310:8023":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"17:11563:9146":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"17:11579:9147":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"2:49084:6756":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"1:14320:11447":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"1:2170:6643":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"2:47849:2211":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"16:5498:7999":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"2:3824:7007":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"17:12183:9263":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"1:11202:6922":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"2:24393:10157":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:10450:14172":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"2:49935:6427":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:24431:42498":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"17:11409:9110":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"17:13785:9716":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"5:4036:8530":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"12:1183:7851":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"2:48887:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"15:269:7877":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"6:6229:11309":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"1:15749:1983":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"16:7684:7958":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"5:444:2182":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"5:3395:6642":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"17:11725:9173":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"17:9786:8748":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"2:2748:580":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:50021:6373":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"2:24302:7336":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"6:5982:11189":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"12:2404:64833":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"1:5560:6534":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:50608:10192":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"17:12585:9344":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"16:6012:7945":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"1:10367:58492":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"2:46039:7010":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"12:2040:6643":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"21:449:2107":{"crate_id":21,"path":["unicode_bidi","Paragraph"],"kind":"struct"},"1:7436:6779":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"1:1485:6644":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"2:53795:10214":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"2:5184:7352":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"6:6080:11236":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"1:1075:6638":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"17:12716:9366":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"2:11638:6431":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"5:8240:63402":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"5:1719:6691":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"16:2839:8206":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"2:3659:7114":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"12:2280:6701":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"1:2405:8806":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2:46867:7083":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"18:668:8411":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"17:12417:9318":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"1:12019:6683":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"6:4148:10833":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"2:10536:109":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"17:13138:9533":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"1:783:8579":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"1:3443:6597":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"16:2883:8226":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"17:11628:9156":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"1:1431:6688":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"2:46634:6373":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:2842:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"21:422:2105":{"crate_id":21,"path":["unicode_bidi","InitialInfo"],"kind":"struct"},"18:152:8737":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"6:4509:10955":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"2:24890:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"17:11314:8366":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"12:1162:7850":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"12:971:6697":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"1:6484:11230":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"5:5388:200":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:10493:134":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"16:2959:8209":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"12:750:6642":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"1:11133:6905":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"16:7782:7955":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"1:14957:6727":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"5:1518:6701":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"2:13327:6404":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"6:6931:11352":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"1:10377:6830":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"2:3501:7043":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"2:3160:229":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"2:46153:195":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:10594:6858":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"5:5910:6408":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"1:2958:6859":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"17:9930:64838":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"2:23121:6522":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"0:138:1599":{"crate_id":0,"path":["idna","domain_to_ascii"],"kind":"function"},"17:13859:9737":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"5:8297:6294":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"2:22849:63353":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"5:383:7648":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"2:3454:7026":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"12:856:6690":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"17:13293:9567":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"2:46790:8551":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"9:692:7720":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"6:4067:10794":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:52379:7257":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2:46609:6371":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"18:621:8933":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"5:3905:8530":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"6:1740:10670":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"12:952:6696":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"16:7025:7939":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"2:49063:6995":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"2:8346:6617":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:12499:8584":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"22:392:2162":{"crate_id":22,"path":["unicode_normalization","quick_check","IsNormalized"],"kind":"enum"},"2:52649:7219":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"17:13404:9594":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"17:9275:8632":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"17:10586:8762":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"16:6060:7987":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"2:57897:10222":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"16:5348:7991":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"2:49987:6412":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"16:5998:7966":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"1:10728:6801":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"2:47858:42719":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"2:25055:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"17:11671:9167":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"17:12687:9363":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"17:13557:9639":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"16:5639:8003":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"6:4340:10883":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:49713:6429":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"2:46743:7489":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"5:5488:6578":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"5:3948:6605":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"5:8449:11365":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"17:10015:9036":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"2:13094:6411":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:10356:6821":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"2:56549:237":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"5:3838:6688":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"17:9756:64844":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"2:50701:7108":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"16:6858:8251":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"16:7090:8039":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"17:11256:9099":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"2:10482:205":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"2:23261:7191":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"2:56536:237":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:3795:7482":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"17:10445:8990":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"17:10104:8380":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"22:0:1615":{"crate_id":22,"path":["unicode_normalization"],"kind":"module"},"6:4308:10869":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"1:2191:6647":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"17:9466:8640":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"16:7200:7965":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"16:5605:8002":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"17:11769:9190":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"6:4464:10941":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"6:1727:10667":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"1:1533:6698":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"16:3770:9783":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"22:217:1817":{"crate_id":22,"path":["unicode_normalization","quick_check","is_nfc"],"kind":"function"},"11:54:7840":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"6:4315:10870":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"17:11603:9151":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"12:1238:7853":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"2:23072:7267":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"2:46905:7066":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"21:402:2103":{"crate_id":21,"path":["unicode_bidi","Direction"],"kind":"enum"},"1:11884:6671":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"6:6243:11318":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"16:2772:8232":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"1:15751:1985":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"16:5273:8632":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"6:4270:6921":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"1:10456:6657":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"6:5186:10998":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:50030:6371":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:48094:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"2:13530:109":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"18:169:8740":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"1:1418:6642":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"1:10650:6603":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"5:3105:63496":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"2:11404:6429":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:8403:8798":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"9:776:7766":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"2:23396:6522":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:11128:6904":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:3151:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"18:885:8404":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:46173:198":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:10587:6547":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"17:13180:9545":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"2:24923:6849":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"6:4208:10845":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"6:6943:11354":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"1:696:6820":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:13332:6402":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:23108:7270":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"16:2733:8183":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"6:6007:11207":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:5582:6542":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"2:10533:109":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"17:13817:9731":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"1:14975:6734":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"1:4370:6618":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:11666:7403":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"16:7323:7969":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"2:5048:6482":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"2:11447:6411":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"6:4416:10917":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"14:11:10055":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"2:50130:7143":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"2:32584:7504":{"crate_id":2,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"2:51947:7218":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:9648:8579":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"16:6050:8015":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"5:2843:7688":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"1:1152:10225":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"18:754:64848":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"17:2484:50443":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"6:580:10509":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:4:981":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"15:0:1956":{"crate_id":15,"path":["addr2line"],"kind":"module"},"6:5398:11110":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"22:382:2150":{"crate_id":22,"path":["unicode_normalization","decompose","Decompositions"],"kind":"struct"},"1:10582:6856":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"1:14569:6786":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"2:49671:6419":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"2:50428:7430":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"2:3462:7030":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"2:49591:7411":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"6:5998:11201":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:9503:2214":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2:24318:8683":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"2:2845:6401":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"17:9948:8751":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"2:52044:10198":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"12:472:8781":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"17:13747:9707":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"12:2052:6645":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"18:790:8396":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:6650:6519":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"16:6342:8024":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"23:1036:8438":{"crate_id":23,"path":["tinyvec","tinyvec","TinyVecDrain"],"kind":"enum"},"1:15762:1994":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"1:10617:129":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"1:11020:6558":{"crate_id":1,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"2:48388:7492":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:6344:6530":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"17:13233:9557":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"1:1441:6294":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:51346:7247":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:46239:7480":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"18:857:8402":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"17:11031:50359":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"2:49817:6431":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"16:7063:8037":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"6:1621:10597":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"17:10610:8763":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"1:5520:6537":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"9:963:7784":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"2:3812:137":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:9254:11616":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"17:12892:9382":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"5:3114:63493":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2:49657:6421":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"6:4434:10926":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"5:2376:7703":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"5:8403:7488":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"14:250:10062":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"2:46820:7078":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"9:603:8675":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"1:11985:6935":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:24497:7472":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"6:521:10472":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"12:1203:7852":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"2:47968:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"16:7247:7981":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"12:2045:6644":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"2:37894:7055":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"1:11844:8707":{"crate_id":1,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"2:53703:10210":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:14872:6794":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"1:13689:59192":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"2:23145:7193":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"1:10846:6617":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:39050:6790":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"16:3494:8955":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"1:15744:1979":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"2:51871:7229":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"16:7826:7280":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"16:2754:8199":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"2:23350:6522":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"2:46278:7127":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"16:6630:8243":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"17:10530:9046":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"16:3297:8270":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"1:11364:6757":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:48774:133":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"2:22872:63352":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"6:1544:10550":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:2900:183":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"17:9796:64839":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"2:2376:6808":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"6:6908:11346":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"2:37870:178":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"1:11341:6756":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"6:5274:11046":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"2:48136:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:14118:187":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"17:11956:9226":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"1:5285:6909":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"6:5378:11102":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:5194:6483":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"23:830:8435":{"crate_id":23,"path":["tinyvec","slicevec","SliceVecDrain"],"kind":"struct"},"6:4402:10913":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"17:10058:8384":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"6:5433:11125":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:2867:104":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"1:14927:6725":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"1:13673:6781":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"12:777:6294":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"21:414:2104":{"crate_id":21,"path":["unicode_bidi","ParagraphInfo"],"kind":"struct"},"17:11822:9204":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"2:4835:102":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"17:9259:8631":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"6:4256:10849":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"1:10634:118":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"16:6331:7869":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"6:4277:10850":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"0:0:1616":{"crate_id":0,"path":["idna"],"kind":"module"},"2:51993:7222":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:1017:6846":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"17:9706:8746":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"17:13602:9649":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"6:3877:10685":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:48346:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"16:5443:7997":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"13:0:1948":{"crate_id":13,"path":["std_detect"],"kind":"module"},"1:11892:6294":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"17:11713:9172":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"2:49917:6426":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"18:744:64847":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"2:51476:7252":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"17:13361:9586":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"17:12620:9356":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"5:8344:6650":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"2:49521:7407":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:46663:6376":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"2:8167:7003":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"2:50616:190":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"5:1502:6699":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"5:6498:224":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"12:1256:6702":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"2:8844:157":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"16:5698:8007":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"2:9127:7001":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:5745:6972":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"17:11653:9158":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"2:46937:7069":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"6:1662:10628":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"17:9004:50353":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"2:2946:184":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"0:140:1612":{"crate_id":0,"path":["idna","domain_to_unicode"],"kind":"function"},"2:5239:7353":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:15755:1987":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"5:1626:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"17:13472:9616":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"2:52585:7234":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:12038:6714":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"2:3355:218":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:10382:6844":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"1:11898:6674":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"1:9558:8578":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockWriteGuard"],"kind":"struct"},"1:8426:6927":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"2:51324:7259":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"6:3920:10713":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:11680:7404":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"17:10291:8341":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"16:7100:8040":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"1:11224:11217":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"17:13463:9613":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"2:10771:142":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"5:1547:6702":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"2:56166:7275":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"2:3818:7005":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"6:1600:10583":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:3479:6653":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:4486:2092":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"17:9326:8365":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"2:74:1438":{"crate_id":2,"path":["core","u32"],"kind":"module"},"1:3084:6862":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"16:7792:7984":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"6:4179:10843":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"6:6902:11345":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"5:853:108":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"1:10931:6552":{"crate_id":1,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"2:53718:10211":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"17:9539:8326":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"5:8466:7556":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"1:14381:6588":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"6:1531:10544":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"16:4803:9802":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"1:5715:6969":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"17:10198:9042":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"1:9381:8575":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"17:11689:9168":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"1:1636:6700":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"1:10604:6548":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"2:46727:7488":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:46656:6375":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"6:4526:10963":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"17:13016:9485":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"1:15750:1984":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"12:0:1954":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"2:47782:1783":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:52615:7237":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"12:940:6695":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"2:3085:6522":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"2:25022:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"2:11652:6430":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"17:11547:9141":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"17:10874:9085":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"17:13147:9534":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"23:806:8521":{"crate_id":23,"path":["tinyvec","slicevec","retain","JoinOnDrop"],"kind":"struct"},"1:15152:6909":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"2:50485:6720":{"crate_id":2,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"2:24447:42507":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"17:13155:9535":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"2:10781:146":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"1:10435:14170":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"6:5178:10996":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"17:13573:9642":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"5:4308:8530":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"6:672:43496":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"17:12674:9362":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"1:13853:8585":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"2:51577:7232":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"17:10166:9041":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:47273:8803":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:10966:6554":{"crate_id":1,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"1:8433:6929":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"2:10821:6994":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"5:1684:6294":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"5:7943:8549":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"1:8275:6673":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"1:2441:8807":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"23:1210:7289":{"crate_id":23,"path":["tinyvec","arrayvec","TryFromSliceError"],"kind":"struct"},"2:4866:7266":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:10355:6522":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"16:5902:8012":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"2:51280:10193":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2:3353:6278":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"1:15758:1990":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"18:766:8945":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"16:3199:8214":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"12:895:7842":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"6:565:10500":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"18:829:8400":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"2:10004:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:6610:7067":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:7980:8561":{"crate_id":1,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"2:9131:7002":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"2:5315:405":{"crate_id":2,"path":["core","char"],"kind":"module"},"2:12742:7549":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"5:3462:6648":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"5:8209:6294":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"1:1496:6692":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"1:6746:6515":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"6:5582:11177":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"1:1500:6693":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"17:10788:9083":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"6:1576:10566":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"17:10775:8764":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"16:7110:8041":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"2:47934:6294":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"1:2174:6644":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"12:2253:6699":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"6:4332:10879":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"1:7714:6845":{"crate_id":1,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"2:46557:7309":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"6:6896:11344":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"17:10048:9038":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"1:10733:6802":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"1:5737:6971":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"17:12607:9355":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"9:996:7785":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"14:47:10055":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"1:11170:6552":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"12:764:6688":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:10540:119":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"2:10554:6473":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"16:2792:7933":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"6:5204:11011":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"5:3825:6642":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:49604:7412":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:10156:8953":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"1:15764:1996":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"16:6595:7961":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"16:5289:7946":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"16:4871:9804":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"5:3106:11363":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"18:820:8399":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"1:5161:6902":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"16:0:1957":{"crate_id":16,"path":["gimli"],"kind":"module"},"2:2166:579":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"12:432:7855":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"1:1645:6701":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"2:49512:7406":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"17:10390:8348":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"2:51454:7248":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"17:13873:9739":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"1:1475:6643":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"16:5745:8009":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:50321:6434":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"16:4439:9791":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"17:12482:9326":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"6:527:10475":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:53397:7255":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:10905:6594":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"6:4075:10799":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:50093:7139":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:7294:119":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"17:13247:9561":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"1:1510:6695":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"6:1526:10542":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"16:7184:8256":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"17:10211:8756":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"5:1710:6690":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"17:13196:9548":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"16:5685:8006":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"6:6034:11217":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"1:5643:6966":{"crate_id":1,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"1:8590:162":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"16:4599:9795":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"2:3600:131":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"2:5122:7347":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:14153:10153":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"17:10304:8340":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"17:13774:9715":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"17:11305:9102":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"2:47943:178":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"2:0:489":{"crate_id":2,"path":["core"],"kind":"module"},"16:2981:8220":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"16:7868:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"1:15726:58493":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"2:13378:7142":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:3102:6868":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"22:119:1816":{"crate_id":22,"path":["unicode_normalization","lookups","is_combining_mark"],"kind":"function"},"2:48510:6469":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"6:3883:10686":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:24857:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"1:1132:2091":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"5:0:278":{"crate_id":5,"path":["alloc"],"kind":"module"},"12:2392:10456":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"17:10318:8352":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"1:6646:6516":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"2:10546:6470":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:2955:6857":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:49578:7078":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"17:10082:8378":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"16:7449:7956":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"17:13584:9646":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"2:10550:189":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"1:11999:6815":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"2:23738:19416":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"16:547:8190":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"17:9087:50356":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"5:3960:7677":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:51923:7236":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:15769:2001":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"17:681:8953":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"2:49863:6424":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:15071:6559":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"17:10962:9092":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"16:6141:8019":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"2:47253:6618":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:52799:7243":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:4848:6776":{"crate_id":1,"path":["std","net","ip","display_buffer","IpDisplayBuffer"],"kind":"struct"},"2:23405:7215":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"2:3365:6279":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"2:2271:7120":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"12:2059:6646":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"1:8525:6939":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"2:52145:10201":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"17:10068:8350":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"1:8076:6846":{"crate_id":1,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"1:1190:14174":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"5:8356:6706":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"1:4063:6620":{"crate_id":1,"path":["std","io","readbuf","ReadBuf"],"kind":"struct"},"5:6775:7628":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"21:124:1814":{"crate_id":21,"path":["unicode_bidi","char_data","bidi_class"],"kind":"function"},"2:14390:201":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"1:5867:6911":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"16:7415:7968":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"1:10912:6415":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"16:3340:8198":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:48801:107":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"2:47867:188":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"17:12282:9279":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"6:4287:10857":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"6:3933:10723":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"16:7355:7948":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"2:2262:7119":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"5:7473:6294":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"6:4410:10916":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"5:1760:7681":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"1:13177:6916":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"2:5004:7345":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:10980:6556":{"crate_id":1,"path":["std","net","ip","IpAddr"],"kind":"enum"},"17:13271:9563":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:47875:205":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"17:12157:9260":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"13:121:48672":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"5:1072:6642":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"5:6739:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"17:13369:9588":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"1:13342:8810":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"2:11175:214":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"5:7547:8530":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:52225:7262":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"23:1054:8439":{"crate_id":23,"path":["tinyvec","tinyvec","TinyVecSplice"],"kind":"struct"},"6:6153:11259":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"9:1020:7786":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"2:51725:7249":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"2:53756:10213":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"17:12700:9364":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"2:52539:7230":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"2:24281:10154":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"17:13129:9529":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"5:984:7579":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"14:56:9125":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"2:3436:7020":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:23944:63324":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"17:10422:8758":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"16:6931:8254":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"19:0:996":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"2:3603:132":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"16:3478:8218":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"1:10954:6553":{"crate_id":1,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"5:1751:194":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"17:12237:9271":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"5:1276:7683":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"1:8626:10234":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"6:5288:11047":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"6:4532:10965":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:49452:7402":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"17:11181:8646":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"2:47057:7077":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"16:7309:7951":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"12:979:6698":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"2:50448:7436":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"24:0:2139":{"crate_id":24,"path":["tinyvec_macros"],"kind":"module"},"2:10552:6472":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"5:6562:6643":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"5:5948:8539":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"17:12360:9306":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"1:5158:6901":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"16:6980:8035":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"5:4017:6644":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"17:9587:64845":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"2:46994:7073":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"5:4665:8533":{"crate_id":5,"path":["alloc","collections","vec_deque","spec_extend","spec_extend","WrapAddOnDrop"],"kind":"struct"},"17:11234:8327":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"2:51679:7261":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:10895:6593":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"17:10801:8299":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"1:14325:6547":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"2:32578:6743":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"9:722:7721":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"1:6224:6513":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"5:4372:6688":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"2:51901:7233":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:3793:6804":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"1:14683:8586":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"1:14705:8588":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"1:5526:6538":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"1:6246:6510":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"2:52303:7250":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"16:6099:8017":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"5:2266:8532":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"2:4144:7133":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"2:49055:8696":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"16:5948:8205":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"1:7450:6780":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"16:4381:9789":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"17:11985:9231":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"17:13495:9624":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"17:10028:8752":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"2:3474:6652":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:11246:6517":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"2:5117:7346":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"2:53505:7238":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"12:815:6693":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"1:11814:6786":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"17:13257:9562":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:48304:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"17:13215:9549":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"6:4098:10811":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:46129:194":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"22:429:2164":{"crate_id":22,"path":["unicode_normalization","replace","Replacements"],"kind":"struct"},"9:0:1951":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"5:8532:6644":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"2:48835:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"1:10874:6590":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"17:10831:8352":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"17:12048:9244":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"16:5516:8188":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"1:3086:6863":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"1:3409:6602":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"2:23932:6569":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"16:6907:8034":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"2:23198:6522":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"6:6250:11321":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"1:11291:6746":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"1:14556:6637":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"17:13452:9609":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"6:513:8784":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"17:542:7920":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"17:10545:8759":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"9:1075:7787":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"22:298:2165":{"crate_id":22,"path":["unicode_normalization","stream_safe","StreamSafe"],"kind":"struct"},"17:12383:9315":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"1:8197:7676":{"crate_id":1,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"17:12634:9357":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:48750:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"2:3495:7040":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:2167:6294":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"6:5311:11060":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"17:13522:9631":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"6:4028:10777":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"5:7306:6643":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"2:3807:225":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"2:49094:8697":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"2:48052:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:49835:6430":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"17:10147:9040":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"2:22870:63348":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"6:5216:11015":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"6:6671:11333":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"6:4110:10817":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:46217:199":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"17:12170:9261":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"5:8224:6643":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"2:2936:177":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"2:8606:7101":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"16:6468:8027":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"16:4903:9805":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"14:0:1955":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"1:10738:6606":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"17:13352:9585":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"17:11142:9098":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"16:6482:8240":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"23:0:2138":{"crate_id":23,"path":["tinyvec"],"kind":"module"},"17:9636:8744":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"5:8372:101":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"6:1558:10555":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"1:3100:6867":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"6:6856:11343":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"18:704:8934":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"16:3077:8269":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"17:9836:64840":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"17:8849:8325":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"17:12512:9331":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"2:51525:7240":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"17:12469:9325":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"1:5753:6974":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"16:3155:8212":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"6:1712:10658":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:1654:6702":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"6:1680:10640":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:47037:6594":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"6:1694:10651":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"6:4373:10902":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"17:9716:64836":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"6:607:10523":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"2:4968:7344":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:10493:7692":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"2:3425:7015":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"16:6190:8021":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"17:9240:8279":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"2:39090:6593":{"crate_id":2,"path":["core","error","Chain"],"kind":"struct"},"2:47926:6688":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"1:8695:6454":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"2:46545:6381":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:2464:8808":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:24370:7332":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"6:3896:10695":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"6:1764:10679":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"12:1147:6701":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"1:15767:1999":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"12:1682:7864":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"6:5478:11138":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"21:393:8925":{"crate_id":21,"path":["unicode_bidi","prepare","IsolatingRunSequence"],"kind":"struct"},"1:8847:6936":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"16:3461:8219":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"17:13481:9617":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"1:3839:205":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"16:3402:7934":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"16:4271:9786":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"6:545:10483":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"16:3129:8221":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"16:5530:8000":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"2:14339:7444":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:13321:6405":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"17:11754:9184":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:49881:6425":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:14552:10243":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"1:13536:6792":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"17:9131:50357":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"2:24038:6522":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"2:53654:10207":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"7:0:1484":{"crate_id":7,"path":["unwind"],"kind":"module"},"16:7379:7970":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"6:6114:11243":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"1:15743:1978":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:2173:10148":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"1:12009:6806":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"2:7906:6300":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"2:50456:7431":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"16:5959:7938":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"16:7208:8046":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"6:5488:11140":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:46530:6373":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"2:46966:7086":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"2:51632:10197":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"16:5326:7990":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"1:14338:10324":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"16:3007:8210":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"5:8254:6294":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2:51755:7253":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:6648:6518":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"17:12250:9272":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:52122:10200":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"23:103:8423":{"crate_id":23,"path":["tinyvec","array","Array"],"kind":"trait"},"17:11514:8647":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"2:49552:7410":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"6:4356:10891":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"23:602:8429":{"crate_id":23,"path":["tinyvec","arrayvec","ArrayVecIterator"],"kind":"struct"},"5:7351:8530":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"2:13020:7424":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"17:2543:8367":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"2:4811:6996":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:15759:1991":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"1:15757:1989":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"17:12302:9280":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:53257:7251":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:3597:130":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"17:13938:9757":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"16:5668:8005":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"16:3103:8222":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"17:2512:8339":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:49294:7554":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"16:5460:7998":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"20:0:1588":{"crate_id":20,"path":["matches"],"kind":"module"},"18:896:8405":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:49102:8698":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:11486:7399":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"5:2005:6644":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"1:3497:6604":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"5:1533:6700":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"2:48768:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"1:4429:6549":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"12:2066:6647":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"17:10851:9084":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"1:894:6824":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"12:843:6689":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"6:533:10478":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"2:50005:6409":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"6:161:43163":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:51370:7239":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"16:3051:8268":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"5:4765:8535":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"1:11196:6903":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"16:7121:8042":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"17:12731:9370":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"17:11530:8651":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"17:13377:9590":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"6:586:10512":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"2:46312:6483":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"1:11086:58602":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"2:46305:7281":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"6:4516:10958":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"6:1733:6915":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"6:4392:10910":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"5:4281:6643":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"2:3655:6708":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:46836:7079":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"12:1784:8528":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"2:10483:2092":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"1:9426:61324":{"crate_id":1,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"5:8232:7582":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"1:1504:6694":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"6:4346:10885":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"16:7721:7959":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"2:5268:6284":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"17:9033:50354":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"1:4511:6592":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"5:2396:7685":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"2:48531:6471":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"6:1626:10599":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"17:13975:9764":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"2:50236:7149":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:10489:10243":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"17:11784:9196":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"2:2487:7272":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:15754:1986":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"17:3743:8296":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:24410:42506":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:11837:60818":{"crate_id":1,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"1:8926:2206":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"10:0:1952":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"16:5176:9808":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"2:46536:10176":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"6:5260:11035":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"16:3521:9780":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"2:7129:7085":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:24358:7331":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"6:1669:10632":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"15:230:7872":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"2:3388:2179":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"6:4474:10942":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:4459:6294":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"2:10220:7386":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"16:7659:8048":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"17:10571:8308":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"6:5390:11109":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:14426:141":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"1:13784:6782":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"16:4942:9806":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"6:4088:10804":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"17:1311:8385":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"5:69:7608":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"17:9988:50405":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"17:9183:8304":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"6:4055:10789":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:10643:9051":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"16:4573:9794":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"2:3836:7008":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"16:4689:9798":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"2:32592:63054":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"5:2328:7686":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"17:10925:9091":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"5:7714:7612":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"2:5676:14176":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2:51555:7228":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"6:3907:10703":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"7:38:48023":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"16:5396:7994":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"17:11742:9181":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"17:11457:9125":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"16:4351:9788":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"1:4234:6614":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"18:866:8403":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:21:673":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"1:11220:6629":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"2:10816:6651":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:4495:61178":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"1:2466:8809":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"6:6057:11235":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"17:10093:8379":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"2:46858:7080":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:53147:7231":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"2:5291:6486":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"22:418:2163":{"crate_id":22,"path":["unicode_normalization","recompose","Recompositions"],"kind":"struct"},"16:7768:7954":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"2:10548:6471":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"2:7992:7088":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"2:46195:197":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"2:46640:6374":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"18:729:64849":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:14510:6738":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"17:11130:8643":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"1:14300:6631":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"16:6026:7943":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"17:13735:9704":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"16:5869:189":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"17:10223:8284":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"6:4454:10935":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"1:5570:6539":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"1:15131:6902":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"6:4135:10829":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"2:3450:6719":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"17:10516:9045":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"2:53733:10212":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"5:3407:7572":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"17:10240:8275":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"6:5547:11152":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"6:5149:10972":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:51595:10196":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:50308:7153":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"17:12130:9256":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"17:11907:9212":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"2:22832:63320":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"17:12026:9235":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"17:10489:9044":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"17:12222:9268":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"2:46696:6379":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"17:13595:9647":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"17:10340:8344":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"2:46957:7070":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"17:12262:9273":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"1:11876:6642":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"2:3484:6654":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"17:11810:9201":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"6:1551:10552":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"6:5567:11166":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"6:4081:10801":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"17:11212:8329":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"18:774:8934":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"17:11701:9171":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:32404:7514":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"2:48010:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:15747:1981":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"2:46710:100":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"6:6665:11331":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"2:3467:7033":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"17:9746:8747":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"5:6759:7627":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"2:3726:7481":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:820:8579":{"crate_id":1,"path":["std","thread","local","os","Key"],"kind":"struct"},"16:3029:8211":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"17:294:8949":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"17:9826:8352":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"16:2861:8207":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"12:869:6643":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"2:10542:6468":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"16:7238:7967":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"1:3112:6873":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:46946:7084":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"5:844:223":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:53581:7223":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"18:739:8940":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"17:13612:9654":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"17:11354:8301":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"3:0:431":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"17:13345:9583":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"1:15223:58494":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"2:3375:6281":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"1:15214:8708":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"1:2695:180":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"17:12318:9285":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"1:1521:6696":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"16:3177:8213":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"16:5238:48777":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:49047:6707":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"6:4296:10862":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"6:571:10503":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"5:1663:6642":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"6:3981:10754":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"5:4694:236":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"16:5566:8001":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"17:13794:9718":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"17:12093:9251":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"2:14042:150":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:14374:118":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"2:3637:7268":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"6:4012:10772":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"16:5649:8004":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"2:23357:19397":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"9:809:6756":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"16:7079:8038":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2:3570:116":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"17:12646:9358":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"2:12766:6413":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"2:3148:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"6:1704:10657":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"16:7141:8044":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"1:10853:6619":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"21:297:2111":{"crate_id":21,"path":["unicode_bidi","level","Level"],"kind":"struct"},"2:46914:8792":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:11177:6970":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"16:4198:9785":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"2:4753:6578":{"crate_id":2,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"2:14223:62078":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"2:49623:7414":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"21:120:2115":{"crate_id":21,"path":["unicode_bidi","char_data","HardcodedBidiData"],"kind":"struct"},"6:3987:10756":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:15238:7881":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"16:6717:8033":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"2:50464:121":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"1:2554:2090":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"2:48517:6468":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:9130:6567":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"2:48262:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"12:114:8776":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"1:11423:6759":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"2:13241:6420":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:6106:6920":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"6:6979:11361":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"6:6120:11245":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:25121:7458":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"2:14329:7137":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"6:6937:11353":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:49683:1782":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"5:2284:7575":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"1:15715:14175":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"2:48783:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"2:49633:7415":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:14942:6726":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"1:11917:6675":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"17:10464:8368":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"17:13029:9492":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"1:10642:6880":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:3356:217":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"2:2198:1052":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"6:5301:11053":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"1:14778:6785":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"1:14391:58604":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"1:1149:10223":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"6:626:10533":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"1:8961:10234":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"16:5257:8631":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"17:11102:50360":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"16:7702:7957":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"16:2813:8225":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"5:8270:7568":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"2:50497:7501":{"crate_id":2,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"2:23208:6570":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:11037:6775":{"crate_id":1,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"2:2041:6578":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"1:4447:6587":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"6:6027:11213":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:3505:7045":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"17:13549:9638":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"12:2412:10459":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"17:13331:9581":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"17:9579:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"16:6549:7964":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"6:5455:11132":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"8:0:1950":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"2:49541:7409":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"2:51777:7256":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"9:749:7722":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"2:49613:7413":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"17:9517:6415":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"1:3841:127":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"2:24509:7471":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"2:3509:7047":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"17:2314:8343":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"2:5113:6484":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"17:510:8951":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"2:47918:6642":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"1:5432:6636":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"1:5766:6975":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"2:23019:7188":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"18:849:8401":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"1:1449:6689":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"2:25490:7301":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"16:3686:9781":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"17:13763:9711":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"2:9505:2212":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"2:3430:7017":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"17:11002:8772":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:48220:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"6:4218:10846":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"17:11433:9124":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"1:1622:6699":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"17:11474:9130":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"1:11768:6782":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"21:315:127":{"crate_id":21,"path":["unicode_bidi","level","Error"],"kind":"enum"},"2:47228:8797":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"17:10435:8286":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"1:1491:6691":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"1:11066:8706":{"crate_id":1,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"2:4823:6997":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"17:11937:9221":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"2:47026:7081":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"16:7264:194":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"6:1588:10575":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:13989:6614":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"5:981:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"1:15768:2000":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"2:5499:6367":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"2:52091:10199":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:2403:8805":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"12:1103:6699":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"18:720:8935":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"5:8549:7609":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"6:3966:10747":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"5:4509:6642":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"1:11188:6914":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"21:10:2110":{"crate_id":21,"path":["unicode_bidi","data_source","BidiDataSource"],"kind":"trait"},"17:13840:9732":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"1:7073:10232":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"16:6075:7947":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"17:10937:8769":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"1:15742:1977":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"2:46113:196":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:4195:6612":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"16:6433:8026":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"17:12921:9402":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"1:2525:2089":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"2:47006:7074":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"6:5419:11122":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"14:189:10055":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"6:6925:11351":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:3489:7032":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"2:47016:7075":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"17:10187:8755":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"2:2905:124":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"16:4660:9797":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"1:1305:143":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"1:15763:1995":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"6:4538:10968":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"1:12497:6856":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"17:8902:50351":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"16:6533:8238":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"1:11774:181":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"17:10814:8300":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"2:47235:6454":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"2:53628:10205":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:10009:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"6:6016:11208":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"16:5941:8014":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:2248:7115":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:15710:8709":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"2:8639:136":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:11826:58612":{"crate_id":1,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"6:6268:11324":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"12:162:7854":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"9:157:7737":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"2:49731:6428":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:7582:6789":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"2:24476:11367":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:12014:6807":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"16:5427:7996":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"6:4038:10783":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"23:745:8434":{"crate_id":23,"path":["tinyvec","slicevec","SliceVec"],"kind":"struct"},"1:2961:6586":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"16:7295:7953":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"6:4230:10847":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"16:6604:8031":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"17:11013:8773":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"2:49072:146":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"16:5303:7989":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:52349:7254":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"2:8419:6744":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"17:10476:8370":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"1:6904:2201":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"2:25088:164":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"18:712:7055":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"16:4743:9800":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"17:11381:9106":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"17:9396:8638":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"5:8291:6294":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"2:49298:7553":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"17:12758:9373":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"17:4008:8766":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:56601:237":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:50460:7432":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"17:13721:9698":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"6:4116:10820":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"1:10466:6703":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"22:344:1818":{"crate_id":22,"path":["unicode_normalization","UnicodeNormalization"],"kind":"trait"},"17:10975:8771":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"16:4495:9793":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"6:4485:10948":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"17:11282:50361":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"17:13887:9746":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"16:7051:8036":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"18:678:142":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"1:13410:6798":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"16:5721:8008":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"6:4321:10873":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:47799:6688":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:12983:7423":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"17:13515:9630":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"17:1236:8754":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"12:2032:6642":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"1:13711:6783":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"17:10115:8381":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"1:14358:129":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"16:6656:8245":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"2:24791:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"6:5229:11016":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"16:7169:7963":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"2:48178:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"6:4198:10844":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"6:1634:10604":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"5:7048:7569":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"2:47791:6642":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"5:3402:6646":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"1:12160:8808":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"2:53005:7263":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"17:12015:9234":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"2:46066:7269":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"2:47807:6294":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"1:5438:6634":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"2:50436:7435":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"17:13539:9635":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"17:12003:9232":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"17:9160:8328":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"2:46271:7009":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"6:5426:11124":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"16:6173:8020":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:50444:7438":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"9:900:10462":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"2:3513:7049":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"6:601:10520":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"6:1748:10674":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"17:11068:8305":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"2:8602:7102":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:8477:6930":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"16:6873:2210":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"2:6870:62241":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"2:32644:63052":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"1:14699:8587":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"17:13306:9573":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"1:10577:6633":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"6:4379:10905":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"6:6129:11248":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"17:10949:8770":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:9124:6386":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"2:3594:2180":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:50689:7110":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"16:5784:8010":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"17:11591:9150":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"2:3357:106":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"2:50651:7442":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"2:23202:6568":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"16:3743:9782":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"16:3221:8215":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"6:6914:11347":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"17:13917:9754":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"1:2953:128":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"2:46677:6378":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"17:13660:9691":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"1:900:6825":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"17:10266:8350":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"2:50273:7150":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:46670:6377":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"12:787:6692":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:46617:6372":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"14:194:48700":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"6:4242:10848":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:50432:7433":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"17:12117:9253":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:53680:10209":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"2:9504:2213":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:7228:185":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:28300:7113":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:15761:1993":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"1:8712:6949":{"crate_id":1,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"16:3314:8197":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"12:559:143":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"2:13043:7425":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:4504:6589":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"1:11433:6642":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"17:9064:50355":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:46985:7072":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"12:2072:6648":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"9:1056:7779":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"2:46357:7289":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:10862:6588":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"16:5855:8011":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"5:1673:6688":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"1:2185:6646":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"2:3359:220":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"2:53599:10202":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:10918:6429":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:56575:237":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"5:5166:661":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"5:6340:7612":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"2:10215:7385":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:47047:7076":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"6:6135:11249":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"2:39086:7692":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"17:12573:9342":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"17:10558:9048":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"21:435:2106":{"crate_id":21,"path":["unicode_bidi","BidiInfo"],"kind":"struct"},"16:6089:8016":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"6:6214:11302":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:24758:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"2:50144:7146":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:12298:8557":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"23:452:8427":{"crate_id":23,"path":["tinyvec","arrayvec","ArrayVec"],"kind":"struct"},"1:11182:6973":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"5:1740:6693":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"16:6381:7960":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"16:2905:8208":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"1:4157:6886":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:48524:6470":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:5574:6540":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"1:10407:6456":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:49503:7405":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:8760:6742":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"1:6482:11228":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"1:7919:6846":{"crate_id":1,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"16:6518:7962":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"1:14790:58608":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"1:8167:6846":{"crate_id":1,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"16:4316:9787":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"2:53665:10208":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"12:2398:10457":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:51424:7260":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"12:353:8777":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"1:7762:8561":{"crate_id":1,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"2:24385:10156":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:13992:6610":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"6:6967:11359":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"2:11166:6522":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"2:3154:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"0:20:1744":{"crate_id":0,"path":["idna","punycode","decode_to_string"],"kind":"function"},"12:2036:6294":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2:23407:7191":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"2:56562:237":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:13312:6403":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"2:50672:158":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:4402:6578":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"17:4157:8309":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"23:712:8433":{"crate_id":23,"path":["tinyvec","arrayvec_drain","ArrayVecDrain"],"kind":"struct"},"1:14816:11449":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"1:14835:6683":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"16:4716:9799":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"2:50012:6375":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"1:15766:1998":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"1:14798:6714":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"6:4440:10927":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"17:12543:9336":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"6:5541:11151":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:24139:7454":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:15748:1982":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"2:12165:7416":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"5:8389:7668":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"2:32744:63051":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"6:5366:11097":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"1:5512:6536":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"17:9958:64837":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"6:5974:11184":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"1:7719:59195":{"crate_id":1,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"6:5210:11014":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"1:8850:6810":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"1:14864:8703":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"16:4467:9792":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"11:46:10461":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"4:0:1949":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"2:12198:7417":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"1:9553:8577":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockReadGuard"],"kind":"struct"},"6:5405:11111":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"5:1055:7580":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"1:11946:6677":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"1:4273:6610":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"2:46928:7068":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"2:39126:6282":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"17:0:1958":{"crate_id":17,"path":["object"],"kind":"module"},"2:23733:7194":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"1:4197:6613":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"16:5362:7992":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"16:7369:7949":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"17:9561:8331":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"2:56523:237":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"7:85:48030":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"17:9431:8639":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"1:8261:202":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"6:5439:11128":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"15:248:7873":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"2:14:2066":{"crate_id":2,"path":["core","write"],"kind":"macro"},"17:12348:9304":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"0:22:533":{"crate_id":0,"path":["idna","punycode","decode"],"kind":"function"},"17:11085:8332":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"5:8262:194":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"2:46597:6383":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"6:3993:10759":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:57876:10221":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"9:27:7768":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"18:782:8934":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"17:607:8952":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"16:6490:8028":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"16:7637:8047":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"9:234:7745":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"16:5217:8200":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"1:0:1334":{"crate_id":1,"path":["std"],"kind":"module"},"17:10364:8342":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"5:1729:6692":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"23:515:8521":{"crate_id":23,"path":["tinyvec","arrayvec","retain","JoinOnDrop"],"kind":"struct"},"18:136:8736":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"17:8929:50352":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"1:1157:14173":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"6:4005:10768":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"0:44:599":{"crate_id":0,"path":["idna","punycode","encode"],"kind":"function"},"17:13037:9494":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"5:8455:216":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"12:399:7856":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"1:9520:6896":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"1:1041:6533":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"5:6851:6578":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"1:4160:6887":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"17:11922:9216":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"1:14766:6784":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"18:694:8412":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"17:13755:9710":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"2:3415:6717":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"11:0:1953":{"crate_id":11,"path":["adler"],"kind":"module"},"1:11450:6762":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:14027:138":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"6:1567:10560":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"1:11786:6784":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"16:6643:8244":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"6:618:10528":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"1:6577:6513":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"6:4061:10791":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"5:3110:63494":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:56588:237":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:5984:6919":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"6:3960:10746":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:46715:7487":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"18:0:1959":{"crate_id":18,"path":["memchr"],"kind":"module"},"1:11381:6758":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"2:3518:7052":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:7416:6778":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"17:13708:9692":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"17:12406:9316":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"1:9414:61326":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"1:15745:1980":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"16:2937:8231":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"5:3366:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"5:7736:7613":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"17:10988:9093":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:13059:7426":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"2:48871:6467":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"9:927:48127":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"2:50287:7151":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"17:13899:9748":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"17:13565:9641":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"12:379:7857":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"6:4020:10774":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:11379:6688":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"5:8432:7670":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:5697:7282":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"17:9206:50358":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"17:12209:9266":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"2:46800:10184":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"17:12496:9329":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"17:12442:9321":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"17:11615:9154":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"21:381:64855":{"crate_id":21,"path":["unicode_bidi","explicit","OverrideStatus"],"kind":"enum"},"1:11800:6785":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"6:4386:10907":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"17:13428:9602":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"16:3576:8959":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"2:8712:1787":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"18:801:8397":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"16:4840:9803":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:8652:2181":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"16:6557:8030":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"18:651:8406":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"5:8200:7564":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"6:5447:11130":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"23:1122:8440":{"crate_id":23,"path":["tinyvec","tinyvec","TinyVecIterator"],"kind":"enum"},"6:6954:11358":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"16:7155:8045":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"6:6643:11330":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"17:299:8950":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"2:10688:10151":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"5:7874:235":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"17:8954:8306":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"18:637:8934":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"1:11930:6676":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"2:52461:7242":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"5:7918:8544":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"16:7471:7944":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"17:13908:9752":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"1:15093:6901":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"14:216:48706":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"13:233:8660":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"17:11945:9223":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"1:10217:8580":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"5:1701:6689":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"17:13073:9523":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"5:7205:8544":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"1:4163:6888":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"2:3255:127":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"17:13440:9608":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"2:22804:7055":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"2:11559:6428":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"9:469:8661":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"16:6159:7950":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"5:5962:8542":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"2:50115:7140":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"2:4078:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"1:2196:6648":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"1:11003:6557":{"crate_id":1,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"2:51614:7217":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"17:9676:64842":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"1:2698:179":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:51969:7221":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"17:12527:9335":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"14:231:7559":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"1:7579:6787":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"17:11017:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"16:3366:8223":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"1:10473:15183":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"6:4493:10950":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"5:5861:8530":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"2:48813:127":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"2:50209:7148":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"17:12957:9433":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"2:46876:7063":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:8268:6672":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"6:4127:10824":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"0:42:1790":{"crate_id":0,"path":["idna","punycode","encode_str"],"kind":"function"},"2:46298:7280":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"1:13323:8807":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"2:24989:165":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:53608:10203":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"14:244:10060":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"5:2619:7689":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"2:24210:7455":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"16:4628:9796":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"1:9421:8576":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"2:53335:7235":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"17:13323:9578":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"5:3554:6644":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"2:53459:7220":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"17:13529:9632":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"17:10913:8767":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"17:12143:9056":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"16:6277:8022":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"1:15765:1997":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"16:6949:8255":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"2:46573:6380":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:11597:7401":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:22817:63320":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"17:10455:8369":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"1:6472:6538":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"1:15494:8589":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"2:50659:7443":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"5:3104:6348":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"17:11968:9228":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"2:3347:211":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"16:7281:7952":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"5:777:10136":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"1:7042:10232":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"6:4425:10920":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:4275:6611":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"2:46975:7071":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"12:2419:6650":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"21:0:1614":{"crate_id":21,"path":["unicode_bidi"],"kind":"module"},"2:3231:115":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"17:12431:9320":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"2:46896:7065":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:46845:6593":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"5:4709:8535":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"2:5248:6485":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"12:933:6694":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"1:11439:6761":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"0:139:1604":{"crate_id":0,"path":["idna","domain_to_ascii_strict"],"kind":"function"},"1:4771:6550":{"crate_id":1,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"16:5412:7995":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"2:3583:6596":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"6:4362:10894":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"17:10503:8371":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"2:8687:120":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"2:47750:176":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"1:1527:6697":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"6:1537:10547":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"17:13953:9758":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"6:88:43096":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"17:9883:64843":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"17:10127:8352":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"1:3322:6601":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"9:41:7769":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"18:837:6405":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:51300:10194":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:10242:8582":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"5:3441:7573":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"1:7519:6783":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"17:10622:8641":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"2:51392:7227":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"17:9646:64841":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"17:12196:9264":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"3:321:205":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:11122:6903":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"17:12557:9338":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"17:13507:9627":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"17:11335:8302":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"17:10407:8337":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2:47816:2210":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:49763:6433":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:14350:6858":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"5:8419:7669":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"17:9361:8637":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"16:6130:8018":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"2:46886:7064":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:10925:6422":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"2:10544:6469":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"2:3352:2178":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"1:7814:6846":{"crate_id":1,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"23:538:8428":{"crate_id":23,"path":["tinyvec","arrayvec","ArrayVecSplice"],"kind":"struct"},"1:10167:10325":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"2:13302:6270":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"6:3972:10749":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"16:3243:8216":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"16:5374:7993":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"1:5504:6535":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"2:53639:10206":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:32544:7479":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"6:1721:10664":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"6:1912:44470":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"17:11494:9140":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"16:7131:8043":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"16:6691:8032":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"1:15249:7881":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"1:6486:11232":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"5:8215:7581":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"6:612:10525":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"12:1121:6700":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"2:24483:7519":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"2:11524:7400":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"17:9920:8750":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"5:3428:6647":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"2:24956:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"18:811:8398":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"22:407:64860":{"crate_id":22,"path":["unicode_normalization","recompose","RecompositionState"],"kind":"enum"},"17:13281:9564":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"2:11355:6642":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"5:1909:8530":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"16:4775:9801":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"1:2370:601":{"crate_id":1,"path":["std","env"],"kind":"module"},"17:12660:9359":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"6:4142:10831":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"2:53619:10204":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:9505:6895":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"17:11640:9157":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"5:8477:7557":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"2:50452:7437":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"5:5609:7627":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"2:51825:7241":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"16:3265:8217":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"18:645:8409":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"1:11962:6678":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"5:5906:6407":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"17:10253:8278":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"17:12770:9380":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"21:323:1815":{"crate_id":21,"path":["unicode_bidi","char_data","tables","BidiClass"],"kind":"enum"},"2:3157:135":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:47262:8801":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:7464:6781":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:51494:10195":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:3420:6655":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"2:24824:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"17:13094:9528":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"2:50161:7147":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:24042:7192":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"23:965:8437":{"crate_id":23,"path":["tinyvec","tinyvec","TinyVec"],"kind":"enum"},"22:375:64859":{"crate_id":22,"path":["unicode_normalization","decompose","DecompositionType"],"kind":"enum"},"16:6504:8029":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:3890:7175":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"2:5723:781":{"crate_id":2,"path":["core","iter"],"kind":"module"},"0:4:1589":{"crate_id":0,"path":["idna","punycode"],"kind":"module"},"12:1881:145":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:3442:7012":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:14315:11445":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"9:686:7718":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"16:3908:9784":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"6:539:10480":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"17:11168:8644":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"1:15760:1992":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"2:49781:6432":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"2:50298:7152":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"16:6679:8247":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"17:11890:9206":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"17:9873:8749":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:6687:7082":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"17:10394:8338":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"6:5240:11024":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"6:4160:10842":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"1:6724:6520":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"2:47244:8799":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"17:10899:9087":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"6:4048:10786":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"1:7119:186":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"1:10658:6605":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"1:2179:6645":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"6:593:10515":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"6:634:10538":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"5:1152:8530":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"6:0:800":{"crate_id":6,"path":["libc"],"kind":"module"},"1:12490:128":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"2:49689:6416":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:12057:6715":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"5:3436:6645":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"5:3814:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"17:9291:8636":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:22851:63350":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"6:6184:11285":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:3458:7028":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:7402:6777":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"2:8643:151":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"12:1703:7865":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"2:46587:6382":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:3164:228":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"2:49996:6410":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"12:2269:6700":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"16:7754:8050":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"1:2035:145":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"1:6574:6630":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"2:3853:7174":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"16:4411:9790":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"16:7741:8049":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"6:157:43162":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"6:5293:11048":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"1:12528:10312":{"crate_id":1,"path":["std","sys","unix","fs","TimespecDebugAdapter"],"kind":"struct"},"1:11822:11444":{"crate_id":1,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"17:11797:9200":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"6:1606:10585":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"17:10136:8749":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"16:5887:8195":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"17:10598:9050":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"17:10039:9037":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"16:4975:9807":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"1:8175:6756":{"crate_id":1,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"2:3086:7105":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:14969:6733":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"1:4236:6615":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"16:6407:8025":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"16:6286:7870":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"17:10660:50543":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:50341:6435":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"6:6688:11342":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"17:13421:9601":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"19:117:10408":{"crate_id":19,"path":["panic_unwind","dwarf","eh","EHContext"],"kind":"struct"},"2:50598:201":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"6:5331:11076":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"18:611:8407":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"1:15756:1988":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:32940:7183":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"17:12455:9323":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"1:11109:10294":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"17:13167:9540":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"2:24334:8690":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"5:1256:8786":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"}},"external_crates":{"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"23":{"name":"tinyvec","html_root_url":null},"20":{"name":"matches","html_root_url":null},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"unicode_bidi","html_root_url":null},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"22":{"name":"unicode_normalization","html_root_url":null},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"24":{"name":"tinyvec_macros","html_root_url":null},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":18}