{"root":"0:0:2413","crate_version":"1.0.0","includes_private":false,"index":{"b:1:2719-0:254:2356":{"id":"b:1:2719-0:254:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32399:2712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:254:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2721:28162"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:796:28167":{"id":"5:796:28167","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13306:3073":{"id":"1:13306:3073","crate_id":1,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"4:12389:476","self::pattern":"1:12960:3271"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12966:3260","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:34:2412":{"id":"0:34:2412","crate_id":0,"name":"to_unicode","span":{"filename":"src/deprecated.rs","begin":[242,4],"end":[247,5]},"visibility":"public","docs":"[UTS 46 ToUnicode](http://www.unicode.org/reports/tr46/#ToUnicode)","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["domain",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"tuple":[{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"resolved_path":{"name":"Result","id":"1:42298:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Errors","id":"0:401:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:335":{"id":"0:335","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[458,20],"end":[458,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"1:2771:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:325:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:793-0:353:2569":{"id":"b:5:793-0:353:2569","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:789:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:353:2569","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:795:2557","5:796:28167","5:797:28168"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13396:32082":{"id":"1:13396:32082","crate_id":1,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:264:480":{"id":"0:264:480","crate_id":0,"name":"clone","span":{"filename":"src/deprecated.rs","begin":[132,9],"end":[132,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Config","id":"0:258:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2999-0:310:2379":{"id":"b:1:2999-0:310:2379","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:310:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3002:138","1:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:320":{"id":"0:320","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[434,20],"end":[434,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"1:2771:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:310:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:347:706":{"id":"0:347:706","crate_id":0,"name":"eq","span":{"filename":"src/uts46.rs","begin":[471,9],"end":[471,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ErrorPolicy","id":"0:340:2567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3247:3334-0:368:2573":{"id":"a:1:3247:3334-0:368:2573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3247:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:368:2573","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:3247:3334-0:189:2353":{"id":"a:1:3247:3334-0:189:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3247:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:189:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:368:2573":{"id":"0:368:2573","crate_id":0,"name":"ProcessingError","span":{"filename":"src/uts46.rs","begin":[502,0],"end":[512,1]},"visibility":"public","docs":"The failure outcome of [`Uts46::process`]","links":{"`Uts46::process`":"0:208:2564"},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:369:2574","0:371:2575"],"impls":["a:1:3212:247-0:368:2573","a:1:42260:3700-0:368:2573","a:1:3247:3334-0:368:2573","a:1:42259:3701-0:368:2573","a:1:32457:3337-0:368:2573","a:1:32398:237-0:368:2573","b:1:2719-0:368:2573","b:1:2989-0:368:2573","b:1:3828-0:368:2573","b:1:3004-0:368:2573","b:1:2993-0:368:2573","b:1:2999-0:368:2573","b:1:2716-0:368:2573","b:5:793-0:368:2573","b:23:483-0:368:2573","b:24:105-0:368:2573","0:373","0:374","0:183","0:379","0:381","0:378","0:376"]}}},"0:195":{"id":"0:195","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[577,0],"end":[581,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"compiled_data\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"1:3041:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:189:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:196:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2993-0:401:2358":{"id":"b:1:2993-0:401:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:401:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2999-0:401:2358":{"id":"b:1:2999-0:401:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:401:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3002:138","1:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2993-0:254:2356":{"id":"b:1:2993-0:254:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:254:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:22":{"id":"0:22","crate_id":0,"name":null,"span":{"filename":"src/deprecated.rs","begin":[143,0],"end":[153,1]},"visibility":"default","docs":"The defaults are that of _beStrict=false_ in the [WHATWG URL Standard](https://url.spec.whatwg.org/#idna)","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"1:3041:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:258:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:23:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:348":{"id":"0:348","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[471,20],"end":[471,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"1:2771:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:340:2567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:5965-0:401:2358":{"id":"b:5:5965-0:401:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"1:10394:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32399:2712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5963:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:401:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5967:1799"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:401:2358":{"id":"0:401:2358","crate_id":0,"name":"Errors","span":{"filename":"src/lib.rs","begin":[66,0],"end":[66,20]},"visibility":"public","docs":"Type indicating that there were errors during UTS #46 processing.","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["a:1:3212:247-0:401:2358","a:1:42260:3700-0:401:2358","a:1:3247:3334-0:401:2358","a:1:42259:3701-0:401:2358","a:1:32457:3337-0:401:2358","a:1:32398:237-0:401:2358","b:1:2719-0:401:2358","b:1:2989-0:401:2358","b:1:3828-0:401:2358","b:1:3004-0:401:2358","b:1:2993-0:401:2358","b:1:2999-0:401:2358","b:1:2716-0:401:2358","b:5:5965-0:401:2358","b:23:483-0:401:2358","b:24:105-0:401:2358","0:245","0:404","0:246","0:243","0:402"]}}},"1:13312:32658":{"id":"1:13312:32658","crate_id":1,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"4:12389:476","self::pattern":"1:12960:3271"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12966:3260","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:12966:3260","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:12981:4214","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13368:35960":{"id":"1:13368:35960","crate_id":1,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:3003:1826":{"id":"1:3003:1826","crate_id":1,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"1:42298:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"1:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2993-0:340:2567":{"id":"b:1:2993-0:340:2567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:340:2567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13369:35961":{"id":"1:13369:35961","crate_id":1,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2719-0:340:2567":{"id":"b:1:2719-0:340:2567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32399:2712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:340:2567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2721:28162"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:42260:3700-0:340:2567":{"id":"a:1:42260:3700-0:340:2567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42260:3700","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:340:2567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:23:483-0:401:2358":{"id":"b:23:483-0:401:2358","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/icu_provider-1.5.0/src/any.rs","begin":[32,0],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MaybeSendSync","id":"23:482:27329","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:401:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:302":{"id":"0:302","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[349,9],"end":[349,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"1:32400:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:300:2352","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:322":{"id":"0:322","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[434,24],"end":[434,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"1:3207:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:310:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13300:2870":{"id":"1:13300:2870","crate_id":1,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"1:44023:4221","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2989-0:258:2355":{"id":"b:1:2989-0:258:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:258:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2992:3843"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:309:480":{"id":"0:309:480","crate_id":0,"name":"clone","span":{"filename":"src/uts46.rs","begin":[349,30],"end":[349,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"AsciiDenyList","id":"0:300:2352","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42260:3700-0:325:2381":{"id":"a:1:42260:3700-0:325:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42260:3700","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:325:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2989-0:401:2358":{"id":"b:1:2989-0:401:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:401:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2992:3843"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13298:2543":{"id":"1:13298:2543","crate_id":1,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"4:12389:476"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"1:44007:3265","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13335:35953":{"id":"1:13335:35953","crate_id":1,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"1:12960:3271","str::split":"1:13323:2944","prim@char":"4:12389:476","str::split_terminator":"1:13332:35952"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"1:44105:4226","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12966:3260","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:12966:3260","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:12981:4214","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:208:2564":{"id":"0:208:2564","crate_id":0,"name":"process","span":{"filename":"src/uts46.rs","begin":[842,4],"end":[1114,5]},"visibility":"public","docs":"The lower-level function that [`Uts46::to_ascii`], [`Uts46::to_unicode`], and\n[`Uts46::to_user_interface`] are built on to allow support for output types other\nthan `Cow<'a, str>` (e.g. string types in a non-Rust programming language).\n\n# Arguments\n\n* `domain_name` - The input domain name as UTF-8 bytes. (The UTF-8ness is checked by\nthis method and input that is not well-formed UTF-8 is treated as an error. If you\nalready have a `&str`, call `.as_bytes()` on it.)\n* `ascii_deny_list` - What ASCII deny list, if any, to apply. The UTS 46\n_UseSTD3ASCIIRules_ flag or the WHATWG URL Standard forbidden domain code point\nprocessing is handled via this argument. Most callers are probably the best off\nby using [`AsciiDenyList::URL`] here.\n* `hyphens` - The UTS 46 _CheckHyphens_ flag. Most callers are probably the best\noff by using [`Hyphens::Allow`] here.\n* `error_policy` - Whether to fail fast or to produce output that may be rendered\nfor the user to examine in case of errors.\n* `output_as_unicode` - A closure for deciding if a label should be output as Unicode\n(as opposed to Punycode). The first argument is the label for which a decision is\nneeded (always non-empty slice). The second argument is the TLD (potentially empty).\nThe third argument is `true` iff the domain name as a whole is a bidi domain name.\nOnly non-erroneous labels that contain at least one non-ASCII character are passed\nto the closure as the first argument. The second and third argument values are\nguaranteed to remain the same during a single call to `process`, and the closure\nmay cache computations derived from the second and third argument (hence the\n`FnMut` type). To perform the _ToASCII_ operation, `|_, _, _| false` must be\npassed as the closure. To perform the _ToUnicode_ operation, `|_, _, _| true` must\nbe passed as the closure. A more complex closure may be used to prepare a domain\nname for display in a user interface so that labels are converted to the Unicode\nform in general but potentially misleading labels are converted to the Punycode\nform.\n`sink` - The object that receives the output (in the non-passthrough case).\n`ascii_sink` - A second sink that receives the _ToASCII_ form only if there\nwere no errors and `sink` received at least one character of non-ASCII output.\nThe purpose of this argument is to enable a user interface display form of the\ndomain and the _ToASCII_ form of the domain to be computed efficiently together.\nThis argument is useless when `output_as_unicode` always returns `false`, in\nwhich case the _ToASCII_ form ends up in `sink` already. If `ascii_sink` receives\nno output and the return value is `Ok(ProcessingSuccess::WroteToSink)`, use the\noutput received by `sink` also as the _ToASCII_ result.\n\n# Return value\n\n* `Ok(ProcessingSuccess::Passthrough)` - The caller must treat\n`unsafe { core::str::from_utf8_unchecked(domain_name) }` as the output. (This\nreturn value asserts that calling `core::str::from_utf8_unchecked(domain_name)`\nis safe.)\n* `Ok(ProcessingSuccess::WroteToSink)` - The caller must treat was was written\nto `sink` as the output. If another sink was passed as `ascii_sink` but it did\nnot receive output, the caller must treat what was written to `sink` also as\nthe _ToASCII_ output. Otherwise, if `ascii_sink` received output, the caller\nmust treat what was written to `ascii_sink` as the _ToASCII_ output.\n* `Err(ProcessingError::ValidityError)` - The input was in error and must\nnot be used for DNS lookup or otherwise in a network protocol. If `error_policy`\nwas `ErrorPolicy::MarkErrors`, the output written to `sink` may be displayed\nto the user as an illustration of where the error was or the errors were.\n* `Err(ProcessingError::SinkError)` - Either `sink` or `ascii_sink` returned\n[`core::fmt::Error`]. The partial output written to `sink` `ascii_sink` must not\nbe used. If `W` never returns [`core::fmt::Error`], this method never returns\n`Err(ProcessingError::SinkError)`.\n\n# Safety-usable invariant\n\nIf the return value is `Ok(ProcessingSuccess::Passthrough)`, `domain_name` is\nASCII and `core::str::from_utf8_unchecked(domain_name)` is safe. (Note:\nOther return values do _not_ imply that `domain_name` wasn't ASCII!)\n\n# Security considerations\n\nShowing labels whose Unicode form might mislead the user as Punycode instead is\nan imperfect security mechanism, because [the Punycode form itself may be resemble\na user-recognizable name](https://www.unicode.org/reports/tr36/#TablePunycodeSpoofing).\nHowever, since this mechanism is common practice, this API provides support for the\nthe mechanism.\n\nPunycode processing is quadratic, so to avoid denial of service, this method imposes\nlength limits on Punycode treating especially long inputs as being in error. These\nlimits are well higher than the DNS length limits and are not more restrictive than\nthe limits imposed by ICU4C.","links":{"`Uts46::to_unicode`":"0:202:2412","`Uts46::to_ascii`":"0:199:2378","`Hyphens::Allow`":"0:311:2380","`Uts46::to_user_interface`":"0:205:2978","`AsciiDenyList::URL`":"0:182:2893","`core::fmt::Error`":"1:43190:138"},"attrs":["#[allow(clippy::too_many_arguments)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["domain_name",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["ascii_deny_list",{"resolved_path":{"name":"AsciiDenyList","id":"0:300:2352","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["hyphens",{"resolved_path":{"name":"Hyphens","id":"0:310:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["error_policy",{"resolved_path":{"name":"ErrorPolicy","id":"0:340:2567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["output_as_unicode",{"generic":"OutputUnicode"}],["sink",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"W"}}}],["ascii_sink",{"resolved_path":{"name":"Option","id":"1:42166:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"W"}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42298:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ProcessingSuccess","id":"0:353:2569","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"ProcessingError","id":"0:368:2573","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Write","id":"1:10337:2614","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32399:2712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"OutputUnicode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:3458:142","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"char"}}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"char"}}}},{"primitive":"bool"}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:317":{"id":"0:317","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[434,9],"end":[434,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"1:32400:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:310:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:3247:3334-0:300:2352":{"id":"a:1:3247:3334-0:300:2352","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3247:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:300:2352","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:245":{"id":"0:245","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[75,0],"end":[75,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["source","description","type_id","cause","provide"],"trait":{"name":"Error","id":"1:3052:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:401:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13276:35947":{"id":"1:13276:35947","crate_id":1,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"1:13274:35946"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:326:2382":{"id":"0:326:2382","crate_id":0,"name":"Ignore","span":{"filename":"src/uts46.rs","begin":[462,4],"end":[462,10]},"visibility":"default","docs":"_VerifyDNSLength=false_. (Possibly relevant for allowing non-DNS naming systems.)","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:184:841":{"id":"0:184:841","crate_id":0,"name":"from","span":{"filename":"src/uts46.rs","begin":[515,4],"end":[517,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_",{"resolved_path":{"name":"core::fmt::Error","id":"1:43190:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2718:2349":{"id":"1:2718:2349","crate_id":1,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32457:3337-0:340:2567":{"id":"a:1:32457:3337-0:340:2567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32457:3337","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:340:2567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:360:706":{"id":"0:360:706","crate_id":0,"name":"eq","span":{"filename":"src/uts46.rs","begin":[483,9],"end":[483,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ProcessingSuccess","id":"0:353:2569","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3004-0:258:2355":{"id":"b:1:3004-0:258:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:258:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3007:138","1:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:339:480":{"id":"0:339:480","crate_id":0,"name":"clone","span":{"filename":"src/uts46.rs","begin":[458,30],"end":[458,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"DnsLength","id":"0:325:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42260:3700-0:368:2573":{"id":"a:1:42260:3700-0:368:2573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42260:3700","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:368:2573","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:182:2893":{"id":"0:182:2893","crate_id":0,"name":"URL","span":{"filename":"src/uts46.rs","begin":[430,4],"end":[430,78]},"visibility":"public","docs":"[Forbidden domain code point](https://url.spec.whatwg.org/#forbidden-domain-code-point) from the WHATWG URL Standard.\n\nEquivalent to `AsciiDenyList::new(true, \"%#/:<>?@[\\\\]^|\")`.\n\nNote that this deny list rejects IPv6 addresses, so (as in URL\nparsing) you need to check for IPv6 addresses first and not\nput them through UTS 46 processing.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"AsciiDenyList","id":"0:300:2352","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"_"}}},"0:343:2577":{"id":"0:343:2577","crate_id":0,"name":"MarkErrors","span":{"filename":"src/uts46.rs","begin":[479,4],"end":[479,14]},"visibility":"default","docs":"In case of error, mark errors with the REPLACEMENT CHARACTER. (The output\ncontaining REPLACEMENT CHARACTERs may be show to the user to illustrate\nwhat was wrong but must not be used for naming in a network protocol.)","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:51:2638":{"id":"0:51:2638","crate_id":0,"name":"decode_to_string","span":{"filename":"src/punycode.rs","begin":[49,0],"end":[56,1]},"visibility":"public","docs":"Convert Punycode to an Unicode `String`.\n\nReturn None on malformed input or overflow.\nOverflow can only happen on inputs that take more than\n63 encoded bytes, the DNS limit on domain name labels.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["input",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42166:194","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"alloc::string::String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:111:2700":{"id":"0:111:2700","crate_id":0,"name":"encode_str","span":{"filename":"src/punycode.rs","begin":[332,0],"end":[340,1]},"visibility":"public","docs":"Convert an Unicode `str` to Punycode.\n\nThis is a convenience wrapper around `encode`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["input",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42166:194","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"alloc::string::String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13329:3076":{"id":"1:13329:3076","crate_id":1,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"1:12960:3271","`DoubleEndedIterator`":"1:8333:130","prim@char":"4:12389:476","str::split":"1:13323:2944"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"1:44055:4025","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12966:3260","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:12966:3260","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:12981:4214","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13272:2945":{"id":"1:13272:2945","crate_id":1,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:23:483-0:258:2355":{"id":"b:23:483-0:258:2355","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/icu_provider-1.5.0/src/any.rs","begin":[32,0],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MaybeSendSync","id":"23:482:27329","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:258:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:305":{"id":"0:305","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[349,20],"end":[349,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"1:2771:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:300:2352","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:311:2380":{"id":"0:311:2380","crate_id":0,"name":"Allow","span":{"filename":"src/uts46.rs","begin":[441,4],"end":[441,9]},"visibility":"default","docs":"_CheckHyphens=false_: Do not place positional restrictions on hyphens.\n\nThis mode is used by the WHATWG URL Standard for normal User Agent processing\n(i.e. not conformance checking).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:1:2716-0:325:2381":{"id":"b:1:2716-0:325:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32399:2712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:325:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2718:2349"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:23:483-0:340:2567":{"id":"b:23:483-0:340:2567","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/icu_provider-1.5.0/src/any.rs","begin":[32,0],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MaybeSendSync","id":"23:482:27329","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:340:2567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2989-0:368:2573":{"id":"b:1:2989-0:368:2573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:368:2573","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2992:3843"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:242-0:254:2356":{"id":"0:242-0:254:2356","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,36],"end":[61,40]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"crate::deprecated::Idna","name":"Idna","id":"0:254:2356","glob":false}}},"0:263":{"id":"0:263","crate_id":0,"name":null,"span":{"filename":"src/deprecated.rs","begin":[132,9],"end":[132,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:258:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:264:480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:3212:247-0:325:2381":{"id":"a:1:3212:247-0:325:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:325:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:13296:32649":{"id":"1:13296:32649","crate_id":1,"name":"split_at_mut_checked","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at_checked`] method.\n\n[`split_at_checked`]: str::split_at_checked\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\nif let Some((first, last)) = s.split_at_mut_checked(3) {\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n\nassert_eq!(None, s.split_at_mut_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_mut_checked(16));  // Beyond the string length\n```","links":{"str::split_at_checked":"1:13295:32648"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"1:42166:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:32:2378":{"id":"0:32:2378","crate_id":0,"name":"to_ascii","span":{"filename":"src/deprecated.rs","begin":[235,4],"end":[239,5]},"visibility":"public","docs":"[UTS 46 ToASCII](http://www.unicode.org/reports/tr46/#ToASCII)","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["domain",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42298:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Errors","id":"0:401:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3004-0:353:2569":{"id":"b:1:3004-0:353:2569","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:353:2569","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3007:138","1:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:3212:247-0:258:2355":{"id":"a:1:3212:247-0:258:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:258:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:13376:32047":{"id":"1:13376:32047","crate_id":1,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns the substring after the prefix,\nwrapped in `Some`. Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"4:12389:476","self::pattern":"1:12960:3271"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:42166:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12966:3260","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13400:33792":{"id":"1:13400:33792","crate_id":1,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"1:1066:41795"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42260:3700-0:258:2355":{"id":"a:1:42260:3700-0:258:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42260:3700","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:258:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:42259:3701-0:310:2379":{"id":"a:1:42259:3701-0:310:2379","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42259:3701","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:310:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:13274:35946":{"id":"1:13274:35946","crate_id":1,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:328:2910":{"id":"0:328:2910","crate_id":0,"name":"VerifyAllowRootDot","span":{"filename":"src/uts46.rs","begin":[465,4],"end":[465,22]},"visibility":"default","docs":"_VerifyDNSLength=true_ with the exception that the trailing root label dot is\nallowed.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:1:32398:237-0:368:2573":{"id":"a:1:32398:237-0:368:2573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:368:2573","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:246":{"id":"0:246","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[77,0],"end":[81,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"1:10394:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:401:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:247:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2993-0:189:2353":{"id":"b:1:2993-0:189:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:189:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13388:35966":{"id":"1:13388:35966","crate_id":1,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"4:12389:476","self::pattern":"1:12960:3271"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12966:3260","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:12966:3260","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:12981:4214","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5717:36664":{"id":"5:5717:36664","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7774:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12966:3260","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13279:2388":{"id":"1:13279:2388","crate_id":1,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"1:12507:4218"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:24:105-0:353:2569":{"id":"b:24:105-0:353:2569","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/yoke-0.7.4/src/erased.rs","begin":[22,0],"end":[22,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ErasedDestructor","id":"24:104:27351","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:353:2569","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:350":{"id":"0:350","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[471,24],"end":[471,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"1:3207:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:340:2567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5714:10138":{"id":"5:5714:10138","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7774:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12966:3260","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13315:3882":{"id":"1:13315:3882","crate_id":1,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"1:42168:191","prim@char":"4:12389:476","self::pattern":"1:12960:3271"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:42166:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12966:3260","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:179:1191":{"id":"0:179:1191","crate_id":0,"name":"new","span":{"filename":"src/uts46.rs","begin":[373,4],"end":[402,5]},"visibility":"public","docs":"Computes (preferably at compile time) an ASCII deny list.\n\nSetting `deny_glyphless` to `true` denies U+0020 SPACE and below\nas well as U+007F DELETE for convenience without having to list\nthese characters in the `deny_list` string.\n\n`deny_list` is the list of ASCII characters to deny. This\nlist must not contain any of:\n* Letters\n* Digits\n* Hyphen\n* Dot (period / full-stop)\n* Non-ASCII\n\n# Panics\n\nIf the deny list contains characters listed as prohibited above.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["deny_glyphless",{"primitive":"bool"}],["deny_list",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42259:3701-0:368:2573":{"id":"a:1:42259:3701-0:368:2573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42259:3701","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:368:2573","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:196:60":{"id":"0:196:60","crate_id":0,"name":"default","span":{"filename":"src/uts46.rs","begin":[578,4],"end":[580,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:183":{"id":"0:183","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[514,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2966:145","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Error","id":"1:43190:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:368:2573","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:184:841"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:3212:247-0:353:2569":{"id":"a:1:3212:247-0:353:2569","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:353:2569","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:359":{"id":"0:359","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[483,9],"end":[483,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2766:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:353:2569","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:360:706"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13303:9706":{"id":"1:13303:9706","crate_id":1,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"1:44291:4223","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:405:811":{"id":"0:405:811","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[64,18],"end":[64,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:345":{"id":"0:345","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[471,9],"end":[471,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"1:32400:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:340:2567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13326:28580":{"id":"1:13326:28580","crate_id":1,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"4:12389:476","self::pattern":"1:12960:3271"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"1:12775:4038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12966:3260","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3828-0:254:2356":{"id":"b:1:3828-0:254:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32399:2712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:254:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:24:105-0:340:2567":{"id":"b:24:105-0:340:2567","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/yoke-0.7.4/src/erased.rs","begin":[22,0],"end":[22,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ErasedDestructor","id":"24:104:27351","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:340:2567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13332:35952":{"id":"1:13332:35952","crate_id":1,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"1:12960:3271","str::split":"1:13323:2944","prim@char":"4:12389:476","`DoubleEndedIterator`":"1:8333:130","str::rsplit_terminator":"1:13335:35953"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"1:44087:4227","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12966:3260","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2999-0:325:2381":{"id":"b:1:2999-0:325:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:325:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3002:138","1:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:32398:237-0:310:2379":{"id":"a:1:32398:237-0:310:2379","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:310:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:13271:1008":{"id":"1:13271:1008","crate_id":1,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"4:12389:476"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3212:247-0:254:2356":{"id":"a:1:3212:247-0:254:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:254:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:13280:35948":{"id":"1:13280:35948","crate_id":1,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:364":{"id":"0:364","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[483,30],"end":[483,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:353:2569","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:365:480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13338:32652":{"id":"1:13338:32652","crate_id":1,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"4:12389:476","self::pattern":"1:12960:3271","str::rsplitn":"1:13341:32654"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"1:44141:4023","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12966:3260","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2719-0:300:2352":{"id":"b:1:2719-0:300:2352","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32399:2712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:300:2352","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2721:28162"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:2995:841":{"id":"1:2995:841","crate_id":1,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32457:3337-0:353:2569":{"id":"a:1:32457:3337-0:353:2569","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32457:3337","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:353:2569","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3828-0:189:2353":{"id":"b:1:3828-0:189:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32399:2712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:189:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13394:33787":{"id":"1:13394:33787","crate_id":1,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"1:40067:3818","Self::is_ascii":"1:13393:2659"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42166:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"1:40067:3818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3247:3334-0:401:2358":{"id":"a:1:3247:3334-0:401:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3247:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:401:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:42259:3701-0:258:2355":{"id":"a:1:42259:3701-0:258:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42259:3701","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:258:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:3008:1824":{"id":"1:3008:1824","crate_id":1,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"1:42298:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"1:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:24:105-0:325:2381":{"id":"b:24:105-0:325:2381","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/yoke-0.7.4/src/erased.rs","begin":[22,0],"end":[22,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ErasedDestructor","id":"24:104:27351","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:325:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:187:2571":{"id":"0:187:2571","crate_id":0,"name":"verify_dns_length","span":{"filename":"src/uts46.rs","begin":[542,0],"end":[565,1]},"visibility":"public","docs":"Performs the _VerifyDNSLength_ check on the output of the _ToASCII_ operation.\n\nIf the second argument is `false`, the trailing root label dot is allowed.\n\n# Panics\n\nPanics in debug mode if the argument isn't ASCII.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["domain_name",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["allow_trailing_dot",{"primitive":"bool"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:332":{"id":"0:332","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[458,9],"end":[458,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"1:32400:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:325:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:32398:237-0:254:2356":{"id":"a:1:32398:237-0:254:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:254:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:13347:32657":{"id":"1:13347:32657","crate_id":1,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:42166:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12966:3260","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:12966:3260","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:12981:4214","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3212:247-0:300:2352":{"id":"a:1:3212:247-0:300:2352","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:300:2352","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:795:2557":{"id":"5:795:2557","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:300:2352":{"id":"0:300:2352","crate_id":0,"name":"AsciiDenyList","span":{"filename":"src/uts46.rs","begin":[351,0],"end":[353,1]},"visibility":"public","docs":"The ASCII deny list to be applied.","links":{},"attrs":["#[repr(transparent)]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:178","a:1:3212:247-0:300:2352","a:1:42260:3700-0:300:2352","a:1:3247:3334-0:300:2352","a:1:42259:3701-0:300:2352","a:1:32457:3337-0:300:2352","a:1:32398:237-0:300:2352","b:1:2719-0:300:2352","b:1:2989-0:300:2352","b:1:3828-0:300:2352","b:1:3004-0:300:2352","b:1:2993-0:300:2352","b:1:2999-0:300:2352","b:1:2716-0:300:2352","b:5:793-0:300:2352","b:23:483-0:300:2352","b:24:105-0:300:2352","0:308","0:307","0:303","0:305","0:302"]}}},"a:1:32457:3337-0:189:2353":{"id":"a:1:32457:3337-0:189:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32457:3337","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:189:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2719-0:368:2573":{"id":"b:1:2719-0:368:2573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32399:2712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:368:2573","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2721:28162"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:42260:3700-0:401:2358":{"id":"a:1:42260:3700-0:401:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42260:3700","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:401:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:375:706":{"id":"0:375:706","crate_id":0,"name":"eq","span":{"filename":"src/uts46.rs","begin":[501,9],"end":[501,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ProcessingError","id":"0:368:2573","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2716-0:310:2379":{"id":"b:1:2716-0:310:2379","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32399:2712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:310:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2718:2349"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:310:2379":{"id":"0:310:2379","crate_id":0,"name":"Hyphens","span":{"filename":"src/uts46.rs","begin":[436,0],"end":[455,1]},"visibility":"public","docs":"The _CheckHyphens_ mode.","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:311:2380","0:313:2607","0:315:2400"],"impls":["a:1:3212:247-0:310:2379","a:1:42260:3700-0:310:2379","a:1:3247:3334-0:310:2379","a:1:42259:3701-0:310:2379","a:1:32457:3337-0:310:2379","a:1:32398:237-0:310:2379","b:1:2719-0:310:2379","b:1:2989-0:310:2379","b:1:3828-0:310:2379","b:1:3004-0:310:2379","b:1:2993-0:310:2379","b:1:2999-0:310:2379","b:1:2716-0:310:2379","b:5:793-0:310:2379","b:23:483-0:310:2379","b:24:105-0:310:2379","0:318","0:320","0:322","0:317","0:323"]}}},"0:319:706":{"id":"0:319:706","crate_id":0,"name":"eq","span":{"filename":"src/uts46.rs","begin":[434,9],"end":[434,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Hyphens","id":"0:310:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13323:2944":{"id":"1:13323:2944","crate_id":1,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"1:12960:3271","`DoubleEndedIterator`":"1:8333:130","prim@char":"4:12389:476","str::split_whitespace":"1:13301:28575","str::rsplit":"1:13329:3076"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"1:44037:4021","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12966:3260","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:0:2413":{"id":"0:0:2413","crate_id":0,"name":"idna","span":{"filename":"src/lib.rs","begin":[9,0],"end":[168,1]},"visibility":"public","docs":"This Rust crate implements IDNA\n[per the WHATWG URL Standard](https://url.spec.whatwg.org/#idna).\n\nIt also exposes the underlying algorithms from [*Unicode IDNA Compatibility Processing*\n(Unicode Technical Standard #46)](http://www.unicode.org/reports/tr46/)\nand [Punycode (RFC 3492)](https://tools.ietf.org/html/rfc3492).\n\nQuoting from [UTS #46’s introduction](http://www.unicode.org/reports/tr46/#Introduction):\n\n> Initially, domain names were restricted to ASCII characters.\n> A system was introduced in 2003 for internationalized domain names (IDN).\n> This system is called Internationalizing Domain Names for Applications,\n> or IDNA2003 for short.\n> This mechanism supports IDNs by means of a client software transformation\n> into a format known as Punycode.\n> A revision of IDNA was approved in 2010 (IDNA2008).\n> This revision has a number of incompatibilities with IDNA2003.\n>\n> The incompatibilities force implementers of client software,\n> such as browsers and emailers,\n> to face difficult choices during the transition period\n> as registries shift from IDNA2003 to IDNA2008.\n> This document specifies a mechanism\n> that minimizes the impact of this transition for client software,\n> allowing client software to access domains that are valid under either system.","links":{},"attrs":["#![no_std]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:35:2354","0:129:2351","0:8-0:300:2352","0:241-0:258:2355","0:242-0:254:2356","0:401:2358","0:248:2375","0:249:2387","0:251:2398","0:253:2411"],"is_stripped":false}}},"a:1:32398:237-0:325:2381":{"id":"a:1:32398:237-0:325:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:325:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:24:105-0:258:2355":{"id":"b:24:105-0:258:2355","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/yoke-0.7.4/src/erased.rs","begin":[22,0],"end":[22,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ErasedDestructor","id":"24:104:27351","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:258:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13399:33791":{"id":"1:13399:33791","crate_id":1,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"1:1066:41795"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:3002:138":{"id":"1:3002:138","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"1:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"b:1:3828-0:401:2358":{"id":"b:1:3828-0:401:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32399:2712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:401:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:197":{"id":"0:197","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[583,0],"end":[1730,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Uts46","id":"0:189:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:198:1191","0:199:2378","0:202:2412","0:205:2978","0:208:2564"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13302:28568":{"id":"1:13302:28568","crate_id":1,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"1:13301:28575"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"1:44320:4233","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2719-0:401:2358":{"id":"b:1:2719-0:401:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32399:2712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:401:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2721:28162"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:307":{"id":"0:307","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[349,24],"end":[349,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"1:3207:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:300:2352","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:20:2412":{"id":"0:20:2412","crate_id":0,"name":"to_unicode","span":{"filename":"src/deprecated.rs","begin":[109,4],"end":[128,5]},"visibility":"public","docs":"[UTS 46 ToUnicode](http://www.unicode.org/reports/tr46/#ToUnicode)","links":{},"attrs":["#[allow(clippy::wrong_self_convention)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["domain",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["out",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42298:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Errors","id":"0:401:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13353:35954":{"id":"1:13353:35954","crate_id":1,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"1:12960:3271","`DoubleEndedIterator`":"1:8333:130","prim@char":"4:12389:476","str::matches":"1:13350:3204"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"1:44259:4229","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12966:3260","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:12966:3260","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:12981:4214","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2992:3843":{"id":"1:2992:3843","crate_id":1,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"1:2966:145"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:371:2575":{"id":"0:371:2575","crate_id":0,"name":"SinkError","span":{"filename":"src/uts46.rs","begin":[511,4],"end":[511,13]},"visibility":"default","docs":"The sink emitted [`core::fmt::Error`]. The partial output written to the sink must not\nbe used.","links":{"`core::fmt::Error`":"1:43190:138"},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:1:42259:3701-0:353:2569":{"id":"a:1:42259:3701-0:353:2569","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42259:3701","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:353:2569","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:32457:3337-0:310:2379":{"id":"a:1:32457:3337-0:310:2379","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32457:3337","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:310:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:13281:336":{"id":"1:13281:336","crate_id":1,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"1:13282:32627","`u8`":"4:12408:1869"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13362:35957":{"id":"1:13362:35957","crate_id":1,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5713:36663":{"id":"5:5713:36663","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:306:3262","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:306:3262","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:27:2571":{"id":"0:27:2571","crate_id":0,"name":"verify_dns_length","span":{"filename":"src/deprecated.rs","begin":[183,4],"end":[186,5]},"visibility":"public","docs":"Whether the _VerifyDNSLength_ operation should be performed\nby `to_ascii`.\n\nFor compatibility with previous behavior, even when set to `true`,\nthe trailing root label dot is allowed contrary to the spec.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["value",{"primitive":"bool"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2989-0:310:2379":{"id":"b:1:2989-0:310:2379","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:310:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2992:3843"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:354:2570":{"id":"0:354:2570","crate_id":0,"name":"Passthrough","span":{"filename":"src/uts46.rs","begin":[491,4],"end":[491,15]},"visibility":"default","docs":"There were no errors. The caller must consider the input to be the output.\n\nThis asserts that the input can be safely passed to [`core::str::from_utf8_unchecked`].\n\n(Distinct from `WroteToSink` in order to allow `Cow` behavior to be implemented on top of\n[`Uts46::process`].)","links":{"`core::str::from_utf8_unchecked`":"1:12509:2968","`Uts46::process`":"0:208:2564"},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:23:483-0:189:2353":{"id":"b:23:483-0:189:2353","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/icu_provider-1.5.0/src/any.rs","begin":[32,0],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MaybeSendSync","id":"23:482:27329","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:189:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:42259:3701-0:401:2358":{"id":"a:1:42259:3701-0:401:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42259:3701","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:401:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:13305:28816":{"id":"1:13305:28816","crate_id":1,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"1:44329:4232","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13350:3204":{"id":"1:13350:3204","crate_id":1,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"1:12960:3271","`DoubleEndedIterator`":"1:8333:130","prim@char":"4:12389:476","str::rmatches":"1:13353:35954"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"1:44241:4228","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12966:3260","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13373:35963":{"id":"1:13373:35963","crate_id":1,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"4:12389:476","self::pattern":"1:12960:3271"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12966:3260","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2716-0:353:2569":{"id":"b:1:2716-0:353:2569","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32399:2712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:353:2569","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2718:2349"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3828-0:325:2381":{"id":"b:1:3828-0:325:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32399:2712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:325:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:198:1191":{"id":"0:198:1191","crate_id":0,"name":"new","span":{"filename":"src/uts46.rs","begin":[586,4],"end":[594,5]},"visibility":"public","docs":"Constructor using data compiled into the binary.","links":{},"attrs":["#[cfg(feature = \"compiled_data\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32398:237-0:340:2567":{"id":"a:1:32398:237-0:340:2567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:340:2567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:13270":{"id":"1:13270","crate_id":1,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["1:13271:1008","1:13272:2945","1:13273:35945","1:13274:35946","1:13276:35947","1:13279:2388","1:13280:35948","1:13281:336","1:13282:32627","1:13283:2694","1:13285:28219","1:13287:28220","1:13289:28221","1:13291:35949","1:13292:35950","1:13293:2843","1:13294:3136","1:13295:32648","1:13296:32649","1:13298:2543","1:13299:4057","1:13300:2870","1:13301:28575","1:13302:28568","1:13303:9706","1:13304:35951","1:13305:28816","1:13306:3073","1:13309:3110","1:13312:32658","1:13315:3882","1:13319:3849","1:13323:2944","1:13326:28580","1:13329:3076","1:13332:35952","1:13335:35953","1:13338:32652","1:13341:32654","1:13344:32656","1:13347:32657","1:13350:3204","1:13353:35954","1:13356:35955","1:13359:35956","1:13362:35957","1:13364:35958","1:13366:35959","1:13368:35960","1:13369:35961","1:13370:35962","1:13373:35963","1:13376:32047","1:13379:2942","1:13382:35964","1:13385:35965","1:13388:35966","1:13391:35967","1:13393:2659","1:13394:33787","1:13395:32081","1:13396:32082","1:13397:32083","1:13398:33790","1:13399:33791","1:13400:33792","1:13401:35968","1:13403:10214","1:13404:35969"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:373":{"id":"0:373","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[501,9],"end":[501,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"1:32400:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:368:2573","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2719-0:353:2569":{"id":"b:1:2719-0:353:2569","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32399:2712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:353:2569","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2721:28162"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:23:483-0:254:2356":{"id":"b:23:483-0:254:2356","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/icu_provider-1.5.0/src/any.rs","begin":[32,0],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MaybeSendSync","id":"23:482:27329","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:254:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:17:1191":{"id":"0:17:1191","crate_id":0,"name":"new","span":{"filename":"src/deprecated.rs","begin":[72,4],"end":[74,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["config",{"resolved_path":{"name":"Config","id":"0:258:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:380:480":{"id":"0:380:480","crate_id":0,"name":"clone","span":{"filename":"src/uts46.rs","begin":[501,30],"end":[501,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ProcessingError","id":"0:368:2573","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:249:2387":{"id":"0:249:2387","crate_id":0,"name":"domain_to_ascii","span":{"filename":"src/lib.rs","begin":[125,0],"end":[127,1]},"visibility":"public","docs":"The [domain to ASCII](https://url.spec.whatwg.org/#concept-domain-to-ascii) algorithm;\nversion returning `String` and no ASCII deny list (i.e. _UseSTD3ASCIIRules=false_).\n\nThis function exists for backward-compatibility. Consider using [`domain_to_ascii_cow`]\ninstead.\n\nReturn the ASCII representation a domain name,\nnormalizing characters (upper-case to lower-case and other kinds of equivalence)\nand using Punycode as necessary.\n\nThis process may fail.","links":{"`domain_to_ascii_cow`":"0:248:2375"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["domain",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42298:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"alloc::string::String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Errors","id":"0:401:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3828-0:300:2352":{"id":"b:1:3828-0:300:2352","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32399:2712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:300:2352","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13283:2694":{"id":"1:13283:2694","crate_id":1,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"1:42168:191"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"1:42166:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"1:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13292:35950":{"id":"1:13292:35950","crate_id":1,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"4:12395:1739","crate::ops::IndexMut":"1:3490:3291","str::slice_unchecked":"1:13291:35949"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:241-0:258:2355":{"id":"0:241-0:258:2355","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,28],"end":[61,34]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"crate::deprecated::Config","name":"Config","id":"0:258:2355","glob":false}}},"b:1:2999-0:340:2567":{"id":"b:1:2999-0:340:2567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:340:2567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3002:138","1:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:258:2355":{"id":"0:258:2355","crate_id":0,"name":"Config","span":{"filename":"src/deprecated.rs","begin":[135,0],"end":[140,1]},"visibility":"public","docs":"Deprecated configuration API.","links":{},"attrs":["#[must_use]","#[deprecated]"],"deprecation":{"since":null,"note":null},"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:24","a:1:3212:247-0:258:2355","a:1:42260:3700-0:258:2355","a:1:3247:3334-0:258:2355","a:1:42259:3701-0:258:2355","a:1:32457:3337-0:258:2355","a:1:32398:237-0:258:2355","b:1:2719-0:258:2355","b:1:2989-0:258:2355","b:1:3828-0:258:2355","b:1:3004-0:258:2355","b:1:2993-0:258:2355","b:1:2999-0:258:2355","b:1:2716-0:258:2355","b:5:793-0:258:2355","b:23:483-0:258:2355","b:24:105-0:258:2355","0:265","0:263","0:22"]}}},"b:23:483-0:325:2381":{"id":"b:23:483-0:325:2381","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/icu_provider-1.5.0/src/any.rs","begin":[32,0],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MaybeSendSync","id":"23:482:27329","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:325:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13366:35959":{"id":"1:13366:35959","crate_id":1,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32398:237-0:300:2352":{"id":"a:1:32398:237-0:300:2352","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:300:2352","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2989-0:189:2353":{"id":"b:1:2989-0:189:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:189:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2992:3843"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3004-0:401:2358":{"id":"b:1:3004-0:401:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:401:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3007:138","1:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13299:4057":{"id":"1:13299:4057","crate_id":1,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"4:12389:476"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"1:44013:4222","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:333":{"id":"0:333","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[458,9],"end":[458,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2766:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:325:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:334:706"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2989-0:300:2352":{"id":"b:1:2989-0:300:2352","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:300:2352","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2992:3843"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2719-0:310:2379":{"id":"b:1:2719-0:310:2379","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32399:2712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:310:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2721:28162"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2716-0:368:2573":{"id":"b:1:2716-0:368:2573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32399:2712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:368:2573","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2718:2349"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:42260:3700-0:353:2569":{"id":"a:1:42260:3700-0:353:2569","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42260:3700","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:353:2569","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:199:2378":{"id":"0:199:2378","crate_id":0,"name":"to_ascii","span":{"filename":"src/uts46.rs","begin":[614,4],"end":[655,5]},"visibility":"public","docs":"Performs the [ToASCII](https://www.unicode.org/reports/tr46/#ToASCII) operation\nfrom UTS #46 with the options indicated.\n\n# Arguments\n\n* `domain_name` - The input domain name as UTF-8 bytes. (The UTF-8ness is checked by\nthis method and input that is not well-formed UTF-8 is treated as an error. If you\nalready have a `&str`, call `.as_bytes()` on it.)\n* `ascii_deny_list` - What ASCII deny list, if any, to apply. The UTS 46\n_UseSTD3ASCIIRules_ flag or the WHATWG URL Standard forbidden domain code point\nprocessing is handled via this argument. Most callers are probably the best off\nby using [`AsciiDenyList::URL`] here.\n* `hyphens` - The UTS 46 _CheckHyphens_ flag. Most callers are probably the best\noff by using [`Hyphens::Allow`] here.\n* `dns_length` - The UTS 46 _VerifyDNSLength_ flag.","links":{"`AsciiDenyList::URL`":"0:182:2893","`Hyphens::Allow`":"0:311:2380"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["domain_name",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["ascii_deny_list",{"resolved_path":{"name":"AsciiDenyList","id":"0:300:2352","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["hyphens",{"resolved_path":{"name":"Hyphens","id":"0:310:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["dns_length",{"resolved_path":{"name":"DnsLength","id":"0:325:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42298:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:798:119","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"crate::Errors","id":"0:401:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:353:2569":{"id":"0:353:2569","crate_id":0,"name":"ProcessingSuccess","span":{"filename":"src/uts46.rs","begin":[484,0],"end":[498,1]},"visibility":"public","docs":"The success outcome of [`Uts46::process`]","links":{"`Uts46::process`":"0:208:2564"},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:354:2570","0:356:2572"],"impls":["a:1:3212:247-0:353:2569","a:1:42260:3700-0:353:2569","a:1:3247:3334-0:353:2569","a:1:42259:3701-0:353:2569","a:1:32457:3337-0:353:2569","a:1:32398:237-0:353:2569","b:1:2719-0:353:2569","b:1:2989-0:353:2569","b:1:3828-0:353:2569","b:1:3004-0:353:2569","b:1:2993-0:353:2569","b:1:2999-0:353:2569","b:1:2716-0:353:2569","b:5:793-0:353:2569","b:23:483-0:353:2569","b:24:105-0:353:2569","0:366","0:364","0:363","0:361","0:359","0:358"]}}},"b:23:483-0:353:2569":{"id":"b:23:483-0:353:2569","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/icu_provider-1.5.0/src/any.rs","begin":[32,0],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MaybeSendSync","id":"23:482:27329","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:353:2569","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:382:811":{"id":"0:382:811","crate_id":0,"name":"fmt","span":{"filename":"src/uts46.rs","begin":[501,37],"end":[501,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3004-0:368:2573":{"id":"b:1:3004-0:368:2573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:368:2573","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3007:138","1:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13293:2843":{"id":"1:13293:2843","crate_id":1,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_checked`](str::split_at_checked).\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_checked":"1:13295:32648","str::split_at_mut":"1:13294:3136"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2719-0:189:2353":{"id":"b:1:2719-0:189:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32399:2712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:189:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2721:28162"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:381":{"id":"0:381","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[501,37],"end":[501,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10389:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:368:2573","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:382:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:42259:3701-0:254:2356":{"id":"a:1:42259:3701-0:254:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42259:3701","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:254:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:113:700":{"id":"0:113:700","crate_id":0,"name":"encode","span":{"filename":"src/punycode.rs","begin":[346,0],"end":[354,1]},"visibility":"public","docs":"Convert Unicode to Punycode.\n\nReturn None on overflow, which can only happen on inputs that would take more than\n63 encoded bytes, the DNS limit on domain name labels.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["input",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"char"}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42166:194","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"alloc::string::String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:303":{"id":"0:303","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[349,9],"end":[349,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2766:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:300:2352","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:304:706"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:323":{"id":"0:323","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[434,30],"end":[434,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:310:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:324:480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2993-0:368:2573":{"id":"b:1:2993-0:368:2573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:368:2573","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13344:32656":{"id":"1:13344:32656","crate_id":1,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:42166:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12966:3260","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2716-0:258:2355":{"id":"b:1:2716-0:258:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32399:2712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:258:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2718:2349"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2993-0:325:2381":{"id":"b:1:2993-0:325:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:325:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:24:105-0:401:2358":{"id":"b:24:105-0:401:2358","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/yoke-0.7.4/src/erased.rs","begin":[22,0],"end":[22,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ErasedDestructor","id":"24:104:27351","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:401:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:42259:3701-0:189:2353":{"id":"a:1:42259:3701-0:189:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42259:3701","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:189:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:32398:237-0:258:2355":{"id":"a:1:32398:237-0:258:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:258:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5730:2728":{"id":"5:5730:2728","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7774:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32457:3337-0:258:2355":{"id":"a:1:32457:3337-0:258:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32457:3337","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:258:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:308":{"id":"0:308","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[349,30],"end":[349,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:300:2352","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:309:480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13287:28220":{"id":"1:13287:28220","crate_id":1,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"1:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2716-0:189:2353":{"id":"b:1:2716-0:189:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32399:2712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:189:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2718:2349"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3004-0:325:2381":{"id":"b:1:3004-0:325:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:325:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3007:138","1:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:2721:28162":{"id":"1:2721:28162","crate_id":1,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2993-0:310:2379":{"id":"b:1:2993-0:310:2379","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:310:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5729:36667":{"id":"5:5729:36667","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:306:3262","`String`":"5:7774:243"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:306:3262","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13304:35951":{"id":"1:13304:35951","crate_id":1,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"1:44301:4225","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42260:3700-0:300:2352":{"id":"a:1:42260:3700-0:300:2352","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42260:3700","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:300:2352","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3828-0:310:2379":{"id":"b:1:3828-0:310:2379","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32399:2712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:310:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:340:2567":{"id":"0:340:2567","crate_id":0,"name":"ErrorPolicy","span":{"filename":"src/uts46.rs","begin":[473,0],"end":[480,1]},"visibility":"public","docs":"Policy for customizing behavior in case of an error.","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:341:2568","0:343:2577"],"impls":["a:1:3212:247-0:340:2567","a:1:42260:3700-0:340:2567","a:1:3247:3334-0:340:2567","a:1:42259:3701-0:340:2567","a:1:32457:3337-0:340:2567","a:1:32398:237-0:340:2567","b:1:2719-0:340:2567","b:1:2989-0:340:2567","b:1:3828-0:340:2567","b:1:3004-0:340:2567","b:1:2993-0:340:2567","b:1:2999-0:340:2567","b:1:2716-0:340:2567","b:5:793-0:340:2567","b:23:483-0:340:2567","b:24:105-0:340:2567","0:348","0:350","0:345","0:346","0:351"]}}},"0:28:2580":{"id":"0:28:2580","crate_id":0,"name":"check_hyphens","span":{"filename":"src/deprecated.rs","begin":[199,4],"end":[202,5]},"visibility":"public","docs":"Whether to enforce STD3 rules for hyphen placement.\n\n`true` to deny hyphens in the first and last positions.\n`false` to not enforce hyphen placement.\n\nNote that for backward compatibility this is not the same as\nUTS 46 _CheckHyphens_, which also disallows hyphens in the\nthird and fourth positions.\n\nNote that `true` rejects real-world names, including some GitHub user pages.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["value",{"primitive":"bool"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13364:35958":{"id":"1:13364:35958","crate_id":1,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2989-0:254:2356":{"id":"b:1:2989-0:254:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:254:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2992:3843"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:205:2978":{"id":"0:205:2978","crate_id":0,"name":"to_user_interface","span":{"filename":"src/uts46.rs","begin":[734,4],"end":[760,5]},"visibility":"public","docs":"Performs the [ToUnicode](https://www.unicode.org/reports/tr46/#ToUnicode) operation\nfrom UTS #46 according to options given with some\nerror-free Unicode labels output according to\n[ToASCII](https://www.unicode.org/reports/tr46/#ToASCII) instead as decided by\napplication policy implemented via the `output_as_unicode` closure. The purpose\nis to convert user-visible domains to the Unicode form in general but to render\npotentially misleading labels as Punycode.\n\nThis is an imperfect security mechanism, because [the Punycode form itself may be\nresemble a user-recognizable name](https://www.unicode.org/reports/tr36/#TablePunycodeSpoofing).\nHowever, since this mechanism is common practice, this API provides support for The\nthe mechanism.\n\nASCII labels always pass through as ASCII and labels with errors always pass through\nas Unicode. For non-erroneous labels that contain at least one non-ASCII character\n(implies non-empty), `output_as_unicode` is called with the Unicode form of the label,\nthe TLD (potentially empty), and a flag indicating whether the domain name as a whole\nis a bidi domain name. If the return value is `true`, the label passes through as\nUnicode. If the return value is `false`, the label is converted to Punycode.\n\nWhen there are errors, there is still output, which may be rendered user, even through\nthe output must not be used in networking protocols. Errors are denoted by\nU+FFFD REPLACEMENT CHARACTERs in the output. (That is, if the second item\nof the return tuple is `Err`, the first item of the return tuple is guaranteed to contain\nat least one U+FFFD.) Labels that contain errors are not converted to Punycode.\n\n# Arguments\n\n* `domain_name` - The input domain name as UTF-8 bytes. (The UTF-8ness is checked by\nthis method and input that is not well-formed UTF-8 is treated as an error. If you\nalready have a `&str`, call `.as_bytes()` on it.)\n* `ascii_deny_list` - What ASCII deny list, if any, to apply. The UTS 46\n_UseSTD3ASCIIRules_ flag or the WHATWG URL Standard forbidden domain code point\nprocessing is handled via this argument. Most callers are probably the best off\nby using [`AsciiDenyList::URL`] here.\n* `hyphens` - The UTS 46 _CheckHyphens_ flag. Most callers are probably the best\noff by using [`Hyphens::Allow`] here.\n* `output_as_unicode` - A closure for deciding if a label should be output as Unicode\n(as opposed to Punycode). The first argument is the label for which a decision is\nneeded (always non-empty slice). The second argument is the TLD (potentially empty).\nThe third argument is `true` iff the domain name as a whole is a bidi domain name.\nOnly non-erroneous labels that contain at least one non-ASCII character are passed\nto the closure as the first argument. The second and third argument values are\nguaranteed to remain the same during a single call to `process`, and the closure\nmay cache computations derived from the second and third argument (hence the\n`FnMut` type).","links":{"`AsciiDenyList::URL`":"0:182:2893","`Hyphens::Allow`":"0:311:2380"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["domain_name",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["ascii_deny_list",{"resolved_path":{"name":"AsciiDenyList","id":"0:300:2352","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["hyphens",{"resolved_path":{"name":"Hyphens","id":"0:310:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["output_as_unicode",{"generic":"OutputUnicode"}]],"output":{"tuple":[{"resolved_path":{"name":"Cow","id":"5:798:119","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}},{"resolved_path":{"name":"Result","id":"1:42298:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"crate::Errors","id":"0:401:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"OutputUnicode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:3458:142","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"char"}}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"char"}}}},{"primitive":"bool"}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:243":{"id":"0:243","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[68,0],"end":[72,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2966:145","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Errors","id":"0:401:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Result","id":"1:42298:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Errors","id":"0:401:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:244:841"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13282:32627":{"id":"1:13282:32627","crate_id":1,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"4:12408:1869"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:367:811":{"id":"0:367:811","crate_id":0,"name":"fmt","span":{"filename":"src/uts46.rs","begin":[483,37],"end":[483,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:24:105-0:300:2352":{"id":"b:24:105-0:300:2352","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/yoke-0.7.4/src/erased.rs","begin":[22,0],"end":[22,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ErasedDestructor","id":"24:104:27351","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:300:2352","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13395:32081":{"id":"1:13395:32081","crate_id":1,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:318":{"id":"0:318","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[434,9],"end":[434,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2766:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:310:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:319:706"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3828-0:258:2355":{"id":"b:1:3828-0:258:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32399:2712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:258:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:32398:237-0:353:2569":{"id":"a:1:32398:237-0:353:2569","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:353:2569","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:32398:237-0:189:2353":{"id":"a:1:32398:237-0:189:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:189:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"1:13393:2659":{"id":"1:13393:2659","crate_id":1,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:793-0:300:2352":{"id":"b:5:793-0:300:2352","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:789:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:300:2352","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:795:2557","5:796:28167","5:797:28168"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:32398:237-0:401:2358":{"id":"a:1:32398:237-0:401:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:401:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:35:2354":{"id":"0:35:2354","crate_id":0,"name":"punycode","span":{"filename":"src/punycode.rs","begin":[9,0],"end":[466,1]},"visibility":"public","docs":"Punycode ([RFC 3492](http://tools.ietf.org/html/rfc3492)) implementation.\n\nSince Punycode fundamentally works on unicode code points,\n`encode` and `decode` take and return slices and vectors of `char`.\n`encode_str` and `decode_to_string` provide convenience wrappers\nthat convert from and to Rust’s UTF-8 based `str` and `String` types.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:51:2638","0:52:625","0:111:2700","0:113:700"],"is_stripped":false}}},"0:402":{"id":"0:402","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,9],"end":[64,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"1:3041:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:401:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:403:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:253:2411":{"id":"0:253:2411","crate_id":0,"name":"domain_to_unicode","span":{"filename":"src/lib.rs","begin":[161,0],"end":[168,1]},"visibility":"public","docs":"The [domain to Unicode](https://url.spec.whatwg.org/#concept-domain-to-unicode) algorithm;\nversion returning `String` and no ASCII deny list (i.e. _UseSTD3ASCIIRules=false_).\n\nThis function exists for backward-compatibility. Consider using [`Uts46::to_user_interface`]\nor [`Uts46::to_unicode`].\n\nReturn the Unicode representation of a domain name,\nnormalizing characters (upper-case to lower-case and other kinds of equivalence)\nand decoding Punycode as necessary.\n\nIf the second item of the tuple indicates an error, the first item of the tuple\ndenotes errors using the REPLACEMENT CHARACTERs in order to be able to illustrate\nerrors to the user. When the second item of the return tuple signals an error,\nthe first item of the tuple must not be used in a network protocol.","links":{"`Uts46::to_user_interface`":"0:205:2978","`Uts46::to_unicode`":"0:202:2412"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["domain",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"tuple":[{"resolved_path":{"name":"alloc::string::String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"resolved_path":{"name":"Result","id":"1:42298:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Errors","id":"0:401:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:23:60":{"id":"0:23:60","crate_id":0,"name":"default","span":{"filename":"src/deprecated.rs","begin":[144,4],"end":[152,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:346":{"id":"0:346","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[471,9],"end":[471,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2766:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:340:2567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:347:706"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2993-0:258:2355":{"id":"b:1:2993-0:258:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:258:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:3247:3334-0:258:2355":{"id":"a:1:3247:3334-0:258:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3247:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:258:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:352:480":{"id":"0:352:480","crate_id":0,"name":"clone","span":{"filename":"src/uts46.rs","begin":[471,30],"end":[471,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ErrorPolicy","id":"0:340:2567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3828-0:353:2569":{"id":"b:1:3828-0:353:2569","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32399:2712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:353:2569","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:366":{"id":"0:366","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[483,37],"end":[483,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10389:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:353:2569","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:367:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2999-0:368:2573":{"id":"b:1:2999-0:368:2573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:368:2573","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3002:138","1:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:24:105-0:368:2573":{"id":"b:24:105-0:368:2573","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/yoke-0.7.4/src/erased.rs","begin":[22,0],"end":[22,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ErasedDestructor","id":"24:104:27351","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:368:2573","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2999-0:189:2353":{"id":"b:1:2999-0:189:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:189:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3002:138","1:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:181:2399":{"id":"0:181:2399","crate_id":0,"name":"STD3","span":{"filename":"src/uts46.rs","begin":[421,4],"end":[421,71]},"visibility":"public","docs":"The STD3 deny list. This corresponds to _UseSTD3ASCIIRules=true_.\n\nNote that this deny list rejects the underscore, which occurs in\npseudo-hosts used by various TXT record-based protocols, and also\ncharacters that may occurs in non-DNS naming, such as NetBIOS.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"AsciiDenyList","id":"0:300:2352","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"_"}}},"b:5:793-0:258:2355":{"id":"b:5:793-0:258:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:789:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:258:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:795:2557","5:796:28167","5:797:28168"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:24:105-0:254:2356":{"id":"b:24:105-0:254:2356","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/yoke-0.7.4/src/erased.rs","begin":[22,0],"end":[22,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ErasedDestructor","id":"24:104:27351","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:254:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:3247:3334-0:353:2569":{"id":"a:1:3247:3334-0:353:2569","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3247:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:353:2569","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:8-0:300:2352":{"id":"0:8-0:300:2352","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[53,0],"end":[53,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"uts46::AsciiDenyList","name":"AsciiDenyList","id":"0:300:2352","glob":false}}},"0:26:2563":{"id":"0:26:2563","crate_id":0,"name":"transitional_processing","span":{"filename":"src/deprecated.rs","begin":[172,4],"end":[175,5]},"visibility":"public","docs":"Whether to enable (deprecated) transitional processing.\n\nNote that Firefox, Safari, and Chrome do not use transitional\nprocessing.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["value",{"primitive":"bool"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:361":{"id":"0:361","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[483,20],"end":[483,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"1:2771:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:353:2569","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5967:1799":{"id":"5:5967:1799","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:24:105-0:310:2379":{"id":"b:24:105-0:310:2379","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/yoke-0.7.4/src/erased.rs","begin":[22,0],"end":[22,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ErasedDestructor","id":"24:104:27351","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:310:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5728:36666":{"id":"5:5728:36666","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7774:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:52:625":{"id":"0:52:625","crate_id":0,"name":"decode","span":{"filename":"src/punycode.rs","begin":[63,0],"end":[70,1]},"visibility":"public","docs":"Convert Punycode to Unicode.\n\nReturn None on malformed input or overflow.\nOverflow can only happen on inputs that take more than\n63 encoded bytes, the DNS limit on domain name labels.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["input",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42166:194","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"alloc::vec::Vec","id":"5:7185:264","args":{"angle_bracketed":{"args":[{"type":{"primitive":"char"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:330:2401":{"id":"0:330:2401","crate_id":0,"name":"Verify","span":{"filename":"src/uts46.rs","begin":[467,4],"end":[467,10]},"visibility":"default","docs":"_VerifyDNSLength=true_. (The trailing root label dot is not allowed.)","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:351":{"id":"0:351","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[471,30],"end":[471,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:340:2567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:352:480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13285:28219":{"id":"1:13285:28219","crate_id":1,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"1:42168:191"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"1:42166:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"1:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13404:35969":{"id":"1:13404:35969","crate_id":1,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:5015:35969"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"1:44354:3925","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42259:3701-0:300:2352":{"id":"a:1:42259:3701-0:300:2352","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42259:3701","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:300:2352","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:254:2356":{"id":"0:254:2356","crate_id":0,"name":"Idna","span":{"filename":"src/deprecated.rs","begin":[67,0],"end":[69,1]},"visibility":"public","docs":"Deprecated. Use the crate-top-level functions or [`Uts46`].","links":{"`Uts46`":"0:189:2353"},"attrs":["#[deprecated]"],"deprecation":{"since":null,"note":null},"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:16","a:1:3212:247-0:254:2356","a:1:42260:3700-0:254:2356","a:1:3247:3334-0:254:2356","a:1:42259:3701-0:254:2356","a:1:32457:3337-0:254:2356","a:1:32398:237-0:254:2356","b:1:2719-0:254:2356","b:1:2989-0:254:2356","b:1:3828-0:254:2356","b:1:3004-0:254:2356","b:1:2993-0:254:2356","b:1:2999-0:254:2356","b:1:2716-0:254:2356","b:23:483-0:254:2356","b:24:105-0:254:2356","0:256"]}}},"b:1:2993-0:353:2569":{"id":"b:1:2993-0:353:2569","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:353:2569","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13341:32654":{"id":"1:13341:32654","crate_id":1,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"4:12389:476","str::splitn":"1:13338:32652","self::pattern":"1:12960:3271"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"1:44159:4019","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12966:3260","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:12966:3260","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:12981:4214","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13403:10214":{"id":"1:13403:10214","crate_id":1,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:5018:10214"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"1:44345:3926","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:793-0:325:2381":{"id":"b:5:793-0:325:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:789:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:325:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:795:2557","5:796:28167","5:797:28168"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:32457:3337-0:401:2358":{"id":"a:1:32457:3337-0:401:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32457:3337","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:401:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:23:483-0:310:2379":{"id":"b:23:483-0:310:2379","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/icu_provider-1.5.0/src/any.rs","begin":[32,0],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MaybeSendSync","id":"23:482:27329","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:310:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:3007:138":{"id":"1:3007:138","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"1:32322:8323","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"1:13356:35955":{"id":"1:13356:35955","crate_id":1,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"1:12960:3271","`DoubleEndedIterator`":"1:8333:130","prim@char":"4:12389:476","str::rmatch_indices":"1:13359:35956"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"1:44187:4230","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12966:3260","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2719-0:258:2355":{"id":"b:1:2719-0:258:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32399:2712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:258:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2721:28162"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3828-0:368:2573":{"id":"b:1:3828-0:368:2573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32399:2712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:368:2573","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:3212:247-0:310:2379":{"id":"a:1:3212:247-0:310:2379","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:310:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:793-0:340:2567":{"id":"b:5:793-0:340:2567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:789:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:340:2567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:795:2557","5:796:28167","5:797:28168"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:3247:3334-0:310:2379":{"id":"a:1:3247:3334-0:310:2379","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3247:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:310:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:403:60":{"id":"0:403:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[64,9],"end":[64,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Errors","id":"0:401:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:178":{"id":"0:178","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[355,0],"end":[431,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:300:2352","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:179:1191","0:180:2389","0:181:2399","0:182:2893"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:42260:3700-0:254:2356":{"id":"a:1:42260:3700-0:254:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42260:3700","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:254:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2993-0:300:2352":{"id":"b:1:2993-0:300:2352","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:300:2352","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:23:483-0:300:2352":{"id":"b:23:483-0:300:2352","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/icu_provider-1.5.0/src/any.rs","begin":[32,0],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MaybeSendSync","id":"23:482:27329","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:300:2352","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:363":{"id":"0:363","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[483,24],"end":[483,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"1:3207:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:353:2569","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13370:35962":{"id":"1:13370:35962","crate_id":1,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"4:12389:476","self::pattern":"1:12960:3271"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12966:3260","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:12966:3260","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"1:12986:4213","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13391:35967":{"id":"1:13391:35967","crate_id":1,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"1:12921:137","`FromStr`":"1:12920:3268"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42298:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"1:12920:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"1:12920:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5720:36665":{"id":"5:5720:36665","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7774:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5731:32080":{"id":"5:5731:32080","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:13396:32082"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5732:2667":{"id":"5:5732:2667","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:13397:32083"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:189:2353":{"id":"0:189:2353","crate_id":0,"name":"Uts46","span":{"filename":"src/uts46.rs","begin":[568,0],"end":[574,1]},"visibility":"public","docs":"An implementation of UTS #46.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:197","a:1:3212:247-0:189:2353","a:1:42260:3700-0:189:2353","a:1:3247:3334-0:189:2353","a:1:42259:3701-0:189:2353","a:1:32457:3337-0:189:2353","a:1:32398:237-0:189:2353","b:1:2719-0:189:2353","b:1:2989-0:189:2353","b:1:3828-0:189:2353","b:1:3004-0:189:2353","b:1:2993-0:189:2353","b:1:2999-0:189:2353","b:1:2716-0:189:2353","b:23:483-0:189:2353","b:24:105-0:189:2353","0:195"]}}},"b:23:483-0:368:2573":{"id":"b:23:483-0:368:2573","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/icu_provider-1.5.0/src/any.rs","begin":[32,0],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MaybeSendSync","id":"23:482:27329","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:368:2573","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13359:35956":{"id":"1:13359:35956","crate_id":1,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"1:12960:3271","`DoubleEndedIterator`":"1:8333:130","prim@char":"4:12389:476","str::match_indices":"1:13356:35955"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"1:44205:4231","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12966:3260","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:12966:3260","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:12981:4214","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13309:3110":{"id":"1:13309:3110","crate_id":1,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, in which case this function will return true if\nthe `&str` is a prefix of this string slice.\n\nThe [pattern] can also be a [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\nThese will only be checked against the first character of this string slice.\nLook at the second example below regarding behavior for slices of [`char`]s.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```\n\n```\nlet bananas = \"bananas\";\n\n// Note that both of these assert successfully.\nassert!(bananas.starts_with(&['b', 'a', 'n', 'a']));\nassert!(bananas.starts_with(&['a', 'b', 'c', 'd']));\n```","links":{"prim@char":"4:12389:476","self::pattern":"1:12960:3271"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12966:3260","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13382:35964":{"id":"1:13382:35964","crate_id":1,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"4:12389:476","self::pattern":"1:12960:3271"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12966:3260","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:12966:3260","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:12981:4214","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:378":{"id":"0:378","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[501,24],"end":[501,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"1:3207:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:368:2573","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:29:2603":{"id":"0:29:2603","crate_id":0,"name":"use_idna_2008_rules","span":{"filename":"src/deprecated.rs","begin":[211,4],"end":[214,5]},"visibility":"public","docs":"Obsolete method retained to ease migration. The argument must be `false`.\n\nPanics\n\nIf the argument is `true`.","links":{},"attrs":["#[inline]","#[allow(unused_mut)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["value",{"primitive":"bool"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:358":{"id":"0:358","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[483,9],"end":[483,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"1:32400:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:353:2569","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2716-0:401:2358":{"id":"b:1:2716-0:401:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32399:2712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:401:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2718:2349"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2989-0:340:2567":{"id":"b:1:2989-0:340:2567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:340:2567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2992:3843"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:797:28168":{"id":"5:797:28168","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32457:3337-0:300:2352":{"id":"a:1:32457:3337-0:300:2352","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32457:3337","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:300:2352","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2999-0:258:2355":{"id":"b:1:2999-0:258:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:258:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3002:138","1:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3004-0:300:2352":{"id":"b:1:3004-0:300:2352","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:300:2352","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3007:138","1:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:3247:3334-0:340:2567":{"id":"a:1:3247:3334-0:340:2567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3247:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:340:2567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:356:2572":{"id":"0:356:2572","crate_id":0,"name":"WroteToSink","span":{"filename":"src/uts46.rs","begin":[497,4],"end":[497,15]},"visibility":"default","docs":"There were no errors. The caller must consider what was written to the sink to be the output.\n\n(Distinct from `Passthrough` in order to allow `Cow` behavior to be implemented on top of\n[`Uts46::process`].)","links":{"`Uts46::process`":"0:208:2564"},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:251:2398":{"id":"0:251:2398","crate_id":0,"name":"domain_to_ascii_strict","span":{"filename":"src/lib.rs","begin":[136,0],"end":[145,1]},"visibility":"public","docs":"The [domain to ASCII](https://url.spec.whatwg.org/#concept-domain-to-ascii) algorithm,\nwith the `beStrict` flag set.\n\nNote that this rejects various real-world names including:\n* YouTube CDN nodes\n* Some GitHub user pages\n* Pseudo-hosts used by various TXT record-based protocols.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["domain",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42298:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"alloc::string::String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Errors","id":"0:401:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:24:105-0:189:2353":{"id":"b:24:105-0:189:2353","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/yoke-0.7.4/src/erased.rs","begin":[22,0],"end":[22,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ErasedDestructor","id":"24:104:27351","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:189:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3004-0:189:2353":{"id":"b:1:3004-0:189:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:189:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3007:138","1:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2999-0:254:2356":{"id":"b:1:2999-0:254:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:254:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3002:138","1:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2999-0:353:2569":{"id":"b:1:2999-0:353:2569","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:353:2569","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3002:138","1:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13289:28221":{"id":"1:13289:28221","crate_id":1,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"1:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:256":{"id":"0:256","crate_id":0,"name":null,"span":{"filename":"src/deprecated.rs","begin":[65,9],"end":[65,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"1:3041:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:254:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:257:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:42260:3700-0:310:2379":{"id":"a:1:42260:3700-0:310:2379","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42260:3700","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:310:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:3247:3334-0:325:2381":{"id":"a:1:3247:3334-0:325:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3247:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:325:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:3212:247-0:340:2567":{"id":"a:1:3212:247-0:340:2567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:340:2567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:42260:3700-0:189:2353":{"id":"a:1:42260:3700-0:189:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42260:3700","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:189:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:25:2579":{"id":"0:25:2579","crate_id":0,"name":"use_std3_ascii_rules","span":{"filename":"src/deprecated.rs","begin":[162,4],"end":[165,5]},"visibility":"public","docs":"Whether to enforce STD3 or WHATWG URL Standard ASCII deny list.\n\n`true` for STD3, `false` for no deny list.\n\nNote that `true` rejects pseudo-hosts used by various TXT record-based protocols.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["value",{"primitive":"bool"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2719-0:325:2381":{"id":"b:1:2719-0:325:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32399:2712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:325:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2721:28162"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2716-0:340:2567":{"id":"b:1:2716-0:340:2567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32399:2712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:340:2567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2718:2349"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:3212:247-0:368:2573":{"id":"a:1:3212:247-0:368:2573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:368:2573","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:793-0:368:2573":{"id":"b:5:793-0:368:2573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:789:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:368:2573","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:795:2557","5:796:28167","5:797:28168"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:16":{"id":"0:16","crate_id":0,"name":null,"span":{"filename":"src/deprecated.rs","begin":[71,0],"end":[129,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Idna","id":"0:254:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:17:1191","0:18:2378","0:20:2412"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:18:2378":{"id":"0:18:2378","crate_id":0,"name":"to_ascii","span":{"filename":"src/deprecated.rs","begin":[78,4],"end":[105,5]},"visibility":"public","docs":"[UTS 46 ToASCII](http://www.unicode.org/reports/tr46/#ToASCII)","links":{},"attrs":["#[allow(clippy::wrong_self_convention)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["domain",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["out",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42298:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Errors","id":"0:401:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:369:2574":{"id":"0:369:2574","crate_id":0,"name":"ValidityError","span":{"filename":"src/uts46.rs","begin":[507,4],"end":[507,17]},"visibility":"default","docs":"There was a validity error according to the chosen options.\n\nIn case of `Operation::ToAscii`, there is no output. Otherwise, output was written to the\nsink and the output contains at least one U+FFFD REPLACEMENT CHARACTER to denote an error.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:376":{"id":"0:376","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[501,20],"end":[501,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"1:2771:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:368:2573","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:202:2412":{"id":"0:202:2412","crate_id":0,"name":"to_unicode","span":{"filename":"src/uts46.rs","begin":[679,4],"end":[686,5]},"visibility":"public","docs":"Performs the [ToUnicode](https://www.unicode.org/reports/tr46/#ToUnicode) operation\nfrom UTS #46 according to the options given. When there\nare errors, there is still output, which may be rendered user, even through\nthe output must not be used in networking protocols. Errors are denoted\nby U+FFFD REPLACEMENT CHARACTERs in the output. (That is, if the second item of the\nreturn tuple is `Err`, the first item of the return tuple is guaranteed to contain\nat least one U+FFFD.)\n\nMost applications probably shouldn't use this method and should be using\n[`Uts46::to_user_interface`] instead.\n\n# Arguments\n\n* `domain_name` - The input domain name as UTF-8 bytes. (The UTF-8ness is checked by\nthis method and input that is not well-formed UTF-8 is treated as an error. If you\nalready have a `&str`, call `.as_bytes()` on it.)\n* `ascii_deny_list` - What ASCII deny list, if any, to apply. The UTS 46\n_UseSTD3ASCIIRules_ flag or the WHATWG URL Standard forbidden domain code point\nprocessing is handled via this argument. Most callers are probably the best off\nby using [`AsciiDenyList::URL`] here.\n* `hyphens` - The UTS 46 _CheckHyphens_ flag. Most callers are probably the best\noff by using [`Hyphens::Allow`] here.","links":{"`Uts46::to_user_interface`":"0:205:2978","`AsciiDenyList::URL`":"0:182:2893","`Hyphens::Allow`":"0:311:2380"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["domain_name",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["ascii_deny_list",{"resolved_path":{"name":"AsciiDenyList","id":"0:300:2352","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["hyphens",{"resolved_path":{"name":"Hyphens","id":"0:310:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"tuple":[{"resolved_path":{"name":"Cow","id":"5:798:119","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}},{"resolved_path":{"name":"Result","id":"1:42298:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"crate::Errors","id":"0:401:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3004-0:254:2356":{"id":"b:1:3004-0:254:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:254:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3007:138","1:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:42259:3701-0:325:2381":{"id":"a:1:42259:3701-0:325:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42259:3701","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:325:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:365:480":{"id":"0:365:480","crate_id":0,"name":"clone","span":{"filename":"src/uts46.rs","begin":[483,30],"end":[483,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ProcessingSuccess","id":"0:353:2569","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:129:2351":{"id":"0:129:2351","crate_id":0,"name":"uts46","span":{"filename":"src/uts46.rs","begin":[9,0],"end":[1768,1]},"visibility":"public","docs":"This module provides the lower-level API for UTS 46.\n\n[`Uts46::process`] is the core that the other convenience\nmethods build on.\n\nUTS 46 flags map to this API as follows:\n\n* _CheckHyphens_ - _true_: [`Hyphens::Check`], _false_: [`Hyphens::Allow`]; the WHATWG URL Standard sets this to _false_ for normal (non-conformance-checker) user agents.\n* _CheckBidi_ - Always _true_; cannot be configured, since this flag is _true_ even when WHATWG URL Standard _beStrict_ is _false_.\n* _CheckJoiners_ - Always _true_; cannot be configured, since this flag is _true_ even when WHATWG URL Standard _beStrict_ is _false_.\n* _UseSTD3ASCIIRules_ - _true_: [`AsciiDenyList::STD3`], _false_: [`AsciiDenyList::EMPTY`]; however, the check the WHATWG URL Standard performs right after the UTS 46 invocation corresponds to [`AsciiDenyList::URL`].\n* _Transitional_Processing_ - Always _false_ but could be implemented as a preprocessing step. This flag is deprecated and for Web purposes the transition is over in the sense that all of Firefox, Safari, or Chrome set this flag to _false_.\n* _VerifyDnsLength_ - _true_: [`DnsLength::Verify`], _false_: [`DnsLength::Ignore`]; the WHATWG URL Standard sets this to _false_ for normal (non-conformance-checker) user agents.\n* _IgnoreInvalidPunycode_ - Always _false_; cannot be configured. (Not yet covered by the WHATWG URL Standard, but 2 out of 3 major browser clearly behave as if this was _false_).","links":{"`Hyphens::Allow`":"0:311:2380","`Hyphens::Check`":"0:315:2400","`AsciiDenyList::EMPTY`":"0:180:2389","`AsciiDenyList::STD3`":"0:181:2399","`DnsLength::Verify`":"0:330:2401","`AsciiDenyList::URL`":"0:182:2893","`Uts46::process`":"0:208:2564","`DnsLength::Ignore`":"0:326:2382"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:300:2352","0:310:2379","0:325:2381","0:340:2567","0:353:2569","0:368:2573","0:187:2571","0:189:2353"],"is_stripped":false}}},"0:248:2375":{"id":"0:248:2375","crate_id":0,"name":"domain_to_ascii_cow","span":{"filename":"src/lib.rs","begin":[102,0],"end":[112,1]},"visibility":"public","docs":"The [domain to ASCII](https://url.spec.whatwg.org/#concept-domain-to-ascii) algorithm;\nversion returning a `Cow`.\n\nMost applications should be using this function rather than the sibling functions,\nand most applications should pass [`AsciiDenyList::URL`] as the second argument.\nPassing [`AsciiDenyList::URL`] as the second argument makes this function also\nperform the [forbidden domain code point](https://url.spec.whatwg.org/#forbidden-domain-code-point)\ncheck in addition to the [domain to ASCII](https://url.spec.whatwg.org/#concept-domain-to-ascii)\nalgorithm.\n\nReturns the ASCII representation a domain name,\nnormalizing characters (upper-case to lower-case and other kinds of equivalence)\nand using Punycode as necessary.\n\nThis process may fail.\n\nIf you have a `&str` instead of `&[u8]`, just call `.to_bytes()` on it before\npassing it to this function. It's still preferable to use this function over\nthe sibling functions that take `&str`.","links":{"`AsciiDenyList::URL`":"0:182:2893"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["domain",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["ascii_deny_list",{"resolved_path":{"name":"AsciiDenyList","id":"0:300:2352","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42298:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"alloc::borrow::Cow","id":"5:798:119","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"primitive":"str"}}],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Errors","id":"0:401:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13291:35949":{"id":"1:13291:35949","crate_id":1,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"4:12395:1739","str::slice_mut_unchecked":"1:13292:35950","crate::ops::Index":"1:39712:3290"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:404":{"id":"0:404","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,18],"end":[64,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10389:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:401:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:405:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13294:3136":{"id":"1:13294:3136","crate_id":1,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_mut_checked`](str::split_at_mut_checked).\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"1:13293:2843","str::split_at_mut_checked":"1:13296:32649"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:325:2381":{"id":"0:325:2381","crate_id":0,"name":"DnsLength","span":{"filename":"src/uts46.rs","begin":[460,0],"end":[468,1]},"visibility":"public","docs":"The UTS 46 _VerifyDNSLength_ flag.","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:326:2382","0:328:2910","0:330:2401"],"impls":["a:1:3212:247-0:325:2381","a:1:42260:3700-0:325:2381","a:1:3247:3334-0:325:2381","a:1:42259:3701-0:325:2381","a:1:32457:3337-0:325:2381","a:1:32398:237-0:325:2381","b:1:2719-0:325:2381","b:1:2989-0:325:2381","b:1:3828-0:325:2381","b:1:3004-0:325:2381","b:1:2993-0:325:2381","b:1:2999-0:325:2381","b:1:2716-0:325:2381","b:5:793-0:325:2381","b:23:483-0:325:2381","b:24:105-0:325:2381","0:338","0:332","0:335","0:333","0:337"]}}},"0:324:480":{"id":"0:324:480","crate_id":0,"name":"clone","span":{"filename":"src/uts46.rs","begin":[434,30],"end":[434,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Hyphens","id":"0:310:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32457:3337-0:368:2573":{"id":"a:1:32457:3337-0:368:2573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32457:3337","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:368:2573","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:244:841":{"id":"0:244:841","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[69,4],"end":[71,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["e",{"resolved_path":{"name":"Errors","id":"0:401:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42298:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Errors","id":"0:401:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2999-0:300:2352":{"id":"b:1:2999-0:300:2352","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:300:2352","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3002:138","1:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13301:28575":{"id":"1:13301:28575","crate_id":1,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"1:13302:28568"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"1:44311:4224","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:247:811":{"id":"0:247:811","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[78,4],"end":[80,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"core::fmt::Formatter","id":"1:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"core::fmt::Result","id":"1:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3247:3334-0:254:2356":{"id":"a:1:3247:3334-0:254:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3247:3334","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:254:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:13401:35968":{"id":"1:13401:35968","crate_id":1,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"1:5017:35968"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"1:44336:3927","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2716-0:254:2356":{"id":"b:1:2716-0:254:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32399:2712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:254:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2718:2349"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:313:2607":{"id":"0:313:2607","crate_id":0,"name":"CheckFirstLast","span":{"filename":"src/uts46.rs","begin":[447,4],"end":[447,18]},"visibility":"default","docs":"Prohibit hyphens in the first and last position in the label but allow in\nthe third and fourth position.\n\nNote that this mode rejects real-world names, including some GitHub user pages.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"1:13319:3849":{"id":"1:13319:3849","crate_id":1,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"1:42168:191","prim@char":"4:12389:476","self::pattern":"1:12960:3271"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:42166:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12966:3260","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:12966:3260","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:12981:4214","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5712":{"id":"5:5712","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5713:36663","5:5714:10138","5:5717:36664","5:5720:36665","5:5728:36666","5:5729:36667","5:5730:2728","5:5731:32080","5:5732:2667"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:3212:247-0:401:2358":{"id":"a:1:3212:247-0:401:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:401:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2989-0:353:2569":{"id":"b:1:2989-0:353:2569","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:353:2569","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2992:3843"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13295:32648":{"id":"1:13295:32648","crate_id":1,"name":"split_at_checked","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut_checked`]\nmethod.\n\n[`split_at_mut_checked`]: str::split_at_mut_checked\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at_checked(3).unwrap();\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n\nassert_eq!(None, s.split_at_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_checked(16));  // Beyond the string length\n```","links":{"str::split_at_mut_checked":"1:13296:32649"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"1:42166:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2716-0:300:2352":{"id":"b:1:2716-0:300:2352","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32399:2712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:300:2352","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2718:2349"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:334:706":{"id":"0:334:706","crate_id":0,"name":"eq","span":{"filename":"src/uts46.rs","begin":[458,9],"end":[458,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"DnsLength","id":"0:325:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42259:3701-0:340:2567":{"id":"a:1:42259:3701-0:340:2567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42259:3701","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:340:2567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:374":{"id":"0:374","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[501,9],"end":[501,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2766:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:368:2573","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:375:706"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:32457:3337-0:325:2381":{"id":"a:1:32457:3337-0:325:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32457:3337","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:325:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:3212:247-0:189:2353":{"id":"a:1:3212:247-0:189:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:189:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"1:13385:35965":{"id":"1:13385:35965","crate_id":1,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"4:12389:476","self::pattern":"1:12960:3271"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12966:3260","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:265":{"id":"0:265","crate_id":0,"name":null,"span":{"filename":"src/deprecated.rs","begin":[132,16],"end":[132,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"1:3207:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:258:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2989-0:325:2381":{"id":"b:1:2989-0:325:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:325:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2992:3843"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:337":{"id":"0:337","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[458,24],"end":[458,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"1:3207:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:325:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:793-0:310:2379":{"id":"b:5:793-0:310:2379","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:789:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:310:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:795:2557","5:796:28167","5:797:28168"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:315:2400":{"id":"0:315:2400","crate_id":0,"name":"Check","span":{"filename":"src/uts46.rs","begin":[454,4],"end":[454,9]},"visibility":"default","docs":"_CheckHyphens=true_: Prohibit hyphens in the first, third, fourth,\nand last position in the label.\n\nNote that this mode rejects real-world names, including YouTube CDN nodes\nand some GitHub user pages.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:341:2568":{"id":"0:341:2568","crate_id":0,"name":"FailFast","span":{"filename":"src/uts46.rs","begin":[475,4],"end":[475,12]},"visibility":"default","docs":"Return as early as possible without producing output in case of error.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:1:3004-0:340:2567":{"id":"b:1:3004-0:340:2567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:340:2567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3007:138","1:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:257:60":{"id":"0:257:60","crate_id":0,"name":"default","span":{"filename":"src/deprecated.rs","begin":[65,9],"end":[65,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Idna","id":"0:254:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3004-0:310:2379":{"id":"b:1:3004-0:310:2379","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:310:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3007:138","1:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:24":{"id":"0:24","crate_id":0,"name":null,"span":{"filename":"src/deprecated.rs","begin":[155,0],"end":[248,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Config","id":"0:258:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:25:2579","0:26:2563","0:27:2571","0:28:2580","0:29:2603","0:32:2378","0:34:2412"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:3830:1839":{"id":"1:3830:1839","crate_id":1,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"1:39881:7330","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3828-0:340:2567":{"id":"b:1:3828-0:340:2567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32399:2712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:340:2567","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:379":{"id":"0:379","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[501,30],"end":[501,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:368:2573","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:380:480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13273:35945":{"id":"1:13273:35945","crate_id":1,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32457:3337-0:254:2356":{"id":"a:1:32457:3337-0:254:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32457:3337","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:254:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:304:706":{"id":"0:304:706","crate_id":0,"name":"eq","span":{"filename":"src/uts46.rs","begin":[349,9],"end":[349,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"AsciiDenyList","id":"0:300:2352","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:338":{"id":"0:338","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[458,30],"end":[458,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:325:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:339:480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13379:2942":{"id":"1:13379:2942","crate_id":1,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"4:12389:476","self::pattern":"1:12960:3271"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:42166:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12966:3260","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:12966:3260","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:12981:4214","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13397:32083":{"id":"1:13397:32083","crate_id":1,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13398:33790":{"id":"1:13398:33790","crate_id":1,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"1:1066:41795"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:180:2389":{"id":"0:180:2389","crate_id":0,"name":"EMPTY","span":{"filename":"src/uts46.rs","begin":[414,4],"end":[414,67]},"visibility":"public","docs":"No ASCII deny list. This corresponds to _UseSTD3ASCIIRules=false_.\n\nEquivalent to `AsciiDenyList::new(false, \"\")`.\n\nNote: Not denying the space and control characters can result in\nstrange behavior. Without a deny list provided to the UTS 46\noperation, the caller is expected perform filtering afterwards,\nbut it's more efficient to use `AsciiDenyList` than post-processing,\nbecause the internals of this crate can optimize away checks in\ncertain cases.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"AsciiDenyList","id":"0:300:2352","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"_"}}}},"paths":{"17:14127:5660":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"20:626:3403":{"crate_id":20,"path":["icu_normalizer","CharacterAndClass"],"kind":"struct"},"17:15836:6064":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"4:10999:7021":{"crate_id":4,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"4:5103:15813":{"crate_id":4,"path":["std","os","net","linux_ext","socket","UnixSocketExt"],"kind":"trait"},"1:2052:7214":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"6:1514:8417":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"1:43783:7380":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"16:4844:6386":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"17:13491:5548":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"22:4395:3521":{"crate_id":22,"path":["icu_properties","provider","ChangesWhenLowercasedV1Marker"],"kind":"struct"},"32:2102:27174":{"crate_id":32,"path":["zerovec","ule","AsULE"],"kind":"trait"},"16:6239:4566":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"1:44840:10334":{"crate_id":1,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:44759:4209":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:10402:3310":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"17:16171:6171":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"4:8219:7088":{"crate_id":4,"path":["std","fs","Permissions"],"kind":"struct"},"22:5177:5124":{"crate_id":22,"path":["icu_properties","script","ScriptExtensionsSet"],"kind":"struct"},"17:13006:5520":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"16:6462:22881":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"1:43843:4015":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"17:15496:6003":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"17:12028:5402":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"4:11824:9731":{"crate_id":4,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"6:1657:8516":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"6:1521:8420":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"17:15475:5998":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"22:4703:3565":{"crate_id":22,"path":["icu_properties","provider","SentenceTerminalV1Marker"],"kind":"struct"},"16:8598:6760":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"22:4738:3570":{"crate_id":22,"path":["icu_properties","provider","WhiteSpaceV1Marker"],"kind":"struct"},"11:708:4656":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"17:12335:5439":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"17:14284:5695":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"32:0:3351":{"crate_id":32,"path":["zerovec"],"kind":"module"},"1:40699:107":{"crate_id":1,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:47358:7548":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:8386:2697":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:39824:216":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"11:873:6860":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"17:15418:5961":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"34:370:27426":{"crate_id":34,"path":["litemap","store","StoreFromIterator"],"kind":"trait"},"5:6533:15862":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"22:4479:3533":{"crate_id":22,"path":["icu_properties","provider","ExtenderV1Marker"],"kind":"struct"},"6:6813:9141":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"4:12400:747":{"crate_id":4,"path":["std","f32"],"kind":"primitive"},"32:1753:38286":{"crate_id":32,"path":["zerovec","ule","multi","BlankSliceEncoder"],"kind":"struct"},"1:32322:8323":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"1:3458:142":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"17:11818:5390":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"1:39881:7330":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"17:15905:6081":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"4:988:6860":{"crate_id":4,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"4:11728:7071":{"crate_id":4,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"17:317:5205":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"6:491:8346":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"18:659:5185":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"17:10167:22941":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"17:14859:5801":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"1:46849:7492":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"16:5742:4463":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"1:12986:4213":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"17:13719:5578":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"22:5243:5130":{"crate_id":22,"path":["icu_properties","sets","UnicodeSetData"],"kind":"struct"},"18:581:3830":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"4:766:154":{"crate_id":4,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"1:23121:15726":{"crate_id":1,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"1:44633:7401":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"22:5232:5128":{"crate_id":22,"path":["icu_properties","sets","CodePointSetDataBorrowed"],"kind":"struct"},"29:1256:5049":{"crate_id":29,"path":["icu_locid","extensions","unicode","attribute","Attribute"],"kind":"struct"},"16:4241:6380":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"1:2148:10164":{"crate_id":1,"path":["core","ptr","metadata","Thin"],"kind":"trait_alias"},"40:331:3300":{"crate_id":40,"path":["smallvec","SetLenOnDrop"],"kind":"struct"},"6:1643:8505":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"16:2920:6361":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"6:5462:8845":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"11:2301:6606":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"5:7084:3301":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"1:42387:90":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:41365:7250":{"crate_id":1,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"1:32389:7326":{"crate_id":1,"path":["core","error","Source"],"kind":"struct"},"17:12056:4491":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"16:5348:6402":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"1:23235:7317":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI16Inner"],"kind":"struct"},"11:881:6861":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"17:12897:5509":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"29:1796:4425":{"crate_id":29,"path":["icu_locid","subtags","variants","Variants"],"kind":"struct"},"16:8320:22890":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"6:5635:8917":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"5:3352:35754":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"17:16297:6203":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"11:1064:21948":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"22:4332:3512":{"crate_id":22,"path":["icu_properties","provider","BidiControlV1Marker"],"kind":"struct"},"7:79:21863":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"1:6076:9381":{"crate_id":1,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"4:10945:9384":{"crate_id":4,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"1:3933:3254":{"crate_id":1,"path":["core","array","drain","Drain"],"kind":"struct"},"1:2802:195":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"17:11163:4466":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"6:1507:8415":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"4:936:3254":{"crate_id":4,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"32:2112:27170":{"crate_id":32,"path":["zerovec","ule","VarULE"],"kind":"trait"},"5:6117:72":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"6:578:8399":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"17:10977:37372":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"16:6998:6512":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"17:11971:5397":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"17:16798:6329":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"16:7044:4598":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"16:7075:22883":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"6:7308:9188":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"6:1696:8533":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"11:772:4653":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"0:187:2571":{"crate_id":0,"path":["idna","uts46","verify_dns_length"],"kind":"function"},"5:5006:217":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"1:23089:7306":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"18:573:5168":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"36:403:3414":{"crate_id":36,"path":["icu_collections","char16trie","trie","Char16TrieIterator"],"kind":"struct"},"17:16264:6196":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"30:303:5032":{"crate_id":30,"path":["writeable","parts_write_adapter","CoreWriteAsPartsWrite"],"kind":"struct"},"17:15679:6025":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"16:8209:4614":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"30:0:3349":{"crate_id":30,"path":["writeable"],"kind":"module"},"1:46036:7426":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"22:3574:4443":{"crate_id":22,"path":["icu_properties","provider","bidi_data","MirroredPairedBracketData"],"kind":"struct"},"1:43379:4865":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"4:4346:15791":{"crate_id":4,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"17:11579:5368":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"17:16084:6155":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"4:4492:7027":{"crate_id":4,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"6:5533:8866":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"22:4521:3539":{"crate_id":22,"path":["icu_properties","provider","HexDigitV1Marker"],"kind":"struct"},"16:8014:4606":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"1:40637:3929":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"1:39712:3290":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"16:5449:6405":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"4:11976:32376":{"crate_id":4,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"11:698:3297":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"1:42106:7025":{"crate_id":1,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"17:667:5211":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"17:10938:37378":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"11:430:9717":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"6:1563:8448":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"22:4843:3585":{"crate_id":22,"path":["icu_properties","provider","GeneralCategoryNameToValueV1Marker"],"kind":"struct"},"22:1047:5095":{"crate_id":22,"path":["icu_properties","props","PropertyValueNameToEnumMapper"],"kind":"struct"},"1:47151:7529":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"14:31:6846":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"1:10041:4719":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:5260:438":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"4:8256:4668":{"crate_id":4,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"1:22628:15467":{"crate_id":1,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"1:22589:28911":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"1:40575:3925":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"0:249:2387":{"crate_id":0,"path":["idna","domain_to_ascii"],"kind":"function"},"6:5366:8789":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"6:8267:9349":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"16:7350:4557":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"1:22232:4013":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"5:1410:6862":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"4:8562:4223":{"crate_id":4,"path":["std","io","Lines"],"kind":"struct"},"17:13838:4506":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"17:13169:5530":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"11:1005:6606":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"5:7797:3256":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"6:5217:8734":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"1:45033:30281":{"crate_id":1,"path":["core","task","wake","ExtData"],"kind":"enum"},"22:4927:3597":{"crate_id":22,"path":["icu_properties","provider","HangulSyllableTypeNameToValueV1Marker"],"kind":"struct"},"17:12234:5424":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"1:10832:29768":{"crate_id":1,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"16:2860:6358":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"1:39874:7329":{"crate_id":1,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"17:15739:6043":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"6:6652:9091":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"6:7350:9212":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"11:1158:6867":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"16:3110:6372":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"22:5262:5132":{"crate_id":22,"path":["icu_properties","sets","UnicodeSetDataBorrowed"],"kind":"struct"},"17:12163:5416":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"4:2081:198":{"crate_id":4,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"36:368:9691":{"crate_id":36,"path":["icu_collections","iterator_utils","RangeListIteratorCoalescer"],"kind":"struct"},"1:40598:3928":{"crate_id":1,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"4:10518:114":{"crate_id":4,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"16:6098:6414":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"41:86:4934":{"crate_id":41,"path":["utf16_iter","report","ErrorReportingUtf16Chars"],"kind":"struct"},"4:3656:2614":{"crate_id":4,"path":["std","io","Write"],"kind":"trait"},"5:4569:9381":{"crate_id":5,"path":["alloc","collections","vec_deque","shrink_to","Guard"],"kind":"struct"},"32:2113:37640":{"crate_id":32,"path":["zerovec","ule","VarULE","validate_byte_slice"],"kind":"function"},"4:12175:34280":{"crate_id":4,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"5:2265:15642":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"32:2098:37640":{"crate_id":32,"path":["zerovec","ule","ULE","validate_byte_slice"],"kind":"function"},"17:12869:5546":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"11:2566:3263":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"1:41165:7247":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"16:3441:6373":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"16:7212:6559":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"18:113:9697":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"4:8532:4711":{"crate_id":4,"path":["std","io","Chain"],"kind":"struct"},"16:8626:6761":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"6:6691:9101":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"0:340:2567":{"crate_id":0,"path":["idna","uts46","ErrorPolicy"],"kind":"enum"},"17:12570:5479":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"1:3455:141":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"16:6144:22878":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"22:993:2746":{"crate_id":22,"path":["icu_properties","maps","CodePointMapDataBorrowed"],"kind":"struct"},"6:1675:8523":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:44055:4025":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"37:626:4958":{"crate_id":37,"path":["icu_locid_transform","provider","expander","LikelySubtagsV1"],"kind":"struct"},"1:11481:4023":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"5:7094:3302":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"1:41394:7019":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"16:5085:6393":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"6:5044:8693":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"38:0:3357":{"crate_id":38,"path":["icu_locid_transform_data"],"kind":"module"},"1:42072:28834":{"crate_id":1,"path":["core","net","parser","AddrKind"],"kind":"enum"},"1:6153:7233":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"5:1645:6952":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"17:11592:5314":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"4:9267:15859":{"crate_id":4,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"4:6885:7065":{"crate_id":4,"path":["std","sync","reentrant_lock","ReentrantLockGuard"],"kind":"struct"},"1:44771:4210":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"6:538:8378":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"1:0:568":{"crate_id":1,"path":["core"],"kind":"module"},"0:253:2411":{"crate_id":0,"path":["idna","domain_to_unicode"],"kind":"function"},"1:23007:28795":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"5:5:1947":{"crate_id":5,"path":["alloc","vec"],"kind":"macro"},"17:11566:5367":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"17:16632:6290":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"4:9178:4673":{"crate_id":4,"path":["std","process","ExitCode"],"kind":"struct"},"5:6901:36953":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"6:564:8391":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"18:80:9693":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"6:7391:9239":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"4:8364:15757":{"crate_id":4,"path":["std","io","error","ErrorKind"],"kind":"enum"},"18:613:37385":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"22:4346:3514":{"crate_id":22,"path":["icu_properties","provider","BlankV1Marker"],"kind":"struct"},"4:11447:6928":{"crate_id":4,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"6:6748:9118":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"22:5109:3623":{"crate_id":22,"path":["icu_properties","provider","IndicSyllabicCategoryValueToLongNameV1Marker"],"kind":"struct"},"0:52:625":{"crate_id":0,"path":["idna","punycode","decode"],"kind":"function"},"0:330:2401":{"crate_id":0,"path":["idna","uts46","DnsLength","Verify"],"kind":"variant"},"18:635:5184":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"1:21806:15726":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"20:408:3410":{"crate_id":20,"path":["icu_normalizer","provider","DecompositionDataV1"],"kind":"struct"},"17:13610:5559":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"11:1888:3254":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"16:7578:7179":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"17:13970:5618":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"1:13873:116":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"32:2100:37641":{"crate_id":32,"path":["zerovec","ule","ULE","from_byte_slice_unchecked"],"kind":"function"},"17:11678:5373":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"6:5025:8684":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"23:55:3434":{"crate_id":23,"path":["icu_provider","data_provider","BoundDataProvider"],"kind":"trait"},"20:428:3411":{"crate_id":20,"path":["icu_normalizer","provider","Uts46DecompositionSupplementV1Marker"],"kind":"struct"},"22:4458:3530":{"crate_id":22,"path":["icu_properties","provider","EmojiModifierV1Marker"],"kind":"struct"},"27:16:3424":{"crate_id":27,"path":["zerofrom","zero_from","ZeroFrom"],"kind":"trait"},"17:11173:37379":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"1:45020:7411":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:2969:258":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"16:8528:6751":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"5:7519:6973":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"6:1667:8522":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"4:4812:15770":{"crate_id":4,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"16:7305:6574":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"4:12414:1931":{"crate_id":4,"path":["std","usize"],"kind":"primitive"},"5:994:15678":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"16:6084:6410":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"17:12359:5441":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"4:4822:9232":{"crate_id":4,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"function"},"5:7721:10247":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:13547:4505":{"crate_id":17,"path":["object","read","RelocationMap"],"kind":"struct"},"17:14405:5717":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"30:96:38144":{"crate_id":30,"path":["writeable","testing","TestWriter"],"kind":"struct"},"5:5309:4665":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"0:248:2375":{"crate_id":0,"path":["idna","domain_to_ascii_cow"],"kind":"function"},"17:0:3238":{"crate_id":17,"path":["object"],"kind":"module"},"16:7386:4602":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"22:4507:3537":{"crate_id":22,"path":["icu_properties","provider","GraphemeExtendV1Marker"],"kind":"struct"},"22:1710:3468":{"crate_id":22,"path":["icu_properties","props","GraphemeClusterBreak"],"kind":"struct"},"4:1930:7002":{"crate_id":4,"path":["std","env","ArgsOs"],"kind":"struct"},"23:645:3442":{"crate_id":23,"path":["icu_provider","marker","DataMarker"],"kind":"trait"},"4:12415:1434":{"crate_id":4,"path":["std","reference"],"kind":"primitive"},"1:46799:7490":{"crate_id":1,"path":["core","core_arch","simd","m16x16"],"kind":"struct"},"22:4318:3510":{"crate_id":22,"path":["icu_properties","provider","AlnumV1Marker"],"kind":"struct"},"1:12737:4238":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:40515:3933":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"22:4710:3566":{"crate_id":22,"path":["icu_properties","provider","TerminalPunctuationV1Marker"],"kind":"struct"},"6:6493:9004":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"0:313:2607":{"crate_id":0,"path":["idna","uts46","Hyphens","CheckFirstLast"],"kind":"variant"},"37:492:27455":{"crate_id":37,"path":["icu_locid_transform","provider","canonicalizer","AliasesV2Marker"],"kind":"struct"},"1:10355:144":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"1:4877:3323":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"23:574:3436":{"crate_id":23,"path":["icu_provider","buf","BufferProvider"],"kind":"trait"},"4:3566:9381":{"crate_id":4,"path":["std","io","Guard"],"kind":"struct"},"23:1130:5088":{"crate_id":23,"path":["icu_provider","hello_world","FormattedHelloWorld"],"kind":"struct"},"1:3217:2615":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"1:44336:3927":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"1:4501:10216":{"crate_id":1,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"25:6:27349":{"crate_id":25,"path":["stable_deref_trait","StableDeref"],"kind":"trait"},"5:7611:3297":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"11:1049:6863":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"6:5165:8713":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"17:12787:5496":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"1:46104:7434":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"17:13592:5556":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"18:608:5178":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"17:16241:6195":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"1:40949:7240":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"11:2440:3254":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"17:13662:5566":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"15:306:9705":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"14:0:3235":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"6:5117:8709":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"6:7332:9205":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"9:236:7375":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"17:10031:22937":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"6:6521:9016":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"36:0:3355":{"crate_id":36,"path":["icu_collections"],"kind":"module"},"4:6817:15853":{"crate_id":4,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"1:46118:7435":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"18:598:37383":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"1:45957:7417":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"23:1114:4442":{"crate_id":23,"path":["icu_provider","hello_world","HelloWorldProvider"],"kind":"struct"},"1:4066:3297":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"6:1500:8412":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"1:46346:7455":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"17:14520:5735":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"17:16822:5612":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"4:9288:7174":{"crate_id":4,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"1:43872:4028":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"17:14460:5726":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"23:835:4428":{"crate_id":23,"path":["icu_provider","fallback","LocaleFallbackConfig"],"kind":"struct"},"1:43152:28828":{"crate_id":1,"path":["core","fmt","rt","ArgumentType"],"kind":"enum"},"37:300:4345":{"crate_id":37,"path":["icu_locid_transform","canonicalizer","LocaleCanonicalizer"],"kind":"struct"},"17:12280:5430":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"23:1028:3428":{"crate_id":23,"path":["icu_provider","any","AnyMarker"],"kind":"struct"},"1:40800:7345":{"crate_id":1,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"1:44783:4206":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"6:6740:9117":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"17:12306:5434":{"crate_id":17,"path":["object","read","macho","fat","MachOFatFile"],"kind":"struct"},"37:884:3502":{"crate_id":37,"path":["icu_locid_transform","provider","Baked"],"kind":"struct"},"4:8197:7086":{"crate_id":4,"path":["std","fs","ReadDir"],"kind":"struct"},"17:12605:4466":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"1:12966:3260":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"6:5282:8765":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"4:12410:1857":{"crate_id":4,"path":["std","u32"],"kind":"primitive"},"6:6623:9078":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"22:4402:3522":{"crate_id":22,"path":["icu_properties","provider","ChangesWhenTitlecasedV1Marker"],"kind":"struct"},"17:12723:5491":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"17:13306:5541":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"5:3703:182":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"4:5465:203":{"crate_id":4,"path":["std","path","Path"],"kind":"struct"},"4:9306:116":{"crate_id":4,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"17:12392:5442":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"17:11432:22966":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"32:1775:5010":{"crate_id":32,"path":["zerovec","ule","niche","NichedOptionULE"],"kind":"union"},"29:1355:5048":{"crate_id":29,"path":["icu_locid","extensions","unicode","key","Key"],"kind":"struct"},"18:689:5194":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"1:42572:95":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"16:6890:4595":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"5:7258:36962":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"4:9135:7169":{"crate_id":4,"path":["std","process","CommandArgs"],"kind":"struct"},"16:8151:4612":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"11:1907:6872":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"17:12044:5407":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"17:15010:5832":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"5:4337:9381":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"22:2041:3470":{"crate_id":22,"path":["icu_properties","props","IndicSyllabicCategory"],"kind":"struct"},"4:12356:4701":{"crate_id":4,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"5:2275:6956":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"1:41379:7059":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"4:9742:7086":{"crate_id":4,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"18:735:27140":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"9:176:4643":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"4:4015:7024":{"crate_id":4,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"6:5295:8770":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"1:40715:10247":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:2155:7215":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"22:1924:2748":{"crate_id":22,"path":["icu_properties","props","CanonicalCombiningClass"],"kind":"struct"},"1:8003:4694":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"4:9186:2693":{"crate_id":4,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"1:43935:4029":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"11:671:2693":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"16:8043:37362":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"11:809:3294":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"1:41928:7259":{"crate_id":1,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"20:550:3458":{"crate_id":20,"path":["icu_normalizer","provider","NonRecursiveDecompositionSupplementV1Marker"],"kind":"struct"},"6:5658:8924":{"crate_id":6,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"22:4535:3541":{"crate_id":22,"path":["icu_properties","provider","IdContinueV1Marker"],"kind":"struct"},"17:14416:5718":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"17:14692:5757":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"1:3659:147":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:38474:10192":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"5:3940:3294":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"23:797:27450":{"crate_id":23,"path":["icu_provider","fallback","LocaleFallbackPriority"],"kind":"enum"},"17:13554:5553":{"crate_id":17,"path":["object","read","RelocationMapEntry"],"kind":"struct"},"17:15939:6094":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"0:328:2910":{"crate_id":0,"path":["idna","uts46","DnsLength","VerifyAllowRootDot"],"kind":"variant"},"4:4566:7028":{"crate_id":4,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"17:15315:5875":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"1:41179:7248":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"4:7796:7741":{"crate_id":4,"path":["std","panicking","begin_panic_handler","FormatStringPayload"],"kind":"struct"},"1:40780:7344":{"crate_id":1,"path":["core","ffi","VaList"],"kind":"struct"},"4:8891:7167":{"crate_id":4,"path":["std","path","Ancestors"],"kind":"struct"},"1:40937:7353":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"32:2591:5021":{"crate_id":32,"path":["zerovec","ule","plain","RawBytesULE"],"kind":"struct"},"1:44037:4021":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"17:14114:5656":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"24:422:5054":{"crate_id":24,"path":["yoke","cartable_ptr","CartableOptionPointer"],"kind":"struct"},"17:15876:6073":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"1:44971:227":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"17:16595:5597":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"22:4619:3553":{"crate_id":22,"path":["icu_properties","provider","NfkcInertV1Marker"],"kind":"struct"},"1:22539:15465":{"crate_id":1,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"4:4338:9727":{"crate_id":4,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"16:8028:4607":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"1:12661:4237":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:2612:10153":{"crate_id":1,"path":["core","ptr","with_exposed_provenance_mut"],"kind":"function"},"4:6424:4681":{"crate_id":4,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"16:8503:6748":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"17:15953:6096":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"4:378:6985":{"crate_id":4,"path":["std","thread","scoped","Scope"],"kind":"struct"},"4:11537:34993":{"crate_id":4,"path":["std","sys","sync","once","futex","CompletionGuard"],"kind":"struct"},"5:1533:2693":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"32:1500:28181":{"crate_id":32,"path":["zerovec","zerovec","EyepatchHackVector"],"kind":"struct"},"6:7368:9221":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"17:15812:6056":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"1:42346:4018":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"20:0:2414":{"crate_id":20,"path":["icu_normalizer"],"kind":"module"},"23:1109:5086":{"crate_id":23,"path":["icu_provider","hello_world","HelloWorldV1Marker"],"kind":"struct"},"16:2570:6345":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"6:4997:8668":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:2963:163":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"4:9194:7172":{"crate_id":4,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"1:12079:4040":{"crate_id":1,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"32:2785:5014":{"crate_id":32,"path":["zerovec","ule","unvalidated","UnvalidatedStr"],"kind":"struct"},"17:16036:6118":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"40:164:38837":{"crate_id":40,"path":["smallvec","insert_many","DropOnPanic"],"kind":"struct"},"4:892:4018":{"crate_id":4,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"22:3534:27153":{"crate_id":22,"path":["icu_properties","provider","bidi_data","BidiAuxiliaryPropertiesV1Marker"],"kind":"struct"},"17:15887:6077":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"17:15946:6095":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"16:7990:6694":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"17:14599:5746":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"1:11440:4026":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"22:4591:3549":{"crate_id":22,"path":["icu_properties","provider","MathV1Marker"],"kind":"struct"},"5:5518:36953":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"1:4:1270":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"17:10843:4464":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"1:10396:3307":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"16:3834:6376":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"36:436:4976":{"crate_id":36,"path":["icu_collections","codepointinvlist","cpinvlist","CodePointInversionListULE"],"kind":"struct"},"4:0:1731":{"crate_id":4,"path":["std"],"kind":"module"},"1:44775:4211":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"0:310:2379":{"crate_id":0,"path":["idna","uts46","Hyphens"],"kind":"enum"},"5:7677:15675":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"20:474:3419":{"crate_id":20,"path":["icu_normalizer","provider","CompatibilityDecompositionTablesV1Marker"],"kind":"struct"},"4:9312:7175":{"crate_id":4,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"16:7838:22887":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"1:23191:7313":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU64Inner"],"kind":"struct"},"17:15573:6011":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"12:0:3234":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"1:47373:7549":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"31:267:38256":{"crate_id":31,"path":["tinystr","asciibyte","AsciiByte"],"kind":"enum"},"17:11998:5399":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"1:3654:254":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"16:4267:6381":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"17:10823:4488":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"17:15919:6088":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"5:1259:9724":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"1:46509:7464":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"4:8503:7021":{"crate_id":4,"path":["std","io","IoSlice"],"kind":"struct"},"6:4957:8649":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"37:326:4348":{"crate_id":37,"path":["icu_locid_transform","directionality","LocaleDirectionality"],"kind":"struct"},"1:22935:4727":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"11:785:4655":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"22:4822:3582":{"crate_id":22,"path":["icu_properties","provider","CanonicalCombiningClassValueToShortNameV1Marker"],"kind":"struct"},"6:5395:8804":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"29:773:38095":{"crate_id":29,"path":["icu_locid","parser","langid","ParserPosition"],"kind":"enum"},"5:7619:3297":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"1:21932:15378":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"17:15621:4520":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"18:521:27142":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"1:21934:4725":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"4:6300:35000":{"crate_id":4,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"42:0:2417":{"crate_id":42,"path":["utf8_iter"],"kind":"module"},"6:6882:9156":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"1:47294:7538":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"22:3715:3504":{"crate_id":22,"path":["icu_properties","provider","PropertyCodePointMapV1"],"kind":"enum"},"17:11864:5393":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"4:2328:5328":{"crate_id":4,"path":["std","fs","read"],"kind":"function"},"1:44664:4217":{"crate_id":1,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"16:2880:6359":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"42:82:3650":{"crate_id":42,"path":["utf8_iter","report","Utf8CharsError"],"kind":"struct"},"17:11630:5370":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"42:89:3649":{"crate_id":42,"path":["utf8_iter","report","ErrorReportingUtf8Chars"],"kind":"struct"},"6:5230:8738":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"11:1601:6870":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"16:5113:6394":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"6:8249:9346":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"17:16494:5579":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"37:1058:4969":{"crate_id":37,"path":["icu_locid_transform","provider","LanguageStrStrPair"],"kind":"struct"},"40:349:3638":{"crate_id":40,"path":["smallvec","ToSmallVec"],"kind":"trait"},"23:994:5078":{"crate_id":23,"path":["icu_provider","response","Cart"],"kind":"struct"},"36:411:3415":{"crate_id":36,"path":["icu_collections","char16trie","trie","TrieResult"],"kind":"enum"},"17:15655:6023":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"11:1140:6866":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"1:43418:4867":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"20:257:3396":{"crate_id":20,"path":["icu_normalizer","IsNormalizedSinkUtf16"],"kind":"struct"},"1:46695:7486":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"22:4416:3524":{"crate_id":22,"path":["icu_properties","provider","DashV1Marker"],"kind":"struct"},"6:5520:8865":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"37:635:27458":{"crate_id":37,"path":["icu_locid_transform","provider","expander","LikelySubtagsForLanguageV1Marker"],"kind":"struct"},"4:680:6993":{"crate_id":4,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"4:8073:15661":{"crate_id":4,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"17:16377:6222":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"34:334:27421":{"crate_id":34,"path":["litemap","store","StoreSlice"],"kind":"trait"},"4:5640:7042":{"crate_id":4,"path":["std","process","ChildStdout"],"kind":"struct"},"6:5570:8885":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"1:47396:7550":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:23257:7319":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI64Inner"],"kind":"struct"},"17:14902:5807":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"6:4829:8578":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"4:879:2693":{"crate_id":4,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"40:57:3254":{"crate_id":40,"path":["smallvec","Drain"],"kind":"struct"},"22:4787:3577":{"crate_id":22,"path":["icu_properties","provider","ExemplarCharactersPunctuationV1Marker"],"kind":"struct"},"1:40583:3926":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"29:1134:5048":{"crate_id":29,"path":["icu_locid","extensions","transform","key","Key"],"kind":"struct"},"17:10663:4485":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"22:3557:5117":{"crate_id":22,"path":["icu_properties","provider","bidi_data","BidiAuxiliaryPropertiesV1"],"kind":"struct"},"1:42685:91":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"6:6564:9045":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"17:13361:5543":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"14:220:6854":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"6:8273:9350":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"1:23279:7321":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroIsizeInner"],"kind":"struct"},"17:5305:5227":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"17:14533:5448":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"17:11401:5354":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"30:118:27382":{"crate_id":30,"path":["writeable","try_writeable","TryWriteable"],"kind":"trait"},"4:10741:7013":{"crate_id":4,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"34:374:4378":{"crate_id":34,"path":["litemap","map","LiteMap"],"kind":"struct"},"32:2107:27408":{"crate_id":32,"path":["zerovec","ule","SliceAsULE"],"kind":"trait"},"17:14269:5691":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"1:13196:120":{"crate_id":1,"path":["core","str","lossy","Debug"],"kind":"struct"},"4:12413:977":{"crate_id":4,"path":["std","isize"],"kind":"primitive"},"1:3293:10196":{"crate_id":1,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"4:12407:895":{"crate_id":4,"path":["std","i128"],"kind":"primitive"},"16:7907:6680":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"1:10398:3308":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"17:10564:4482":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"1:11523:4020":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"23:449:3447":{"crate_id":23,"path":["icu_provider","response","DataResponse"],"kind":"struct"},"4:8087:15662":{"crate_id":4,"path":["std","backtrace","RawFrame"],"kind":"enum"},"36:561:4983":{"crate_id":36,"path":["icu_collections","codepointinvliststringlist","CodePointInversionListAndStringList"],"kind":"struct"},"4:5672:114":{"crate_id":4,"path":["std","process","Command"],"kind":"struct"},"32:2097:4306":{"crate_id":32,"path":["zerovec","ule","ULE"],"kind":"trait"},"4:11124:35002":{"crate_id":4,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"11:2551:37354":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"23:312:5059":{"crate_id":23,"path":["icu_provider","response","DataPayloadOr"],"kind":"struct"},"1:33625:3249":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"6:5670:8931":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"32:484:27413":{"crate_id":32,"path":["zerovec","map","vecs","ZeroVecLike"],"kind":"trait"},"6:5139:8711":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"39:0:3358":{"crate_id":39,"path":["icu_properties_data"],"kind":"module"},"17:12826:5498":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"16:8546:6753":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"6:4984:8662":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"4:1645:6873":{"crate_id":4,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"16:5417:6404":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"4:10787:5446":{"crate_id":4,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"17:12983:23083":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"32:2336:3501":{"crate_id":32,"path":["zerovec","error","ZeroVecError"],"kind":"enum"},"40:0:2416":{"crate_id":40,"path":["smallvec"],"kind":"module"},"4:8192:5274":{"crate_id":4,"path":["std","fs","Metadata"],"kind":"struct"},"10:0:3232":{"crate_id":10,"path":["adler"],"kind":"module"},"1:3207:118":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"1:40928:7234":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"6:4805:8560":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"5:7531:3254":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"4:3400:7015":{"crate_id":4,"path":["std","io","stdio","Stdout"],"kind":"struct"},"4:10250:7369":{"crate_id":4,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"17:14507:5732":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"6:479:8341":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"17:15997:6106":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"5:3094:2557":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"17:13635:5560":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"1:44954:151":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"37:709:4964":{"crate_id":37,"path":["icu_locid_transform","provider","expander","LikelySubtagsForScriptRegionV1"],"kind":"struct"},"4:573:15647":{"crate_id":4,"path":["std","thread","Packet"],"kind":"struct"},"4:10747:7017":{"crate_id":4,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"17:3720:5219":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"1:42424:97":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:8247:10260":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"17:583:5210":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"22:4983:3605":{"crate_id":22,"path":["icu_properties","provider","LineBreakNameToValueV1Marker"],"kind":"struct"},"1:21753:15726":{"crate_id":1,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"32:2354:5003":{"crate_id":32,"path":["zerovec","flexzerovec","owned","FlexZeroVecOwned"],"kind":"struct"},"17:322:5206":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"1:42166:194":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"29:1702:3472":{"crate_id":29,"path":["icu_locid","subtags","script","Script"],"kind":"struct"},"1:43097:9471":{"crate_id":1,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"22:2371:5116":{"crate_id":22,"path":["icu_properties","provider","names","PropertyEnumToValueNameLinearTiny4MapV1"],"kind":"struct"},"17:13798:5597":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"1:5980:9381":{"crate_id":1,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"17:16786:6326":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"1:40971:7354":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"16:5757:6408":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"4:5983:7053":{"crate_id":4,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"6:1569:8450":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"1:13717:205":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"17:13515:22956":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"17:12176:5417":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"1:31185:3830":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"5:6731:36953":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"1:42461:87":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"6:473:8338":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"1:33692:10185":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"22:4717:3567":{"crate_id":22,"path":["icu_properties","provider","UnifiedIdeographV1Marker"],"kind":"struct"},"16:7401:37363":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"1:40591:3927":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:3247:3334":{"crate_id":1,"path":["core","marker","Freeze"],"kind":"trait"},"1:30779:3288":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"24:249:27343":{"crate_id":24,"path":["yoke","yoke","CloneableCart"],"kind":"trait"},"1:11509:4024":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"17:15106:5842":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"6:4929:8638":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"0:369:2574":{"crate_id":0,"path":["idna","uts46","ProcessingError","ValidityError"],"kind":"variant"},"1:44007:3265":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"1:2343:7218":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"17:15050:5835":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"1:39668:10201":{"crate_id":1,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"22:4808:3580":{"crate_id":22,"path":["icu_properties","provider","CanonicalCombiningClassV1Marker"],"kind":"struct"},"4:2325:7006":{"crate_id":4,"path":["std","fs","DirEntry"],"kind":"struct"},"0:325:2381":{"crate_id":0,"path":["idna","uts46","DnsLength"],"kind":"enum"},"4:952:6868":{"crate_id":4,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"16:6658:4572":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"23:1126:5087":{"crate_id":23,"path":["icu_provider","hello_world","HelloWorldFormatter"],"kind":"struct"},"1:42722:98":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"29:1281:4419":{"crate_id":29,"path":["icu_locid","extensions","unicode","attributes","Attributes"],"kind":"struct"},"1:42535:88":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:8795:29812":{"crate_id":1,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"1:47180:7530":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"23:818:27451":{"crate_id":23,"path":["icu_provider","fallback","LocaleFallbackSupplement"],"kind":"enum"},"34:316:27418":{"crate_id":34,"path":["litemap","store","StoreConstEmpty"],"kind":"trait"},"22:935:3475":{"crate_id":22,"path":["icu_properties","error","PropertiesError"],"kind":"enum"},"16:7223:6560":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"17:11386:22965":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"6:586:8403":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"1:12491:4010":{"crate_id":1,"path":["core","slice","GetManyMutError"],"kind":"struct"},"16:896:6333":{"crate_id":16,"path":["gimli","read","endian_slice","DebugBytes"],"kind":"struct"},"36:475:4978":{"crate_id":36,"path":["icu_collections","codepointinvlist","cpinvlist","CodePointInversionList"],"kind":"struct"},"22:1396:8294":{"crate_id":22,"path":["icu_properties","props","GeneralCategoryULE"],"kind":"struct"},"17:16613:5607":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"4:3310:35403":{"crate_id":4,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"17:10928:5341":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"16:6588:6476":{"crate_id":16,"path":["gimli","read","cfi","UnwindExpression"],"kind":"struct"},"6:6680:9098":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"6:8199:9345":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"6:7577:9320":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"6:1625:8493":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"4:7738:32363":{"crate_id":4,"path":["std","panicking","Hook"],"kind":"enum"},"1:4598:4710":{"crate_id":1,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:12698:4239":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"4:6736:4683":{"crate_id":4,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"1:46171:7438":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"16:5649:6406":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"4:12390:1891":{"crate_id":4,"path":["std","unit"],"kind":"primitive"},"4:4411:7026":{"crate_id":4,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"1:43834:4017":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:43190:138":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"4:12402:742":{"crate_id":4,"path":["std","f128"],"kind":"primitive"},"1:43426:4868":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"6:517:8366":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"4:4330:9726":{"crate_id":4,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"5:3716:2693":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"36:382:3413":{"crate_id":36,"path":["icu_collections","char16trie","trie","Char16Trie"],"kind":"struct"},"9:500:6931":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"22:1675:8298":{"crate_id":22,"path":["icu_properties","props","LineBreakULE"],"kind":"struct"},"4:628:15657":{"crate_id":4,"path":["std","ascii","AsciiExt"],"kind":"trait"},"6:8302:9357":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"5:6033:3254":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"16:8137:4610":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"1:46926:7524":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"16:2620:6347":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"17:16520:6246":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"37:748:4965":{"crate_id":37,"path":["icu_locid_transform","provider","expander","LikelySubtagsExtendedV1"],"kind":"struct"},"17:10394:22948":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"1:46583:7482":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"17:13909:5608":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"17:13890:4519":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"1:21667:3830":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"1:47239:7533":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"17:13349:4501":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"17:11902:5394":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"37:984:4967":{"crate_id":37,"path":["icu_locid_transform","provider","StrStrPair"],"kind":"struct"},"11:2228:4626":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"16:6914:6508":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"1:32399:2712":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"1:40770:7338":{"crate_id":1,"path":["core","ffi","VaListImpl"],"kind":"struct"},"16:6173:4564":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"17:14872:5802":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"33:0:3352":{"crate_id":33,"path":["zerovec_derive"],"kind":"module"},"1:4908:3322":{"crate_id":1,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"41:0:3359":{"crate_id":41,"path":["utf16_iter"],"kind":"module"},"9:422:21872":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"1:46621:7484":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"16:8298:6712":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"18:651:5168":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"14:40:5594":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"6:6902:9170":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"32:1104:4397":{"crate_id":32,"path":["zerovec","varzerovec","owned","VarZeroVecOwned"],"kind":"struct"},"6:7469:9252":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"16:3308:6338":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"11:1914:6873":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"1:46296:7453":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"16:6159:4561":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"1:4567:4709":{"crate_id":1,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"17:11733:22986":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"23:1012:3429":{"crate_id":23,"path":["icu_provider","any","AnyPayload"],"kind":"struct"},"22:4661:3559":{"crate_id":22,"path":["icu_properties","provider","QuotationMarkV1Marker"],"kind":"struct"},"6:485:8344":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"32:2540:5020":{"crate_id":32,"path":["zerovec","ule","multi","MultiFieldsULE"],"kind":"struct"},"17:12409:23057":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"5:7736:6979":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"1:22919:4704":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"6:5676:8933":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"16:7495:6597":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"22:1431:3467":{"crate_id":22,"path":["icu_properties","props","GeneralCategoryGroup"],"kind":"struct"},"6:559:8389":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"17:10803:4221":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"17:16728:6313":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"17:10487:22951":{"crate_id":17,"path":["object","common","RelocationFlags"],"kind":"enum"},"22:1545:8296":{"crate_id":22,"path":["icu_properties","props","HangulSyllableTypeULE"],"kind":"struct"},"4:12412:1845":{"crate_id":4,"path":["std","u128"],"kind":"primitive"},"23:924:3445":{"crate_id":23,"path":["icu_provider","request","DataRequest"],"kind":"struct"},"6:6631:9079":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"17:11358:22964":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"6:5019:8681":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"1:8333:130":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"6:7586:9323":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"5:3277:101":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"4:10535:32343":{"crate_id":4,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"34:357:27424":{"crate_id":34,"path":["litemap","store","StoreIterableMut"],"kind":"trait"},"17:15557:6010":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"22:1522:3469":{"crate_id":22,"path":["icu_properties","props","HangulSyllableType"],"kind":"struct"},"1:3490:3291":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"4:6942:233":{"crate_id":4,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"1:9850:85":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:42281:3802":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"17:15064:5838":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"22:5046:3614":{"crate_id":22,"path":["icu_properties","provider","WordBreakValueToShortNameV1Marker"],"kind":"struct"},"4:8359:4691":{"crate_id":4,"path":["std","io","error","Custom"],"kind":"struct"},"22:4773:3575":{"crate_id":22,"path":["icu_properties","provider","ExemplarCharactersMainV1Marker"],"kind":"struct"},"1:44105:4226":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"16:2684:6350":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"1:41030:7355":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"23:545:3433":{"crate_id":23,"path":["icu_provider","any","AsDynamicDataProviderAnyMarkerWrap"],"kind":"trait"},"17:15148:5849":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"4:6055:4675":{"crate_id":4,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"4:11027:7085":{"crate_id":4,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"1:44329:4232":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:47093:7527":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"17:15431:5968":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"4:3349:7014":{"crate_id":4,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"4:9202:3297":{"crate_id":4,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"22:4626:3554":{"crate_id":22,"path":["icu_properties","provider","NfkdInertV1Marker"],"kind":"struct"},"4:8494:2708":{"crate_id":4,"path":["std","io","util","Sink"],"kind":"struct"},"16:903:5205":{"crate_id":16,"path":["gimli","read","endian_slice","DebugByte"],"kind":"struct"},"42:66:2751":{"crate_id":42,"path":["utf8_iter","Utf8CharsEx"],"kind":"trait"},"1:13625:4716":{"crate_id":1,"path":["core","future","async_drop","Fuse"],"kind":"struct"},"17:15785:6052":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"17:10442:22950":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"22:5074:3618":{"crate_id":22,"path":["icu_properties","provider","SentenceBreakValueToShortNameV1Marker"],"kind":"struct"},"4:6590:186":{"crate_id":4,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"1:43954:4030":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:11367:4039":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"5:2304:4659":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"22:4941:3599":{"crate_id":22,"path":["icu_properties","provider","HangulSyllableTypeValueToLongNameV1Marker"],"kind":"struct"},"32:1834:5012":{"crate_id":32,"path":["zerovec","ule","option","OptionULE"],"kind":"struct"},"4:11714:7070":{"crate_id":4,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"17:13537:4498":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"1:22363:15726":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:43396:157":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"17:16311:6210":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"11:854:6858":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"1:3041:124":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"16:6953:6511":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"17:13871:4512":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"22:2198:27151":{"crate_id":22,"path":["icu_properties","bidi_data","BidiPairingProperties"],"kind":"enum"},"11:1725:156":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"5:735:6946":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"17:13222:22953":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"17:10597:4483":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"5:7511:3297":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"16:4983:6391":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"17:13041:5525":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"17:506:5209":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"6:5151:8712":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"22:4829:3583":{"crate_id":22,"path":["icu_properties","provider","CanonicalCombiningClassValueToLongNameV1Marker"],"kind":"struct"},"4:2242:129":{"crate_id":4,"path":["std","ffi","os_str","Display"],"kind":"struct"},"1:40827:7347":{"crate_id":1,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"16:7337:6578":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"1:38309:10189":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"22:5018:3610":{"crate_id":22,"path":["icu_properties","provider","GraphemeClusterBreakValueToShortNameV1Marker"],"kind":"struct"},"22:4745:3571":{"crate_id":22,"path":["icu_properties","provider","XdigitV1Marker"],"kind":"struct"},"4:8093:15697":{"crate_id":4,"path":["std","env","VarError"],"kind":"enum"},"6:6777:9128":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"4:961:4657":{"crate_id":4,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"4:12409:1851":{"crate_id":4,"path":["std","u16"],"kind":"primitive"},"1:39804:214":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"16:8636:22891":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"16:2748:6353":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"1:32364:7324":{"crate_id":1,"path":["core","error","private","Internal"],"kind":"struct"},"1:4725:7224":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"16:8121:210":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"17:11065:5343":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"4:8820:7162":{"crate_id":4,"path":["std","path","PrefixComponent"],"kind":"struct"},"17:12095:5411":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"17:11026:37373":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"17:15090:5840":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"22:2374:3502":{"crate_id":22,"path":["icu_properties","provider","Baked"],"kind":"struct"},"6:5622:8911":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"1:44087:4227":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"6:5387:8799":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"1:46828:7491":{"crate_id":1,"path":["core","core_arch","simd","m32x8"],"kind":"struct"},"17:15896:6080":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"20:688:3399":{"crate_id":20,"path":["icu_normalizer","ComposingNormalizer"],"kind":"struct"},"17:13055:4470":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"1:21735:30541":{"crate_id":1,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"17:13028:5524":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"32:2505:38274":{"crate_id":32,"path":["zerovec","varzerovec","owned","ShiftType"],"kind":"enum"},"1:4359:9381":{"crate_id":1,"path":["core","array","Guard"],"kind":"struct"},"22:3816:3507":{"crate_id":22,"path":["icu_properties","provider","ScriptWithExtensionsPropertyV1"],"kind":"struct"},"34:363:27425":{"crate_id":34,"path":["litemap","store","StoreIntoIterator"],"kind":"trait"},"4:4677:15793":{"crate_id":4,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"6:5325:8779":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"5:2825:9377":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"4:8645:7145":{"crate_id":4,"path":["std","os","unix","net","ucred","UCred"],"kind":"struct"},"22:1791:8300":{"crate_id":22,"path":["icu_properties","props","WordBreakULE"],"kind":"struct"},"17:10246:22943":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"17:11553:5366":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"6:4976:8657":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"4:8231:140":{"crate_id":4,"path":["std","fs","FileType"],"kind":"struct"},"4:8245:128":{"crate_id":4,"path":["std","fs","DirBuilder"],"kind":"struct"},"4:2729:29766":{"crate_id":4,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"6:5341:8783":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"1:21808:15377":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"5:1496:100":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"16:6256:4571":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"1:44440:7386":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"18:515:5165":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"5:2171:6954":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"4:10670:34998":{"crate_id":4,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"24:358:27334":{"crate_id":24,"path":["yoke","yokeable","Yokeable"],"kind":"trait"},"4:9747:32340":{"crate_id":4,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"1:21706:30549":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"11:1674:37351":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"4:11759:9395":{"crate_id":4,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"1:2596:679":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:44486:7394":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"16:2660:6349":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"17:14886:5805":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"6:7454:9248":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"1:44979:207":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"17:12648:5482":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"4:2477:4439":{"crate_id":4,"path":["std","fs","metadata"],"kind":"function"},"15:327:4618":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"4:6479:7045":{"crate_id":4,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"4:4168:15769":{"crate_id":4,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"4:10921:7199":{"crate_id":4,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"1:13742:7283":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:46264:7451":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"14:160:6846":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"16:6904:6507":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"1:12960:3271":{"crate_id":1,"path":["core","str","pattern"],"kind":"module"},"37:554:27456":{"crate_id":37,"path":["icu_locid_transform","provider","directionality","ScriptDirectionV1Marker"],"kind":"struct"},"5:1548:4018":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"4:10627:7169":{"crate_id":4,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"16:3695:6375":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"5:3339:6873":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"37:1084:27447":{"crate_id":37,"path":["icu_locid_transform","TransformResult"],"kind":"enum"},"37:592:27457":{"crate_id":37,"path":["icu_locid_transform","provider","expander","LikelySubtagsV1Marker"],"kind":"struct"},"16:6337:6433":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"4:1869:6999":{"crate_id":4,"path":["std","env","VarsOs"],"kind":"struct"},"1:30747:3287":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"4:1106:6863":{"crate_id":4,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"22:4885:3591":{"crate_id":22,"path":["icu_properties","provider","BidiClassValueToLongNameV1Marker"],"kind":"struct"},"16:8105:6698":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"17:12992:5517":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"17:13014:5522":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"5:5826:3300":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"37:474:4354":{"crate_id":37,"path":["icu_locid_transform","provider","canonicalizer","AliasesV1"],"kind":"struct"},"17:12906:4497":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"11:798:3254":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"5:894:102":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"1:2766:201":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"16:8233:22889":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"29:1633:4426":{"crate_id":29,"path":["icu_locid","subtags","region","Region"],"kind":"struct"},"17:16684:6302":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"22:5196:5125":{"crate_id":22,"path":["icu_properties","script","ScriptWithExtensions"],"kind":"struct"},"17:15641:6020":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"5:3105:35727":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"17:16323:6212":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"22:4647:3557":{"crate_id":22,"path":["icu_properties","provider","PrependedConcatenationMarkV1Marker"],"kind":"struct"},"17:15160:5853":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"23:965:3441":{"crate_id":23,"path":["icu_provider","request","DataLocale"],"kind":"struct"},"6:4990:8665":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"16:6421:4545":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"1:40479:3926":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:12975:4215":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:21704:30543":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"22:4437:3527":{"crate_id":22,"path":["icu_properties","provider","DiacriticV1Marker"],"kind":"struct"},"6:6473:8993":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"17:472:5207":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"17:11539:4470":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"17:16132:6156":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"11:2148:6863":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"1:40887:7230":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:22991:7293":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:44205:4231":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:43173:3317":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"6:1530:8425":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"16:2950:6362":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"40:368:3640":{"crate_id":40,"path":["smallvec","CollectionAllocErr"],"kind":"enum"},"1:3826:71":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"22:4934:3598":{"crate_id":22,"path":["icu_properties","provider","HangulSyllableTypeValueToShortNameV1Marker"],"kind":"struct"},"17:12798:23081":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"1:8748:150":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"5:2182:6955":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"17:16668:6297":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"16:2506:6342":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"22:4724:3568":{"crate_id":22,"path":["icu_properties","provider","UppercaseV1Marker"],"kind":"struct"},"22:4759:3573":{"crate_id":22,"path":["icu_properties","provider","XidStartV1Marker"],"kind":"struct"},"1:46089:7433":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"17:13471:5221":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"4:9443:7067":{"crate_id":4,"path":["std","sync","rwlock","MappedRwLockReadGuard"],"kind":"struct"},"1:32382:3320":{"crate_id":1,"path":["core","error","tags","Ref"],"kind":"struct"},"4:11708:7206":{"crate_id":4,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"1:2771:135":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"1:46716:7487":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:7715:3940":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"6:8284:9354":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"1:46733:7488":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:22365:15379":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"22:4815:3581":{"crate_id":22,"path":["icu_properties","provider","CanonicalCombiningClassNameToValueV1Marker"],"kind":"struct"},"4:1115:6867":{"crate_id":4,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"6:6507:9015":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:44598:7396":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"5:7233:37000":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"24:23:27348":{"crate_id":24,"path":["yoke","cartable_ptr","CloneableCartablePointerLike"],"kind":"trait"},"4:5094:15812":{"crate_id":4,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"1:46019:7425":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"17:16145:6162":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"22:4850:3586":{"crate_id":22,"path":["icu_properties","provider","GeneralCategoryValueToShortNameV1Marker"],"kind":"struct"},"5:4172:36953":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"1:41421:7255":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"17:16775:6324":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"17:11465:5360":{"crate_id":17,"path":["object","read","archive","ArchiveSymbolIterator"],"kind":"struct"},"1:47248:7534":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"17:14547:5740":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"16:2820:6356":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"10:44:4627":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"1:3254:3336":{"crate_id":1,"path":["core","marker","FnPtr"],"kind":"trait"},"1:22983:7292":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"16:2966:6363":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"1:22642:10152":{"crate_id":1,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","with_exposed_provenance"],"kind":"function"},"22:960:3477":{"crate_id":22,"path":["icu_properties","maps","CodePointMapData"],"kind":"struct"},"4:4826:9236":{"crate_id":4,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"function"},"4:3402:7016":{"crate_id":4,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"1:33826:10182":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"4:957:4656":{"crate_id":4,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"22:4311:3509":{"crate_id":22,"path":["icu_properties","provider","AsciiHexDigitV1Marker"],"kind":"struct"},"17:11124:37377":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"5:3875:6954":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"17:16218:6182":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"32:2099:37643":{"crate_id":32,"path":["zerovec","ule","ULE","parse_byte_slice"],"kind":"function"},"4:685:15659":{"crate_id":4,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"1:7609:3129":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:34557:6625":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"4:10980:140":{"crate_id":4,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"17:13570:22957":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"1:43107:3317":{"crate_id":1,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"16:3141:5230":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"36:728:3499":{"crate_id":36,"path":["icu_collections","codepointtrie","cptrie","CodePointMapRange"],"kind":"struct"},"16:6028:4560":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"1:43630:4048":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"1:41155:7134":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"22:5116:3624":{"crate_id":22,"path":["icu_properties","provider","JoiningTypeV1Marker"],"kind":"struct"},"22:4353:3515":{"crate_id":22,"path":["icu_properties","provider","CasedV1Marker"],"kind":"struct"},"0:368:2573":{"crate_id":0,"path":["idna","uts46","ProcessingError"],"kind":"enum"},"22:5137:3627":{"crate_id":22,"path":["icu_properties","provider","JoiningTypeValueToLongNameV1Marker"],"kind":"struct"},"1:42250:3698":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"0:401:2358":{"crate_id":0,"path":["idna","Errors"],"kind":"struct"},"6:6770:9127":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"6:465:8333":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"17:16642:6291":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"5:798:119":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"17:12537:5476":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"16:6970:4596":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"6:8330:9363":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"22:4374:3518":{"crate_id":22,"path":["icu_properties","provider","ChangesWhenCasefoldedV1Marker"],"kind":"struct"},"23:15:3444":{"crate_id":23,"path":["icu_provider","data_provider","DataProvider"],"kind":"trait"},"6:5357:8785":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"1:3263:10181":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"5:4142:3254":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"4:11273:7069":{"crate_id":4,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"5:7748:6981":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"34:329:27420":{"crate_id":34,"path":["litemap","store","StoreFromIterable"],"kind":"trait"},"17:14845:5800":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"1:44561:7276":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:46427:7460":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"31:685:5028":{"crate_id":31,"path":["tinystr","unvalidated","UnvalidatedTinyAsciiStr"],"kind":"struct"},"5:7541:6974":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"1:9417:3699":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"22:4465:3531":{"crate_id":22,"path":["icu_properties","provider","EmojiV1Marker"],"kind":"struct"},"17:12216:5422":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"11:1880:2693":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"1:6971:9403":{"crate_id":1,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"17:11985:5398":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"4:10961:7182":{"crate_id":4,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"42:72:3648":{"crate_id":42,"path":["utf8_iter","indices","Utf8CharIndices"],"kind":"struct"},"1:39632:4285":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:10849:29766":{"crate_id":1,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"1:44751:4204":{"crate_id":1,"path":["core","str","LinesMap"],"kind":"struct"},"6:497:8349":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"11:299:8314":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"37:536:4366":{"crate_id":37,"path":["icu_locid_transform","provider","canonicalizer","AliasesV2"],"kind":"struct"},"23:1037:5081":{"crate_id":23,"path":["icu_provider","any","DynamicDataProviderAnyMarkerWrap"],"kind":"struct"},"4:11008:34387":{"crate_id":4,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"4:1928:7001":{"crate_id":4,"path":["std","env","Args"],"kind":"struct"},"4:2479:15711":{"crate_id":4,"path":["std","fs","symlink_metadata"],"kind":"function"},"16:6749:4587":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"17:14672:5756":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"6:4937:8640":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"1:42185:173":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"22:4962:3602":{"crate_id":22,"path":["icu_properties","provider","EastAsianWidthValueToShortNameV1Marker"],"kind":"struct"},"11:740:4657":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"17:12941:5512":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"1:40867:7348":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"0:51:2638":{"crate_id":0,"path":["idna","punycode","decode_to_string"],"kind":"function"},"17:10729:4487":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"5:898:6947":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"17:13070:4466":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"32:2364:27415":{"crate_id":32,"path":["zerovec","flexzerovec","vec","FlexZeroVec"],"kind":"enum"},"17:10097:22938":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"1:23158:7310":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU8Inner"],"kind":"struct"},"5:1395:6863":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"6:7563:9311":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"17:15665:6024":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"17:15549:6009":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"17:10549:4463":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"6:4792:8551":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"1:44301:4225":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:46004:7424":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"11:835:6855":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"37:843:27463":{"crate_id":37,"path":["icu_locid_transform","provider","fallback","CollationFallbackSupplementV1Marker"],"kind":"struct"},"17:10218:22942":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"6:1632:8497":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"4:8007:6989":{"crate_id":4,"path":["std","thread","local","AccessError"],"kind":"struct"},"25:0:3344":{"crate_id":25,"path":["stable_deref_trait"],"kind":"module"},"22:4325:3511":{"crate_id":22,"path":["icu_properties","provider","AlphabeticV1Marker"],"kind":"struct"},"4:1097:6862":{"crate_id":4,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"4:3913:7023":{"crate_id":4,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"16:5144:6395":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"18:643:5168":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"4:5009:15780":{"crate_id":4,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"6:4875:8612":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"5:4582:36964":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"17:11503:5362":{"crate_id":17,"path":["object","read","archive","ArchiveSymbol"],"kind":"struct"},"30:366:5035":{"crate_id":30,"path":["writeable","LengthHint"],"kind":"struct"},"1:12509:2968":{"crate_id":1,"path":["core","str","converts","from_utf8_unchecked"],"kind":"function"},"1:42609:89":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:23224:7316":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI8Inner"],"kind":"struct"},"6:5107:8708":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"1:40671:3930":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"1:10864:29173":{"crate_id":1,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"1:2082:1372":{"crate_id":1,"path":["core","ptr"],"kind":"module"},"1:40485:7332":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:43996:4220":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:824:190":{"crate_id":1,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"4:3039:7012":{"crate_id":4,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"6:5069:8706":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"6:4896:8620":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"18:754:5204":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"4:4116:15765":{"crate_id":4,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"1:43124:9479":{"crate_id":1,"path":["core","fmt","rt","Count"],"kind":"enum"},"16:8096:6697":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"1:3093:4293":{"crate_id":1,"path":["core","error","Request"],"kind":"struct"},"1:44755:4207":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"34:339:27422":{"crate_id":34,"path":["litemap","store","StoreMut"],"kind":"trait"},"1:21755:15381":{"crate_id":1,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"5:7872:3295":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"4:9764:128":{"crate_id":4,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"6:5249:8746":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"17:15973:6102":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"16:7016:6519":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"4:5794:9142":{"crate_id":4,"path":["std","process","exit"],"kind":"function"},"6:5241:8742":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"22:5217:5127":{"crate_id":22,"path":["icu_properties","sets","ErasedSetlikeMarker"],"kind":"struct"},"6:6672:9096":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"4:8613:7025":{"crate_id":4,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"1:23180:7312":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU32Inner"],"kind":"struct"},"4:8006:15726":{"crate_id":4,"path":["std","sealed","Sealed"],"kind":"trait"},"16:7765:6642":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"17:11114:5344":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"29:1493:4422":{"crate_id":29,"path":["icu_locid","extensions","Extensions"],"kind":"struct"},"4:9252:15857":{"crate_id":4,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"1:42219:3697":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"24:601:5058":{"crate_id":24,"path":["yoke","trait_hack","YokeTraitHack"],"kind":"struct"},"16:8179:6699":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"1:42210:3297":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"17:11926:5395":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"17:14043:5632":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"17:11606:4466":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"1:8751:3938":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:44259:4229":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"4:12411:1863":{"crate_id":4,"path":["std","u64"],"kind":"primitive"},"4:3307:35404":{"crate_id":4,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"16:908:5206":{"crate_id":16,"path":["gimli","read","endian_slice","DebugLen"],"kind":"struct"},"1:12041:4037":{"crate_id":1,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"6:7414:9240":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"6:5349:8784":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"17:12293:5432":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"37:430:27454":{"crate_id":37,"path":["icu_locid_transform","provider","canonicalizer","AliasesV1Marker"],"kind":"struct"},"1:44646:4216":{"crate_id":1,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"16:6302:6430":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"1:1969:9381":{"crate_id":1,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"6:5301:8773":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"1:2146:10163":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"30:380:5036":{"crate_id":30,"path":["writeable","Part"],"kind":"struct"},"22:4913:3595":{"crate_id":22,"path":["icu_properties","provider","ScriptValueToLongNameV1Marker"],"kind":"struct"},"6:5428:8820":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"17:14832:5798":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"17:14652:5753":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"23:1055:3435":{"crate_id":23,"path":["icu_provider","buf","BufferMarker"],"kind":"struct"},"17:16399:6228":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"17:14917:5811":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"1:2045:678":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"1:23246:7318":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI32Inner"],"kind":"struct"},"17:15753:6046":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"22:4542:3542":{"crate_id":22,"path":["icu_properties","provider","IdeographicV1Marker"],"kind":"struct"},"1:8304:3654":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"0:353:2569":{"crate_id":0,"path":["idna","uts46","ProcessingSuccess"],"kind":"enum"},"9:0:3231":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"4:10744:7015":{"crate_id":4,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"11:2466:3294":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"29:1771:5050":{"crate_id":29,"path":["icu_locid","subtags","variant","Variant"],"kind":"struct"},"0:113:700":{"crate_id":0,"path":["idna","punycode","encode"],"kind":"function"},"16:8000:4605":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"16:6696:6483":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"37:418:4953":{"crate_id":37,"path":["icu_locid_transform","fallback","LocaleFallbackIterator"],"kind":"struct"},"1:22718:15458":{"crate_id":1,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"1:4646:3319":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"24:104:27351":{"crate_id":24,"path":["yoke","erased","ErasedDestructor"],"kind":"trait"},"4:8022:7077":{"crate_id":4,"path":["std","thread","Builder"],"kind":"struct"},"4:661:4290":{"crate_id":4,"path":["std","backtrace","Backtrace"],"kind":"struct"},"17:11527:5365":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"16:5318:6401":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"22:1283:2749":{"crate_id":22,"path":["icu_properties","props","GeneralCategory"],"kind":"enum"},"1:23268:7320":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI128Inner"],"kind":"struct"},"17:16832:5617":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"1:7714:3939":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"1:11247:4021":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"1:10400:3309":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"17:13451:5546":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"4:7170:15861":{"crate_id":4,"path":["std","std_float","StdFloat"],"kind":"trait"},"23:1059:27336":{"crate_id":23,"path":["icu_provider","buf","BufferFormat"],"kind":"enum"},"4:2790:7011":{"crate_id":4,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"5:7774:243":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"16:6440:22880":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"1:2973:257":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"16:6843:4594":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"1:2937:10064":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:44829:7406":{"crate_id":1,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"16:6368:4539":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"5:3809:36953":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"6:1597:8469":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"16:2840:6357":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"4:12399:744":{"crate_id":4,"path":["std","f16"],"kind":"primitive"},"22:4339:3513":{"crate_id":22,"path":["icu_properties","provider","BidiMirroredV1Marker"],"kind":"struct"},"22:1873:8301":{"crate_id":22,"path":["icu_properties","props","SentenceBreakULE"],"kind":"struct"},"23:482:27329":{"crate_id":23,"path":["icu_provider","any","MaybeSendSync"],"kind":"trait"},"6:6599:9066":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"1:42298:226":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"22:4731:3569":{"crate_id":22,"path":["icu_properties","provider","VariationSelectorV1Marker"],"kind":"struct"},"22:2311:5114":{"crate_id":22,"path":["icu_properties","provider","names","PropertyEnumToValueNameSparseMapV1"],"kind":"struct"},"22:2136:2750":{"crate_id":22,"path":["icu_properties","props","JoiningType"],"kind":"struct"},"4:12007:35003":{"crate_id":4,"path":["std","backtrace_rs","backtrace","libunwind","Bomb"],"kind":"struct"},"1:4720:7223":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"17:16507:5593":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"17:12550:5478":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"32:1771:27411":{"crate_id":32,"path":["zerovec","ule","niche","NicheBytes"],"kind":"trait"},"17:14738:5781":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"4:2551:3167":{"crate_id":4,"path":["std","io"],"kind":"module"},"16:3889:5235":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"4:12403:920":{"crate_id":4,"path":["std","i8"],"kind":"primitive"},"11:2137:6862":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"4:11290:9386":{"crate_id":4,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"29:671:4407":{"crate_id":29,"path":["icu_locid","langid","LanguageIdentifier"],"kind":"struct"},"30:189:27379":{"crate_id":30,"path":["writeable","PartsWrite"],"kind":"trait"},"3:0:3228":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"4:3443:7017":{"crate_id":4,"path":["std","io","stdio","Stderr"],"kind":"struct"},"1:75:1857":{"crate_id":1,"path":["core","u32"],"kind":"module"},"1:32400:244":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"4:5656:7043":{"crate_id":4,"path":["std","process","ChildStderr"],"kind":"struct"},"1:6965:7242":{"crate_id":1,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"17:11075:37376":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"1:46185:7439":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"17:13733:5579":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"20:615:3402":{"crate_id":20,"path":["icu_normalizer","CharacterAndTrieValue"],"kind":"struct"},"4:5726:7044":{"crate_id":4,"path":["std","process","Stdio"],"kind":"struct"},"9:53:4628":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"4:11130:34983":{"crate_id":4,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"5:1239:35735":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"4:8542:7134":{"crate_id":4,"path":["std","io","Take"],"kind":"struct"},"22:4948:3600":{"crate_id":22,"path":["icu_properties","provider","EastAsianWidthV1Marker"],"kind":"struct"},"1:11495:4019":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"5:1132:36953":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"16:5709:22877":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"1:3449:3653":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"17:12225:5423":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"16:3126:22020":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"17:12962:23082":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"1:22958:7291":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"22:1146:5104":{"crate_id":22,"path":["icu_properties","props","ErasedEnumToValueNameLinearTiny4MapV1Marker"],"kind":"struct"},"6:6765:9126":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"1:44320:4233":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"22:4423:3525":{"crate_id":22,"path":["icu_properties","provider","DeprecatedV1Marker"],"kind":"struct"},"17:14327:5704":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"16:2724:6352":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"23:308:3443":{"crate_id":23,"path":["icu_provider","response","DataPayload"],"kind":"struct"},"1:34384:10188":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"17:14358:5711":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"22:4444:3528":{"crate_id":22,"path":["icu_properties","provider","EmojiModifierBaseV1Marker"],"kind":"struct"},"1:41006:5182":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"16:2435:22017":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"17:14031:5631":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"1:13585:7278":{"crate_id":1,"path":["core","future","async_drop","AsyncDropOwning"],"kind":"struct"},"1:11290:4038":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"18:765:27141":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"1:43883:4035":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:13896:7287":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"1:22713:15460":{"crate_id":1,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"24:19:27347":{"crate_id":24,"path":["yoke","cartable_ptr","CartablePointerLike"],"kind":"trait"},"16:6064:6367":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"6:4842:8588":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"4:946:3294":{"crate_id":4,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"5:6170:15910":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"0:129:2351":{"crate_id":0,"path":["idna","uts46"],"kind":"module"},"1:46456:7461":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"22:4486:3534":{"crate_id":22,"path":["icu_properties","provider","ExtendedPictographicV1Marker"],"kind":"struct"},"29:1159:4416":{"crate_id":29,"path":["icu_locid","extensions","transform","value","Value"],"kind":"struct"},"1:32368:4416":{"crate_id":1,"path":["core","error","tags","Value"],"kind":"struct"},"11:328:8317":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"4:7821:7743":{"crate_id":4,"path":["std","panicking","begin_panic","Payload"],"kind":"struct"},"36:614:27441":{"crate_id":36,"path":["icu_collections","codepointtrie","cptrie","TrieType"],"kind":"enum"},"4:6217:220":{"crate_id":4,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"23:1140:5089":{"crate_id":23,"path":["icu_provider","marker","NeverMarker"],"kind":"struct"},"6:4881:8614":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"16:7807:37366":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"4:971:15676":{"crate_id":4,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"6:6723:9114":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"5:1614:4656":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"22:1733:8299":{"crate_id":22,"path":["icu_properties","props","GraphemeClusterBreakULE"],"kind":"struct"},"17:14055:5633":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"17:16332:6216":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"1:44311:4224":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"29:1193:4417":{"crate_id":29,"path":["icu_locid","extensions","transform","Transform"],"kind":"struct"},"6:6790:9135":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"17:14220:5666":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"1:32375:7325":{"crate_id":1,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"5:1794:36953":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"11:2400:4018":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"1:46395:7458":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"17:11805:5389":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"4:11691:7375":{"crate_id":4,"path":["std","sys","thread_local","fast_local","eager","State"],"kind":"enum"},"1:22798:7289":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:2936:15726":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"6:1494:8409":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"1:10394:129":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"17:16019:6111":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"4:1628:3294":{"crate_id":4,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"1:47279:7537":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:41960:10267":{"crate_id":1,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"1:11041:15726":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"4:6871:4684":{"crate_id":4,"path":["std","sync","reentrant_lock","ReentrantLock"],"kind":"struct"},"16:8565:6756":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"4:11887:7023":{"crate_id":4,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"1:39894:7331":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"11:1920:6874":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"6:4970:8654":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"6:7518:9287":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"5:1424:6867":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"11:434:9718":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"4:6392:34986":{"crate_id":4,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"1:12475:4008":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"5:1379:6606":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"4:10378:7189":{"crate_id":4,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"17:3854:5220":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"17:11515:5363":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"1:40849:4712":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"22:1123:5102":{"crate_id":22,"path":["icu_properties","props","PropertyEnumToValueNameLinearMapper"],"kind":"struct"},"23:735:5062":{"crate_id":23,"path":["icu_provider","data_provider","DataProviderWithKey"],"kind":"struct"},"4:10940:9382":{"crate_id":4,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"1:42194:2693":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"1:7780:9733":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"17:15286:5855":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"6:6411:8965":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"16:2450:6339":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"17:15410:5958":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"17:13145:5528":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"4:9340:7178":{"crate_id":4,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"4:7343:35005":{"crate_id":4,"path":["std","sys","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"16:6984:4597":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"29:0:3348":{"crate_id":29,"path":["icu_locid"],"kind":"module"},"16:8711:6768":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"4:9577:7001":{"crate_id":4,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"22:5060:3616":{"crate_id":22,"path":["icu_properties","provider","SentenceBreakV1Marker"],"kind":"struct"},"16:2704:6351":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"1:1838:4161":{"crate_id":1,"path":["core","intrinsics","AggregateRawPtr"],"kind":"trait"},"1:44623:7397":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"20:334:2743":{"crate_id":20,"path":["icu_normalizer","properties","CanonicalCombiningClassMap"],"kind":"struct"},"1:2960:77":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"22:3661:5119":{"crate_id":22,"path":["icu_properties","provider","bidi_data","MirroredPairedBracketDataULE"],"kind":"struct"},"17:12249:5427":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"1:5088:3412":{"crate_id":1,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"37:588:4955":{"crate_id":37,"path":["icu_locid_transform","provider","directionality","ScriptDirectionV1"],"kind":"struct"},"17:14947:5814":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"20:652:3405":{"crate_id":20,"path":["icu_normalizer","Composition"],"kind":"struct"},"17:15689:6026":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"16:6680:6480":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackageSections"],"kind":"struct"},"22:4500:3536":{"crate_id":22,"path":["icu_properties","provider","GraphemeBaseV1Marker"],"kind":"struct"},"18:507:5168":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"16:7919:6681":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"1:8441:178":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"29:740:27361":{"crate_id":29,"path":["icu_locid","parser","errors","ParserError"],"kind":"enum"},"4:8668:9221":{"crate_id":4,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"17:13290:5293":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"4:6527:220":{"crate_id":4,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"17:15963:6099":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"16:6837:4592":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"6:5375:8795":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"20:601:3401":{"crate_id":20,"path":["icu_normalizer","IgnorableBehavior"],"kind":"enum"},"6:4914:8632":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"23:947:3446":{"crate_id":23,"path":["icu_provider","request","DataRequestMetadata"],"kind":"struct"},"1:46139:7436":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"1:40067:3818":{"crate_id":1,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"17:16761:6320":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"1:44455:7391":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"17:15077:5839":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"17:14099:5650":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"4:7835:7744":{"crate_id":4,"path":["std","panicking","rust_panic_without_hook","RewrapBox"],"kind":"struct"},"1:12920:3268":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"24:0:3343":{"crate_id":24,"path":["yoke"],"kind":"module"},"17:14346:5709":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"1:31158:196":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"1:8063:4676":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"22:4528:3540":{"crate_id":22,"path":["icu_properties","provider","HyphenV1Marker"],"kind":"struct"},"1:46604:7483":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"17:12749:5493":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"0:111:2700":{"crate_id":0,"path":["idna","punycode","encode_str"],"kind":"function"},"6:5088:8707":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"4:12389:476":{"crate_id":4,"path":["std","char"],"kind":"primitive"},"16:7716:37365":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"20:452:3420":{"crate_id":20,"path":["icu_normalizer","provider","DecompositionSupplementV1"],"kind":"struct"},"0:311:2380":{"crate_id":0,"path":["idna","uts46","Hyphens","Allow"],"kind":"variant"},"4:7415:34276":{"crate_id":4,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"6:6526:9017":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"4:8512:15725":{"crate_id":4,"path":["std","io","SeekFrom"],"kind":"enum"},"4:11753:9394":{"crate_id":4,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"17:14821:5797":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"4:2332:15708":{"crate_id":4,"path":["std","fs","read_to_string"],"kind":"function"},"4:4222:15773":{"crate_id":4,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"1:10615:157":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"1:12507:4218":{"crate_id":1,"path":["core","str","converts","from_utf8"],"kind":"function"},"30:192:27338":{"crate_id":30,"path":["writeable","Writeable"],"kind":"trait"},"4:8902:7168":{"crate_id":4,"path":["std","path","StripPrefixError"],"kind":"struct"},"4:10970:4692":{"crate_id":4,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"13:0:3229":{"crate_id":13,"path":["std_detect"],"kind":"module"},"4:11983:7074":{"crate_id":4,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"16:8223:6700":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"4:4230:15775":{"crate_id":4,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"1:39729:213":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"17:16008:6110":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"1:45054:180":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"7:0:1921":{"crate_id":7,"path":["unwind"],"kind":"module"},"16:2640:6348":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"16:6731:4556":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"23:880:5076":{"crate_id":23,"path":["icu_provider","key","DataKeyPath"],"kind":"struct"},"16:6738:37367":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"1:3665:10197":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1:6267:4715":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:47259:7535":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"22:4990:3606":{"crate_id":22,"path":["icu_properties","provider","LineBreakValueToShortNameV1Marker"],"kind":"struct"},"17:13095:5526":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"32:2864:5023":{"crate_id":32,"path":["zerovec","ule","tuple","Tuple3ULE"],"kind":"struct"},"36:659:3416":{"crate_id":36,"path":["icu_collections","codepointtrie","cptrie","CodePointTrie"],"kind":"struct"},"32:1387:3426":{"crate_id":32,"path":["zerovec","zerovec","slice","ZeroSlice"],"kind":"struct"},"6:5057:8697":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"5:4377:2693":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"1:46243:7450":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:4482:10215":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"16:4694:6383":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"32:869:4392":{"crate_id":32,"path":["zerovec","map2d","map","ZeroMap2d"],"kind":"struct"},"30:310:5033":{"crate_id":30,"path":["writeable","try_writeable","TryWriteableInfallibleAsWriteable"],"kind":"struct"},"20:498:3421":{"crate_id":20,"path":["icu_normalizer","provider","DecompositionTablesV1"],"kind":"struct"},"5:1636:210":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"11:2545:8321":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"1:44957:164":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"6:5494:8859":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"17:10793:5330":{"crate_id":17,"path":["object","read","read_cache","ReadCacheRange"],"kind":"struct"},"32:2106:27407":{"crate_id":32,"path":["zerovec","ule","EqULE"],"kind":"trait"},"22:4563:3545":{"crate_id":22,"path":["icu_properties","provider","IdsTrinaryOperatorV1Marker"],"kind":"struct"},"17:13933:5612":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"17:12191:5419":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"29:831:4405":{"crate_id":29,"path":["icu_locid","shortvec","ShortBoxSlice"],"kind":"struct"},"22:4612:3552":{"crate_id":22,"path":["icu_properties","provider","NfdInertV1Marker"],"kind":"struct"},"32:2515:5019":{"crate_id":32,"path":["zerovec","ule","chars","CharULE"],"kind":"struct"},"4:5976:7049":{"crate_id":4,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"1:39716:7328":{"crate_id":1,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"4:8885:2693":{"crate_id":4,"path":["std","path","Iter"],"kind":"struct"},"1:45070:7415":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:10181:3330":{"crate_id":1,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"23:595:27337":{"crate_id":23,"path":["icu_provider","dynutil","UpcastDataPayload"],"kind":"trait"},"1:22:826":{"crate_id":1,"path":["core","format_args"],"kind":"macro"},"5:2377:4662":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"1:22591:10152":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_exposed_provenance"],"kind":"function"},"16:5689:6407":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"6:5507:8864":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"22:5095:3621":{"crate_id":22,"path":["icu_properties","provider","IndicSyllabicCategoryNameToValueV1Marker"],"kind":"struct"},"18:680:5192":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:46214:7441":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"17:14933:5812":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"16:3014:22018":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"16:4184:6379":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"22:4675:3561":{"crate_id":22,"path":["icu_properties","provider","RegionalIndicatorV1Marker"],"kind":"struct"},"1:30521:10065":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"11:685:4018":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"11:102:8313":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"1:10404:206":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"1:10607:153":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"17:15777:6050":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"23:35:3449":{"crate_id":23,"path":["icu_provider","data_provider","DynamicDataProvider"],"kind":"trait"},"16:2530:6343":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"1:40704:7336":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:46281:7452":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"4:3536:7019":{"crate_id":4,"path":["std","io","util","Repeat"],"kind":"struct"},"16:7259:6572":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"1:40905:7350":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"5:5963:251":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"4:8485:4694":{"crate_id":4,"path":["std","io","util","Empty"],"kind":"struct"},"4:1489:156":{"crate_id":4,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"6:7341:9211":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"16:8066:22888":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"4:8354:7092":{"crate_id":4,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"32:2797:5015":{"crate_id":32,"path":["zerovec","ule","unvalidated","UnvalidatedChar"],"kind":"struct"},"1:41906:170":{"crate_id":1,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"22:4801:3579":{"crate_id":22,"path":["icu_properties","provider","ExemplarCharactersIndexV1Marker"],"kind":"struct"},"6:4890:8619":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"4:10357:7000":{"crate_id":4,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"4:1617:2693":{"crate_id":4,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"1:45093:7416":{"crate_id":1,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"5:5562:15895":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"4:5305:7036":{"crate_id":4,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"22:5164:5123":{"crate_id":22,"path":["icu_properties","script","ScriptWithExt"],"kind":"struct"},"5:3095:37340":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"20:303:3455":{"crate_id":20,"path":["icu_normalizer","properties","CanonicalComposition"],"kind":"struct"},"4:8027:7079":{"crate_id":4,"path":["std","thread","ThreadId"],"kind":"struct"},"4:8631:7144":{"crate_id":4,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"1:46156:7437":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"11:0:3233":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"1:11402:4025":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"16:7471:6596":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"1:4447:7222":{"crate_id":1,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"16:6502:21990":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"16:8267:6708":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"6:5051:8695":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"29:1061:4415":{"crate_id":29,"path":["icu_locid","extensions","transform","fields","Fields"],"kind":"struct"},"17:13209:138":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"28:0:3347":{"crate_id":28,"path":["zerofrom_derive"],"kind":"module"},"22:5053:3615":{"crate_id":22,"path":["icu_properties","provider","WordBreakValueToLongNameV1Marker"],"kind":"struct"},"17:13757:5593":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"17:16385:6225":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"37:669:4963":{"crate_id":37,"path":["icu_locid_transform","provider","expander","LikelySubtagsForLanguageV1"],"kind":"struct"},"17:10115:22939":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"11:488:154":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"17:12711:5490":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"17:16750:6319":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"37:714:27460":{"crate_id":37,"path":["icu_locid_transform","provider","expander","LikelySubtagsExtendedV1Marker"],"kind":"struct"},"18:589:5172":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"41:63:3422":{"crate_id":41,"path":["utf16_iter","Utf16CharsEx"],"kind":"trait"},"4:9433:234":{"crate_id":4,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"22:2184:5107":{"crate_id":22,"path":["icu_properties","bidi_data","BidiAuxiliaryProperties"],"kind":"struct"},"17:13322:22955":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"1:43165:74":{"crate_id":1,"path":["core","fmt","rt","Argument"],"kind":"struct"},"17:5131:5226":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"22:1850:3473":{"crate_id":22,"path":["icu_properties","props","SentenceBreak"],"kind":"struct"},"5:1604:6868":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"4:9352:4695":{"crate_id":4,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"22:4633:3555":{"crate_id":22,"path":["icu_properties","provider","PatternSyntaxV1Marker"],"kind":"struct"},"22:4514:3538":{"crate_id":22,"path":["icu_properties","provider","GraphemeLinkV1Marker"],"kind":"struct"},"17:15989:6105":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"1:43862:4027":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"4:12401:763":{"crate_id":4,"path":["std","f64"],"kind":"primitive"},"17:11720:5378":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"5:7502:3292":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"6:553:8386":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"1:3288:10195":{"crate_id":1,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"1:40919:4716":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"22:1587:3466":{"crate_id":22,"path":["icu_properties","props","EastAsianWidth"],"kind":"struct"},"4:12395:1739":{"crate_id":4,"path":["std","str"],"kind":"primitive"},"5:7708:6976":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"1:43983:3266":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"20:468:3418":{"crate_id":20,"path":["icu_normalizer","provider","CanonicalDecompositionTablesV1Marker"],"kind":"struct"},"4:5274:7036":{"crate_id":4,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"32:55:5004":{"crate_id":32,"path":["zerovec","flexzerovec","slice","FlexZeroSlice"],"kind":"struct"},"5:1586:4653":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"17:15036:5834":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"1:44961:219":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"1:5281:29919":{"crate_id":1,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"22:4577:3547":{"crate_id":22,"path":["icu_properties","provider","LogicalOrderExceptionV1Marker"],"kind":"struct"},"4:8625:15792":{"crate_id":4,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"1:39784:215":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"5:6149:4665":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"1:46477:7462":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:44354:3925":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"16:4120:6377":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"22:4780:3576":{"crate_id":22,"path":["icu_properties","provider","ExemplarCharactersAuxiliaryV1Marker"],"kind":"struct"},"1:44787:4724":{"crate_id":1,"path":["core","time","Nanoseconds"],"kind":"struct"},"16:6640:6479":{"crate_id":16,"path":["gimli","read","dwarf","DwarfSections"],"kind":"struct"},"4:10444:7687":{"crate_id":4,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"1:44291:4223":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"17:12952:5513":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"17:2406:5215":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"1:3699:10202":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:42878:3310":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"17:13082:5345":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"1:2966:145":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"1:8757:10258":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"6:1690:8532":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"22:1610:8297":{"crate_id":22,"path":["icu_properties","props","EastAsianWidthULE"],"kind":"struct"},"16:6822:22882":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCacheStrategy"],"kind":"enum"},"1:47268:7536":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"4:12393:335":{"crate_id":4,"path":["std","array"],"kind":"primitive"},"11:1105:6865":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"22:4864:3588":{"crate_id":22,"path":["icu_properties","provider","BidiClassV1Marker"],"kind":"struct"},"22:4899:3593":{"crate_id":22,"path":["icu_properties","provider","ScriptNameToValueV1Marker"],"kind":"struct"},"29:729:27360":{"crate_id":29,"path":["icu_locid","ordering","SubtagOrderingResult"],"kind":"enum"},"37:793:4367":{"crate_id":37,"path":["icu_locid_transform","provider","fallback","LocaleFallbackLikelySubtagsV1"],"kind":"struct"},"19:0:1305":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"11:2559:8324":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"5:0:309":{"crate_id":5,"path":["alloc"],"kind":"module"},"17:15931:6091":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"1:22501:15464":{"crate_id":1,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"0:189:2353":{"crate_id":0,"path":["idna","uts46","Uts46"],"kind":"struct"},"11:830:6868":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"1:41413:7253":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"22:5081:3619":{"crate_id":22,"path":["icu_properties","provider","SentenceBreakValueToLongNameV1Marker"],"kind":"struct"},"1:12008:4036":{"crate_id":1,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"22:1410:4447":{"crate_id":22,"path":["icu_properties","props","GeneralCategoryTryFromError"],"kind":"struct"},"20:631:3404":{"crate_id":20,"path":["icu_normalizer","Decomposition"],"kind":"struct"},"0:251:2398":{"crate_id":0,"path":["idna","domain_to_ascii_strict"],"kind":"function"},"1:39844:4011":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"17:13398:4504":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"1:22685:15459":{"crate_id":1,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"9:390:21871":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"36:522:4981":{"crate_id":36,"path":["icu_collections","codepointinvliststringlist","CodePointInversionListAndStringListULE"],"kind":"struct"},"16:7358:4600":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"4:4824:9234":{"crate_id":4,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"function"},"1:21826:4725":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"17:16179:6174":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"16:7959:6692":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"4:11990:7074":{"crate_id":4,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"34:351:27423":{"crate_id":34,"path":["litemap","store","StoreIterable"],"kind":"trait"},"11:1884:3297":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"6:532:8375":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"16:4956:6390":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"4:10950:7087":{"crate_id":4,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"29:786:5043":{"crate_id":29,"path":["icu_locid","parser","SubtagIterator"],"kind":"struct"},"32:2491:4393":{"crate_id":32,"path":["zerovec","varzerovec","components","VarZeroVecComponents"],"kind":"struct"},"6:5648:8923":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"11:2539:8320":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"17:16187:6175":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"1:46754:7489":{"crate_id":1,"path":["core","core_arch","simd","m8x32"],"kind":"struct"},"11:2380:2693":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"16:8483:5049":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"17:11448:5358":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"6:1584:8462":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"6:6437:8980":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"16:2486:6341":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"4:3347:7013":{"crate_id":4,"path":["std","io","stdio","Stdin"],"kind":"struct"},"14:165:21955":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"1:44612:10324":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:46051:7427":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"11:2121:6606":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"32:3000:5025":{"crate_id":32,"path":["zerovec","ule","tuple","Tuple5ULE"],"kind":"struct"},"6:8014:9335":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"17:14963:5818":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"4:4777:15811":{"crate_id":4,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"4:4359:9728":{"crate_id":4,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"6:5179:8714":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"0:341:2568":{"crate_id":0,"path":["idna","uts46","ErrorPolicy","FailFast"],"kind":"variant"},"4:8664:7147":{"crate_id":4,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"16:8612:4616":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"1:32458:3339":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"22:1032:5094":{"crate_id":22,"path":["icu_properties","props","ErasedNameToEnumMapV1Marker"],"kind":"struct"},"4:11016:34385":{"crate_id":4,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"17:14375:5714":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"41:95:4935":{"crate_id":41,"path":["utf16_iter","Utf16Chars"],"kind":"struct"},"6:1589:8464":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"17:12319:5437":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"1:45987:7421":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:46072:7432":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"16:8669:4416":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"16:4929:6389":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"4:8723:7148":{"crate_id":4,"path":["std","panic","PanicHookInfo"],"kind":"struct"},"20:422:3409":{"crate_id":20,"path":["icu_normalizer","provider","CompatibilityDecompositionSupplementV1Marker"],"kind":"struct"},"5:2594:9374":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"1:40896:7232":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"20:536:5141":{"crate_id":20,"path":["icu_normalizer","provider","CanonicalCompositionsV1"],"kind":"struct"},"6:5450:8836":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"17:14640:5752":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"34:320:27419":{"crate_id":34,"path":["litemap","store","Store"],"kind":"trait"},"4:3072:226":{"crate_id":4,"path":["std","io","error","Result"],"kind":"type_alias"},"1:44023:4221":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:2957:78":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"1:32398:237":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"23:915:3439":{"crate_id":23,"path":["icu_provider","key","DataKey"],"kind":"struct"},"6:4869:8611":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"1:23169:7311":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU16Inner"],"kind":"struct"},"18:726:4458":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"5:7692:4664":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"4:1905:7000":{"crate_id":4,"path":["std","env","SplitPaths"],"kind":"struct"},"1:21689:30538":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"22:4892:3592":{"crate_id":22,"path":["icu_properties","provider","ScriptV1Marker"],"kind":"struct"},"6:8031:9344":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"4:9165:7170":{"crate_id":4,"path":["std","process","ExitStatusError"],"kind":"struct"},"4:4888:15815":{"crate_id":4,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"4:8549:4221":{"crate_id":4,"path":["std","io","Bytes"],"kind":"struct"},"17:12736:5492":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"9:445:21870":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"32:505:27412":{"crate_id":32,"path":["zerovec","map","vecs","MutableZeroVecLike"],"kind":"trait"},"4:5606:7037":{"crate_id":4,"path":["std","process","Child"],"kind":"struct"},"4:384:6987":{"crate_id":4,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"16:4902:6388":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"1:42498:94":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"4:9393:4697":{"crate_id":4,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"22:4969:3603":{"crate_id":22,"path":["icu_properties","provider","EastAsianWidthValueToLongNameV1Marker"],"kind":"struct"},"1:3052:138":{"crate_id":1,"path":["core","error","Error"],"kind":"trait"},"16:5172:6396":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"6:5405:8810":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"17:12082:4477":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"11:351:9710":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"17:11016:5342":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"0:326:2382":{"crate_id":0,"path":["idna","uts46","DnsLength","Ignore"],"kind":"variant"},"1:21721:30545":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"4:5351:204":{"crate_id":4,"path":["std","path","PathBuf"],"kind":"struct"},"17:12699:5489":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"22:5011:3609":{"crate_id":22,"path":["icu_properties","provider","GraphemeClusterBreakNameToValueV1Marker"],"kind":"struct"},"32:2926:5024":{"crate_id":32,"path":["zerovec","ule","tuple","Tuple4ULE"],"kind":"struct"},"17:14019:5628":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"4:505:34989":{"crate_id":4,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"17:16739:6318":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"0:343:2577":{"crate_id":0,"path":["idna","uts46","ErrorPolicy","MarkErrors"],"kind":"variant"},"16:6866:4419":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"1:2808:202":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"24:17:15726":{"crate_id":24,"path":["yoke","cartable_ptr","private","Sealed"],"kind":"trait"},"18:481:5166":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"4:2493:15715":{"crate_id":4,"path":["std","fs","read_link"],"kind":"function"},"4:5184:15819":{"crate_id":4,"path":["std","panic","always_abort"],"kind":"function"},"6:5420:8815":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"1:43408:7375":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"29:1409:4416":{"crate_id":29,"path":["icu_locid","extensions","unicode","value","Value"],"kind":"struct"},"5:2157:4693":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"5:5150:9381":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"17:12260:23056":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCacheSlice"],"kind":"enum"},"4:2084:197":{"crate_id":4,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"4:4699:15794":{"crate_id":4,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"6:5271:8757":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"1:8295:165":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:12981:4214":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:40554:3934":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"4:5855:220":{"crate_id":4,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"8:0:3230":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"1:39744:210":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"16:7424:22885":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"4:2011:4289":{"crate_id":4,"path":["std","error","Indented"],"kind":"struct"},"22:5123:3625":{"crate_id":22,"path":["icu_properties","provider","JoiningTypeNameToValueV1Marker"],"kind":"struct"},"17:14001:5627":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"32:1266:27167":{"crate_id":32,"path":["zerovec","varzerovec","vec","VarZeroVec"],"kind":"enum"},"6:7604:9326":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"5:3373:6874":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"24:117:28170":{"crate_id":24,"path":["yoke","kinda_sorta_dangling","KindaSortaDangling"],"kind":"struct"},"23:1001:27332":{"crate_id":23,"path":["icu_provider","any","AnyPayloadInner"],"kind":"enum"},"6:8343:9367":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"4:1650:6874":{"crate_id":4,"path":["std","collections","hash","set","Union"],"kind":"struct"},"32:2114:37643":{"crate_id":32,"path":["zerovec","ule","VarULE","parse_byte_slice"],"kind":"function"},"1:10766:10300":{"crate_id":1,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"4:3617:7020":{"crate_id":4,"path":["std","io","IoSliceMut"],"kind":"struct"},"32:3086:5026":{"crate_id":32,"path":["zerovec","ule","tuple","Tuple6ULE"],"kind":"struct"},"6:7316:9193":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"1:41372:7251":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:23213:7315":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroUsizeInner"],"kind":"struct"},"16:6713:6485":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"1:40990:7243":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"40:281:3297":{"crate_id":40,"path":["smallvec","IntoIter"],"kind":"struct"},"1:15:3205":{"crate_id":1,"path":["core","write"],"kind":"macro"},"1:10655:4722":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"4:597:6990":{"crate_id":4,"path":["std","thread","JoinHandle"],"kind":"struct"},"32:2550:4401":{"crate_id":32,"path":["zerovec","ule","niche","NichedOption"],"kind":"struct"},"4:12416:13":{"crate_id":4,"path":["std","fn"],"kind":"primitive"},"1:33759:10183":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"6:5471:8851":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"17:12886:5508":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"15:0:3236":{"crate_id":15,"path":["addr2line"],"kind":"module"},"22:5144:5122":{"crate_id":22,"path":["icu_properties","runtime","UnicodeProperty"],"kind":"struct"},"1:21723:30534":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"17:13854:4510":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"1:5319:7227":{"crate_id":1,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"4:12406:914":{"crate_id":4,"path":["std","i64"],"kind":"primitive"},"22:4360:3516":{"crate_id":22,"path":["icu_properties","provider","CaseIgnorableV1Marker"],"kind":"struct"},"4:4308:9725":{"crate_id":4,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"6:6758:9125":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"1:47048:7526":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"5:1011:2693":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"5:3313:6872":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"22:4381:3519":{"crate_id":22,"path":["icu_properties","provider","ChangesWhenCasemappedV1Marker"],"kind":"struct"},"22:969:3478":{"crate_id":22,"path":["icu_properties","maps","ErasedMaplikeMarker"],"kind":"struct"},"17:13427:5544":{"crate_id":17,"path":["object","read","ObjectMapFile"],"kind":"struct"},"4:5869:7046":{"crate_id":4,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"1:38419:10191":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"6:6823:9144":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"16:7462:6593":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"13:229:4622":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"6:8008:9333":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"5:789:250":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"1:4716:221":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"5:938:15677":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"29:1380:4420":{"crate_id":29,"path":["icu_locid","extensions","unicode","keywords","Keywords"],"kind":"struct"},"1:4935:476":{"crate_id":1,"path":["core","char"],"kind":"module"},"22:4640:3556":{"crate_id":22,"path":["icu_properties","provider","PatternWhiteSpaceV1Marker"],"kind":"struct"},"17:14573:5743":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"37:331:27448":{"crate_id":37,"path":["icu_locid_transform","error","LocaleTransformError"],"kind":"enum"},"17:12673:5484":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"4:12405:908":{"crate_id":4,"path":["std","i32"],"kind":"primitive"},"17:12762:5494":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"4:8574:7139":{"crate_id":4,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"6:4902:8623":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"0:354:2570":{"crate_id":0,"path":["idna","uts46","ProcessingSuccess","Passthrough"],"kind":"variant"},"31:667:27392":{"crate_id":31,"path":["tinystr","error","TinyStrError"],"kind":"enum"},"1:2713:104":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:46378:7457":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"22:4472:3532":{"crate_id":22,"path":["icu_properties","provider","EmojiPresentationV1Marker"],"kind":"struct"},"1:44419:10323":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:22851:7290":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"6:8308:9358":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"17:11691:5374":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"20:279:3398":{"crate_id":20,"path":["icu_normalizer","IsNormalizedSinkStr"],"kind":"struct"},"4:11702:4688":{"crate_id":4,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"17:14312:5702":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV2"],"kind":"struct"},"6:7487:9262":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"6:7986:9332":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"2:234:226":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"32:2472:5018":{"crate_id":32,"path":["zerovec","varzerovec","components","Index32"],"kind":"struct"},"20:663:3406":{"crate_id":20,"path":["icu_normalizer","DecomposingNormalizer"],"kind":"struct"},"4:7490:9729":{"crate_id":4,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"6:6731:9115":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"1:43626:9480":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"17:10778:5326":{"crate_id":17,"path":["object","read","read_cache","ReadCache"],"kind":"struct"},"1:23042:5036":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"5:291:36953":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"1:22671:15726":{"crate_id":1,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"18:698:4457":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"1:42094:7372":{"crate_id":1,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"6:6659:9092":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:13916:7288":{"crate_id":1,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"1:36433:6626":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"37:0:3356":{"crate_id":37,"path":["icu_locid_transform"],"kind":"module"},"5:306:3262":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"1:26131:267":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:11329:4022":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"6:5541:8871":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"17:15531:6004":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"29:946:2934":{"crate_id":29,"path":["icu_locid","extensions","other","Other"],"kind":"struct"},"41:79:4933":{"crate_id":41,"path":["utf16_iter","report","Utf16CharsError"],"kind":"struct"},"16:7282:6573":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"22:3758:3505":{"crate_id":22,"path":["icu_properties","provider","PropertyUnicodeSetV1"],"kind":"enum"},"20:309:3456":{"crate_id":20,"path":["icu_normalizer","properties","Decomposed"],"kind":"enum"},"22:2188:5108":{"crate_id":22,"path":["icu_properties","bidi_data","BidiMirroringProperties"],"kind":"struct"},"6:1539:8431":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"4:4110:15766":{"crate_id":4,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"4:8045:5446":{"crate_id":4,"path":["std","thread","Thread"],"kind":"struct"},"17:15760:6047":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"1:44241:4228":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"36:595:27435":{"crate_id":36,"path":["icu_collections","codepointinvliststringlist","CodePointInversionListAndStringListError"],"kind":"enum"},"18:706:4215":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"4:5533:129":{"crate_id":4,"path":["std","path","Display"],"kind":"struct"},"17:16159:6168":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"6:5186:8715":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"16:3987:5243":{"crate_id":16,"path":["gimli","arch","PowerPc64"],"kind":"struct"},"1:3212:247":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"16:7159:6546":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"23:744:3438":{"crate_id":23,"path":["icu_provider","error","DataErrorKind"],"kind":"enum"},"37:358:4943":{"crate_id":37,"path":["icu_locid_transform","fallback","LocaleFallbacker"],"kind":"struct"},"1:11051:239":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"16:4152:6378":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"1:10389:120":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"4:8690:7029":{"crate_id":4,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"1:9529:3260":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"37:756:27461":{"crate_id":37,"path":["icu_locid_transform","provider","fallback","LocaleFallbackLikelySubtagsV1Marker"],"kind":"struct"},"37:840:4372":{"crate_id":37,"path":["icu_locid_transform","provider","fallback","LocaleFallbackParentsV1"],"kind":"struct"},"4:4208:15771":{"crate_id":4,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"17:11475:22967":{"crate_id":17,"path":["object","read","archive","SymbolIteratorInternal"],"kind":"enum"},"1:44767:4212":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"6:8353:9369":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"23:982:3448":{"crate_id":23,"path":["icu_provider","response","DataResponseMetadata"],"kind":"struct"},"6:5255:8748":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"6:6917:9181":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"5:40:3293":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"0:35:2354":{"crate_id":0,"path":["idna","punycode"],"kind":"module"},"4:11067:4673":{"crate_id":4,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"6:1551:8440":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:3438:3250":{"crate_id":1,"path":["core","ops","deref","DerefPure"],"kind":"trait"},"1:42759:4862":{"crate_id":1,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"16:3048:22019":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"17:16555:6276":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"4:9735:139":{"crate_id":4,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"6:5682:8936":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"17:15439:5969":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"6:5265:8754":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"16:7542:6605":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"6:6638:9080":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"23:1046:5082":{"crate_id":23,"path":["icu_provider","any","DowncastingAnyProvider"],"kind":"struct"},"4:8835:15836":{"crate_id":4,"path":["std","path","Component"],"kind":"enum"},"4:9141:199":{"crate_id":4,"path":["std","process","Output"],"kind":"struct"},"22:4878:3590":{"crate_id":22,"path":["icu_properties","provider","BidiClassValueToShortNameV1Marker"],"kind":"struct"},"6:6443:8983":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"16:7980:6371":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"1:34038:10186":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"6:5593:8892":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"16:6573:6473":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"17:11653:5371":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"4:9360:7179":{"crate_id":4,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"6:5641:8920":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"4:3684:15745":{"crate_id":4,"path":["std","io","BufRead"],"kind":"trait"},"17:11291:37375":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"20:573:5142":{"crate_id":20,"path":["icu_normalizer","provider","NonRecursiveDecompositionSupplementV1"],"kind":"struct"},"11:1580:6869":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"4:4160:15768":{"crate_id":4,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"22:4388:3520":{"crate_id":22,"path":["icu_properties","provider","ChangesWhenNfkcCasefoldedV1Marker"],"kind":"struct"},"22:2258:3628":{"crate_id":22,"path":["icu_properties","provider","names","GeneralCategoryMaskNameToValueV1Marker"],"kind":"struct"},"1:10650:10292":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:43387:4866":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"20:340:3502":{"crate_id":20,"path":["icu_normalizer","provider","Baked"],"kind":"struct"},"1:9855:92":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"11:1023:6862":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"6:1711:8540":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"1:33353:10180":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"4:3848:15764":{"crate_id":4,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"1:45012:7409":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"4:9319:32041":{"crate_id":4,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"20:592:3400":{"crate_id":20,"path":["icu_normalizer","SupplementPayloadHolder"],"kind":"enum"},"17:11319:37374":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"17:12018:5401":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"22:4871:3589":{"crate_id":22,"path":["icu_properties","provider","BidiClassNameToValueV1Marker"],"kind":"struct"},"16:4404:6382":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"4:2495:15716":{"crate_id":4,"path":["std","fs","canonicalize"],"kind":"function"},"1:13953:152":{"crate_id":1,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"6:5205:8727":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"16:6188:6420":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"1:6976:9402":{"crate_id":1,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"17:16656:6295":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"1:23731:236":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"18:0:3239":{"crate_id":18,"path":["memchr"],"kind":"module"},"16:5060:6392":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"4:6696:7059":{"crate_id":4,"path":["std","sync","once","Once"],"kind":"struct"},"17:13193:5532":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"4:8797:7375":{"crate_id":4,"path":["std","path","State"],"kind":"enum"},"4:8579:15763":{"crate_id":4,"path":["std","net","Shutdown"],"kind":"enum"},"35:0:3354":{"crate_id":35,"path":["icu_provider_macros"],"kind":"module"},"0:356:2572":{"crate_id":0,"path":["idna","uts46","ProcessingSuccess","WroteToSink"],"kind":"variant"},"5:6812:3297":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"1:47320:7540":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"4:12404:902":{"crate_id":4,"path":["std","i16"],"kind":"primitive"},"16:6808:4590":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"17:12920:5510":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"1:22904:4726":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:3581:211":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"17:16701:6304":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"22:1054:5097":{"crate_id":22,"path":["icu_properties","props","PropertyValueNameToEnumMapperBorrowed"],"kind":"struct"},"4:8732:15823":{"crate_id":4,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"4:2323:139":{"crate_id":4,"path":["std","fs","File"],"kind":"struct"},"4:994:6861":{"crate_id":4,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"4:11308:162":{"crate_id":4,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"6:5477:8854":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"4:923:4655":{"crate_id":4,"path":["std","collections","hash","map","Values"],"kind":"struct"},"1:10337:2614":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"4:11964:4700":{"crate_id":4,"path":["std","alloc","System"],"kind":"struct"},"4:3665:32350":{"crate_id":4,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"4:6010:4674":{"crate_id":4,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"6:6534:9022":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"17:14708:5762":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"4:9438:235":{"crate_id":4,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"17:12860:5507":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"16:6111:6419":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"17:12135:5414":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"11:2323:6862":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"16:6123:6366":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"10:36:8326":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"1:40541:3932":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"16:6781:6495":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"1:32489:115":{"crate_id":1,"path":["core","marker","ConstParamTy"],"kind":"trait"},"4:3493:15752":{"crate_id":4,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"1:21922:15726":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"32:680:4387":{"crate_id":32,"path":["zerovec","map2d","borrowed","ZeroMap2dBorrowed"],"kind":"struct"},"43:0:3360":{"crate_id":43,"path":["write16"],"kind":"module"},"17:16714:6310":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"6:8261:9348":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"1:32929:6619":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"6:1684:8529":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"4:12392:1328":{"crate_id":4,"path":["std","pointer"],"kind":"primitive"},"4:9492:7181":{"crate_id":4,"path":["std","time","SystemTimeError"],"kind":"struct"},"17:11457:5359":{"crate_id":17,"path":["object","read","archive","ArchiveOffset"],"kind":"struct"},"1:4435:7221":{"crate_id":1,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"4:11255:4724":{"crate_id":4,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"16:8165:4613":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"4:3599:7140":{"crate_id":4,"path":["std","io","Read"],"kind":"trait"},"17:12625:5481":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"29:799:38092":{"crate_id":29,"path":["icu_locid","shortvec","ShortBoxSliceInner"],"kind":"enum"},"4:9474:7069":{"crate_id":4,"path":["std","time","SystemTime"],"kind":"struct"},"4:8108:7085":{"crate_id":4,"path":["std","env","JoinPathsError"],"kind":"struct"},"17:15586:6016":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"37:880:4374":{"crate_id":37,"path":["icu_locid_transform","provider","fallback","LocaleFallbackSupplementV1"],"kind":"struct"},"4:7809:7742":{"crate_id":4,"path":["std","panicking","begin_panic_handler","StaticStrPayload"],"kind":"struct"},"17:14483:5731":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"17:15121:5846":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"5:7551:6975":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"17:15852:6066":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"17:13958:5617":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"17:15844:6065":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"20:268:3397":{"crate_id":20,"path":["icu_normalizer","IsNormalizedSinkUtf8"],"kind":"struct"},"20:588:2744":{"crate_id":20,"path":["icu_normalizer","uts46","Uts46Mapper"],"kind":"struct"},"4:910:4653":{"crate_id":4,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"16:2467:4529":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"22:4430:3526":{"crate_id":22,"path":["icu_properties","provider","DefaultIgnorableCodePointV1Marker"],"kind":"struct"},"17:11878:4466":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"1:44805:131":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"17:11232:22967":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"17:11777:5384":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"37:311:4006":{"crate_id":37,"path":["icu_locid_transform","directionality","Direction"],"kind":"enum"},"17:10861:139":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"40:328:3637":{"crate_id":40,"path":["smallvec","Array"],"kind":"trait"},"26:0:3345":{"crate_id":26,"path":["yoke_derive"],"kind":"module"},"17:10332:22946":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"18:718:5198":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"17:12776:5495":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"4:2715:7009":{"crate_id":4,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"4:9225:7173":{"crate_id":4,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"4:1639:6872":{"crate_id":4,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"4:5117:15814":{"crate_id":4,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"17:15864:6072":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"16:7938:6689":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"22:4689:3563":{"crate_id":22,"path":["icu_properties","provider","SegmentStarterV1Marker"],"kind":"struct"},"4:9448:7068":{"crate_id":4,"path":["std","sync","rwlock","MappedRwLockWriteGuard"],"kind":"struct"},"1:40981:4717":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"16:6389:6439":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"22:4955:3601":{"crate_id":22,"path":["icu_properties","provider","EastAsianWidthNameToValueV1Marker"],"kind":"struct"},"22:4836:3584":{"crate_id":22,"path":["icu_properties","provider","GeneralCategoryV1Marker"],"kind":"struct"},"9:355:21885":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"18:670:5191":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"6:6700:9107":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"4:6700:7060":{"crate_id":4,"path":["std","sync","once","OnceState"],"kind":"struct"},"1:33141:6616":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"4:1621:3297":{"crate_id":4,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"5:7666:3263":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"17:12976:5515":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"17:14084:5644":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"17:12149:5415":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"17:12008:5273":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"16:7521:6603":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"17:10696:4486":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"22:4451:3529":{"crate_id":22,"path":["icu_properties","provider","EmojiComponentV1Marker"],"kind":"struct"},"16:8723:138":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"4:4174:15770":{"crate_id":4,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"5:3729:4018":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"17:12122:5413":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"4:9373:32040":{"crate_id":4,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"16:0:3237":{"crate_id":16,"path":["gimli"],"kind":"module"},"6:4816:8568":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"4:12372:32042":{"crate_id":4,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"1:40730:7337":{"crate_id":1,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:3736:10203":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"4:3910:7022":{"crate_id":4,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"4:9152:4672":{"crate_id":4,"path":["std","process","ExitStatus"],"kind":"struct"},"5:1595:4655":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"5:3465:3294":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"16:2590:6346":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"22:4493:3535":{"crate_id":22,"path":["icu_properties","provider","GraphV1Marker"],"kind":"struct"},"6:5311:8776":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"29:866:38099":{"crate_id":29,"path":["icu_locid","shortvec","ShortBoxSliceIntoIterInner"],"kind":"enum"},"5:143:3243":{"crate_id":5,"path":["alloc","boxed"],"kind":"module"},"32:1662:38276":{"crate_id":32,"path":["zerovec","ule","encode","EncodeAsVarULE","encode_var_ule_len"],"kind":"function"},"1:13690:30117":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"16:6408:6446":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"22:5200:5126":{"crate_id":22,"path":["icu_properties","script","ScriptWithExtensionsBorrowed"],"kind":"struct"},"16:4810:6385":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"29:1038:4414":{"crate_id":29,"path":["icu_locid","extensions","private","Private"],"kind":"struct"},"16:7508:6600":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"22:4549:3543":{"crate_id":22,"path":["icu_properties","provider","IdStartV1Marker"],"kind":"struct"},"1:42857:3308":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:22244:30546":{"crate_id":1,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"1:3343:6621":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"5:4491:265":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"6:5603:8897":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"1:43964:4031":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:11281:5346":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"37:940:4966":{"crate_id":37,"path":["icu_locid_transform","provider","StrStrPairVarULE"],"kind":"struct"},"4:532:15642":{"crate_id":4,"path":["std","thread","PanicGuard"],"kind":"struct"},"29:859:5046":{"crate_id":29,"path":["icu_locid","shortvec","ShortBoxSliceIntoIter"],"kind":"struct"},"22:1652:3471":{"crate_id":22,"path":["icu_properties","props","LineBreak"],"kind":"struct"},"1:45044:7414":{"crate_id":1,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"17:12840:5502":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"1:23069:9404":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"18:548:153":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"17:2378:23012":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"6:7431:9241":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"16:7949:6370":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"6:523:8369":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"1:12775:4038":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:44187:4230":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"17:14750:5783":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"16:3587:6374":{"crate_id":16,"path":["gimli","arch","MIPS"],"kind":"struct"},"16:5198:6397":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"17:15351:5906":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"1:30811:28832":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"29:1013:5047":{"crate_id":29,"path":["icu_locid","extensions","private","other","Subtag"],"kind":"struct"},"6:5551:8877":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"22:1130:5103":{"crate_id":22,"path":["icu_properties","props","PropertyEnumToValueNameLinearMapperBorrowed"],"kind":"struct"},"5:6685:3254":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"15:394:21982":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"29:1564:4406":{"crate_id":29,"path":["icu_locid","subtags","language","Language"],"kind":"struct"},"17:13692:5570":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"4:9429:9381":{"crate_id":4,"path":["std","sync","poison","Guard"],"kind":"struct"},"22:0:2415":{"crate_id":22,"path":["icu_properties"],"kind":"module"},"1:3433:4286":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"6:8255:9347":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"6:6449:8984":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"4:8555:4021":{"crate_id":4,"path":["std","io","Split"],"kind":"struct"},"18:531:5169":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"17:15136:4498":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"14:7:6846":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"1:40564:3935":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"16:4766:6384":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"17:15731:6040":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"1:30785:7323":{"crate_id":1,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"4:4932:15784":{"crate_id":4,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"1:42354:3297":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"0:0:2413":{"crate_id":0,"path":["idna"],"kind":"module"},"17:12371:4494":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"6:7463:9251":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"1:32487:3338":{"crate_id":1,"path":["core","marker","Tuple"],"kind":"trait"},"1:47122:7528":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"7:32:21856":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"17:15769:6048":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"18:491:5167":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"17:16198:6179":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"17:16209:6180":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"22:5247:5131":{"crate_id":22,"path":["icu_properties","sets","ErasedUnicodeSetlikeMarker"],"kind":"struct"},"0:371:2575":{"crate_id":0,"path":["idna","uts46","ProcessingError","SinkError"],"kind":"variant"},"17:15981:6103":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"1:23100:10094":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"17:10534:4462":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"4:7372:7740":{"crate_id":4,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"22:1464:3472":{"crate_id":22,"path":["icu_properties","props","Script"],"kind":"struct"},"17:14152:5664":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"17:12816:5221":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"1:4855:3321":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"17:16362:6221":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"22:4906:3594":{"crate_id":22,"path":["icu_properties","provider","ScriptValueToShortNameV1Marker"],"kind":"struct"},"1:47201:7531":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"6:6666:9093":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"16:7731:3697":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"1:46325:7454":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"17:10516:22952":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"17:14072:5641":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"37:406:4949":{"crate_id":37,"path":["icu_locid_transform","fallback","LocaleFallbackIteratorInner"],"kind":"struct"},"4:11338:9387":{"crate_id":4,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"23:849:3440":{"crate_id":23,"path":["icu_provider","key","DataKeyHash"],"kind":"struct"},"1:45081:6878":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"16:6625:6477":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"29:760:27374":{"crate_id":29,"path":["icu_locid","parser","langid","ParserMode"],"kind":"enum"},"17:14335:5706":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"4:3445:7018":{"crate_id":4,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"11:1564:21949":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"17:13119:5527":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"17:2437:5217":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"36:269:3500":{"crate_id":36,"path":["icu_collections","codepointtrie","cptrie","TrieValue"],"kind":"trait"},"17:13781:5594":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"6:5007:8675":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"4:3674:15724":{"crate_id":4,"path":["std","io","Seek"],"kind":"trait"},"5:1564:3297":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"16:7969:6693":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"36:430:4376":{"crate_id":36,"path":["icu_collections","codepointinvlist","builder","CodePointInversionListBuilder"],"kind":"struct"},"1:43944:4032":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"6:5127:8710":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"1:42871:3309":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"6:4947:8646":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"6:7548:9304":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"22:4598:3550":{"crate_id":22,"path":["icu_properties","provider","NoncharacterCodePointV1Marker"],"kind":"struct"},"36:699:4994":{"crate_id":36,"path":["icu_collections","codepointtrie","cptrie","CodePointTrieHeader"],"kind":"struct"},"16:2772:6354":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"32:2115:37641":{"crate_id":32,"path":["zerovec","ule","VarULE","from_byte_slice_unchecked"],"kind":"function"},"23:530:3430":{"crate_id":23,"path":["icu_provider","any","AnyProvider"],"kind":"trait"},"31:0:3350":{"crate_id":31,"path":["tinystr"],"kind":"module"},"6:5441:8830":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"11:2366:6877":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"1:43371:4863":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"16:2550:6344":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"1:10408:3312":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:8284:146":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"22:4794:3578":{"crate_id":22,"path":["icu_properties","provider","ExemplarCharactersNumbersV1Marker"],"kind":"struct"},"1:2222:189":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"16:6852:6501":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"4:8272:7091":{"crate_id":4,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"4:5797:15841":{"crate_id":4,"path":["std","process","Termination"],"kind":"trait"},"4:982:6858":{"crate_id":4,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"1:43909:4033":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"22:1085:5099":{"crate_id":22,"path":["icu_properties","props","PropertyEnumToValueNameSparseMapper"],"kind":"struct"},"4:10987:7188":{"crate_id":4,"path":["std","sys","pal","unix","fs","Mode"],"kind":"struct"},"22:2159:8304":{"crate_id":22,"path":["icu_properties","props","JoiningTypeULE"],"kind":"struct"},"1:22563:15726":{"crate_id":1,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"5:7060:3300":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"22:3605:5118":{"crate_id":22,"path":["icu_properties","provider","bidi_data","MirroredPairedBracketDataTryFromError"],"kind":"struct"},"1:4789:9401":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"17:14612:5748":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"17:15540:6008":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"1:43611:7379":{"crate_id":1,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"5:7583:210":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"22:4570:3546":{"crate_id":22,"path":["icu_properties","provider","JoinControlV1Marker"],"kind":"struct"},"22:3793:3506":{"crate_id":22,"path":["icu_properties","provider","ScriptWithExtensionsPropertyV1Marker"],"kind":"struct"},"6:1727:8545":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"32:2453:4398":{"crate_id":32,"path":["zerovec","varzerovec","components","Index16"],"kind":"struct"},"17:13205:5533":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"4:4891:15793":{"crate_id":4,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"17:14997:5831":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"5:1223:9723":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"5:4217:4018":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"4:9237:15858":{"crate_id":4,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"4:8209:4692":{"crate_id":4,"path":["std","fs","FileTimes"],"kind":"struct"},"23:1032:3431":{"crate_id":23,"path":["icu_provider","any","AnyResponse"],"kind":"struct"},"6:5586:8890":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"30:338:5034":{"crate_id":30,"path":["writeable","try_writeable","WriteableAsTryWriteableInfallible"],"kind":"struct"},"4:11236:7170":{"crate_id":4,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"1:40807:4033":{"crate_id":1,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"40:118:2670":{"crate_id":40,"path":["smallvec","SmallVec"],"kind":"struct"},"5:3318:35750":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"41:69:4932":{"crate_id":41,"path":["utf16_iter","indices","Utf16CharIndices"],"kind":"struct"},"1:22205:15726":{"crate_id":1,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"32:267:27172":{"crate_id":32,"path":["zerovec","map","kv","ZeroMapKV"],"kind":"trait"},"5:3101:35728":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"1:40678:3931":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"struct"},"4:12340:7209":{"crate_id":4,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"4:7892:5211":{"crate_id":4,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"32:343:4386":{"crate_id":32,"path":["zerovec","map","map","ZeroMap"],"kind":"struct"},"16:6042:6365":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"16:546:4543":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"1:42338:2693":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"17:12687:5488":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"22:1768:3474":{"crate_id":22,"path":["icu_properties","props","WordBreak"],"kind":"struct"},"17:10368:22947":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"4:3304:34626":{"crate_id":4,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"17:13385:4502":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"22:4682:3562":{"crate_id":22,"path":["icu_properties","provider","SoftDottedV1Marker"],"kind":"struct"},"6:6480:8995":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"4:1852:703":{"crate_id":4,"path":["std","env"],"kind":"module"},"37:387:4947":{"crate_id":37,"path":["icu_locid_transform","fallback","LocaleFallbackerWithConfig"],"kind":"struct"},"18:538:4452":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"4:4146:15767":{"crate_id":4,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"17:14807:5795":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"6:8319:9362":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"17:12851:5506":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"22:2214:5111":{"crate_id":22,"path":["icu_properties","bidi_data","BidiAuxiliaryPropertiesBorrowed"],"kind":"struct"},"17:14586:5744":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"1:44763:4208":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"20:385:3408":{"crate_id":20,"path":["icu_normalizer","provider","CanonicalDecompositionDataV1Marker"],"kind":"struct"},"17:12931:4498":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"11:1893:3294":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"43:5:3423":{"crate_id":43,"path":["write16","Write16"],"kind":"trait"},"4:12396:1829":{"crate_id":4,"path":["std","tuple"],"kind":"primitive"},"17:14773:5792":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"1:40858:4714":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:47003:7525":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"6:6716:9113":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"6:5224:8735":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"5:7575:3297":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"4:2751:7008":{"crate_id":4,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"5:4536:9381":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"16:7168:6547":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"4:1083:6606":{"crate_id":4,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"6:7448:9246":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"4:11112:34996":{"crate_id":4,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"17:2227:5214":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"16:5727:4462":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"1:23076:7305":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"4:2018:794":{"crate_id":4,"path":["std","ffi"],"kind":"module"},"5:7856:3294":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"17:11851:5392":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"29:1466:27372":{"crate_id":29,"path":["icu_locid","extensions","ExtensionType"],"kind":"enum"},"18:96:9694":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"17:11831:4470":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"4:4928:15781":{"crate_id":4,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"4:9456:162":{"crate_id":4,"path":["std","time","Instant"],"kind":"struct"},"17:10296:22945":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"6:6381:8940":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"5:6275:9381":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"22:1224:8293":{"crate_id":22,"path":["icu_properties","props","BidiClassULE"],"kind":"struct"},"1:41988:4861":{"crate_id":1,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"17:12347:5440":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"6:5334:8782":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"16:6205:22879":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"6:5319:8778":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"11:2533:8319":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"1:3258:3248":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"32:1186:5009":{"crate_id":32,"path":["zerovec","varzerovec","slice","VarZeroSlice"],"kind":"struct"},"11:1900:6871":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"32:1484:4399":{"crate_id":32,"path":["zerovec","zerovec","ZeroVec"],"kind":"struct"},"6:4921:8636":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"16:2796:6355":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"27:0:3346":{"crate_id":27,"path":["zerofrom"],"kind":"module"},"40:355:3639":{"crate_id":40,"path":["smallvec","ConstNonNull"],"kind":"struct"},"17:16026:6113":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"1:2710:103":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"5:1898:3294":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"17:12204:5420":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"6:5482:8856":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"1:39766:212":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"14:202:3253":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"17:11617:5345":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"4:11382:7205":{"crate_id":4,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"1:3684:28855":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:3671:10199":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"22:2281:5113":{"crate_id":22,"path":["icu_properties","provider","names","PropertyValueNameToEnumMapV1"],"kind":"struct"},"4:12408:1869":{"crate_id":4,"path":["std","u8"],"kind":"primitive"},"17:16341:6218":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"5:3097:9371":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"4:7902:7075":{"crate_id":4,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"0:315:2400":{"crate_id":0,"path":["idna","uts46","Hyphens","Check"],"kind":"variant"},"16:8058:6696":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"1:30800:3317":{"crate_id":1,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"11:2420:3297":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"22:5032:3612":{"crate_id":22,"path":["icu_properties","provider","WordBreakV1Marker"],"kind":"struct"},"4:4986:7032":{"crate_id":4,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"6:0:1013":{"crate_id":6,"path":["libc"],"kind":"module"},"1:22577:15466":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"5:221:6945":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"6:6708:9110":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"16:4873:6387":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"24:429:27350":{"crate_id":24,"path":["yoke","either","EitherCart"],"kind":"enum"},"4:437:185":{"crate_id":4,"path":["std","thread","local","LocalKey"],"kind":"struct"},"1:32457:3337":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"4:11847:7022":{"crate_id":4,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"1:42146:7265":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"17:10418:22949":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"6:5196:8722":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"4:902:3297":{"crate_id":4,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"1:46200:7440":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:40958:7241":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"16:2900:6360":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"1:40752:10233":{"crate_id":1,"path":["core","ffi","c_char"],"kind":"type_alias"},"4:9301:4677":{"crate_id":4,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"5:3860:4693":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"1:47343:7547":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:42864:3307":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"22:4584:3548":{"crate_id":22,"path":["icu_properties","provider","LowercaseV1Marker"],"kind":"struct"},"17:16812:6330":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"1:40877:134":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"4:4930:15783":{"crate_id":4,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"16:7372:4601":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"18:623:37382":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"1:42259:3701":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"16:6942:6510":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"32:1658:27410":{"crate_id":32,"path":["zerovec","ule","encode","EncodeAsVarULE"],"kind":"trait"},"22:1161:5105":{"crate_id":22,"path":["icu_properties","props","PropertyEnumToValueNameLinearTiny4Mapper"],"kind":"struct"},"4:8280:4693":{"crate_id":4,"path":["std","io","cursor","Cursor"],"kind":"struct"},"14:187:21962":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"25:7:27355":{"crate_id":25,"path":["stable_deref_trait","CloneStableDeref"],"kind":"trait"},"11:2495:21944":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"17:1220:5212":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"36:271:37676":{"crate_id":36,"path":["icu_collections","codepointtrie","cptrie","TrieValue","try_from_u32"],"kind":"function"},"6:1489:8407":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"4:12361:15663":{"crate_id":4,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"9:480:21869":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"17:15829:6063":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"4:5862:7045":{"crate_id":4,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"37:369:4946":{"crate_id":37,"path":["icu_locid_transform","fallback","LocaleFallbackerBorrowed"],"kind":"struct"},"1:12721:4236":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:4799:3320":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"16:6876:6504":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"1:46666:7485":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"22:3654:8305":{"crate_id":22,"path":["icu_properties","provider","bidi_data","CheckedBidiPairedBracketTypeULE"],"kind":"struct"},"1:10036:29808":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"22:4696:3564":{"crate_id":22,"path":["icu_properties","provider","CaseSensitiveV1Marker"],"kind":"struct"},"17:13181:5531":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"1:41020:7245":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"22:2341:5115":{"crate_id":22,"path":["icu_properties","provider","names","PropertyEnumToValueNameLinearMapV1"],"kind":"struct"},"4:6376:7287":{"crate_id":4,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"17:13921:5611":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"1:44779:4205":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:43211:3318":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"22:4409:3523":{"crate_id":22,"path":["icu_properties","provider","ChangesWhenUppercasedV1Marker"],"kind":"struct"},"6:5562:8883":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"1:13034:10317":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"4:8202:7087":{"crate_id":4,"path":["std","fs","OpenOptions"],"kind":"struct"},"16:7192:22884":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"22:1108:5101":{"crate_id":22,"path":["icu_properties","props","ErasedEnumToValueNameLinearMapV1Marker"],"kind":"struct"},"32:2814:5022":{"crate_id":32,"path":["zerovec","ule","tuple","Tuple2ULE"],"kind":"struct"},"17:14299:5700":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV1"],"kind":"struct"},"5:4506:36964":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"1:23202:7314":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU128Inner"],"kind":"struct"},"22:1487:8295":{"crate_id":22,"path":["icu_properties","props","ScriptULE"],"kind":"struct"},"16:7030:6521":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"1:46410:7459":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"4:1982:4288":{"crate_id":4,"path":["std","error","Report"],"kind":"struct"},"17:10630:4484":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"36:316:9688":{"crate_id":36,"path":["icu_collections","codepointtrie","cptrie","CodePointMapRangeIterator"],"kind":"struct"},"15:288:9701":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"1:44013:4222":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"23:0:3342":{"crate_id":23,"path":["icu_provider"],"kind":"module"},"30:8:38150":{"crate_id":30,"path":["writeable","cmp","WriteComparator"],"kind":"struct"},"1:47435:7563":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:43852:4016":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"29:921:5047":{"crate_id":29,"path":["icu_locid","extensions","other","subtag","Subtag"],"kind":"struct"},"1:3402:10200":{"crate_id":1,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"1:8251:10259":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"22:4556:3544":{"crate_id":22,"path":["icu_properties","provider","IdsBinaryOperatorV1Marker"],"kind":"struct"},"17:14140:5661":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"4:8620:9379":{"crate_id":4,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"23:782:3437":{"crate_id":23,"path":["icu_provider","error","DataError"],"kind":"struct"},"4:8568:7137":{"crate_id":4,"path":["std","net","tcp","Incoming"],"kind":"struct"},"1:45972:7420":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"4:12388:1187":{"crate_id":4,"path":["std","never"],"kind":"primitive"},"20:290:3407":{"crate_id":20,"path":["icu_normalizer","error","NormalizerError"],"kind":"enum"},"1:40526:28835":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:40836:4711":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"22:1070:5098":{"crate_id":22,"path":["icu_properties","props","ErasedEnumToValueNameSparseMapV1Marker"],"kind":"struct"},"2:0:510":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"6:1703:8536":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"16:6608:206":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"22:2237:5112":{"crate_id":22,"path":["icu_properties","provider","names","NormalizedPropertyNameStr"],"kind":"struct"},"22:5088:3620":{"crate_id":22,"path":["icu_properties","provider","IndicSyllabicCategoryV1Marker"],"kind":"struct"},"22:4605:3551":{"crate_id":22,"path":["icu_properties","provider","NfcInertV1Marker"],"kind":"struct"},"17:14560:5741":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"17:13983:5619":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"1:2610:10152":{"crate_id":1,"path":["core","ptr","with_exposed_provenance"],"kind":"function"},"6:6611:9071":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"6:6462:8985":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:44141:4023":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:38364:10190":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"4:9347:4680":{"crate_id":4,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"9:328:8327":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"14:214:6852":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"22:3680:3503":{"crate_id":22,"path":["icu_properties","provider","PropertyCodePointSetV1"],"kind":"enum"},"1:11222:4018":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"22:4920:3596":{"crate_id":22,"path":["icu_properties","provider","HangulSyllableTypeV1Marker"],"kind":"struct"},"6:4964:8652":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"37:1009:4968":{"crate_id":37,"path":["icu_locid_transform","provider","LanguageStrStrPairVarULE"],"kind":"struct"},"22:4367:3517":{"crate_id":22,"path":["icu_properties","provider","FullCompositionExclusionV1Marker"],"kind":"struct"},"4:11223:4672":{"crate_id":4,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"6:5288:8768":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"23:1079:4437":{"crate_id":23,"path":["icu_provider","hello_world","HelloWorldV1"],"kind":"struct"},"17:10274:22944":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"22:4668:3560":{"crate_id":22,"path":["icu_properties","provider","RadicalV1Marker"],"kind":"struct"},"1:22969:28840":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"4:8251:4669":{"crate_id":4,"path":["std","hash","random","RandomState"],"kind":"struct"},"17:12524:5475":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"1:47222:7532":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:42260:3700":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"17:15602:6019":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"5:3306:2693":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"22:3622:27154":{"crate_id":22,"path":["icu_properties","provider","bidi_data","CheckedBidiPairedBracketType"],"kind":"enum"},"17:15714:6035":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"17:11309:5347":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"1:44345:3926":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"17:3503:5218":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"5:5566:15896":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"0:300:2352":{"crate_id":0,"path":["idna","uts46","AsciiDenyList"],"kind":"struct"},"1:46494:7463":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"4:10376:7190":{"crate_id":4,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"1:5361:988":{"crate_id":1,"path":["core","iter"],"kind":"module"},"4:2645:7007":{"crate_id":4,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"1:34211:10187":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"16:7883:4553":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"1:43136:6727":{"crate_id":1,"path":["core","fmt","rt","Flag"],"kind":"enum"},"16:5379:6403":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"1:40686:3924":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"4:2505:15721":{"crate_id":4,"path":["std","fs","read_dir"],"kind":"function"},"16:7789:37364":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"17:13266:22954":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"4:11050:32016":{"crate_id":4,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"32:994:27414":{"crate_id":32,"path":["zerovec","varzerovec","components","VarZeroVecFormat"],"kind":"trait"},"17:14975:5820":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"23:553:3432":{"crate_id":23,"path":["icu_provider","any","AsDowncastingAnyProvider"],"kind":"trait"},"17:13818:5607":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"4:7947:34991":{"crate_id":4,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"21:0:3341":{"crate_id":21,"path":["displaydoc"],"kind":"module"},"1:3644:4012":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"17:10784:5327":{"crate_id":17,"path":["object","read","read_cache","ReadCacheInternal"],"kind":"struct"},"1:42290:4284":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"16:5224:6398":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"16:6269:6423":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"22:4976:3604":{"crate_id":22,"path":["icu_properties","provider","LineBreakV1Marker"],"kind":"struct"},"1:22210:15383":{"crate_id":1,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"24:185:5051":{"crate_id":24,"path":["yoke","yoke","Yoke"],"kind":"struct"},"1:46554:7481":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:6776:7235":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"11:842:15676":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"16:8585:6757":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"6:6544:9029":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:14008:3261":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"37:346:4350":{"crate_id":37,"path":["icu_locid_transform","expander","LocaleExpander"],"kind":"struct"},"1:44469:7393":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"22:1947:8302":{"crate_id":22,"path":["icu_properties","props","CanonicalCombiningClassULE"],"kind":"struct"},"16:6794:6496":{"crate_id":16,"path":["gimli","read","relocate","RelocateReader"],"kind":"struct"},"20:513:3417":{"crate_id":20,"path":["icu_normalizer","provider","CanonicalCompositionsV1Marker"],"kind":"struct"},"1:2732:113":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"1:10336:226":{"crate_id":1,"path":["core","fmt","Result"],"kind":"type_alias"},"1:4459:110":{"crate_id":1,"path":["core","asserting","Capture"],"kind":"struct"},"22:2064:8303":{"crate_id":22,"path":["icu_properties","props","IndicSyllabicCategoryULE"],"kind":"struct"},"1:41388:7252":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"32:776:5006":{"crate_id":32,"path":["zerovec","map2d","cursor","ZeroMap2dCursor"],"kind":"struct"},"22:1201:2747":{"crate_id":22,"path":["icu_properties","props","BidiClass"],"kind":"struct"},"22:5025:3611":{"crate_id":22,"path":["icu_properties","provider","GraphemeClusterBreakValueToLongNameV1Marker"],"kind":"struct"},"6:5412:1257":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"16:2990:6364":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"16:7416:6582":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"22:4752:3572":{"crate_id":22,"path":["icu_properties","provider","XidContinueV1Marker"],"kind":"struct"},"5:7591:4667":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"6:6876:9155":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"17:11958:5396":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"1:3420:125":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"6:545:8381":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"17:12108:5412":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"4:9421:7056":{"crate_id":4,"path":["std","sync","mutex","MappedMutexGuard"],"kind":"struct"},"17:12583:5480":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"5:6552:15863":{"crate_id":5,"path":["alloc","task","LocalWake"],"kind":"trait"},"23:648:3450":{"crate_id":23,"path":["icu_provider","marker","KeyedDataMarker"],"kind":"trait"},"44:0:3361":{"crate_id":44,"path":["icu_normalizer_data"],"kind":"module"},"42:98:3647":{"crate_id":42,"path":["utf8_iter","Utf8Chars"],"kind":"struct"},"4:6201:7045":{"crate_id":4,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"6:8290:9355":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"22:5130:3626":{"crate_id":22,"path":["icu_properties","provider","JoiningTypeValueToShortNameV1Marker"],"kind":"struct"},"17:11222:5345":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"4:11908:7024":{"crate_id":4,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"1:11198:2693":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:44159:4019":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"17:13945:5615":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"1:3273:6620":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"6:5381:8796":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"1:41403:7359":{"crate_id":1,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"4:4218:15772":{"crate_id":4,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"17:11757:22987":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"11:364:9713":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"17:14393:5715":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"17:14796:5793":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"36:746:138":{"crate_id":36,"path":["icu_collections","codepointtrie","error","Error"],"kind":"enum"},"17:13157:5529":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"5:1625:4657":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"5:4307:9381":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"4:9208:7047":{"crate_id":4,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"1:7831:10250":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"1:3285:10194":{"crate_id":1,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"17:14627:5751":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"6:5629:8914":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"17:11788:5386":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"17:16283:6201":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"6:7361:9217":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"29:701:4410":{"crate_id":29,"path":["icu_locid","locale","Locale"],"kind":"struct"},"32:1865:5013":{"crate_id":32,"path":["zerovec","ule","option","OptionVarULE"],"kind":"struct"},"18:563:4454":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"1:39053:10193":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"4:677:6991":{"crate_id":4,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"37:675:27459":{"crate_id":37,"path":["icu_locid_transform","provider","expander","LikelySubtagsForScriptRegionV1Marker"],"kind":"struct"},"22:5213:3498":{"crate_id":22,"path":["icu_properties","sets","CodePointSetData"],"kind":"struct"},"16:2415:4182":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"1:42646:96":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"4:12387:420":{"crate_id":4,"path":["std","bool"],"kind":"primitive"},"16:5255:6399":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"32:172:4384":{"crate_id":32,"path":["zerovec","map","borrowed","ZeroMapBorrowed"],"kind":"struct"},"5:2357:35632":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"4:11035:7044":{"crate_id":4,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"4:11742:7073":{"crate_id":4,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"17:15701:6029":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"17:14438:5725":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"1:21677:30538":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"1:42202:4018":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"1:3205:3332":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"1:46363:7456":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"17:11952:4489":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"1:40742:4221":{"crate_id":1,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"5:7185:264":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"13:110:37356":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"40:97:3636":{"crate_id":40,"path":["smallvec","SmallVecData"],"kind":"enum"},"11:1085:37353":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"4:9416:187":{"crate_id":4,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"1:44534:7395":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"22:4857:3587":{"crate_id":22,"path":["icu_properties","provider","GeneralCategoryValueToLongNameV1Marker"],"kind":"struct"},"16:7058:6522":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"6:570:8394":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"6:5488:8857":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"1:3461:143":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"4:1633:6871":{"crate_id":4,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"17:15024:5833":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"4:965:6855":{"crate_id":4,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"1:821:10081":{"crate_id":1,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"17:10141:22940":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"22:5102:3622":{"crate_id":22,"path":["icu_properties","provider","IndicSyllabicCategoryValueToShortNameV1Marker"],"kind":"struct"},"4:1867:6998":{"crate_id":4,"path":["std","env","Vars"],"kind":"struct"},"1:43922:4034":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"5:7760:6982":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"4:5620:7041":{"crate_id":4,"path":["std","process","ChildStdin"],"kind":"struct"},"17:11421:5357":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"29:1443:2852":{"crate_id":29,"path":["icu_locid","extensions","unicode","Unicode"],"kind":"struct"},"1:21814:15380":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"4:11247:34383":{"crate_id":4,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"36:509:27433":{"crate_id":36,"path":["icu_collections","codepointinvlist","CodePointInversionListError"],"kind":"enum"},"6:8296:9356":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"20:326:3457":{"crate_id":20,"path":["icu_normalizer","properties","CanonicalDecomposition"],"kind":"struct"},"4:8639:7137":{"crate_id":4,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"16:7554:22886":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"1:44949:9481":{"crate_id":1,"path":["core","future","async_drop","Noop"],"kind":"struct"},"1:22457:15463":{"crate_id":1,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"22:4654:3558":{"crate_id":22,"path":["icu_properties","provider","PrintV1Marker"],"kind":"struct"},"5:7787:3255":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"6:6419:8967":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"4:3074:138":{"crate_id":4,"path":["std","io","error","Error"],"kind":"struct"},"6:5036:8688":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"16:155:4537":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"16:5282:6400":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"1:47305:7539":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"4:1624:3254":{"crate_id":4,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"4:6814:7061":{"crate_id":4,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"17:11706:5376":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"17:12066:4492":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"4:12394:1705":{"crate_id":4,"path":["std","slice"],"kind":"primitive"},"17:12035:4626":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"17:1339:5213":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"6:7539:9301":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"22:1092:5100":{"crate_id":22,"path":["icu_properties","props","PropertyEnumToValueNameSparseMapperBorrowed"],"kind":"struct"},"22:1168:5106":{"crate_id":22,"path":["icu_properties","props","PropertyEnumToValueNameLinearTiny4MapperBorrowed"],"kind":"struct"},"11:2349:6863":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"31:226:5027":{"crate_id":31,"path":["tinystr","ascii","TinyAsciiStr"],"kind":"struct"},"4:8875:7033":{"crate_id":4,"path":["std","path","Components"],"kind":"struct"},"4:8749:7159":{"crate_id":4,"path":["std","path","Prefix"],"kind":"enum"},"22:5039:3613":{"crate_id":22,"path":["icu_properties","provider","WordBreakNameToValueV1Marker"],"kind":"struct"},"22:4766:3574":{"crate_id":22,"path":["icu_properties","provider","BasicEmojiV1Marker"],"kind":"struct"},"1:42363:196":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:10406:3311":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"37:803:27462":{"crate_id":37,"path":["icu_locid_transform","provider","fallback","LocaleFallbackParentsV1Marker"],"kind":"struct"},"1:4846:10224":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"5:3347:6871":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"34:0:3353":{"crate_id":34,"path":["litemap"],"kind":"module"},"11:396:9715":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"22:5004:3608":{"crate_id":22,"path":["icu_properties","provider","GraphemeClusterBreakV1Marker"],"kind":"struct"},"22:4997:3607":{"crate_id":22,"path":["icu_properties","provider","LineBreakValueToLongNameV1Marker"],"kind":"struct"},"1:13602:7281":{"crate_id":1,"path":["core","future","async_drop","AsyncDropInPlace"],"kind":"struct"},"1:41944:7261":{"crate_id":1,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"11:123:4623":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"1:33893:10184":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:23027:28800":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"23:896:4432":{"crate_id":23,"path":["icu_provider","key","DataKeyMetadata"],"kind":"struct"},"1:42128:7262":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"4:8264:7090":{"crate_id":4,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"5:7561:35689":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"22:5067:3617":{"crate_id":22,"path":["icu_properties","provider","SentenceBreakNameToValueV1Marker"],"kind":"struct"}},"external_crates":{"43":{"name":"write16","html_root_url":null},"40":{"name":"smallvec","html_root_url":null},"37":{"name":"icu_locid_transform","html_root_url":null},"34":{"name":"litemap","html_root_url":null},"31":{"name":"tinystr","html_root_url":null},"28":{"name":"zerofrom_derive","html_root_url":null},"25":{"name":"stable_deref_trait","html_root_url":null},"22":{"name":"icu_properties","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"44":{"name":"icu_normalizer_data","html_root_url":null},"41":{"name":"utf16_iter","html_root_url":null},"38":{"name":"icu_locid_transform_data","html_root_url":null},"35":{"name":"icu_provider_macros","html_root_url":null},"32":{"name":"zerovec","html_root_url":null},"29":{"name":"icu_locid","html_root_url":null},"26":{"name":"yoke_derive","html_root_url":null},"23":{"name":"icu_provider","html_root_url":null},"20":{"name":"icu_normalizer","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"42":{"name":"utf8_iter","html_root_url":null},"39":{"name":"icu_properties_data","html_root_url":null},"36":{"name":"icu_collections","html_root_url":null},"33":{"name":"zerovec_derive","html_root_url":null},"30":{"name":"writeable","html_root_url":null},"27":{"name":"zerofrom","html_root_url":null},"24":{"name":"yoke","html_root_url":null},"21":{"name":"displaydoc","html_root_url":"https://docs.rs/displaydoc/0.2.3/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":30}