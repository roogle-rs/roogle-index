{"root":"0:0:2442","crate_version":"1.0.1","includes_private":false,"index":{"0:355:2602":{"id":"0:355:2602","crate_id":0,"name":"WroteToSink","span":{"filename":"src/uts46.rs","begin":[497,4],"end":[497,15]},"visibility":"default","docs":"There were no errors. The caller must consider what was written to the sink to be the output.\n\n(Distinct from `Passthrough` in order to allow `Cow` behavior to be implemented on top of\n[`Uts46::process`].)","links":{"`Uts46::process`":"0:207:2594"},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:1:32765:248-0:324:2410":{"id":"a:1:32765:248-0:324:2410","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32765:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3092-0:400:2387":{"id":"b:1:3092-0:400:2387","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3051:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:400:2387","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3095:149","1:3096:1848"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:5974-0:400:2387":{"id":"b:5:5974-0:400:2387","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"1:10557:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5972:264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:400:2387","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5976:1823"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:325:2411":{"id":"0:325:2411","crate_id":0,"name":"Ignore","span":{"filename":"src/uts46.rs","begin":[462,4],"end":[462,10]},"visibility":"default","docs":"_VerifyDNSLength=false_. (Possibly relevant for allowing non-DNS naming systems.)","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"1:13662:4084":{"id":"1:13662:4084","crate_id":1,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"4:12451:490"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"1:44380:4249","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2772-0:367:2603":{"id":"b:1:2772-0:367:2603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2766:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2774:2378"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:380":{"id":"0:380","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[501,37],"end":[501,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10552:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:381:827"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13672:3139":{"id":"1:13672:3139","crate_id":1,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, in which case this function will return true if\nthe `&str` is a prefix of this string slice.\n\nThe [pattern] can also be a [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\nThese will only be checked against the first character of this string slice.\nLook at the second example below regarding behavior for slices of [`char`]s.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```\n\n```\nlet bananas = \"bananas\";\n\n// Note that both of these assert successfully.\nassert!(bananas.starts_with(&['b', 'a', 'n', 'a']));\nassert!(bananas.starts_with(&['a', 'b', 'c', 'd']));\n```","links":{"prim@char":"4:12451:490","self::pattern":"1:13323:3298"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13329:3287","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13766:10306":{"id":"1:13766:10306","crate_id":1,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:5147:10306"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"1:44712:3955","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3087-0:324:2410":{"id":"b:1:3087-0:324:2410","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3057:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3090:149","1:3091:1850"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:32765:248-0:299:2381":{"id":"a:1:32765:248-0:299:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32765:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:304":{"id":"0:304","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[349,20],"end":[349,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"1:2859:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3943-0:400:2387":{"id":"b:1:3943-0:400:2387","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3941:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:400:2387","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3945:1863"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:24:105-0:400:2387":{"id":"b:24:105-0:400:2387","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/yoke-0.7.4/src/erased.rs","begin":[22,0],"end":[22,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ErasedDestructor","id":"24:104:27439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:400:2387","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2772-0:253:2385":{"id":"b:1:2772-0:253:2385","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2766:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:253:2385","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2774:2378"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13707:33921":{"id":"1:13707:33921","crate_id":1,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:42534:205","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13329:3287","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:3095:149":{"id":"1:3095:149","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"1:32689:8550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:22":{"id":"0:22","crate_id":0,"name":null,"span":{"filename":"src/deprecated.rs","begin":[143,0],"end":[153,1]},"visibility":"default","docs":"The defaults are that of _beStrict=false_ in the [WHATWG URL Standard](https://url.spec.whatwg.org/#idna)","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"1:3129:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2384","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:23:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13719:36509":{"id":"1:13719:36509","crate_id":1,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"1:13323:3298","`DoubleEndedIterator`":"1:8473:133","prim@char":"4:12451:490","str::rmatch_indices":"1:13722:36510"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"1:44554:4257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13329:3287","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:24:105-0:257:2384":{"id":"b:24:105-0:257:2384","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/yoke-0.7.4/src/erased.rs","begin":[22,0],"end":[22,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ErasedDestructor","id":"24:104:27439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2384","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:42628:3727-0:367:2603":{"id":"a:1:42628:3727-0:367:2603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42628:3727","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:42627:3728-0:299:2381":{"id":"a:1:42627:3728-0:299:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42627:3728","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:340:2598":{"id":"0:340:2598","crate_id":0,"name":"FailFast","span":{"filename":"src/uts46.rs","begin":[475,4],"end":[475,12]},"visibility":"default","docs":"Return as early as possible without producing output in case of error.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"1:13648:31778":{"id":"1:13648:31778","crate_id":1,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"1:42536:202"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"1:42534:205","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"1:11456:251","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:11456:251","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2775-0:339:2597":{"id":"b:1:2775-0:339:2597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2769:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2777:28251"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3943-0:257:2384":{"id":"b:1:3943-0:257:2384","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3941:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2384","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3945:1863"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:32:2407":{"id":"0:32:2407","crate_id":0,"name":"to_ascii","span":{"filename":"src/deprecated.rs","begin":[235,4],"end":[239,5]},"visibility":"public","docs":"[UTS 46 ToASCII](http://www.unicode.org/reports/tr46/#ToASCII)","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["domain",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42666:237","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"5:7801:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Errors","id":"0:400:2387","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3087-0:299:2381":{"id":"b:1:3087-0:299:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3057:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3090:149","1:3091:1850"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2772-0:188:2382":{"id":"b:1:2772-0:188:2382","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2766:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:188:2382","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2774:2378"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:302":{"id":"0:302","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[349,9],"end":[349,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2854:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:303:722"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:322":{"id":"0:322","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[434,30],"end":[434,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2792:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2408","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:323:494"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2804-0:367:2603":{"id":"b:1:2804-0:367:2603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2792:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2802:3847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2806:28253"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13652:31780":{"id":"1:13652:31780","crate_id":1,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"1:11456:251","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:11456:251","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:308:494":{"id":"0:308:494","crate_id":0,"name":"clone","span":{"filename":"src/uts46.rs","begin":[349,30],"end":[349,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:24:105-0:188:2382":{"id":"b:24:105-0:188:2382","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/yoke-0.7.4/src/erased.rs","begin":[22,0],"end":[22,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ErasedDestructor","id":"24:104:27439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:188:2382","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:242":{"id":"0:242","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[68,0],"end":[72,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3054:156","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Errors","id":"0:400:2387","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Result","id":"1:42666:237","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Errors","id":"0:400:2387","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:243:857"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:42627:3728-0:339:2597":{"id":"a:1:42627:3728-0:339:2597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42627:3728","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:42627:3728-0:324:2410":{"id":"a:1:42627:3728-0:324:2410","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42627:3728","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:13639:36501":{"id":"1:13639:36501","crate_id":1,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"1:13637:36500"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:783-0:309:2408":{"id":"b:5:783-0:309:2408","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2792:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:779:263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2408","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:785:2587","5:786:28255","5:787:28256"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:178:1208":{"id":"0:178:1208","crate_id":0,"name":"new","span":{"filename":"src/uts46.rs","begin":[373,4],"end":[402,5]},"visibility":"public","docs":"Computes (preferably at compile time) an ASCII deny list.\n\nSetting `deny_glyphless` to `true` denies U+0020 SPACE and below\nas well as U+007F DELETE for convenience without having to list\nthese characters in the `deny_list` string.\n\n`deny_list` is the list of ASCII characters to deny. This\nlist must not contain any of:\n* Letters\n* Digits\n* Hyphen\n* Dot (period / full-stop)\n* Non-ASCII\n\n# Panics\n\nIf the deny list contains characters listed as prohibited above.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["deny_glyphless",{"primitive":"bool"}],["deny_list",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2804-0:309:2408":{"id":"b:1:2804-0:309:2408","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2792:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2802:3847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2408","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2806:28253"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13654:36503":{"id":"1:13654:36503","crate_id":1,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"4:12457:1763","str::slice_mut_unchecked":"1:13655:36504","crate::ops::Index":"1:40080:3317"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:317":{"id":"0:317","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[434,9],"end":[434,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2854:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2408","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:318:722"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:3335:3360-0:367:2603":{"id":"a:1:3335:3360-0:367:2603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3335:3360","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:13678:3911":{"id":"1:13678:3911","crate_id":1,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"1:42536:202","prim@char":"4:12451:490","self::pattern":"1:13323:3298"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:42534:205","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13329:3287","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3087-0:367:2603":{"id":"b:1:3087-0:367:2603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3057:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3090:149","1:3091:1850"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:32824:3363-0:400:2387":{"id":"a:1:32824:3363-0:400:2387","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32824:3363","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:400:2387","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:3300:260-0:257:2384":{"id":"a:1:3300:260-0:257:2384","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3300:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2384","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3077-0:253:2385":{"id":"b:1:3077-0:253:2385","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3054:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3051:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:253:2385","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3080:3872"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2772-0:324:2410":{"id":"b:1:2772-0:324:2410","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2766:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2774:2378"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:188:2382":{"id":"0:188:2382","crate_id":0,"name":"Uts46","span":{"filename":"src/uts46.rs","begin":[568,0],"end":[574,1]},"visibility":"public","docs":"An implementation of UTS #46.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:196","a:1:3300:260-0:188:2382","a:1:32765:248-0:188:2382","a:1:32824:3363-0:188:2382","a:1:3335:3360-0:188:2382","a:1:42628:3727-0:188:2382","a:1:42627:3728-0:188:2382","b:1:3092-0:188:2382","b:1:2772-0:188:2382","b:1:3087-0:188:2382","b:1:3943-0:188:2382","b:1:3077-0:188:2382","b:1:2775-0:188:2382","b:1:3081-0:188:2382","b:23:483-0:188:2382","b:24:105-0:188:2382","0:194"]}}},"b:1:2804-0:257:2384":{"id":"b:1:2804-0:257:2384","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2792:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2802:3847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2384","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2806:28253"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:333:722":{"id":"0:333:722","crate_id":0,"name":"eq","span":{"filename":"src/uts46.rs","begin":[458,9],"end":[458,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"DnsLength","id":"0:324:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:3091:1850":{"id":"1:3091:1850","crate_id":1,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"1:42666:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"1:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:351:494":{"id":"0:351:494","crate_id":0,"name":"clone","span":{"filename":"src/uts46.rs","begin":[471,30],"end":[471,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:198:2407":{"id":"0:198:2407","crate_id":0,"name":"to_ascii","span":{"filename":"src/uts46.rs","begin":[614,4],"end":[655,5]},"visibility":"public","docs":"Performs the [ToASCII](https://www.unicode.org/reports/tr46/#ToASCII) operation\nfrom UTS #46 with the options indicated.\n\n# Arguments\n\n* `domain_name` - The input domain name as UTF-8 bytes. (The UTF-8ness is checked by\nthis method and input that is not well-formed UTF-8 is treated as an error. If you\nalready have a `&str`, call `.as_bytes()` on it.)\n* `ascii_deny_list` - What ASCII deny list, if any, to apply. The UTS 46\n_UseSTD3ASCIIRules_ flag or the WHATWG URL Standard forbidden domain code point\nprocessing is handled via this argument. Most callers are probably the best off\nby using [`AsciiDenyList::URL`] here.\n* `hyphens` - The UTS 46 _CheckHyphens_ flag. Most callers are probably the best\noff by using [`Hyphens::Allow`] here.\n* `dns_length` - The UTS 46 _VerifyDNSLength_ flag.","links":{"`AsciiDenyList::URL`":"0:181:2922","`Hyphens::Allow`":"0:310:2409"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["domain_name",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["ascii_deny_list",{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["hyphens",{"resolved_path":{"name":"Hyphens","id":"0:309:2408","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["dns_length",{"resolved_path":{"name":"DnsLength","id":"0:324:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42666:237","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:788:121","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"crate::Errors","id":"0:400:2387","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:240-0:257:2384":{"id":"0:240-0:257:2384","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,28],"end":[61,34]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"crate::deprecated::Config","name":"Config","id":"0:257:2384","glob":false}}},"0:245":{"id":"0:245","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[77,0],"end":[81,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"1:10557:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:400:2387","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:246:827"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:783-0:299:2381":{"id":"b:5:783-0:299:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2792:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:779:263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:785:2587","5:786:28255","5:787:28256"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:327:2939":{"id":"0:327:2939","crate_id":0,"name":"VerifyAllowRootDot","span":{"filename":"src/uts46.rs","begin":[465,4],"end":[465,22]},"visibility":"default","docs":"_VerifyDNSLength=true_ with the exception that the trailing root label dot is\nallowed.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:1:2772-0:339:2597":{"id":"b:1:2772-0:339:2597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2766:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2774:2378"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:365":{"id":"0:365","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[483,37],"end":[483,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10552:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:366:827"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:207:2594":{"id":"0:207:2594","crate_id":0,"name":"process","span":{"filename":"src/uts46.rs","begin":[842,4],"end":[1114,5]},"visibility":"public","docs":"The lower-level function that [`Uts46::to_ascii`], [`Uts46::to_unicode`], and\n[`Uts46::to_user_interface`] are built on to allow support for output types other\nthan `Cow<'a, str>` (e.g. string types in a non-Rust programming language).\n\n# Arguments\n\n* `domain_name` - The input domain name as UTF-8 bytes. (The UTF-8ness is checked by\nthis method and input that is not well-formed UTF-8 is treated as an error. If you\nalready have a `&str`, call `.as_bytes()` on it.)\n* `ascii_deny_list` - What ASCII deny list, if any, to apply. The UTS 46\n_UseSTD3ASCIIRules_ flag or the WHATWG URL Standard forbidden domain code point\nprocessing is handled via this argument. Most callers are probably the best off\nby using [`AsciiDenyList::URL`] here.\n* `hyphens` - The UTS 46 _CheckHyphens_ flag. Most callers are probably the best\noff by using [`Hyphens::Allow`] here.\n* `error_policy` - Whether to fail fast or to produce output that may be rendered\nfor the user to examine in case of errors.\n* `output_as_unicode` - A closure for deciding if a label should be output as Unicode\n(as opposed to Punycode). The first argument is the label for which a decision is\nneeded (always non-empty slice). The second argument is the TLD (potentially empty).\nThe third argument is `true` iff the domain name as a whole is a bidi domain name.\nOnly non-erroneous labels that contain at least one non-ASCII character are passed\nto the closure as the first argument. The second and third argument values are\nguaranteed to remain the same during a single call to `process`, and the closure\nmay cache computations derived from the second and third argument (hence the\n`FnMut` type). To perform the _ToASCII_ operation, `|_, _, _| false` must be\npassed as the closure. To perform the _ToUnicode_ operation, `|_, _, _| true` must\nbe passed as the closure. A more complex closure may be used to prepare a domain\nname for display in a user interface so that labels are converted to the Unicode\nform in general but potentially misleading labels are converted to the Punycode\nform.\n`sink` - The object that receives the output (in the non-passthrough case).\n`ascii_sink` - A second sink that receives the _ToASCII_ form only if there\nwere no errors and `sink` received at least one character of non-ASCII output.\nThe purpose of this argument is to enable a user interface display form of the\ndomain and the _ToASCII_ form of the domain to be computed efficiently together.\nThis argument is useless when `output_as_unicode` always returns `false`, in\nwhich case the _ToASCII_ form ends up in `sink` already. If `ascii_sink` receives\nno output and the return value is `Ok(ProcessingSuccess::WroteToSink)`, use the\noutput received by `sink` also as the _ToASCII_ result.\n\n# Return value\n\n* `Ok(ProcessingSuccess::Passthrough)` - The caller must treat\n`unsafe { core::str::from_utf8_unchecked(domain_name) }` as the output. (This\nreturn value asserts that calling `core::str::from_utf8_unchecked(domain_name)`\nis safe.)\n* `Ok(ProcessingSuccess::WroteToSink)` - The caller must treat was was written\nto `sink` as the output. If another sink was passed as `ascii_sink` but it did\nnot receive output, the caller must treat what was written to `sink` also as\nthe _ToASCII_ output. Otherwise, if `ascii_sink` received output, the caller\nmust treat what was written to `ascii_sink` as the _ToASCII_ output.\n* `Err(ProcessingError::ValidityError)` - The input was in error and must\nnot be used for DNS lookup or otherwise in a network protocol. If `error_policy`\nwas `ErrorPolicy::MarkErrors`, the output written to `sink` may be displayed\nto the user as an illustration of where the error was or the errors were.\n* `Err(ProcessingError::SinkError)` - Either `sink` or `ascii_sink` returned\n[`core::fmt::Error`]. The partial output written to `sink` `ascii_sink` must not\nbe used. If `W` never returns [`core::fmt::Error`], this method never returns\n`Err(ProcessingError::SinkError)`.\n\n# Safety-usable invariant\n\nIf the return value is `Ok(ProcessingSuccess::Passthrough)`, `domain_name` is\nASCII and `core::str::from_utf8_unchecked(domain_name)` is safe. (Note:\nOther return values do _not_ imply that `domain_name` wasn't ASCII!)\n\n# Security considerations\n\nShowing labels whose Unicode form might mislead the user as Punycode instead is\nan imperfect security mechanism, because [the Punycode form itself may be resemble\na user-recognizable name](https://www.unicode.org/reports/tr36/#TablePunycodeSpoofing).\nHowever, since this mechanism is common practice, this API provides support for the\nthe mechanism.\n\nPunycode processing is quadratic, so to avoid denial of service, this method imposes\nlength limits on Punycode treating especially long inputs as being in error. These\nlimits are well higher than the DNS length limits and are not more restrictive than\nthe limits imposed by ICU4C.","links":{"`Uts46::to_unicode`":"0:201:2441","`Uts46::to_ascii`":"0:198:2407","`Hyphens::Allow`":"0:310:2409","`Uts46::to_user_interface`":"0:204:3007","`AsciiDenyList::URL`":"0:181:2922","`core::fmt::Error`":"1:43559:149"},"attrs":["#[allow(clippy::too_many_arguments)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["domain_name",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["ascii_deny_list",{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["hyphens",{"resolved_path":{"name":"Hyphens","id":"0:309:2408","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["error_policy",{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["output_as_unicode",{"generic":"OutputUnicode"}],["sink",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"W"}}}],["ascii_sink",{"resolved_path":{"name":"Option","id":"1:42534:205","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"W"}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42666:237","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"ProcessingError","id":"0:367:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Write","id":"1:10498:2644","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"OutputUnicode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:3573:153","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"char"}}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"char"}}}},{"primitive":"bool"}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:403":{"id":"0:403","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,18],"end":[64,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10552:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:400:2387","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:404:827"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:309:2408":{"id":"0:309:2408","crate_id":0,"name":"Hyphens","span":{"filename":"src/uts46.rs","begin":[436,0],"end":[455,1]},"visibility":"public","docs":"The _CheckHyphens_ mode.","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:310:2409","0:312:2637","0:314:2429"],"impls":["a:1:3300:260-0:309:2408","a:1:32765:248-0:309:2408","a:1:32824:3363-0:309:2408","a:1:3335:3360-0:309:2408","a:1:42628:3727-0:309:2408","a:1:42627:3728-0:309:2408","b:1:3092-0:309:2408","b:1:2772-0:309:2408","b:1:3087-0:309:2408","b:1:3943-0:309:2408","b:1:3077-0:309:2408","b:1:2807-0:309:2408","b:1:2804-0:309:2408","b:1:2775-0:309:2408","b:1:3081-0:309:2408","b:5:783-0:309:2408","b:23:483-0:309:2408","b:24:105-0:309:2408","0:319","0:321","0:322","0:317","0:316"]}}},"1:13686:2973":{"id":"1:13686:2973","crate_id":1,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"1:13323:3298","`DoubleEndedIterator`":"1:8473:133","prim@char":"4:12451:490","str::split_whitespace":"1:13664:28493","str::rsplit":"1:13692:3105"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"1:44404:4049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13329:3287","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32765:248-0:257:2384":{"id":"a:1:32765:248-0:257:2384","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32765:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2384","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:50:2668":{"id":"0:50:2668","crate_id":0,"name":"decode_to_string","span":{"filename":"src/punycode.rs","begin":[48,0],"end":[55,1]},"visibility":"public","docs":"Convert Punycode to an Unicode `String`.\n\nReturn None on malformed input or overflow.\nOverflow can only happen on inputs that take more than\n63 encoded bytes, the DNS limit on domain name labels.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["input",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42534:205","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"alloc::string::String","id":"5:7801:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:23:483-0:253:2385":{"id":"b:23:483-0:253:2385","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/icu_provider-1.5.0/src/any.rs","begin":[32,0],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MaybeSendSync","id":"23:482:27417","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:253:2385","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:23:483-0:339:2597":{"id":"b:23:483-0:339:2597","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/icu_provider-1.5.0/src/any.rs","begin":[32,0],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MaybeSendSync","id":"23:482:27417","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13710:33922":{"id":"1:13710:33922","crate_id":1,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:42534:205","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13329:3287","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:13329:3287","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13344:4241","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13729:36513":{"id":"1:13729:36513","crate_id":1,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13758:33147":{"id":"1:13758:33147","crate_id":1,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3943-0:324:2410":{"id":"b:1:3943-0:324:2410","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3941:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3945:1863"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:360":{"id":"0:360","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[483,20],"end":[483,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"1:2859:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13633":{"id":"1:13633","crate_id":1,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["1:13634:1024","1:13635:2974","1:13636:36499","1:13637:36500","1:13639:36501","1:13642:2417","1:13643:36502","1:13644:350","1:13645:33892","1:13646:2726","1:13648:31778","1:13650:31779","1:13652:31780","1:13654:36503","1:13655:36504","1:13656:2872","1:13657:3165","1:13658:33913","1:13659:33914","1:13661:2573","1:13662:4084","1:13663:2899","1:13664:28493","1:13665:28456","1:13666:9923","1:13667:36505","1:13668:28491","1:13669:3102","1:13672:3139","1:13675:33535","1:13678:3911","1:13682:3878","1:13686:2973","1:13689:28477","1:13692:3105","1:13695:36506","1:13698:36507","1:13701:33917","1:13704:33919","1:13707:33921","1:13710:33922","1:13713:3232","1:13716:36508","1:13719:36509","1:13722:36510","1:13725:36511","1:13727:36512","1:13729:36513","1:13731:36514","1:13732:36515","1:13733:36516","1:13736:36517","1:13739:32436","1:13742:2971","1:13745:36518","1:13748:36519","1:13751:36520","1:13754:36521","1:13756:2689","1:13757:35061","1:13758:33147","1:13759:33148","1:13760:33149","1:13761:35064","1:13762:35065","1:13763:35066","1:13764:36522","1:13766:10306","1:13767:36523"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:321":{"id":"0:321","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[434,24],"end":[434,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"1:3295:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2408","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:201:2441":{"id":"0:201:2441","crate_id":0,"name":"to_unicode","span":{"filename":"src/uts46.rs","begin":[679,4],"end":[686,5]},"visibility":"public","docs":"Performs the [ToUnicode](https://www.unicode.org/reports/tr46/#ToUnicode) operation\nfrom UTS #46 according to the options given. When there\nare errors, there is still output, which may be rendered user, even through\nthe output must not be used in networking protocols. Errors are denoted\nby U+FFFD REPLACEMENT CHARACTERs in the output. (That is, if the second item of the\nreturn tuple is `Err`, the first item of the return tuple is guaranteed to contain\nat least one U+FFFD.)\n\nMost applications probably shouldn't use this method and should be using\n[`Uts46::to_user_interface`] instead.\n\n# Arguments\n\n* `domain_name` - The input domain name as UTF-8 bytes. (The UTF-8ness is checked by\nthis method and input that is not well-formed UTF-8 is treated as an error. If you\nalready have a `&str`, call `.as_bytes()` on it.)\n* `ascii_deny_list` - What ASCII deny list, if any, to apply. The UTS 46\n_UseSTD3ASCIIRules_ flag or the WHATWG URL Standard forbidden domain code point\nprocessing is handled via this argument. Most callers are probably the best off\nby using [`AsciiDenyList::URL`] here.\n* `hyphens` - The UTS 46 _CheckHyphens_ flag. Most callers are probably the best\noff by using [`Hyphens::Allow`] here.","links":{"`Uts46::to_user_interface`":"0:204:3007","`AsciiDenyList::URL`":"0:181:2922","`Hyphens::Allow`":"0:310:2409"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["domain_name",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["ascii_deny_list",{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["hyphens",{"resolved_path":{"name":"Hyphens","id":"0:309:2408","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"tuple":[{"resolved_path":{"name":"Cow","id":"5:788:121","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}},{"resolved_path":{"name":"Result","id":"1:42666:237","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"crate::Errors","id":"0:400:2387","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13637:36500":{"id":"1:13637:36500","crate_id":1,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:303:722":{"id":"0:303:722","crate_id":0,"name":"eq","span":{"filename":"src/uts46.rs","begin":[349,9],"end":[349,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:347":{"id":"0:347","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[471,20],"end":[471,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"1:2859:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13658:33913":{"id":"1:13658:33913","crate_id":1,"name":"split_at_checked","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut_checked`]\nmethod.\n\n[`split_at_mut_checked`]: str::split_at_mut_checked\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at_checked(3).unwrap();\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n\nassert_eq!(None, s.split_at_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_checked(16));  // Beyond the string length\n```","links":{"str::split_at_mut_checked":"1:13659:33914"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"1:42534:205","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:23:483-0:352:2599":{"id":"b:23:483-0:352:2599","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/icu_provider-1.5.0/src/any.rs","begin":[32,0],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MaybeSendSync","id":"23:482:27417","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:248:2416":{"id":"0:248:2416","crate_id":0,"name":"domain_to_ascii","span":{"filename":"src/lib.rs","begin":[125,0],"end":[127,1]},"visibility":"public","docs":"The [domain to ASCII](https://url.spec.whatwg.org/#concept-domain-to-ascii) algorithm;\nversion returning `String` and no ASCII deny list (i.e. _UseSTD3ASCIIRules=false_).\n\nThis function exists for backward-compatibility. Consider using [`domain_to_ascii_cow`]\ninstead.\n\nReturn the ASCII representation a domain name,\nnormalizing characters (upper-case to lower-case and other kinds of equivalence)\nand using Punycode as necessary.\n\nThis process may fail.","links":{"`domain_to_ascii_cow`":"0:247:2404"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["domain",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42666:237","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"alloc::string::String","id":"5:7801:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Errors","id":"0:400:2387","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3943-0:309:2408":{"id":"b:1:3943-0:309:2408","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3941:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2408","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3945:1863"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:357":{"id":"0:357","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[483,9],"end":[483,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"1:32767:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13698:36507":{"id":"1:13698:36507","crate_id":1,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"1:13323:3298","str::split":"1:13686:2973","prim@char":"4:12451:490","str::split_terminator":"1:13695:36506"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"1:44472:4253","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13329:3287","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:13329:3287","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13344:4241","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:18:2407":{"id":"0:18:2407","crate_id":0,"name":"to_ascii","span":{"filename":"src/deprecated.rs","begin":[78,4],"end":[105,5]},"visibility":"public","docs":"[UTS 46 ToASCII](http://www.unicode.org/reports/tr46/#ToASCII)","links":{},"attrs":["#[allow(clippy::wrong_self_convention)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["domain",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["out",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"String","id":"5:7801:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42666:237","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Errors","id":"0:400:2387","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2804-0:339:2597":{"id":"b:1:2804-0:339:2597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2792:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2802:3847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2806:28253"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3087-0:352:2599":{"id":"b:1:3087-0:352:2599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3057:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3090:149","1:3091:1850"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:402:60":{"id":"0:402:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[64,9],"end":[64,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Errors","id":"0:400:2387","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13767:36523":{"id":"1:13767:36523","crate_id":1,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:5144:36523"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"1:44721:3954","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3087-0:188:2382":{"id":"b:1:3087-0:188:2382","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3057:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:188:2382","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3090:149","1:3091:1850"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2772-0:299:2381":{"id":"b:1:2772-0:299:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2766:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2774:2378"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:23:483-0:324:2410":{"id":"b:23:483-0:324:2410","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/icu_provider-1.5.0/src/any.rs","begin":[32,0],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MaybeSendSync","id":"23:482:27417","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:241-0:253:2385":{"id":"0:241-0:253:2385","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,36],"end":[61,40]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"crate::deprecated::Idna","name":"Idna","id":"0:253:2385","glob":false}}},"1:13659:33914":{"id":"1:13659:33914","crate_id":1,"name":"split_at_mut_checked","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at_checked`] method.\n\n[`split_at_checked`]: str::split_at_checked\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\nif let Some((first, last)) = s.split_at_mut_checked(3) {\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n\nassert_eq!(None, s.split_at_mut_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_mut_checked(16));  // Beyond the string length\n```","links":{"str::split_at_checked":"1:13658:33913"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"1:42534:205","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3943-0:299:2381":{"id":"b:1:3943-0:299:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3941:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3945:1863"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:350":{"id":"0:350","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[471,30],"end":[471,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2792:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:351:494"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:24:105-0:352:2599":{"id":"b:24:105-0:352:2599","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/yoke-0.7.4/src/erased.rs","begin":[22,0],"end":[22,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ErasedDestructor","id":"24:104:27439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:334":{"id":"0:334","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[458,20],"end":[458,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"1:2859:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3081-0:367:2603":{"id":"b:1:3081-0:367:2603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3054:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3083:857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:42628:3727-0:324:2410":{"id":"a:1:42628:3727-0:324:2410","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42628:3727","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:362":{"id":"0:362","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[483,24],"end":[483,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"1:3295:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:255":{"id":"0:255","crate_id":0,"name":null,"span":{"filename":"src/deprecated.rs","begin":[65,9],"end":[65,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"1:3129:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:253:2385","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:256:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:23:483-0:400:2387":{"id":"b:23:483-0:400:2387","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/icu_provider-1.5.0/src/any.rs","begin":[32,0],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MaybeSendSync","id":"23:482:27417","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:400:2387","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13704:33919":{"id":"1:13704:33919","crate_id":1,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"4:12451:490","str::splitn":"1:13701:33917","self::pattern":"1:13323:3298"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"1:44526:4047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13329:3287","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:13329:3287","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13344:4241","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2775-0:299:2381":{"id":"b:1:2775-0:299:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2769:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2777:28251"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:3080:3872":{"id":"1:3080:3872","crate_id":1,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"1:3054:156"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:24:105-0:253:2385":{"id":"b:24:105-0:253:2385","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/yoke-0.7.4/src/erased.rs","begin":[22,0],"end":[22,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ErasedDestructor","id":"24:104:27439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:253:2385","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:32765:248-0:400:2387":{"id":"a:1:32765:248-0:400:2387","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32765:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:400:2387","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:345":{"id":"0:345","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[471,9],"end":[471,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2854:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:346:722"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13739:32436":{"id":"1:13739:32436","crate_id":1,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns the substring after the prefix,\nwrapped in `Some`. Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"4:12451:490","self::pattern":"1:13323:3298"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:42534:205","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13329:3287","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:338:494":{"id":"0:338:494","crate_id":0,"name":"clone","span":{"filename":"src/uts46.rs","begin":[458,30],"end":[458,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"DnsLength","id":"0:324:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3087-0:339:2597":{"id":"b:1:3087-0:339:2597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3057:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3090:149","1:3091:1850"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:349":{"id":"0:349","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[471,24],"end":[471,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"1:3295:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13645:33892":{"id":"1:13645:33892","crate_id":1,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"4:12470:1893"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13650:31779":{"id":"1:13650:31779","crate_id":1,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"1:11456:251","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:11456:251","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32765:248-0:352:2599":{"id":"a:1:32765:248-0:352:2599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32765:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5738:37221":{"id":"5:5738:37221","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:296:3289","`String`":"5:7801:256"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:296:3289","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7801:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3335:3360-0:253:2385":{"id":"a:1:3335:3360-0:253:2385","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3335:3360","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:253:2385","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:42628:3727-0:299:2381":{"id":"a:1:42628:3727-0:299:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42628:3727","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:177":{"id":"0:177","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[355,0],"end":[431,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:178:1208","0:179:2418","0:180:2428","0:181:2922"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:783-0:257:2384":{"id":"b:5:783-0:257:2384","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2792:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:779:263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2384","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:785:2587","5:786:28255","5:787:28256"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2807-0:352:2599":{"id":"b:1:2807-0:352:2599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"1:3295:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2802:3847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2809:28253"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:353:2600":{"id":"0:353:2600","crate_id":0,"name":"Passthrough","span":{"filename":"src/uts46.rs","begin":[491,4],"end":[491,15]},"visibility":"default","docs":"There were no errors. The caller must consider the input to be the output.\n\nThis asserts that the input can be safely passed to [`core::str::from_utf8_unchecked`].\n\n(Distinct from `WroteToSink` in order to allow `Cow` behavior to be implemented on top of\n[`Uts46::process`].)","links":{"`core::str::from_utf8_unchecked`":"1:12872:2997","`Uts46::process`":"0:207:2594"},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:1:3943-0:367:2603":{"id":"b:1:3943-0:367:2603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3941:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3945:1863"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3081-0:339:2597":{"id":"b:1:3081-0:339:2597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3054:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3083:857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:372":{"id":"0:372","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[501,9],"end":[501,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"1:32767:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13756:2689":{"id":"1:13756:2689","crate_id":1,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:35:2383":{"id":"0:35:2383","crate_id":0,"name":"punycode","span":{"filename":"src/punycode.rs","begin":[9,0],"end":[465,1]},"visibility":"public","docs":"Punycode ([RFC 3492](http://tools.ietf.org/html/rfc3492)) implementation.\n\nSince Punycode fundamentally works on unicode code points,\n`encode` and `decode` take and return slices and vectors of `char`.\n`encode_str` and `decode_to_string` provide convenience wrappers\nthat convert from and to Rust’s UTF-8 based `str` and `String` types.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:50:2668","0:51:639","0:110:2732","0:112:715"],"is_stripped":false}}},"1:3090:149":{"id":"1:3090:149","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"1:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"1:13682:3878":{"id":"1:13682:3878","crate_id":1,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"1:42536:202","prim@char":"4:12451:490","self::pattern":"1:13323:3298"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:42534:205","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13329:3287","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:13329:3287","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13344:4241","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13736:36517":{"id":"1:13736:36517","crate_id":1,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"4:12451:490","self::pattern":"1:13323:3298"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13329:3287","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13760:33149":{"id":"1:13760:33149","crate_id":1,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3081-0:400:2387":{"id":"b:1:3081-0:400:2387","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3054:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:400:2387","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3083:857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2775-0:257:2384":{"id":"b:1:2775-0:257:2384","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2769:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2384","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2777:28251"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:42627:3728-0:253:2385":{"id":"a:1:42627:3728-0:253:2385","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42627:3728","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:253:2385","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:181:2922":{"id":"0:181:2922","crate_id":0,"name":"URL","span":{"filename":"src/uts46.rs","begin":[430,4],"end":[430,78]},"visibility":"public","docs":"[Forbidden domain code point](https://url.spec.whatwg.org/#forbidden-domain-code-point) from the WHATWG URL Standard.\n\nEquivalent to `AsciiDenyList::new(true, \"%#/:<>?@[\\\\]^|\")`.\n\nNote that this deny list rejects IPv6 addresses, so (as in URL\nparsing) you need to check for IPv6 addresses first and not\nput them through UTS 46 processing.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"_"}}},"0:377":{"id":"0:377","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[501,24],"end":[501,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"1:3295:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:364:494":{"id":"0:364:494","crate_id":0,"name":"clone","span":{"filename":"src/uts46.rs","begin":[483,30],"end":[483,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13722:36510":{"id":"1:13722:36510","crate_id":1,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"1:13323:3298","`DoubleEndedIterator`":"1:8473:133","prim@char":"4:12451:490","str::match_indices":"1:13719:36509"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"1:44572:4258","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13329:3287","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:13329:3287","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13344:4241","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13762:35065":{"id":"1:13762:35065","crate_id":1,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"1:1126:41929"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3092-0:253:2385":{"id":"b:1:3092-0:253:2385","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3051:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:253:2385","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3095:149","1:3096:1848"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:262":{"id":"0:262","crate_id":0,"name":null,"span":{"filename":"src/deprecated.rs","begin":[132,9],"end":[132,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2792:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2384","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:263:494"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:332":{"id":"0:332","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[458,9],"end":[458,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2854:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:333:722"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:783-0:339:2597":{"id":"b:5:783-0:339:2597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2792:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:779:263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:785:2587","5:786:28255","5:787:28256"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3943-0:352:2599":{"id":"b:1:3943-0:352:2599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3941:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3945:1863"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13701:33917":{"id":"1:13701:33917","crate_id":1,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"4:12451:490","self::pattern":"1:13323:3298","str::rsplitn":"1:13704:33919"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"1:44508:4051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13329:3287","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42627:3728-0:352:2599":{"id":"a:1:42627:3728-0:352:2599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42627:3728","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:252:2440":{"id":"0:252:2440","crate_id":0,"name":"domain_to_unicode","span":{"filename":"src/lib.rs","begin":[161,0],"end":[168,1]},"visibility":"public","docs":"The [domain to Unicode](https://url.spec.whatwg.org/#concept-domain-to-unicode) algorithm;\nversion returning `String` and no ASCII deny list (i.e. _UseSTD3ASCIIRules=false_).\n\nThis function exists for backward-compatibility. Consider using [`Uts46::to_user_interface`]\nor [`Uts46::to_unicode`].\n\nReturn the Unicode representation of a domain name,\nnormalizing characters (upper-case to lower-case and other kinds of equivalence)\nand decoding Punycode as necessary.\n\nIf the second item of the tuple indicates an error, the first item of the tuple\ndenotes errors using the REPLACEMENT CHARACTERs in order to be able to illustrate\nerrors to the user. When the second item of the return tuple signals an error,\nthe first item of the tuple must not be used in a network protocol.","links":{"`Uts46::to_user_interface`":"0:204:3007","`Uts46::to_unicode`":"0:201:2441"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["domain",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"tuple":[{"resolved_path":{"name":"alloc::string::String","id":"5:7801:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"resolved_path":{"name":"Result","id":"1:42666:237","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Errors","id":"0:400:2387","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:3096:1848":{"id":"1:3096:1848","crate_id":1,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"1:42666:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"1:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5739:2757":{"id":"5:5739:2757","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7801:256"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7801:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:366:827":{"id":"0:366:827","crate_id":0,"name":"fmt","span":{"filename":"src/uts46.rs","begin":[483,37],"end":[483,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:10516:155","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:10497:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:8-0:299:2381":{"id":"0:8-0:299:2381","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[53,0],"end":[53,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"uts46::AsciiDenyList","name":"AsciiDenyList","id":"0:299:2381","glob":false}}},"a:1:42628:3727-0:188:2382":{"id":"a:1:42628:3727-0:188:2382","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42628:3727","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:188:2382","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:13763:35066":{"id":"1:13763:35066","crate_id":1,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"1:1126:41929"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42628:3727-0:253:2385":{"id":"a:1:42628:3727-0:253:2385","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42628:3727","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:253:2385","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3081-0:324:2410":{"id":"b:1:3081-0:324:2410","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3054:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3083:857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:42628:3727-0:352:2599":{"id":"a:1:42628:3727-0:352:2599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42628:3727","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:2806:28253":{"id":"1:2806:28253","crate_id":1,"name":"clone_to_uninit","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["dst",{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"1:13761:35064":{"id":"1:13761:35064","crate_id":1,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"1:1126:41929"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3081-0:253:2385":{"id":"b:1:3081-0:253:2385","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3054:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:253:2385","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3083:857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3081-0:309:2408":{"id":"b:1:3081-0:309:2408","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3054:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2408","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3083:857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:23:483-0:257:2384":{"id":"b:23:483-0:257:2384","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/icu_provider-1.5.0/src/any.rs","begin":[32,0],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MaybeSendSync","id":"23:482:27417","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2384","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:32824:3363-0:309:2408":{"id":"a:1:32824:3363-0:309:2408","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32824:3363","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2408","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2807-0:339:2597":{"id":"b:1:2807-0:339:2597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"1:3295:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2802:3847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2809:28253"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:32765:248-0:253:2385":{"id":"a:1:32765:248-0:253:2385","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32765:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:253:2385","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:197:1208":{"id":"0:197:1208","crate_id":0,"name":"new","span":{"filename":"src/uts46.rs","begin":[586,4],"end":[594,5]},"visibility":"public","docs":"Constructor using data compiled into the binary.","links":{},"attrs":["#[cfg(feature = \"compiled_data\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13727:36512":{"id":"1:13727:36512","crate_id":1,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5740:33146":{"id":"5:5740:33146","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:13759:33148"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7801:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3092-0:309:2408":{"id":"b:1:3092-0:309:2408","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3051:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2408","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3095:149","1:3096:1848"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:32824:3363-0:324:2410":{"id":"a:1:32824:3363-0:324:2410","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32824:3363","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:13748:36519":{"id":"1:13748:36519","crate_id":1,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"4:12451:490","self::pattern":"1:13323:3298"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13329:3287","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3081-0:299:2381":{"id":"b:1:3081-0:299:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3054:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3083:857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:110:2732":{"id":"0:110:2732","crate_id":0,"name":"encode_str","span":{"filename":"src/punycode.rs","begin":[331,0],"end":[339,1]},"visibility":"public","docs":"Convert an Unicode `str` to Punycode.\n\nThis is a convenience wrapper around `encode`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["input",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42534:205","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"alloc::string::String","id":"5:7801:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:307":{"id":"0:307","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[349,30],"end":[349,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2792:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:308:494"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2772-0:352:2599":{"id":"b:1:2772-0:352:2599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2766:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2774:2378"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:256:60":{"id":"0:256:60","crate_id":0,"name":"default","span":{"filename":"src/deprecated.rs","begin":[65,9],"end":[65,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Idna","id":"0:253:2385","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13668:28491":{"id":"1:13668:28491","crate_id":1,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"1:44696:4259","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:186:2601":{"id":"0:186:2601","crate_id":0,"name":"verify_dns_length","span":{"filename":"src/uts46.rs","begin":[542,0],"end":[565,1]},"visibility":"public","docs":"Performs the _VerifyDNSLength_ check on the output of the _ToASCII_ operation.\n\nIf the second argument is `false`, the trailing root label dot is allowed.\n\n# Panics\n\nPanics in debug mode if the argument isn't ASCII.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["domain_name",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["allow_trailing_dot",{"primitive":"bool"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42627:3728-0:309:2408":{"id":"a:1:42627:3728-0:309:2408","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42627:3728","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2408","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:329:2430":{"id":"0:329:2430","crate_id":0,"name":"Verify","span":{"filename":"src/uts46.rs","begin":[467,4],"end":[467,10]},"visibility":"default","docs":"_VerifyDNSLength=true_. (The trailing root label dot is not allowed.)","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"1:13725:36511":{"id":"1:13725:36511","crate_id":1,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13757:35061":{"id":"1:13757:35061","crate_id":1,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"1:40435:3845","Self::is_ascii":"1:13756:2689"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42534:205","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"1:40435:3845","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:324:2410":{"id":"0:324:2410","crate_id":0,"name":"DnsLength","span":{"filename":"src/uts46.rs","begin":[460,0],"end":[468,1]},"visibility":"public","docs":"The UTS 46 _VerifyDNSLength_ flag.","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:325:2411","0:327:2939","0:329:2430"],"impls":["a:1:3300:260-0:324:2410","a:1:32765:248-0:324:2410","a:1:32824:3363-0:324:2410","a:1:3335:3360-0:324:2410","a:1:42628:3727-0:324:2410","a:1:42627:3728-0:324:2410","b:1:3092-0:324:2410","b:1:2772-0:324:2410","b:1:3087-0:324:2410","b:1:3943-0:324:2410","b:1:3077-0:324:2410","b:1:2807-0:324:2410","b:1:2804-0:324:2410","b:1:2775-0:324:2410","b:1:3081-0:324:2410","b:5:783-0:324:2410","b:23:483-0:324:2410","b:24:105-0:324:2410","0:336","0:334","0:332","0:331","0:337"]}}},"b:1:3077-0:309:2408":{"id":"b:1:3077-0:309:2408","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3054:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3051:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2408","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3080:3872"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3077-0:324:2410":{"id":"b:1:3077-0:324:2410","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3054:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3051:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3080:3872"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:32824:3363-0:367:2603":{"id":"a:1:32824:3363-0:367:2603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32824:3363","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2775-0:188:2382":{"id":"b:1:2775-0:188:2382","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2769:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:188:2382","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2777:28251"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:42627:3728-0:400:2387":{"id":"a:1:42627:3728-0:400:2387","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42627:3728","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:400:2387","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:400:2387":{"id":"0:400:2387","crate_id":0,"name":"Errors","span":{"filename":"src/lib.rs","begin":[66,0],"end":[66,20]},"visibility":"public","docs":"Type indicating that there were errors during UTS #46 processing.","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["a:1:3300:260-0:400:2387","a:1:32765:248-0:400:2387","a:1:32824:3363-0:400:2387","a:1:3335:3360-0:400:2387","a:1:42628:3727-0:400:2387","a:1:42627:3728-0:400:2387","b:1:3092-0:400:2387","b:1:2772-0:400:2387","b:1:3087-0:400:2387","b:1:3943-0:400:2387","b:1:3077-0:400:2387","b:1:2775-0:400:2387","b:1:3081-0:400:2387","b:5:5974-0:400:2387","b:23:483-0:400:2387","b:24:105-0:400:2387","0:242","0:244","0:245","0:403","0:401"]}}},"b:1:3081-0:257:2384":{"id":"b:1:3081-0:257:2384","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3054:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2384","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3083:857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:257:2384":{"id":"0:257:2384","crate_id":0,"name":"Config","span":{"filename":"src/deprecated.rs","begin":[135,0],"end":[140,1]},"visibility":"public","docs":"Deprecated configuration API.","links":{},"attrs":["#[must_use]","#[deprecated]"],"deprecation":{"since":null,"note":null},"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:24","a:1:3300:260-0:257:2384","a:1:32765:248-0:257:2384","a:1:32824:3363-0:257:2384","a:1:3335:3360-0:257:2384","a:1:42628:3727-0:257:2384","a:1:42627:3728-0:257:2384","b:1:3092-0:257:2384","b:1:2772-0:257:2384","b:1:3087-0:257:2384","b:1:3943-0:257:2384","b:1:3077-0:257:2384","b:1:2807-0:257:2384","b:1:2804-0:257:2384","b:1:2775-0:257:2384","b:1:3081-0:257:2384","b:5:783-0:257:2384","b:23:483-0:257:2384","b:24:105-0:257:2384","0:264","0:262","0:22"]}}},"b:1:2804-0:299:2381":{"id":"b:1:2804-0:299:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2792:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2802:3847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2806:28253"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:180:2428":{"id":"0:180:2428","crate_id":0,"name":"STD3","span":{"filename":"src/uts46.rs","begin":[421,4],"end":[421,71]},"visibility":"public","docs":"The STD3 deny list. This corresponds to _UseSTD3ASCIIRules=true_.\n\nNote that this deny list rejects the underscore, which occurs in\npseudo-hosts used by various TXT record-based protocols, and also\ncharacters that may occurs in non-DNS naming, such as NetBIOS.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"_"}}},"0:312:2637":{"id":"0:312:2637","crate_id":0,"name":"CheckFirstLast","span":{"filename":"src/uts46.rs","begin":[447,4],"end":[447,18]},"visibility":"default","docs":"Prohibit hyphens in the first and last position in the label but allow in\nthe third and fourth position.\n\nNote that this mode rejects real-world names, including some GitHub user pages.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:1:2772-0:257:2384":{"id":"b:1:2772-0:257:2384","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2766:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2384","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2774:2378"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:32765:248-0:188:2382":{"id":"a:1:32765:248-0:188:2382","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32765:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:188:2382","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:1:32765:248-0:367:2603":{"id":"a:1:32765:248-0:367:2603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32765:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:27:2601":{"id":"0:27:2601","crate_id":0,"name":"verify_dns_length","span":{"filename":"src/deprecated.rs","begin":[183,4],"end":[186,5]},"visibility":"public","docs":"Whether the _VerifyDNSLength_ operation should be performed\nby `to_ascii`.\n\nFor compatibility with previous behavior, even when set to `true`,\nthe trailing root label dot is allowed contrary to the spec.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["value",{"primitive":"bool"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:783-0:367:2603":{"id":"b:5:783-0:367:2603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2792:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:779:263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:785:2587","5:786:28255","5:787:28256"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:373":{"id":"0:373","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[501,9],"end":[501,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2854:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:374:722"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:42628:3727-0:257:2384":{"id":"a:1:42628:3727-0:257:2384","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42628:3727","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2384","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:319":{"id":"0:319","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[434,20],"end":[434,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"1:2859:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2408","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13742:2971":{"id":"1:13742:2971","crate_id":1,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"4:12451:490","self::pattern":"1:13323:3298"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:42534:205","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13329:3287","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:13329:3287","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13344:4241","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:336":{"id":"0:336","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[458,24],"end":[458,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"1:3295:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13663:2899":{"id":"1:13663:2899","crate_id":1,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"1:44390:4248","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:23:483-0:309:2408":{"id":"b:23:483-0:309:2408","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/icu_provider-1.5.0/src/any.rs","begin":[32,0],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MaybeSendSync","id":"23:482:27417","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2408","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13759:33148":{"id":"1:13759:33148","crate_id":1,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13764:36522":{"id":"1:13764:36522","crate_id":1,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"1:5146:36522"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"1:44703:3956","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13675:33535":{"id":"1:13675:33535","crate_id":1,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"4:12451:490","self::pattern":"1:13323:3298"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13329:3287","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:13329:3287","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13344:4241","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3335:3360-0:188:2382":{"id":"a:1:3335:3360-0:188:2382","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3335:3360","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:188:2382","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:401":{"id":"0:401","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,9],"end":[64,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"1:3129:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:400:2387","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:402:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:194":{"id":"0:194","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[577,0],"end":[581,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"compiled_data\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"1:3129:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:188:2382","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:195:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:32765:248-0:339:2597":{"id":"a:1:32765:248-0:339:2597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32765:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5741:2697":{"id":"5:5741:2697","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:13760:33149"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7801:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3092-0:257:2384":{"id":"b:1:3092-0:257:2384","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3051:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2384","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3095:149","1:3096:1848"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:24:105-0:339:2597":{"id":"b:24:105-0:339:2597","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/yoke-0.7.4/src/erased.rs","begin":[22,0],"end":[22,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ErasedDestructor","id":"24:104:27439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:32824:3363-0:188:2382":{"id":"a:1:32824:3363-0:188:2382","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32824:3363","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:188:2382","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:246:827":{"id":"0:246:827","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[78,4],"end":[80,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"core::fmt::Formatter","id":"1:10516:155","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"core::fmt::Result","id":"1:10497:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32824:3363-0:352:2599":{"id":"a:1:32824:3363-0:352:2599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32824:3363","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2807-0:324:2410":{"id":"b:1:2807-0:324:2410","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"1:3295:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2802:3847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2809:28253"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:24:105-0:309:2408":{"id":"b:24:105-0:309:2408","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/yoke-0.7.4/src/erased.rs","begin":[22,0],"end":[22,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ErasedDestructor","id":"24:104:27439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2408","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3943-0:253:2385":{"id":"b:1:3943-0:253:2385","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3941:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:253:2385","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3945:1863"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:32824:3363-0:257:2384":{"id":"a:1:32824:3363-0:257:2384","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32824:3363","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2384","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:3335:3360-0:299:2381":{"id":"a:1:3335:3360-0:299:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3335:3360","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:3300:260-0:309:2408":{"id":"a:1:3300:260-0:309:2408","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3300:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2408","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3077-0:352:2599":{"id":"b:1:3077-0:352:2599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3054:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3051:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3080:3872"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:3335:3360-0:400:2387":{"id":"a:1:3335:3360-0:400:2387","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3335:3360","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:400:2387","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:196":{"id":"0:196","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[583,0],"end":[1730,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Uts46","id":"0:188:2382","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:197:1208","0:198:2407","0:201:2441","0:204:3007","0:207:2594"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:204:3007":{"id":"0:204:3007","crate_id":0,"name":"to_user_interface","span":{"filename":"src/uts46.rs","begin":[734,4],"end":[760,5]},"visibility":"public","docs":"Performs the [ToUnicode](https://www.unicode.org/reports/tr46/#ToUnicode) operation\nfrom UTS #46 according to options given with some\nerror-free Unicode labels output according to\n[ToASCII](https://www.unicode.org/reports/tr46/#ToASCII) instead as decided by\napplication policy implemented via the `output_as_unicode` closure. The purpose\nis to convert user-visible domains to the Unicode form in general but to render\npotentially misleading labels as Punycode.\n\nThis is an imperfect security mechanism, because [the Punycode form itself may be\nresemble a user-recognizable name](https://www.unicode.org/reports/tr36/#TablePunycodeSpoofing).\nHowever, since this mechanism is common practice, this API provides support for The\nthe mechanism.\n\nASCII labels always pass through as ASCII and labels with errors always pass through\nas Unicode. For non-erroneous labels that contain at least one non-ASCII character\n(implies non-empty), `output_as_unicode` is called with the Unicode form of the label,\nthe TLD (potentially empty), and a flag indicating whether the domain name as a whole\nis a bidi domain name. If the return value is `true`, the label passes through as\nUnicode. If the return value is `false`, the label is converted to Punycode.\n\nWhen there are errors, there is still output, which may be rendered user, even through\nthe output must not be used in networking protocols. Errors are denoted by\nU+FFFD REPLACEMENT CHARACTERs in the output. (That is, if the second item\nof the return tuple is `Err`, the first item of the return tuple is guaranteed to contain\nat least one U+FFFD.) Labels that contain errors are not converted to Punycode.\n\n# Arguments\n\n* `domain_name` - The input domain name as UTF-8 bytes. (The UTF-8ness is checked by\nthis method and input that is not well-formed UTF-8 is treated as an error. If you\nalready have a `&str`, call `.as_bytes()` on it.)\n* `ascii_deny_list` - What ASCII deny list, if any, to apply. The UTS 46\n_UseSTD3ASCIIRules_ flag or the WHATWG URL Standard forbidden domain code point\nprocessing is handled via this argument. Most callers are probably the best off\nby using [`AsciiDenyList::URL`] here.\n* `hyphens` - The UTS 46 _CheckHyphens_ flag. Most callers are probably the best\noff by using [`Hyphens::Allow`] here.\n* `output_as_unicode` - A closure for deciding if a label should be output as Unicode\n(as opposed to Punycode). The first argument is the label for which a decision is\nneeded (always non-empty slice). The second argument is the TLD (potentially empty).\nThe third argument is `true` iff the domain name as a whole is a bidi domain name.\nOnly non-erroneous labels that contain at least one non-ASCII character are passed\nto the closure as the first argument. The second and third argument values are\nguaranteed to remain the same during a single call to `process`, and the closure\nmay cache computations derived from the second and third argument (hence the\n`FnMut` type).","links":{"`AsciiDenyList::URL`":"0:181:2922","`Hyphens::Allow`":"0:310:2409"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["domain_name",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["ascii_deny_list",{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["hyphens",{"resolved_path":{"name":"Hyphens","id":"0:309:2408","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["output_as_unicode",{"generic":"OutputUnicode"}]],"output":{"tuple":[{"resolved_path":{"name":"Cow","id":"5:788:121","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}},{"resolved_path":{"name":"Result","id":"1:42666:237","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"crate::Errors","id":"0:400:2387","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"OutputUnicode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:3573:153","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"char"}}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"char"}}}},{"primitive":"bool"}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3300:260-0:339:2597":{"id":"a:1:3300:260-0:339:2597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3300:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2775-0:309:2408":{"id":"b:1:2775-0:309:2408","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2769:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2408","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2777:28251"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3943-0:339:2597":{"id":"b:1:3943-0:339:2597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3941:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3945:1863"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:247:2404":{"id":"0:247:2404","crate_id":0,"name":"domain_to_ascii_cow","span":{"filename":"src/lib.rs","begin":[102,0],"end":[112,1]},"visibility":"public","docs":"The [domain to ASCII](https://url.spec.whatwg.org/#concept-domain-to-ascii) algorithm;\nversion returning a `Cow`.\n\nMost applications should be using this function rather than the sibling functions,\nand most applications should pass [`AsciiDenyList::URL`] as the second argument.\nPassing [`AsciiDenyList::URL`] as the second argument makes this function also\nperform the [forbidden domain code point](https://url.spec.whatwg.org/#forbidden-domain-code-point)\ncheck in addition to the [domain to ASCII](https://url.spec.whatwg.org/#concept-domain-to-ascii)\nalgorithm.\n\nReturns the ASCII representation a domain name,\nnormalizing characters (upper-case to lower-case and other kinds of equivalence)\nand using Punycode as necessary.\n\nThis process may fail.\n\nIf you have a `&str` instead of `&[u8]`, just call `.to_bytes()` on it before\npassing it to this function. It's still preferable to use this function over\nthe sibling functions that take `&str`.","links":{"`AsciiDenyList::URL`":"0:181:2922"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["domain",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["ascii_deny_list",{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42666:237","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"alloc::borrow::Cow","id":"5:788:121","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"primitive":"str"}}],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Errors","id":"0:400:2387","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13655:36504":{"id":"1:13655:36504","crate_id":1,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"4:12457:1763","crate::ops::IndexMut":"1:3605:3318","str::slice_unchecked":"1:13654:36503"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:359:722":{"id":"0:359:722","crate_id":0,"name":"eq","span":{"filename":"src/uts46.rs","begin":[483,9],"end":[483,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13751:36520":{"id":"1:13751:36520","crate_id":1,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"4:12451:490","self::pattern":"1:13323:3298"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13329:3287","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:13329:3287","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13344:4241","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5723:10231":{"id":"5:5723:10231","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7801:256"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7801:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13329:3287","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:316":{"id":"0:316","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[434,9],"end":[434,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"1:32767:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2408","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:331":{"id":"0:331","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[458,9],"end":[458,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"1:32767:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:374:722":{"id":"0:374:722","crate_id":0,"name":"eq","span":{"filename":"src/uts46.rs","begin":[501,9],"end":[501,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ProcessingError","id":"0:367:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2774:2378":{"id":"1:2774:2378","crate_id":1,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:318:722":{"id":"0:318:722","crate_id":0,"name":"eq","span":{"filename":"src/uts46.rs","begin":[434,9],"end":[434,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Hyphens","id":"0:309:2408","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3943-0:188:2382":{"id":"b:1:3943-0:188:2382","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3941:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:188:2382","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3945:1863"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:244":{"id":"0:244","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[75,0],"end":[75,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["provide","cause","description","type_id","source"],"trait":{"name":"Error","id":"1:3140:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:400:2387","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:301":{"id":"0:301","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[349,9],"end":[349,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"1:32767:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13644:350":{"id":"1:13644:350","crate_id":1,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"1:13645:33892","`u8`":"4:12470:1893"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:783-0:352:2599":{"id":"b:5:783-0:352:2599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2792:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:779:263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:785:2587","5:786:28255","5:787:28256"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3077-0:188:2382":{"id":"b:1:3077-0:188:2382","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3054:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3051:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:188:2382","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3080:3872"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:42627:3728-0:257:2384":{"id":"a:1:42627:3728-0:257:2384","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42627:3728","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2384","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:13665:28456":{"id":"1:13665:28456","crate_id":1,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"1:13664:28493"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"1:44687:4260","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3300:260-0:324:2410":{"id":"a:1:3300:260-0:324:2410","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3300:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:13669:3102":{"id":"1:13669:3102","crate_id":1,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"4:12451:490","self::pattern":"1:13323:3298"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13329:3287","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13733:36516":{"id":"1:13733:36516","crate_id":1,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"4:12451:490","self::pattern":"1:13323:3298"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13329:3287","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:13329:3287","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"1:13349:4240","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13745:36518":{"id":"1:13745:36518","crate_id":1,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"4:12451:490","self::pattern":"1:13323:3298"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13329:3287","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:13329:3287","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13344:4241","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2777:28251":{"id":"1:2777:28251","crate_id":1,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3087-0:309:2408":{"id":"b:1:3087-0:309:2408","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3057:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2408","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3090:149","1:3091:1850"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:32765:248-0:309:2408":{"id":"a:1:32765:248-0:309:2408","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32765:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2408","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:24:105-0:367:2603":{"id":"b:24:105-0:367:2603","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/yoke-0.7.4/src/erased.rs","begin":[22,0],"end":[22,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ErasedDestructor","id":"24:104:27439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3092-0:299:2381":{"id":"b:1:3092-0:299:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3051:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3095:149","1:3096:1848"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5721":{"id":"5:5721","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5722:37217","5:5723:10231","5:5726:37218","5:5729:37219","5:5737:37220","5:5738:37221","5:5739:2757","5:5740:33146","5:5741:2697"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3092-0:188:2382":{"id":"b:1:3092-0:188:2382","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3051:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:188:2382","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3095:149","1:3096:1848"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:250:2427":{"id":"0:250:2427","crate_id":0,"name":"domain_to_ascii_strict","span":{"filename":"src/lib.rs","begin":[136,0],"end":[145,1]},"visibility":"public","docs":"The [domain to ASCII](https://url.spec.whatwg.org/#concept-domain-to-ascii) algorithm,\nwith the `beStrict` flag set.\n\nNote that this rejects various real-world names including:\n* YouTube CDN nodes\n* Some GitHub user pages\n* Pseudo-hosts used by various TXT record-based protocols.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["domain",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42666:237","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"alloc::string::String","id":"5:7801:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Errors","id":"0:400:2387","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42628:3727-0:400:2387":{"id":"a:1:42628:3727-0:400:2387","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42628:3727","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:400:2387","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:3300:260-0:352:2599":{"id":"a:1:3300:260-0:352:2599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3300:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:368:2604":{"id":"0:368:2604","crate_id":0,"name":"ValidityError","span":{"filename":"src/uts46.rs","begin":[507,4],"end":[507,17]},"visibility":"default","docs":"There was a validity error according to the chosen options.\n\nIn case of `Operation::ToAscii`, there is no output. Otherwise, output was written to the\nsink and the output contains at least one U+FFFD REPLACEMENT CHARACTER to denote an error.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:23:60":{"id":"0:23:60","crate_id":0,"name":"default","span":{"filename":"src/deprecated.rs","begin":[144,4],"end":[152,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42628:3727-0:309:2408":{"id":"a:1:42628:3727-0:309:2408","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42628:3727","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2408","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:13643:36502":{"id":"1:13643:36502","crate_id":1,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"1:13646:2726":{"id":"1:13646:2726","crate_id":1,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"1:42536:202"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"1:42534:205","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"1:11456:251","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:11456:251","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:342:2607":{"id":"0:342:2607","crate_id":0,"name":"MarkErrors","span":{"filename":"src/uts46.rs","begin":[479,4],"end":[479,14]},"visibility":"default","docs":"In case of error, mark errors with the REPLACEMENT CHARACTER. (The output\ncontaining REPLACEMENT CHARACTERs may be show to the user to illustrate\nwhat was wrong but must not be used for naming in a network protocol.)","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:1:3081-0:188:2382":{"id":"b:1:3081-0:188:2382","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3054:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:188:2382","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3083:857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:34:2441":{"id":"0:34:2441","crate_id":0,"name":"to_unicode","span":{"filename":"src/deprecated.rs","begin":[242,4],"end":[247,5]},"visibility":"public","docs":"[UTS 46 ToUnicode](http://www.unicode.org/reports/tr46/#ToUnicode)","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["domain",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"tuple":[{"resolved_path":{"name":"String","id":"5:7801:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"resolved_path":{"name":"Result","id":"1:42666:237","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Errors","id":"0:400:2387","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3092-0:352:2599":{"id":"b:1:3092-0:352:2599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3051:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3095:149","1:3096:1848"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:2809:28253":{"id":"1:2809:28253","crate_id":1,"name":"clone_to_uninit","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["dst",{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"1:13635:2974":{"id":"1:13635:2974","crate_id":1,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2807-0:257:2384":{"id":"b:1:2807-0:257:2384","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"1:3295:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2802:3847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2384","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2809:28253"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:352:2599":{"id":"0:352:2599","crate_id":0,"name":"ProcessingSuccess","span":{"filename":"src/uts46.rs","begin":[484,0],"end":[498,1]},"visibility":"public","docs":"The success outcome of [`Uts46::process`]","links":{"`Uts46::process`":"0:207:2594"},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:353:2600","0:355:2602"],"impls":["a:1:3300:260-0:352:2599","a:1:32765:248-0:352:2599","a:1:32824:3363-0:352:2599","a:1:3335:3360-0:352:2599","a:1:42628:3727-0:352:2599","a:1:42627:3728-0:352:2599","b:1:3092-0:352:2599","b:1:2772-0:352:2599","b:1:3087-0:352:2599","b:1:3943-0:352:2599","b:1:3077-0:352:2599","b:1:2807-0:352:2599","b:1:2804-0:352:2599","b:1:2775-0:352:2599","b:1:3081-0:352:2599","b:5:783-0:352:2599","b:23:483-0:352:2599","b:24:105-0:352:2599","0:362","0:360","0:357","0:358","0:365","0:363"]}}},"1:13689:28477":{"id":"1:13689:28477","crate_id":1,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"4:12451:490","self::pattern":"1:13323:3298"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"1:13138:4066","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13329:3287","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3077-0:299:2381":{"id":"b:1:3077-0:299:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3054:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3051:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3080:3872"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13667:36505":{"id":"1:13667:36505","crate_id":1,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"1:44668:4252","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3092-0:324:2410":{"id":"b:1:3092-0:324:2410","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3051:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3095:149","1:3096:1848"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:375":{"id":"0:375","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[501,20],"end":[501,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"1:2859:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13692:3105":{"id":"1:13692:3105","crate_id":1,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"1:13323:3298","`DoubleEndedIterator`":"1:8473:133","prim@char":"4:12451:490","str::split":"1:13686:2973"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"1:44422:4053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13329:3287","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:13329:3287","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13344:4241","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13732:36515":{"id":"1:13732:36515","crate_id":1,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:195:60":{"id":"0:195:60","crate_id":0,"name":"default","span":{"filename":"src/uts46.rs","begin":[578,4],"end":[580,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:299:2381":{"id":"0:299:2381","crate_id":0,"name":"AsciiDenyList","span":{"filename":"src/uts46.rs","begin":[351,0],"end":[353,1]},"visibility":"public","docs":"The ASCII deny list to be applied.","links":{},"attrs":["#[repr(transparent)]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:177","a:1:3300:260-0:299:2381","a:1:32765:248-0:299:2381","a:1:32824:3363-0:299:2381","a:1:3335:3360-0:299:2381","a:1:42628:3727-0:299:2381","a:1:42627:3728-0:299:2381","b:1:3092-0:299:2381","b:1:2772-0:299:2381","b:1:3087-0:299:2381","b:1:3943-0:299:2381","b:1:3077-0:299:2381","b:1:2807-0:299:2381","b:1:2804-0:299:2381","b:1:2775-0:299:2381","b:1:3081-0:299:2381","b:5:783-0:299:2381","b:23:483-0:299:2381","b:24:105-0:299:2381","0:302","0:304","0:307","0:306","0:301"]}}},"0:264":{"id":"0:264","crate_id":0,"name":null,"span":{"filename":"src/deprecated.rs","begin":[132,16],"end":[132,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"1:3295:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2384","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:28:2610":{"id":"0:28:2610","crate_id":0,"name":"check_hyphens","span":{"filename":"src/deprecated.rs","begin":[199,4],"end":[202,5]},"visibility":"public","docs":"Whether to enforce STD3 rules for hyphen placement.\n\n`true` to deny hyphens in the first and last positions.\n`false` to not enforce hyphen placement.\n\nNote that for backward compatibility this is not the same as\nUTS 46 _CheckHyphens_, which also disallows hyphens in the\nthird and fourth positions.\n\nNote that `true` rejects real-world names, including some GitHub user pages.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["value",{"primitive":"bool"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:310:2409":{"id":"0:310:2409","crate_id":0,"name":"Allow","span":{"filename":"src/uts46.rs","begin":[441,4],"end":[441,9]},"visibility":"default","docs":"_CheckHyphens=false_: Do not place positional restrictions on hyphens.\n\nThis mode is used by the WHATWG URL Standard for normal User Agent processing\n(i.e. not conformance checking).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:1:3081-0:352:2599":{"id":"b:1:3081-0:352:2599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3054:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3083:857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:3300:260-0:299:2381":{"id":"a:1:3300:260-0:299:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3300:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2772-0:400:2387":{"id":"b:1:2772-0:400:2387","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2766:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:400:2387","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2774:2378"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2804-0:352:2599":{"id":"b:1:2804-0:352:2599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2792:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2802:3847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2806:28253"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13634:1024":{"id":"1:13634:1024","crate_id":1,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"4:12451:490"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5726:37218":{"id":"5:5726:37218","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7801:256"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7801:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13329:3287","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:379:494":{"id":"0:379:494","crate_id":0,"name":"clone","span":{"filename":"src/uts46.rs","begin":[501,30],"end":[501,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ProcessingError","id":"0:367:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:787:28256":{"id":"5:787:28256","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:344":{"id":"0:344","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[471,9],"end":[471,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"1:32767:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:404:827":{"id":"0:404:827","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[64,18],"end":[64,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:10516:155","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:10497:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:0:2442":{"id":"0:0:2442","crate_id":0,"name":"idna","span":{"filename":"src/lib.rs","begin":[9,0],"end":[168,1]},"visibility":"public","docs":"This Rust crate implements IDNA\n[per the WHATWG URL Standard](https://url.spec.whatwg.org/#idna).\n\nIt also exposes the underlying algorithms from [*Unicode IDNA Compatibility Processing*\n(Unicode Technical Standard #46)](http://www.unicode.org/reports/tr46/)\nand [Punycode (RFC 3492)](https://tools.ietf.org/html/rfc3492).\n\nQuoting from [UTS #46’s introduction](http://www.unicode.org/reports/tr46/#Introduction):\n\n> Initially, domain names were restricted to ASCII characters.\n> A system was introduced in 2003 for internationalized domain names (IDN).\n> This system is called Internationalizing Domain Names for Applications,\n> or IDNA2003 for short.\n> This mechanism supports IDNs by means of a client software transformation\n> into a format known as Punycode.\n> A revision of IDNA was approved in 2010 (IDNA2008).\n> This revision has a number of incompatibilities with IDNA2003.\n>\n> The incompatibilities force implementers of client software,\n> such as browsers and emailers,\n> to face difficult choices during the transition period\n> as registries shift from IDNA2003 to IDNA2008.\n> This document specifies a mechanism\n> that minimizes the impact of this transition for client software,\n> allowing client software to access domains that are valid under either system.","links":{},"attrs":["#![no_std]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:35:2383","0:128:2380","0:8-0:299:2381","0:240-0:257:2384","0:241-0:253:2385","0:400:2387","0:247:2404","0:248:2416","0:250:2427","0:252:2440"],"is_stripped":false}}},"1:13754:36521":{"id":"1:13754:36521","crate_id":1,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"1:13284:148","`FromStr`":"1:13283:3295"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42666:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"1:13283:3295","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"1:13283:3295","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42628:3727-0:339:2597":{"id":"a:1:42628:3727-0:339:2597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42628:3727","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:42627:3728-0:367:2603":{"id":"a:1:42627:3728-0:367:2603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42627:3728","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2807-0:367:2603":{"id":"b:1:2807-0:367:2603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"1:3295:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2802:3847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2809:28253"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:183:857":{"id":"0:183:857","crate_id":0,"name":"from","span":{"filename":"src/uts46.rs","begin":[515,4],"end":[517,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_",{"resolved_path":{"name":"core::fmt::Error","id":"1:43559:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3087-0:257:2384":{"id":"b:1:3087-0:257:2384","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3057:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2384","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3090:149","1:3091:1850"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:263:494":{"id":"0:263:494","crate_id":0,"name":"clone","span":{"filename":"src/deprecated.rs","begin":[132,9],"end":[132,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Config","id":"0:257:2384","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:29:2633":{"id":"0:29:2633","crate_id":0,"name":"use_idna_2008_rules","span":{"filename":"src/deprecated.rs","begin":[211,4],"end":[214,5]},"visibility":"public","docs":"Obsolete method retained to ease migration. The argument must be `false`.\n\nPanics\n\nIf the argument is `true`.","links":{},"attrs":["#[inline]","#[allow(unused_mut)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["value",{"primitive":"bool"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:17:1208":{"id":"0:17:1208","crate_id":0,"name":"new","span":{"filename":"src/deprecated.rs","begin":[72,4],"end":[74,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["config",{"resolved_path":{"name":"Config","id":"0:257:2384","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3335:3360-0:339:2597":{"id":"a:1:3335:3360-0:339:2597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3335:3360","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3092-0:339:2597":{"id":"b:1:3092-0:339:2597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3051:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3095:149","1:3096:1848"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:785:2587":{"id":"5:785:2587","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"b:24:105-0:299:2381":{"id":"b:24:105-0:299:2381","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/yoke-0.7.4/src/erased.rs","begin":[22,0],"end":[22,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ErasedDestructor","id":"24:104:27439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:363":{"id":"0:363","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[483,30],"end":[483,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2792:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:364:494"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:370:2605":{"id":"0:370:2605","crate_id":0,"name":"SinkError","span":{"filename":"src/uts46.rs","begin":[511,4],"end":[511,13]},"visibility":"default","docs":"The sink emitted [`core::fmt::Error`]. The partial output written to the sink must not\nbe used.","links":{"`core::fmt::Error`":"1:43559:149"},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:1:42627:3728-0:188:2382":{"id":"a:1:42627:3728-0:188:2382","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42627:3728","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:188:2382","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:323:494":{"id":"0:323:494","crate_id":0,"name":"clone","span":{"filename":"src/uts46.rs","begin":[434,30],"end":[434,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Hyphens","id":"0:309:2408","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2775-0:400:2387":{"id":"b:1:2775-0:400:2387","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2769:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:400:2387","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2777:28251"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13656:2872":{"id":"1:13656:2872","crate_id":1,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_checked`](str::split_at_checked).\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_checked":"1:13658:33913","str::split_at_mut":"1:13657:3165"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:25:2609":{"id":"0:25:2609","crate_id":0,"name":"use_std3_ascii_rules","span":{"filename":"src/deprecated.rs","begin":[162,4],"end":[165,5]},"visibility":"public","docs":"Whether to enforce STD3 or WHATWG URL Standard ASCII deny list.\n\n`true` for STD3, `false` for no deny list.\n\nNote that `true` rejects pseudo-hosts used by various TXT record-based protocols.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["value",{"primitive":"bool"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:23:483-0:299:2381":{"id":"b:23:483-0:299:2381","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/icu_provider-1.5.0/src/any.rs","begin":[32,0],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MaybeSendSync","id":"23:482:27417","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:783-0:324:2410":{"id":"b:5:783-0:324:2410","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2792:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:779:263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:785:2587","5:786:28255","5:787:28256"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3077-0:339:2597":{"id":"b:1:3077-0:339:2597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3054:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3051:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3080:3872"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2775-0:367:2603":{"id":"b:1:2775-0:367:2603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2769:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2777:28251"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:3335:3360-0:257:2384":{"id":"a:1:3335:3360-0:257:2384","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3335:3360","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2384","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:13661:2573":{"id":"1:13661:2573","crate_id":1,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"4:12451:490"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"1:44374:3292","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2775-0:324:2410":{"id":"b:1:2775-0:324:2410","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2769:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2777:28251"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:314:2429":{"id":"0:314:2429","crate_id":0,"name":"Check","span":{"filename":"src/uts46.rs","begin":[454,4],"end":[454,9]},"visibility":"default","docs":"_CheckHyphens=true_: Prohibit hyphens in the first, third, fourth,\nand last position in the label.\n\nNote that this mode rejects real-world names, including YouTube CDN nodes\nand some GitHub user pages.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:346:722":{"id":"0:346:722","crate_id":0,"name":"eq","span":{"filename":"src/uts46.rs","begin":[471,9],"end":[471,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32824:3363-0:253:2385":{"id":"a:1:32824:3363-0:253:2385","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32824:3363","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:253:2385","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:358":{"id":"0:358","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[483,9],"end":[483,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2854:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:359:722"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:112:715":{"id":"0:112:715","crate_id":0,"name":"encode","span":{"filename":"src/punycode.rs","begin":[345,0],"end":[353,1]},"visibility":"public","docs":"Convert Unicode to Punycode.\n\nReturn None on overflow, which can only happen on inputs that would take more than\n63 encoded bytes, the DNS limit on domain name labels.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["input",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"char"}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42534:205","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"alloc::string::String","id":"5:7801:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:786:28255":{"id":"5:786:28255","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3335:3360-0:352:2599":{"id":"a:1:3335:3360-0:352:2599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3335:3360","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:20:2441":{"id":"0:20:2441","crate_id":0,"name":"to_unicode","span":{"filename":"src/deprecated.rs","begin":[109,4],"end":[128,5]},"visibility":"public","docs":"[UTS 46 ToUnicode](http://www.unicode.org/reports/tr46/#ToUnicode)","links":{},"attrs":["#[allow(clippy::wrong_self_convention)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["domain",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["out",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"String","id":"5:7801:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42666:237","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Errors","id":"0:400:2387","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:378":{"id":"0:378","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[501,30],"end":[501,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2792:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:379:494"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:179:2418":{"id":"0:179:2418","crate_id":0,"name":"EMPTY","span":{"filename":"src/uts46.rs","begin":[414,4],"end":[414,67]},"visibility":"public","docs":"No ASCII deny list. This corresponds to _UseSTD3ASCIIRules=false_.\n\nEquivalent to `AsciiDenyList::new(false, \"\")`.\n\nNote: Not denying the space and control characters can result in\nstrange behavior. Without a deny list provided to the UTS 46\noperation, the caller is expected perform filtering afterwards,\nbut it's more efficient to use `AsciiDenyList` than post-processing,\nbecause the internals of this crate can optimize away checks in\ncertain cases.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"_"}}},"0:182":{"id":"0:182","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[514,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3054:156","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Error","id":"1:43559:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:183:857"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2804-0:324:2410":{"id":"b:1:2804-0:324:2410","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2792:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2802:3847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2806:28253"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13716:36508":{"id":"1:13716:36508","crate_id":1,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"1:13323:3298","`DoubleEndedIterator`":"1:8473:133","prim@char":"4:12451:490","str::matches":"1:13713:3232"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"1:44626:4256","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13329:3287","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:13329:3287","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13344:4241","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:24:105-0:324:2410":{"id":"b:24:105-0:324:2410","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/yoke-0.7.4/src/erased.rs","begin":[22,0],"end":[22,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ErasedDestructor","id":"24:104:27439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:253:2385":{"id":"0:253:2385","crate_id":0,"name":"Idna","span":{"filename":"src/deprecated.rs","begin":[67,0],"end":[69,1]},"visibility":"public","docs":"Deprecated. Use the crate-top-level functions or [`Uts46`].","links":{"`Uts46`":"0:188:2382"},"attrs":["#[deprecated]"],"deprecation":{"since":null,"note":null},"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:16","a:1:3300:260-0:253:2385","a:1:32765:248-0:253:2385","a:1:32824:3363-0:253:2385","a:1:3335:3360-0:253:2385","a:1:42628:3727-0:253:2385","a:1:42627:3728-0:253:2385","b:1:3092-0:253:2385","b:1:2772-0:253:2385","b:1:3087-0:253:2385","b:1:3943-0:253:2385","b:1:3077-0:253:2385","b:1:2775-0:253:2385","b:1:3081-0:253:2385","b:23:483-0:253:2385","b:24:105-0:253:2385","0:255"]}}},"b:1:2807-0:299:2381":{"id":"b:1:2807-0:299:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"1:3295:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2802:3847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2809:28253"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5976:1823":{"id":"5:5976:1823","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7801:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3087-0:400:2387":{"id":"b:1:3087-0:400:2387","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3057:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:400:2387","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3090:149","1:3091:1850"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3077-0:367:2603":{"id":"b:1:3077-0:367:2603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3054:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3051:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3080:3872"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13657:3165":{"id":"1:13657:3165","crate_id":1,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_mut_checked`](str::split_at_mut_checked).\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"1:13656:2872","str::split_at_mut_checked":"1:13659:33914"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:367:2603":{"id":"0:367:2603","crate_id":0,"name":"ProcessingError","span":{"filename":"src/uts46.rs","begin":[502,0],"end":[512,1]},"visibility":"public","docs":"The failure outcome of [`Uts46::process`]","links":{"`Uts46::process`":"0:207:2594"},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:368:2604","0:370:2605"],"impls":["a:1:3300:260-0:367:2603","a:1:32765:248-0:367:2603","a:1:32824:3363-0:367:2603","a:1:3335:3360-0:367:2603","a:1:42628:3727-0:367:2603","a:1:42627:3728-0:367:2603","b:1:3092-0:367:2603","b:1:2772-0:367:2603","b:1:3087-0:367:2603","b:1:3943-0:367:2603","b:1:3077-0:367:2603","b:1:2807-0:367:2603","b:1:2804-0:367:2603","b:1:2775-0:367:2603","b:1:3081-0:367:2603","b:5:783-0:367:2603","b:23:483-0:367:2603","b:24:105-0:367:2603","0:373","0:378","0:375","0:182","0:372","0:377","0:380"]}}},"0:16":{"id":"0:16","crate_id":0,"name":null,"span":{"filename":"src/deprecated.rs","begin":[71,0],"end":[129,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Idna","id":"0:253:2385","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:17:1208","0:18:2407","0:20:2441"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:23:483-0:367:2603":{"id":"b:23:483-0:367:2603","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/icu_provider-1.5.0/src/any.rs","begin":[32,0],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MaybeSendSync","id":"23:482:27417","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:23:483-0:188:2382":{"id":"b:23:483-0:188:2382","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/icu_provider-1.5.0/src/any.rs","begin":[32,0],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MaybeSendSync","id":"23:482:27417","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:188:2382","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13666:9923":{"id":"1:13666:9923","crate_id":1,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"1:44658:4250","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13695:36506":{"id":"1:13695:36506","crate_id":1,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"1:13323:3298","str::split":"1:13686:2973","prim@char":"4:12451:490","`DoubleEndedIterator`":"1:8473:133","str::rsplit_terminator":"1:13698:36507"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"1:44454:4254","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13329:3287","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32824:3363-0:339:2597":{"id":"a:1:32824:3363-0:339:2597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32824:3363","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:3335:3360-0:324:2410":{"id":"a:1:3335:3360-0:324:2410","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3335:3360","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:3300:260-0:400:2387":{"id":"a:1:3300:260-0:400:2387","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3300:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:400:2387","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:339:2597":{"id":"0:339:2597","crate_id":0,"name":"ErrorPolicy","span":{"filename":"src/uts46.rs","begin":[473,0],"end":[480,1]},"visibility":"public","docs":"Policy for customizing behavior in case of an error.","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:340:2598","0:342:2607"],"impls":["a:1:3300:260-0:339:2597","a:1:32765:248-0:339:2597","a:1:32824:3363-0:339:2597","a:1:3335:3360-0:339:2597","a:1:42628:3727-0:339:2597","a:1:42627:3728-0:339:2597","b:1:3092-0:339:2597","b:1:2772-0:339:2597","b:1:3087-0:339:2597","b:1:3943-0:339:2597","b:1:3077-0:339:2597","b:1:2807-0:339:2597","b:1:2804-0:339:2597","b:1:2775-0:339:2597","b:1:3081-0:339:2597","b:5:783-0:339:2597","b:23:483-0:339:2597","b:24:105-0:339:2597","0:345","0:347","0:350","0:349","0:344"]}}},"5:5722:37217":{"id":"5:5722:37217","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:296:3289","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:296:3289","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5729:37219":{"id":"5:5729:37219","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7801:256"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7801:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:381:827":{"id":"0:381:827","crate_id":0,"name":"fmt","span":{"filename":"src/uts46.rs","begin":[501,37],"end":[501,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:10516:155","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:10497:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5737:37220":{"id":"5:5737:37220","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7801:256"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7801:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3300:260-0:253:2385":{"id":"a:1:3300:260-0:253:2385","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3300:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:253:2385","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:51:639":{"id":"0:51:639","crate_id":0,"name":"decode","span":{"filename":"src/punycode.rs","begin":[62,0],"end":[69,1]},"visibility":"public","docs":"Convert Punycode to Unicode.\n\nReturn None on malformed input or overflow.\nOverflow can only happen on inputs that take more than\n63 encoded bytes, the DNS limit on domain name labels.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["input",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42534:205","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"alloc::vec::Vec","id":"5:7214:278","args":{"angle_bracketed":{"args":[{"type":{"primitive":"char"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2775-0:352:2599":{"id":"b:1:2775-0:352:2599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2769:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2777:28251"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13636:36499":{"id":"1:13636:36499","crate_id":1,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13664:28493":{"id":"1:13664:28493","crate_id":1,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"1:13665:28456"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"1:44678:4251","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3300:260-0:367:2603":{"id":"a:1:3300:260-0:367:2603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3300:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3077-0:257:2384":{"id":"b:1:3077-0:257:2384","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3054:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3051:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2384","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3080:3872"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13713:3232":{"id":"1:13713:3232","crate_id":1,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"1:13323:3298","`DoubleEndedIterator`":"1:8473:133","prim@char":"4:12451:490","str::rmatches":"1:13716:36508"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"1:44608:4255","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13329:3287","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2775-0:253:2385":{"id":"b:1:2775-0:253:2385","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2769:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:253:2385","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2777:28251"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:306":{"id":"0:306","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[349,24],"end":[349,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"1:3295:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3077-0:400:2387":{"id":"b:1:3077-0:400:2387","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3054:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3051:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:400:2387","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3080:3872"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:26:2593":{"id":"0:26:2593","crate_id":0,"name":"transitional_processing","span":{"filename":"src/deprecated.rs","begin":[172,4],"end":[175,5]},"visibility":"public","docs":"Whether to enable (deprecated) transitional processing.\n\nNote that Firefox, Safari, and Chrome do not use transitional\nprocessing.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["value",{"primitive":"bool"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3335:3360-0:309:2408":{"id":"a:1:3335:3360-0:309:2408","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3335:3360","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2408","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:3083:857":{"id":"1:3083:857","crate_id":1,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2772-0:309:2408":{"id":"b:1:2772-0:309:2408","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2766:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2408","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2774:2378"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:337":{"id":"0:337","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[458,30],"end":[458,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2792:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:338:494"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:3300:260-0:188:2382":{"id":"a:1:3300:260-0:188:2382","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3300:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:188:2382","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:128:2380":{"id":"0:128:2380","crate_id":0,"name":"uts46","span":{"filename":"src/uts46.rs","begin":[9,0],"end":[1768,1]},"visibility":"public","docs":"This module provides the lower-level API for UTS 46.\n\n[`Uts46::process`] is the core that the other convenience\nmethods build on.\n\nUTS 46 flags map to this API as follows:\n\n* _CheckHyphens_ - _true_: [`Hyphens::Check`], _false_: [`Hyphens::Allow`]; the WHATWG URL Standard sets this to _false_ for normal (non-conformance-checker) user agents.\n* _CheckBidi_ - Always _true_; cannot be configured, since this flag is _true_ even when WHATWG URL Standard _beStrict_ is _false_.\n* _CheckJoiners_ - Always _true_; cannot be configured, since this flag is _true_ even when WHATWG URL Standard _beStrict_ is _false_.\n* _UseSTD3ASCIIRules_ - _true_: [`AsciiDenyList::STD3`], _false_: [`AsciiDenyList::EMPTY`]; however, the check the WHATWG URL Standard performs right after the UTS 46 invocation corresponds to [`AsciiDenyList::URL`].\n* _Transitional_Processing_ - Always _false_ but could be implemented as a preprocessing step. This flag is deprecated and for Web purposes the transition is over in the sense that all of Firefox, Safari, or Chrome set this flag to _false_.\n* _VerifyDnsLength_ - _true_: [`DnsLength::Verify`], _false_: [`DnsLength::Ignore`]; the WHATWG URL Standard sets this to _false_ for normal (non-conformance-checker) user agents.\n* _IgnoreInvalidPunycode_ - Always _false_; cannot be configured. (Not yet covered by the WHATWG URL Standard, but 2 out of 3 major browser clearly behave as if this was _false_).","links":{"`Hyphens::Allow`":"0:310:2409","`Hyphens::Check`":"0:314:2429","`AsciiDenyList::EMPTY`":"0:179:2418","`AsciiDenyList::STD3`":"0:180:2428","`DnsLength::Verify`":"0:329:2430","`AsciiDenyList::URL`":"0:181:2922","`Uts46::process`":"0:207:2594","`DnsLength::Ignore`":"0:325:2411"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:299:2381","0:309:2408","0:324:2410","0:339:2597","0:352:2599","0:367:2603","0:186:2601","0:188:2382"],"is_stripped":false}}},"1:13642:2417":{"id":"1:13642:2417","crate_id":1,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"1:12870:4245"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:24":{"id":"0:24","crate_id":0,"name":null,"span":{"filename":"src/deprecated.rs","begin":[155,0],"end":[248,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Config","id":"0:257:2384","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:25:2609","0:26:2593","0:27:2601","0:28:2610","0:29:2633","0:32:2407","0:34:2441"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:32824:3363-0:299:2381":{"id":"a:1:32824:3363-0:299:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32824:3363","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:3945:1863":{"id":"1:3945:1863","crate_id":1,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"1:40249:7736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13731:36514":{"id":"1:13731:36514","crate_id":1,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:243:857":{"id":"0:243:857","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[69,4],"end":[71,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["e",{"resolved_path":{"name":"Errors","id":"0:400:2387","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42666:237","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Errors","id":"0:400:2387","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2807-0:309:2408":{"id":"b:1:2807-0:309:2408","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"1:3295:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2802:3847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2408","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2809:28253"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3092-0:367:2603":{"id":"b:1:3092-0:367:2603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3051:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3095:149","1:3096:1848"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3087-0:253:2385":{"id":"b:1:3087-0:253:2385","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3057:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:253:2385","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3090:149","1:3091:1850"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}}},"paths":{"17:10516:23041":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"4:11838:9622":{"crate_id":4,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"17:16613:6012":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"22:5102:3648":{"crate_id":22,"path":["icu_properties","provider","IndicSyllabicCategoryValueToShortNameV1Marker"],"kind":"struct"},"17:16507:5998":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"17:16362:6626":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"34:374:4840":{"crate_id":34,"path":["litemap","map","LiteMap"],"kind":"struct"},"1:11652:4049":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"32:994:27502":{"crate_id":32,"path":["zerovec","varzerovec","components","VarZeroVecFormat"],"kind":"trait"},"22:5053:3641":{"crate_id":22,"path":["icu_properties","provider","WordBreakValueToLongNameV1Marker"],"kind":"struct"},"6:4829:8805":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"1:41072:7742":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"18:538:4914":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"17:14084:6049":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"1:4564:7627":{"crate_id":1,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:23298:5189":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:47460:7932":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"23:982:3474":{"crate_id":23,"path":["icu_provider","response","DataResponseMetadata"],"kind":"struct"},"22:4948:3626":{"crate_id":22,"path":["icu_properties","provider","EastAsianWidthV1Marker"],"kind":"struct"},"17:12537:5881":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"6:517:8593":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"1:2403:7624":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"17:14483:6136":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"4:3668:33353":{"crate_id":4,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"6:5088:8934":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"1:5389:452":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"4:9452:7473":{"crate_id":4,"path":["std","sync","rwlock","MappedRwLockWriteGuard"],"kind":"struct"},"22:4969:3629":{"crate_id":22,"path":["icu_properties","provider","EastAsianWidthValueToLongNameV1Marker"],"kind":"struct"},"1:41740:7657":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:4696:5171":{"crate_id":1,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"17:13871:4974":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"22:4430:3552":{"crate_id":22,"path":["icu_properties","provider","DefaultIgnorableCodePointV1Marker"],"kind":"struct"},"6:4990:8892":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"6:5325:9006":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"1:41273:7756":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"16:6713:6890":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"17:12234:5829":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"22:1201:2776":{"crate_id":22,"path":["icu_properties","props","BidiClass"],"kind":"struct"},"17:16728:6718":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"1:40000:4312":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"4:4939:15869":{"crate_id":4,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"17:12392:5847":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"17:16668:6702":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"23:947:3472":{"crate_id":23,"path":["icu_provider","request","DataRequestMetadata"],"kind":"struct"},"17:15989:6510":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"6:5341:9010":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"17:14640:6157":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"37:536:4828":{"crate_id":37,"path":["icu_locid_transform","provider","canonicalizer","AliasesV2"],"kind":"struct"},"4:11012:7426":{"crate_id":4,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"4:5879:7451":{"crate_id":4,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"6:7577:9547":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"4:6537:231":{"crate_id":4,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"1:43246:3337":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"17:16520:6651":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"29:786:5448":{"crate_id":29,"path":["icu_locid","parser","SubtagIterator"],"kind":"struct"},"29:1564:4868":{"crate_id":29,"path":["icu_locid","subtags","language","Language"],"kind":"struct"},"6:5488:9084":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"32:2364:27503":{"crate_id":32,"path":["zerovec","flexzerovec","vec","FlexZeroVec"],"kind":"enum"},"17:14327:6109":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"17:15753:6451":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"17:16283:6606":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"4:9746:7491":{"crate_id":4,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"17:10368:23036":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"17:15010:6237":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"4:507:33228":{"crate_id":4,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"22:1054:5502":{"crate_id":22,"path":["icu_properties","props","PropertyValueNameToEnumMapperBorrowed"],"kind":"struct"},"22:4836:3610":{"crate_id":22,"path":["icu_properties","provider","GeneralCategoryV1Marker"],"kind":"struct"},"5:7695:3290":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"6:479:8568":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"17:14750:6188":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"16:6084:6815":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"5:281:36257":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"5:2347:37415":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"4:11363:9614":{"crate_id":4,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"16:2660:6754":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"1:42627:3728":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:3054:156":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"1:13344:4241":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:43504:7132":{"crate_id":1,"path":["core","fmt","rt","Flag"],"kind":"enum"},"17:15024:6238":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"22:4451:3555":{"crate_id":22,"path":["icu_properties","provider","EmojiComponentV1Marker"],"kind":"struct"},"34:339:27510":{"crate_id":34,"path":["litemap","store","StoreMut"],"kind":"trait"},"17:11788:5791":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"1:47083:7892":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"4:4311:9942":{"crate_id":4,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"16:8711:7173":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"1:47635:7941":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"6:6599:9293":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"6:5586:9117":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"14:202:3280":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"4:11909:7427":{"crate_id":4,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"4:8583:15851":{"crate_id":4,"path":["std","net","Shutdown"],"kind":"enum"},"6:5507:9091":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"1:41264:7638":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"4:11248:5134":{"crate_id":4,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"6:4842:8815":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"11:2366:7282":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"22:4913:3621":{"crate_id":22,"path":["icu_properties","provider","ScriptValueToLongNameV1Marker"],"kind":"struct"},"4:8255:5131":{"crate_id":4,"path":["std","hash","random","RandomState"],"kind":"struct"},"6:5375:9022":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"17:10394:23037":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"17:11281:5751":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"15:306:9922":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"22:4885:3617":{"crate_id":22,"path":["icu_properties","provider","BidiClassValueToLongNameV1Marker"],"kind":"struct"},"17:15064:6243":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"1:43580:3345":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"17:15946:6500":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"6:6638:9307":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"17:14375:6119":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"17:12409:23146":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"17:16311:6615":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"6:5139:8938":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"32:1104:4859":{"crate_id":32,"path":["zerovec","varzerovec","owned","VarZeroVecOwned"],"kind":"struct"},"31:226:5432":{"crate_id":31,"path":["tinystr","ascii","TinyAsciiStr"],"kind":"struct"},"22:4395:3547":{"crate_id":22,"path":["icu_properties","provider","ChangesWhenLowercasedV1Marker"],"kind":"struct"},"4:11821:7478":{"crate_id":4,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"1:44626:4256":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:44454:4254":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:10498:2644":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"16:7350:5019":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"1:46485:7840":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"6:8353:9596":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"4:9271:15948":{"crate_id":4,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"17:12673:5889":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"23:312:5464":{"crate_id":23,"path":["icu_provider","response","DataPayloadOr"],"kind":"struct"},"4:3042:7417":{"crate_id":4,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"17:14358:6116":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"5:884:102":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"16:8565:7161":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"29:1409:4878":{"crate_id":29,"path":["icu_locid","extensions","unicode","value","Value"],"kind":"struct"},"17:16399:6633":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"22:4479:3559":{"crate_id":22,"path":["icu_properties","provider","ExtenderV1Marker"],"kind":"struct"},"22:5217:5532":{"crate_id":22,"path":["icu_properties","sets","ErasedSetlikeMarker"],"kind":"struct"},"5:5425:15982":{"crate_id":5,"path":["alloc","rc","UniqueRcUninit"],"kind":"struct"},"31:667:27480":{"crate_id":31,"path":["tinystr","error","TinyStrError"],"kind":"enum"},"4:8635:7549":{"crate_id":4,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"4:9377:32591":{"crate_id":4,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"1:40853:7738":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:41168:7751":{"crate_id":1,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"6:586:8630":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"0:110:2732":{"crate_id":0,"path":["idna","punycode","encode_str"],"kind":"function"},"6:523:8596":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"1:2215:7621":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"29:0:3374":{"crate_id":29,"path":["icu_locid"],"kind":"module"},"4:8643:7542":{"crate_id":4,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"0:329:2430":{"crate_id":0,"path":["idna","uts46","DnsLength","Verify"],"kind":"variant"},"1:10009:92":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:15:3233":{"crate_id":1,"path":["core","write"],"kind":"macro"},"0:324:2410":{"crate_id":0,"path":["idna","uts46","DnsLength"],"kind":"enum"},"16:7159:6951":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"1:44250:4063":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"6:559:8616":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"1:24094:247":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"16:4152:6783":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"16:2415:4209":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"1:10563:3336":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:3341:3362":{"crate_id":1,"path":["core","marker","FnPtr"],"kind":"trait"},"1:13024:4264":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"17:15896:6485":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"17:0:3266":{"crate_id":17,"path":["object"],"kind":"module"},"1:42714:4046":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"1:46538:7843":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"17:14821:6202":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"37:793:4829":{"crate_id":37,"path":["icu_locid_transform","provider","fallback","LocaleFallbackLikelySubtagsV1"],"kind":"struct"},"23:896:4894":{"crate_id":23,"path":["icu_provider","key","DataKeyMetadata"],"kind":"struct"},"17:15573:6416":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"4:1635:7276":{"crate_id":4,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"4:630:15745":{"crate_id":4,"path":["std","ascii","AsciiExt"],"kind":"trait"},"32:1658:27498":{"crate_id":32,"path":["zerovec","ule","encode","EncodeAsVarULE"],"kind":"trait"},"17:15641:6425":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"1:8888:161":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"22:4857:3613":{"crate_id":22,"path":["icu_properties","provider","GeneralCategoryValueToLongNameV1Marker"],"kind":"struct"},"17:16187:6580":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"4:2496:15803":{"crate_id":4,"path":["std","fs","read_link"],"kind":"function"},"1:42903:88":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"29:671:4869":{"crate_id":29,"path":["icu_locid","langid","LanguageIdentifier"],"kind":"struct"},"1:3181:4320":{"crate_id":1,"path":["core","error","Request"],"kind":"struct"},"17:12028:5807":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"17:10097:23027":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"11:785:5117":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"4:4943:15872":{"crate_id":4,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"17:12371:4956":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"29:866:38265":{"crate_id":29,"path":["icu_locid","shortvec","ShortBoxSliceIntoIterInner"],"kind":"enum"},"4:8363:5153":{"crate_id":4,"path":["std","io","error","Custom"],"kind":"struct"},"4:7839:8028":{"crate_id":4,"path":["std","panicking","rust_panic_without_hook","RewrapBox"],"kind":"struct"},"1:11246:29167":{"crate_id":1,"path":["core","slice","sort","shared","smallsort","CopyOnDrop"],"kind":"struct"},"5:6930:36257":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"6:6770:9354":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"5:6560:15951":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"14:187:22051":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"1:41771:7765":{"crate_id":1,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"23:994:5483":{"crate_id":23,"path":["icu_provider","response","Cart"],"kind":"struct"},"5:2294:5121":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"5:3342:37470":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"17:14997:6236":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"15:288:9918":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"17:13781:5999":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"17:15939:6499":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"22:5177:5529":{"crate_id":22,"path":["icu_properties","script","ScriptExtensionsSet"],"kind":"struct"},"11:685:4046":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"1:44229:4055":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:4630:10308":{"crate_id":1,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"1:43475:3344":{"crate_id":1,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"17:14312:6107":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV2"],"kind":"struct"},"11:1049:7268":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"16:7883:5015":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"20:601:3427":{"crate_id":20,"path":["icu_normalizer","IgnorableBehavior"],"kind":"enum"},"1:10818:5184":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"17:12687:5893":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"17:11617:5750":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"4:10974:7588":{"crate_id":4,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"4:5020:15868":{"crate_id":4,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"40:349:3664":{"crate_id":40,"path":["smallvec","ToSmallVec"],"kind":"trait"},"0:250:2427":{"crate_id":0,"path":["idna","domain_to_ascii_strict"],"kind":"function"},"17:13733:5984":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"22:4486:3560":{"crate_id":22,"path":["icu_properties","provider","ExtendedPictographicV1Marker"],"kind":"struct"},"22:4465:3557":{"crate_id":22,"path":["icu_properties","provider","EmojiV1Marker"],"kind":"struct"},"20:257:3422":{"crate_id":20,"path":["icu_normalizer","IsNormalizedSinkUtf16"],"kind":"struct"},"17:11971:5802":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"17:11124:37499":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"17:11465:5765":{"crate_id":17,"path":["object","read","archive","ArchiveSymbolIterator"],"kind":"struct"},"1:44331:4059":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:12851:5911":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"29:1038:4876":{"crate_id":29,"path":["icu_locid","extensions","private","Private"],"kind":"struct"},"16:8267:7113":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"17:11831:4932":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"1:42649:3829":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"4:9425:7461":{"crate_id":4,"path":["std","sync","mutex","MappedMutexGuard"],"kind":"struct"},"1:26494:281":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"22:5243:5535":{"crate_id":22,"path":["icu_properties","sets","UnicodeSetData"],"kind":"struct"},"17:16008:6515":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"18:689:5599":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"17:13014:5927":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"16:2704:6756":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"17:15315:6280":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"16:7990:7099":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"16:7212:6964":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"1:1898:4188":{"crate_id":1,"path":["core","intrinsics","AggregateRawPtr"],"kind":"trait"},"4:11315:9613":{"crate_id":4,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"4:9139:7574":{"crate_id":4,"path":["std","process","CommandArgs"],"kind":"struct"},"17:14393:6120":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"4:2521:15811":{"crate_id":4,"path":["std","fs","exists"],"kind":"function"},"4:599:7395":{"crate_id":4,"path":["std","thread","JoinHandle"],"kind":"struct"},"37:884:3528":{"crate_id":37,"path":["icu_locid_transform","provider","Baked"],"kind":"struct"},"1:3403:10288":{"crate_id":1,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"16:6123:6771":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"1:22568:15814":{"crate_id":1,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"4:12466:918":{"crate_id":4,"path":["std","i16"],"kind":"primitive"},"22:2281:5518":{"crate_id":22,"path":["icu_properties","provider","names","PropertyValueNameToEnumMapV1"],"kind":"struct"},"1:32766:250":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"17:15812:6461":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"1:3576:154":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"4:4825:9459":{"crate_id":4,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"function"},"1:3458:7026":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"5:2172:7360":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"5:888:7352":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"6:5196:8949":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"1:3140:149":{"crate_id":1,"path":["core","error","Error"],"kind":"trait"},"1:34406:10279":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"32:0:3377":{"crate_id":32,"path":["zerovec"],"kind":"module"},"17:13635:5965":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"1:41305:7759":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:45138:4237":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"5:6126:72":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"22:4360:3542":{"crate_id":22,"path":["icu_properties","provider","CaseIgnorableV1Marker"],"kind":"struct"},"4:5650:7447":{"crate_id":4,"path":["std","process","ChildStdout"],"kind":"struct"},"17:11653:5776":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"5:6042:3281":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"6:7391:9466":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"37:675:27545":{"crate_id":37,"path":["icu_locid_transform","provider","expander","LikelySubtagsForScriptRegionV1Marker"],"kind":"struct"},"18:608:5583":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"6:5205:8954":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"22:5060:3642":{"crate_id":22,"path":["icu_properties","provider","SentenceBreakV1Marker"],"kind":"struct"},"1:22040:28936":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"17:16218:6587":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"1:42940:95":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"22:4591:3575":{"crate_id":22,"path":["icu_properties","provider","MathV1Marker"],"kind":"struct"},"5:4369:2725":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"4:6211:7450":{"crate_id":4,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"23:449:3473":{"crate_id":23,"path":["icu_provider","response","DataResponse"],"kind":"struct"},"4:2793:7416":{"crate_id":4,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"17:12920:5915":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"1:23543:7718":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU32Inner"],"kind":"struct"},"6:7548:9531":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"6:6716:9340":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"4:3913:7427":{"crate_id":4,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"22:4500:3562":{"crate_id":22,"path":["icu_properties","provider","GraphemeBaseV1Marker"],"kind":"struct"},"32:2107:27496":{"crate_id":32,"path":["zerovec","ule","SliceAsULE"],"kind":"trait"},"6:4997:8895":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"17:16145:6567":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"1:43534:74":{"crate_id":1,"path":["core","fmt","rt","Argument"],"kind":"struct"},"4:8223:7493":{"crate_id":4,"path":["std","fs","Permissions"],"kind":"struct"},"17:15077:6244":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"4:8249:130":{"crate_id":4,"path":["std","fs","DirBuilder"],"kind":"struct"},"30:189:27467":{"crate_id":30,"path":["writeable","PartsWrite"],"kind":"trait"},"17:14692:6162":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"0:339:2597":{"crate_id":0,"path":["idna","uts46","ErrorPolicy"],"kind":"enum"},"1:33721:10273":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"22:4325:3537":{"crate_id":22,"path":["icu_properties","provider","AlphabeticV1Marker"],"kind":"struct"},"14:31:7251":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"22:1085:5504":{"crate_id":22,"path":["icu_properties","props","PropertyEnumToValueNameSparseMapper"],"kind":"struct"},"6:5186:8942":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"1:43765:168":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"17:13361:5948":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"34:316:27506":{"crate_id":34,"path":["litemap","store","StoreConstEmpty"],"kind":"trait"},"4:1626:3281":{"crate_id":4,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"4:12423:15751":{"crate_id":4,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"1:11695:4066":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"17:10793:5735":{"crate_id":17,"path":["object","read","read_cache","ReadCacheRange"],"kind":"struct"},"22:3715:3530":{"crate_id":22,"path":["icu_properties","provider","PropertyCodePointMapV1"],"kind":"enum"},"28:0:3373":{"crate_id":28,"path":["zerofrom_derive"],"kind":"module"},"11:364:9930":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"1:30884:10157":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"1:22086:28926":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:40134:223":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"6:5482:9083":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"22:1733:8526":{"crate_id":22,"path":["icu_properties","props","GraphemeClusterBreakULE"],"kind":"struct"},"6:1696:8760":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"18:659:5590":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:44374:3292":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"1:7917:9950":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"14:165:22044":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"1:45154:5186":{"crate_id":1,"path":["core","time","Nanoseconds"],"kind":"struct"},"19:0:1323":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"1:46648:7857":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"0:355:2602":{"crate_id":0,"path":["idna","uts46","ProcessingSuccess","WroteToSink"],"kind":"variant"},"1:40242:7735":{"crate_id":1,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"4:3350:7418":{"crate_id":4,"path":["std","io","stdio","Stdin"],"kind":"struct"},"4:2732:10396":{"crate_id":4,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"1:41296:7640":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:43492:9707":{"crate_id":1,"path":["core","fmt","rt","Count"],"kind":"enum"},"17:15777:6455":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"16:2966:6768":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"29:1702:3498":{"crate_id":29,"path":["icu_locid","subtags","script","Script"],"kind":"struct"},"22:4668:3586":{"crate_id":22,"path":["icu_properties","provider","RadicalV1Marker"],"kind":"struct"},"1:47121:7894":{"crate_id":1,"path":["core","core_arch","simd","m8x32"],"kind":"struct"},"3:0:3256":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"4:9442:246":{"crate_id":4,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"4:11886:9948":{"crate_id":4,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"4:9739:150":{"crate_id":4,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"1:23598:7723":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI16Inner"],"kind":"struct"},"16:2590:6751":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"4:8572:7542":{"crate_id":4,"path":["std","net","tcp","Incoming"],"kind":"struct"},"16:2530:6748":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"16:5417:6809":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"16:6408:6851":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"16:4810:6790":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"6:5179:8941":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"22:5262:5537":{"crate_id":22,"path":["icu_properties","sets","UnicodeSetDataBorrowed"],"kind":"struct"},"17:15919:6493":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"1:47216:7897":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:46876:7869":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:7968:10342":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"5:39:3320":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"42:89:3675":{"crate_id":42,"path":["utf8_iter","report","ErrorReportingUtf8Chars"],"kind":"struct"},"1:44554:4257":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"22:4955:3627":{"crate_id":22,"path":["icu_properties","provider","EastAsianWidthNameToValueV1Marker"],"kind":"struct"},"4:2480:4901":{"crate_id":4,"path":["std","fs","metadata"],"kind":"function"},"1:47740:7954":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"16:8598:7165":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"32:1186:5414":{"crate_id":32,"path":["zerovec","varzerovec","slice","VarZeroSlice"],"kind":"struct"},"17:12176:5822":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"22:2136:2779":{"crate_id":22,"path":["icu_properties","props","JoiningType"],"kind":"struct"},"36:475:5383":{"crate_id":36,"path":["icu_collections","codepointinvlist","cpinvlist","CodePointInversionList"],"kind":"struct"},"22:3661:5524":{"crate_id":22,"path":["icu_properties","provider","bidi_data","MirroredPairedBracketDataULE"],"kind":"struct"},"1:4050:3281":{"crate_id":1,"path":["core","array","drain","Drain"],"kind":"struct"},"1:42755:90":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:46988:7889":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"6:6480:9222":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"11:0:3261":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"18:598:37509":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"20:428:3437":{"crate_id":20,"path":["icu_normalizer","provider","Uts46DecompositionSupplementV1Marker"],"kind":"struct"},"1:3400:10287":{"crate_id":1,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"1:7096:7648":{"crate_id":1,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"16:4929:6794":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"17:13266:23043":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"17:13757:5998":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"5:7604:3324":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"17:12798:23170":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"22:4311:3535":{"crate_id":22,"path":["icu_properties","provider","AsciiHexDigitV1Marker"],"kind":"struct"},"1:45421:191":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"40:0:2445":{"crate_id":40,"path":["smallvec"],"kind":"module"},"4:380:7390":{"crate_id":4,"path":["std","thread","scoped","Scope"],"kind":"struct"},"1:43520:28504":{"crate_id":1,"path":["core","fmt","rt","ArgumentType"],"kind":"enum"},"17:13169:5935":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"9:176:5105":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"6:5044:8920":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"1:46439:7837":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:40112:221":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"22:4549:3569":{"crate_id":22,"path":["icu_properties","provider","IdStartV1Marker"],"kind":"struct"},"1:23005:10245":{"crate_id":1,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","with_exposed_provenance"],"kind":"function"},"16:5709:22966":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"17:13909:6013":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"6:6758:9352":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"23:645:3468":{"crate_id":23,"path":["icu_provider","marker","DataMarker"],"kind":"trait"},"11:2440:3281":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"4:6952:244":{"crate_id":4,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"6:8261:9575":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"40:164:38969":{"crate_id":40,"path":["smallvec","insert_many","DropOnPanic"],"kind":"struct"},"17:12711:5895":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"6:5349:9011":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"1:3300:260":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"1:2142:1393":{"crate_id":1,"path":["core","ptr"],"kind":"module"},"1:45031:4244":{"crate_id":1,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"6:1489:8634":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"16:6239:5028":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"6:473:8565":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"5:4162:36257":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"16:3048:22108":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"5:7262:36259":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"22:3557:5522":{"crate_id":22,"path":["icu_properties","provider","bidi_data","BidiAuxiliaryPropertiesV1"],"kind":"struct"},"6:4902:8850":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"22:2188:5513":{"crate_id":22,"path":["icu_properties","bidi_data","BidiMirroringProperties"],"kind":"struct"},"1:47672:7944":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:14259:7693":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"4:1641:7277":{"crate_id":4,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"1:14105:7689":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"17:11432:23055":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"20:334:2772":{"crate_id":20,"path":["icu_normalizer","properties","CanonicalCombiningClassMap"],"kind":"struct"},"4:5865:231":{"crate_id":4,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"16:7223:6965":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"16:6625:6882":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"22:4402:3548":{"crate_id":22,"path":["icu_properties","provider","ChangesWhenTitlecasedV1Marker"],"kind":"struct"},"22:4696:3590":{"crate_id":22,"path":["icu_properties","provider","CaseSensitiveV1Marker"],"kind":"struct"},"6:6902:9397":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"1:4486:9608":{"crate_id":1,"path":["core","array","Guard"],"kind":"struct"},"36:316:9905":{"crate_id":36,"path":["icu_collections","codepointtrie","cptrie","CodePointMapRangeIterator"],"kind":"struct"},"16:8626:7166":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"1:42356:5323":{"crate_id":1,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"16:6421:5007":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"5:5972:264":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"4:8196:5679":{"crate_id":4,"path":["std","fs","Metadata"],"kind":"struct"},"1:45118:4231":{"crate_id":1,"path":["core","str","LinesMap"],"kind":"struct"},"1:3517:10293":{"crate_id":1,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"1:22:842":{"crate_id":1,"path":["core","format_args"],"kind":"macro"},"4:2020:810":{"crate_id":4,"path":["std","ffi"],"kind":"module"},"9:236:7781":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"16:7838:22976":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"1:6907:7641":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:4854:7630":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:46971:7888":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"6:5366:9016":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:0:582":{"crate_id":1,"path":["core"],"kind":"module"},"4:8649:7550":{"crate_id":4,"path":["std","os","unix","net","ucred","UCred"],"kind":"struct"},"6:6623:9305":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"17:10861:150":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"36:0:3381":{"crate_id":36,"path":["icu_collections"],"kind":"module"},"23:553:3458":{"crate_id":23,"path":["icu_provider","any","AsDowncastingAnyProvider"],"kind":"trait"},"11:488:165":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"17:14072:6046":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"22:4514:3564":{"crate_id":22,"path":["icu_properties","provider","GraphemeLinkV1Marker"],"kind":"struct"},"30:96:38271":{"crate_id":30,"path":["writeable","testing","TestWriter"],"kind":"struct"},"1:45126:4236":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:11914:4052":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"17:12191:5824":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"17:14031:6036":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"18:113:9914":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"1:42658:4311":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"6:6882:9383":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"0:400:2387":{"crate_id":0,"path":["idna","Errors"],"kind":"struct"},"4:1619:2725":{"crate_id":4,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"1:42440:28361":{"crate_id":1,"path":["core","net","parser","AddrKind"],"kind":"enum"},"4:4177:15858":{"crate_id":4,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"17:10487:23040":{"crate_id":17,"path":["object","common","RelocationFlags"],"kind":"enum"},"4:5114:15901":{"crate_id":4,"path":["std","os","net","linux_ext","socket","UnixSocketExt"],"kind":"trait"},"17:11958:5801":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"17:15351:6311":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"7:32:21946":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"4:11563:33211":{"crate_id":4,"path":["std","sys","sync","once","futex","CompletionGuard"],"kind":"struct"},"6:7487:9489":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"4:938:3281":{"crate_id":4,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"16:3834:6781":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"22:4577:3573":{"crate_id":22,"path":["icu_properties","provider","LogicalOrderExceptionV1Marker"],"kind":"struct"},"1:38787:10284":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:46663:7858":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"4:8010:15814":{"crate_id":4,"path":["std","sealed","Sealed"],"kind":"trait"},"4:9156:5134":{"crate_id":4,"path":["std","process","ExitStatus"],"kind":"struct"},"6:4929:8865":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"1:23282:5166":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"11:2121:7011":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"1:42462:7778":{"crate_id":1,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"22:2041:3496":{"crate_id":22,"path":["icu_properties","props","IndicSyllabicCategory"],"kind":"struct"},"32:2591:5426":{"crate_id":32,"path":["zerovec","ule","plain","RawBytesULE"],"kind":"struct"},"18:491:5572":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"1:22991:15555":{"crate_id":1,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"11:2137:7267":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"6:1500:8639":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"4:6600:197":{"crate_id":4,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"17:14933:6217":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"4:11000:7594":{"crate_id":4,"path":["std","sys","pal","unix","fs","Mode"],"kind":"struct"},"5:725:7351":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"6:6876:9382":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"17:15090:6245":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"5:1414:7272":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"1:40249:7736":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"4:9190:2725":{"crate_id":4,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"16:2880:6764":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"6:6462:9212":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"6:6748:9345":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"11:351:9927":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"4:2508:15809":{"crate_id":4,"path":["std","fs","read_dir"],"kind":"function"},"17:15602:6424":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"32:2336:3527":{"crate_id":32,"path":["zerovec","error","ZeroVecError"],"kind":"enum"},"32:2785:5419":{"crate_id":32,"path":["zerovec","ule","unvalidated","UnvalidatedStr"],"kind":"struct"},"1:3408:10289":{"crate_id":1,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"17:11527:5770":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"1:40922:3963":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"22:5081:3645":{"crate_id":22,"path":["icu_properties","provider","SentenceBreakValueToLongNameV1Marker"],"kind":"struct"},"22:1070:5503":{"crate_id":22,"path":["icu_properties","props","ErasedEnumToValueNameSparseMapV1Marker"],"kind":"struct"},"16:6462:22970":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"22:1146:5509":{"crate_id":22,"path":["icu_properties","props","ErasedEnumToValueNameLinearTiny4MapV1Marker"],"kind":"struct"},"16:6696:6888":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"11:1893:3321":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"6:1597:8696":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"16:2684:6755":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"17:12869:5951":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"1:43787:5329":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"17:15997:6511":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"1:42514:7671":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"22:5130:3652":{"crate_id":22,"path":["icu_properties","provider","JoiningTypeValueToShortNameV1Marker"],"kind":"struct"},"23:308:3469":{"crate_id":23,"path":["icu_provider","response","DataPayload"],"kind":"struct"},"16:7168:6952":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"22:2184:5512":{"crate_id":22,"path":["icu_properties","bidi_data","BidiAuxiliaryProperties"],"kind":"struct"},"36:746:149":{"crate_id":36,"path":["icu_collections","codepointtrie","error","Error"],"kind":"enum"},"32:2114:37611":{"crate_id":32,"path":["zerovec","ule","VarULE","parse_byte_slice"],"kind":"function"},"1:43777:7781":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"18:735:27229":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"40:118:2700":{"crate_id":40,"path":["smallvec","SmallVec"],"kind":"struct"},"16:3587:6779":{"crate_id":16,"path":["gimli","arch","MIPS"],"kind":"struct"},"15:327:5080":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"18:80:9910":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"36:382:3439":{"crate_id":36,"path":["icu_collections","char16trie","trie","Char16Trie"],"kind":"struct"},"16:7731:3723":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"23:965:3467":{"crate_id":23,"path":["icu_provider","request","DataLocale"],"kind":"struct"},"18:670:5596":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"0:342:2607":{"crate_id":0,"path":["idna","uts46","ErrorPolicy","MarkErrors"],"kind":"variant"},"1:9683:3287":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"17:12044:5812":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"1:42570:4046":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"17:16786:6731":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"1:41326:7647":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"22:1092:5505":{"crate_id":22,"path":["icu_properties","props","PropertyEnumToValueNameSparseMapperBorrowed"],"kind":"struct"},"17:12826:5903":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"4:4211:15859":{"crate_id":4,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"4:4902:15881":{"crate_id":4,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"0:310:2409":{"crate_id":0,"path":["idna","uts46","Hyphens","Allow"],"kind":"variant"},"1:32854:3364":{"crate_id":1,"path":["core","marker","Tuple"],"kind":"trait"},"1:23332:28351":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"17:12736:5897":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"22:4773:3601":{"crate_id":22,"path":["icu_properties","provider","ExemplarCharactersMainV1Marker"],"kind":"struct"},"5:1538:4046":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"5:6284:9608":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"4:12456:1729":{"crate_id":4,"path":["std","slice"],"kind":"primitive"},"20:303:3481":{"crate_id":20,"path":["icu_normalizer","properties","CanonicalComposition"],"kind":"struct"},"1:42496:7668":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"1:14080:216":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"4:4941:15871":{"crate_id":4,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"17:12225:5828":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"4:679:7396":{"crate_id":4,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"1:13338:4242":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"17:16832:6022":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"17:11016:5747":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"4:9447:7472":{"crate_id":4,"path":["std","sync","rwlock","MappedRwLockReadGuard"],"kind":"struct"},"4:7495:9946":{"crate_id":4,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"5:1594:7273":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"5:3865:7359":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"30:8:38277":{"crate_id":30,"path":["writeable","cmp","WriteComparator"],"kind":"struct"},"17:12699:5894":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"17:15953:6501":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"4:8260:5130":{"crate_id":4,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"22:1610:8524":{"crate_id":22,"path":["icu_properties","props","EastAsianWidthULE"],"kind":"struct"},"1:22940:15554":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"24:185:5456":{"crate_id":24,"path":["yoke","yoke","Yoke"],"kind":"struct"},"4:8097:15785":{"crate_id":4,"path":["std","env","VarError"],"kind":"enum"},"6:5622:9138":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"6:5450:9063":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"6:6659:9319":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"22:4710:3592":{"crate_id":22,"path":["icu_properties","provider","TerminalPunctuationV1Marker"],"kind":"struct"},"1:33993:3276":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:47710:7952":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"5:5575:15985":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"6:8273:9577":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"4:5872:7450":{"crate_id":4,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"22:4738:3596":{"crate_id":22,"path":["icu_properties","provider","WhiteSpaceV1Marker"],"kind":"struct"},"17:15475:6403":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"6:4947:8873":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"1:43795:5330":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"16:4873:6792":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"25:7:27443":{"crate_id":25,"path":["stable_deref_trait","CloneStableDeref"],"kind":"trait"},"1:45130:4235":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:44687:4260":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"17:14612:6153":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"16:7542:7010":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"34:357:27512":{"crate_id":34,"path":["litemap","store","StoreIterableMut"],"kind":"trait"},"4:7951:33220":{"crate_id":4,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"17:13570:23046":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"29:1013:5452":{"crate_id":29,"path":["icu_locid","extensions","private","other","Subtag"],"kind":"struct"},"5:2584:9601":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"1:14316:163":{"crate_id":1,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"17:13028:5929":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"17:12550:5883":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"17:10418:23038":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"1:12854:4038":{"crate_id":1,"path":["core","slice","GetManyMutError"],"kind":"struct"},"22:5095:3647":{"crate_id":22,"path":["icu_properties","provider","IndicSyllabicCategoryNameToValueV1Marker"],"kind":"struct"},"17:3720:5624":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"16:5689:6812":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"34:0:3379":{"crate_id":34,"path":["litemap"],"kind":"module"},"16:2724:6757":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"6:1551:8667":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"18:573:5573":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"6:6731:9342":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"6:1667:8749":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"1:43980:9708":{"crate_id":1,"path":["core","slice","sort","stable","drift","DriftsortRun"],"kind":"struct"},"16:8058:7101":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"17:11864:5798":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"1:46506:7841":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"24:19:27435":{"crate_id":24,"path":["yoke","cartable_ptr","CartablePointerLike"],"kind":"trait"},"17:15701:6434":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"22:5011:3635":{"crate_id":22,"path":["icu_properties","provider","GraphemeClusterBreakNameToValueV1Marker"],"kind":"struct"},"17:16739:6723":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"1:31552:3859":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"22:1545:8523":{"crate_id":22,"path":["icu_properties","props","HangulSyllableTypeULE"],"kind":"struct"},"22:5032:3638":{"crate_id":22,"path":["icu_properties","provider","WordBreakV1Marker"],"kind":"struct"},"18:643:5573":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"1:40212:4039":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"17:14963:6223":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"17:16241:6600":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"4:5105:15900":{"crate_id":4,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"1:11456:251":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"16:8014:5068":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"17:11515:5768":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"1:46777:7864":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:3048:77":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"4:12069:33222":{"crate_id":4,"path":["std","backtrace_rs","backtrace","libunwind","Bomb"],"kind":"struct"},"11:1880:2725":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"16:7358:5062":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"16:2860:6763":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"29:1466:27460":{"crate_id":29,"path":["icu_locid","extensions","ExtensionType"],"kind":"enum"},"32:1484:4861":{"crate_id":32,"path":["zerovec","zerovec","ZeroVec"],"kind":"struct"},"43:5:3449":{"crate_id":43,"path":["write16","Write16"],"kind":"trait"},"1:41226:5176":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"17:10663:4947":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"16:8320:22979":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"4:967:7260":{"crate_id":4,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"17:14902:6212":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"1:45437:7820":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"17:506:5614":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"17:15418:6366":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"17:12149:5820":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"17:14886:6210":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"22:3816:3533":{"crate_id":22,"path":["icu_properties","provider","ScriptWithExtensionsPropertyV1"],"kind":"struct"},"39:0:3384":{"crate_id":39,"path":["icu_properties_data"],"kind":"module"},"5:7640:3324":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"17:11421:5762":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"6:8319:9589":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"1:40951:3955":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"17:13349:4963":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"1:40080:3317":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"1:23576:7721":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroUsizeInner"],"kind":"struct"},"1:45000:7806":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:46762:7863":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:44965:7801":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"22:3793:3532":{"crate_id":22,"path":["icu_properties","provider","ScriptWithExtensionsPropertyV1Marker"],"kind":"struct"},"20:498:3447":{"crate_id":20,"path":["icu_normalizer","provider","DecompositionTablesV1"],"kind":"struct"},"1:12484:4068":{"crate_id":1,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"17:14533:5853":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"6:5230:8965":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"1:44786:10411":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"11:2301:7011":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"4:9768:130":{"crate_id":4,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"4:8235:151":{"crate_id":4,"path":["std","fs","FileType"],"kind":"struct"},"4:1932:7407":{"crate_id":4,"path":["std","env","ArgsOs"],"kind":"struct"},"23:924:3471":{"crate_id":23,"path":["icu_provider","request","DataRequest"],"kind":"struct"},"16:5144:6800":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"16:6588:6881":{"crate_id":16,"path":["gimli","read","cfi","UnwindExpression"],"kind":"struct"},"4:1491:167":{"crate_id":4,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"1:8526:2729":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"4:2331:5733":{"crate_id":4,"path":["std","fs","read"],"kind":"function"},"24:249:27431":{"crate_id":24,"path":["yoke","yoke","CloneableCart"],"kind":"trait"},"4:3077:149":{"crate_id":4,"path":["std","io","error","Error"],"kind":"struct"},"17:16642:6696":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"1:10770:164":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"17:583:5615":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"6:5520:9092":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"4:5736:7449":{"crate_id":4,"path":["std","process","Stdio"],"kind":"struct"},"4:4362:9945":{"crate_id":4,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"1:11886:4051":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"22:4381:3545":{"crate_id":22,"path":["icu_properties","provider","ChangesWhenCasemappedV1Marker"],"kind":"struct"},"5:2815:9604":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"5:3363:7279":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"4:11147:33234":{"crate_id":4,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"0:309:2408":{"crate_id":0,"path":["idna","uts46","Hyphens"],"kind":"enum"},"7:0:1945":{"crate_id":7,"path":["unwind"],"kind":"module"},"1:32824:3363":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"1:44990:7802":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"37:669:5368":{"crate_id":37,"path":["icu_locid_transform","provider","expander","LikelySubtagsForLanguageV1"],"kind":"struct"},"32:2106:27495":{"crate_id":32,"path":["zerovec","ule","EqULE"],"kind":"trait"},"4:4149:15855":{"crate_id":4,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"1:10559:3334":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"17:14220:6071":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"11:430:9934":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"1:11928:4048":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"40:57:3281":{"crate_id":40,"path":["smallvec","Drain"],"kind":"struct"},"5:211:7350":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"17:14845:6205":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"5:7620:5129":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"16:2950:6767":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"17:16798:6734":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"6:5670:9158":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"1:44390:4248":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:2652:694":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:45460:7821":{"crate_id":1,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"17:2378:23101":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"4:8824:7567":{"crate_id":4,"path":["std","path","PrefixComponent"],"kind":"struct"},"5:4207:4046":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"22:4605:3577":{"crate_id":22,"path":["icu_properties","provider","NfcInertV1Marker"],"kind":"struct"},"36:509:27521":{"crate_id":36,"path":["icu_collections","codepointinvlist","CodePointInversionListError"],"kind":"enum"},"1:41067:107":{"crate_id":1,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:44289:4062":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"17:13193:5937":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"20:573:5547":{"crate_id":20,"path":["icu_normalizer","provider","NonRecursiveDecompositionSupplementV1"],"kind":"struct"},"22:3680:3529":{"crate_id":22,"path":["icu_properties","provider","PropertyCodePointSetV1"],"kind":"enum"},"32:1865:5418":{"crate_id":32,"path":["zerovec","ule","option","OptionVarULE"],"kind":"struct"},"17:12018:5806":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"4:2498:15804":{"crate_id":4,"path":["std","fs","canonicalize"],"kind":"function"},"4:10963:7492":{"crate_id":4,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"1:22902:15553":{"crate_id":1,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"1:7102:9630":{"crate_id":1,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"5:3850:5155":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"4:12465:936":{"crate_id":4,"path":["std","i8"],"kind":"primitive"},"4:8694:7434":{"crate_id":4,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"1:45150:4233":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"37:406:5354":{"crate_id":37,"path":["icu_locid_transform","fallback","LocaleFallbackIteratorInner"],"kind":"struct"},"6:5282:8992":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"1:22954:10245":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_exposed_provenance"],"kind":"function"},"4:768:165":{"crate_id":4,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"5:1122:36257":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"17:12319:5842":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"16:0:3265":{"crate_id":16,"path":["gimli"],"kind":"module"},"11:2539:8547":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"1:32742:7731":{"crate_id":1,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"37:326:4810":{"crate_id":37,"path":["icu_locid_transform","directionality","LocaleDirectionality"],"kind":"struct"},"1:32731:7730":{"crate_id":1,"path":["core","error","private","Internal"],"kind":"struct"},"22:4703:3591":{"crate_id":22,"path":["icu_properties","provider","SentenceTerminalV1Marker"],"kind":"struct"},"17:12762:5899":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"22:4899:3619":{"crate_id":22,"path":["icu_properties","provider","ScriptNameToValueV1Marker"],"kind":"struct"},"1:45324:175":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"17:16332:6621":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"16:7907:7085":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"1:2859:146":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"6:5295:8997":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"4:8617:7430":{"crate_id":4,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"17:14975:6225":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"11:2559:8551":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"1:34752:10281":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"37:0:3382":{"crate_id":37,"path":["icu_locid_transform"],"kind":"module"},"17:667:5616":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"20:550:3484":{"crate_id":20,"path":["icu_normalizer","provider","NonRecursiveDecompositionSupplementV1Marker"],"kind":"struct"},"4:3075:237":{"crate_id":4,"path":["std","io","error","Result"],"kind":"type_alias"},"17:13385:4964":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"16:3141:5635":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"4:12451:490":{"crate_id":4,"path":["std","char"],"kind":"primitive"},"4:3352:7419":{"crate_id":4,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"16:7554:22975":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"6:5117:8936":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"6:6526:9244":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"17:13491:5953":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"1:44979:10412":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"4:9351:5142":{"crate_id":4,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"22:4647:3583":{"crate_id":22,"path":["icu_properties","provider","PrependedConcatenationMarkV1Marker"],"kind":"struct"},"32:2540:5425":{"crate_id":32,"path":["zerovec","ule","multi","MultiFieldsULE"],"kind":"struct"},"11:2323:7267":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"1:11446:15814":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"6:6449:9211":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"4:575:15735":{"crate_id":4,"path":["std","thread","Packet"],"kind":"struct"},"30:0:3375":{"crate_id":30,"path":["writeable"],"kind":"module"},"1:46631:7856":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"6:5007:8902":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"1:3564:3679":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:2766:103":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"4:6434:5143":{"crate_id":4,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"17:16714:6715":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"11:2380:2725":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"17:16132:6561":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"22:5025:3637":{"crate_id":22,"path":["icu_properties","provider","GraphemeClusterBreakValueToLongNameV1Marker"],"kind":"struct"},"17:11075:37505":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"1:23390:28335":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"20:408:3436":{"crate_id":20,"path":["icu_normalizer","provider","DecompositionDataV1"],"kind":"struct"},"17:13222:23042":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"22:969:3504":{"crate_id":22,"path":["icu_properties","maps","ErasedMaplikeMarker"],"kind":"struct"},"4:439:196":{"crate_id":4,"path":["std","thread","local","LocalKey"],"kind":"struct"},"38:0:3383":{"crate_id":38,"path":["icu_locid_transform_data"],"kind":"module"},"0:312:2637":{"crate_id":0,"path":["idna","uts46","Hyphens","CheckFirstLast"],"kind":"variant"},"4:3446:7422":{"crate_id":4,"path":["std","io","stdio","Stderr"],"kind":"struct"},"1:22177:15468":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"5:7899:3322":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"32:2550:4863":{"crate_id":32,"path":["zerovec","ule","niche","NichedOption"],"kind":"struct"},"4:7180:15950":{"crate_id":4,"path":["std","std_float","StdFloat"],"kind":"trait"},"16:7259:6977":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"1:11603:2725":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"5:5301:5127":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"17:11173:37506":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"5:1626:221":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"18:581:3859":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"32:2515:5424":{"crate_id":32,"path":["zerovec","ule","chars","CharULE"],"kind":"struct"},"6:7448:9473":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"6:6564:9272":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"4:9344:7584":{"crate_id":4,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"37:714:27546":{"crate_id":37,"path":["icu_locid_transform","provider","expander","LikelySubtagsExtendedV1Marker"],"kind":"struct"},"4:11037:7552":{"crate_id":4,"path":["std","sys","pal","unix","linux","pidfd","PidFd"],"kind":"struct"},"6:1584:8689":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"22:4843:3611":{"crate_id":22,"path":["icu_properties","provider","GeneralCategoryNameToValueV1Marker"],"kind":"struct"},"34:334:27509":{"crate_id":34,"path":["litemap","store","StoreSlice"],"kind":"trait"},"1:23346:7698":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"5:3706:2725":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"1:41781:7659":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"17:16775:6729":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"1:2029:9608":{"crate_id":1,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"17:13398:4966":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"4:11141:33214":{"crate_id":4,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"20:326:3483":{"crate_id":20,"path":["icu_normalizer","properties","CanonicalDecomposition"],"kind":"struct"},"17:13095:5931":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"1:34127:10276":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"17:10031:23026":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"1:32856:117":{"crate_id":1,"path":["core","marker","ConstParamTy"],"kind":"trait"},"36:411:3441":{"crate_id":36,"path":["icu_collections","char16trie","trie","TrieResult"],"kind":"enum"},"6:1675:8750":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:3774:158":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"5:5526:36257":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"1:40932:3964":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"16:896:6738":{"crate_id":16,"path":["gimli","read","endian_slice","DebugBytes"],"kind":"struct"},"17:14796:6198":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"4:5616:7442":{"crate_id":4,"path":["std","process","Child"],"kind":"struct"},"17:11309:5752":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"17:11566:5772":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"4:11793:7475":{"crate_id":4,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"29:1443:2881":{"crate_id":29,"path":["icu_locid","extensions","unicode","Unicode"],"kind":"struct"},"22:4892:3618":{"crate_id":22,"path":["icu_properties","provider","ScriptV1Marker"],"kind":"struct"},"22:4801:3605":{"crate_id":22,"path":["icu_properties","provider","ExemplarCharactersIndexV1Marker"],"kind":"struct"},"32:1771:27499":{"crate_id":32,"path":["zerovec","ule","niche","NicheBytes"],"kind":"trait"},"23:482:27417":{"crate_id":23,"path":["icu_provider","any","MaybeSendSync"],"kind":"trait"},"22:4829:3609":{"crate_id":22,"path":["icu_properties","provider","CanonicalCombiningClassValueToLongNameV1Marker"],"kind":"struct"},"1:23076:15548":{"crate_id":1,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"17:10442:23039":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"16:5172:6801":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"32:1775:5415":{"crate_id":32,"path":["zerovec","ule","niche","NichedOptionULE"],"kind":"union"},"4:9437:245":{"crate_id":4,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"37:588:5360":{"crate_id":37,"path":["icu_locid_transform","provider","directionality","ScriptDirectionV1"],"kind":"struct"},"1:8891:3967":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"34:320:27507":{"crate_id":34,"path":["litemap","store","Store"],"kind":"trait"},"1:42829:87":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"36:522:5386":{"crate_id":36,"path":["icu_collections","codepointinvliststringlist","CodePointInversionListAndStringListULE"],"kind":"struct"},"11:102:8540":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"16:6731:5018":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"4:10700:33226":{"crate_id":4,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"0:299:2381":{"crate_id":0,"path":["idna","uts46","AsciiDenyList"],"kind":"struct"},"20:688:3425":{"crate_id":20,"path":["icu_normalizer","ComposingNormalizer"],"kind":"struct"},"16:2435:22106":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"30:303:5437":{"crate_id":30,"path":["writeable","parts_write_adapter","CoreWriteAsPartsWrite"],"kind":"struct"},"17:12008:5678":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"1:8897:10349":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"22:4717:3593":{"crate_id":22,"path":["icu_properties","provider","UnifiedIdeographV1Marker"],"kind":"struct"},"6:5288:8995":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"1:41533:7653":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"5:7113:3328":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"11:1564:22038":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"1:47646:7942":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"23:1140:5494":{"crate_id":23,"path":["icu_provider","marker","NeverMarker"],"kind":"struct"},"11:2551:37481":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"22:4920:3622":{"crate_id":22,"path":["icu_properties","provider","HangulSyllableTypeV1Marker"],"kind":"struct"},"17:13958:6022":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"1:31146:3315":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"11:434:9935":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"1:23587:7722":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI8Inner"],"kind":"struct"},"22:1047:5500":{"crate_id":22,"path":["icu_properties","props","PropertyValueNameToEnumMapper"],"kind":"struct"},"17:14738:6186":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"20:385:3434":{"crate_id":20,"path":["icu_normalizer","provider","CanonicalDecompositionDataV1Marker"],"kind":"struct"},"5:6179:15999":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"22:4367:3543":{"crate_id":22,"path":["icu_properties","provider","FullCompositionExclusionV1Marker"],"kind":"struct"},"4:4569:7433":{"crate_id":4,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"9:53:5090":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"11:809:3321":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"16:8298:7117":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"18:507:5573":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"6:4921:8863":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"1:47100:7893":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"17:10729:4949":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"17:12860:5912":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"16:6738:37494":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"1:2282:200":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"22:4598:3576":{"crate_id":22,"path":["icu_properties","provider","NoncharacterCodePointV1Marker"],"kind":"struct"},"4:10958:9611":{"crate_id":4,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"6:5019:8908":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"0:112:715":{"crate_id":0,"path":["idna","punycode","encode"],"kind":"function"},"17:13082:5750":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"1:22295:15466":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:46324:7822":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"22:4745:3597":{"crate_id":22,"path":["icu_properties","provider","XdigitV1Marker"],"kind":"struct"},"16:6042:6770":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"1:32749:3347":{"crate_id":1,"path":["core","error","tags","Ref"],"kind":"struct"},"17:14652:6158":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"29:1796:4887":{"crate_id":29,"path":["icu_locid","subtags","variants","Variants"],"kind":"struct"},"4:10817:5851":{"crate_id":4,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"1:44380:4249":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"16:6302:6835":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"4:10565:32856":{"crate_id":4,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"16:3695:6780":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"1:46921:7886":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"6:5357:9012":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"17:13662:5971":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"5:5:1971":{"crate_id":5,"path":["alloc","vec"],"kind":"macro"},"1:11734:4050":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"16:7372:5063":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"22:5039:3639":{"crate_id":22,"path":["icu_properties","provider","WordBreakNameToValueV1Marker"],"kind":"struct"},"17:12524:5880":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"6:6411:9192":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"6:1514:8644":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"1:41148:7750":{"crate_id":1,"path":["core","ffi","VaList"],"kind":"struct"},"4:9397:5159":{"crate_id":4,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"17:10938:37503":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"16:4844:6791":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"16:6028:5022":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"4:12402:7615":{"crate_id":4,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"4:4827:9461":{"crate_id":4,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"function"},"29:1771:5455":{"crate_id":29,"path":["icu_locid","subtags","variant","Variant"],"kind":"struct"},"1:884:201":{"crate_id":1,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"1:40909:3961":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"0:51:639":{"crate_id":0,"path":["idna","punycode","decode"],"kind":"function"},"1:14371:3288":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"1:22067:28938":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"16:4956:6795":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"4:4815:15858":{"crate_id":4,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"4:5195:15908":{"crate_id":4,"path":["std","panic","always_abort"],"kind":"function"},"10:44:5089":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"16:5318:6806":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"1:44678:4251":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"17:10784:5732":{"crate_id":17,"path":["object","read","read_cache","ReadCacheInternal"],"kind":"struct"},"4:8031:7484":{"crate_id":4,"path":["std","thread","ThreadId"],"kind":"struct"},"1:40262:7737":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:42274:181":{"crate_id":1,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"1:45207:10422":{"crate_id":1,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"5:3084:2587":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"17:13945:6020":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"1:3388:7025":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"4:12449:434":{"crate_id":4,"path":["std","bool"],"kind":"primitive"},"16:2486:6746":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"1:47415:7931":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"22:4493:3561":{"crate_id":22,"path":["icu_properties","provider","GraphV1Marker"],"kind":"struct"},"9:355:21974":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"4:386:7392":{"crate_id":4,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"17:14773:6197":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"16:8066:22977":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"4:8668:7552":{"crate_id":4,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"1:43748:5327":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"4:3851:15852":{"crate_id":4,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"17:15731:6445":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"1:45400:31528":{"crate_id":1,"path":["core","task","wake","ExtData"],"kind":"enum"},"15:394:22071":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"29:799:38220":{"crate_id":29,"path":["icu_locid","shortvec","ShortBoxSliceInner"],"kind":"enum"},"1:42666:237":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"1:44508:4051":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:40883:3962":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:47687:7945":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:11109:29196":{"crate_id":1,"path":["core","slice","sort","unstable","quicksort","GapGuardRaw"],"kind":"struct"},"20:468:3444":{"crate_id":20,"path":["icu_normalizer","provider","CanonicalDecompositionTablesV1Marker"],"kind":"struct"},"4:5993:7458":{"crate_id":4,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"6:7431:9468":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"1:3769:267":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:12870:4245":{"crate_id":1,"path":["core","str","converts","from_utf8"],"kind":"function"},"1:3295:120":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"1:23432:9631":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:41054:3953":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"16:7789:37493":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"1:43993:9709":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:45448:7283":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"1:3851:131":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:5037:3349":{"crate_id":1,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"5:1249:9941":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"16:6866:4881":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"6:5265:8981":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:14279:7694":{"crate_id":1,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"16:2820:6761":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"1:3378:10274":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"5:3799:36257":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"6:4964:8879":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"16:546:5005":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"6:4816:8795":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"20:631:3430":{"crate_id":20,"path":["icu_normalizer","Decomposition"],"kind":"struct"},"17:11457:5764":{"crate_id":17,"path":["object","read","archive","ArchiveOffset"],"kind":"struct"},"4:12452:1915":{"crate_id":4,"path":["std","unit"],"kind":"primitive"},"17:13515:23045":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"1:43997:4075":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"1:34925:7030":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"17:11952:4951":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"17:15496:6408":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"11:1914:7278":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"17:15621:4982":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"4:881:2725":{"crate_id":4,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"6:6777:9355":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"1:3605:3318":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"6:5462:9072":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"4:11807:7476":{"crate_id":4,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"1:31152:7729":{"crate_id":1,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"5:7590:37442":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"4:8201:7491":{"crate_id":4,"path":["std","fs","ReadDir"],"kind":"struct"},"4:10280:7775":{"crate_id":4,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"17:12306:5839":{"crate_id":17,"path":["object","read","macho","fat","MachOFatFile"],"kind":"struct"},"1:3573:153":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:47370:7930":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:44807:7791":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"6:5441:9057":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"32:2505:38906":{"crate_id":32,"path":["zerovec","varzerovec","owned","ShiftType"],"kind":"enum"},"17:14460:6131":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"16:7192:22973":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"1:23532:7717":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU16Inner"],"kind":"struct"},"1:44853:7799":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"5:5142:9608":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"1:40847:3955":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"4:1623:3324":{"crate_id":4,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"16:7969:7098":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"17:16595:6002":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"6:1684:8756":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"4:9323:32433":{"crate_id":4,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"5:3296:2725":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"4:11085:5135":{"crate_id":4,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"4:3677:15812":{"crate_id":4,"path":["std","io","Seek"],"kind":"trait"},"6:1507:8642":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"4:12469:911":{"crate_id":4,"path":["std","i128"],"kind":"primitive"},"1:47489:7933":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:3061:270":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"1:31525:207":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"16:7578:7585":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"4:11021:35725":{"crate_id":4,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"17:13205:5938":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"16:8503:7153":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"32:484:27501":{"crate_id":32,"path":["zerovec","map","vecs","ZeroVecLike"],"kind":"trait"},"17:14055:6038":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"17:14520:6140":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"1:47033:7890":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"6:7986:9559":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"17:15836:6469":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"1:10561:3335":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"17:16761:6725":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"6:5562:9110":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"5:7123:3329":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"32:55:5409":{"crate_id":32,"path":["zerovec","flexzerovec","slice","FlexZeroSlice"],"kind":"struct"},"29:921:5452":{"crate_id":29,"path":["icu_locid","extensions","other","subtag","Subtag"],"kind":"struct"},"1:42618:3724":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"22:4332:3538":{"crate_id":22,"path":["icu_properties","provider","BidiControlV1Marker"],"kind":"struct"},"22:4906:3620":{"crate_id":22,"path":["icu_properties","provider","ScriptValueToShortNameV1Marker"],"kind":"struct"},"4:9433:9608":{"crate_id":4,"path":["std","sync","poison","Guard"],"kind":"struct"},"17:14001:6032":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"4:10408:7595":{"crate_id":4,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"4:8727:7553":{"crate_id":4,"path":["std","panic","PanicHookInfo"],"kind":"struct"},"1:3570:152":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"4:9356:5157":{"crate_id":4,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"11:798:3281":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"22:5200:5531":{"crate_id":22,"path":["icu_properties","script","ScriptWithExtensionsBorrowed"],"kind":"struct"},"4:11129:33215":{"crate_id":4,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"16:5449:6810":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"4:4113:15854":{"crate_id":4,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"17:14507:6137":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"10:0:3260":{"crate_id":10,"path":["adler"],"kind":"module"},"6:1494:8636":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"22:4388:3546":{"crate_id":22,"path":["icu_properties","provider","ChangesWhenNfkcCasefoldedV1Marker"],"kind":"struct"},"1:8391:10350":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"6:4957:8876":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"4:8368:15845":{"crate_id":4,"path":["std","io","error","ErrorKind"],"kind":"enum"},"11:2566:3290":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"1:40959:3956":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:40943:3954":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"17:13554:5958":{"crate_id":17,"path":["object","read","RelocationMapEntry"],"kind":"struct"},"5:7540:3324":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"17:12204:5825":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"5:3095:36211":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"16:6749:5049":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"4:12462:763":{"crate_id":4,"path":["std","f32"],"kind":"primitive"},"6:8290:9582":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"1:6207:9608":{"crate_id":1,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"1:12413:4064":{"crate_id":1,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"1:3373:3275":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"0:35:2383":{"crate_id":0,"path":["idna","punycode"],"kind":"module"},"37:474:4816":{"crate_id":37,"path":["icu_locid_transform","provider","canonicalizer","AliasesV1"],"kind":"struct"},"17:12886:5913":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"5:7777:7386":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"20:588:2773":{"crate_id":20,"path":["icu_normalizer","uts46","Uts46Mapper"],"kind":"struct"},"17:15714:6440":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"5:1213:9940":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"32:869:4854":{"crate_id":32,"path":["zerovec","map2d","map","ZeroMap2d"],"kind":"struct"},"23:15:3470":{"crate_id":23,"path":["icu_provider","data_provider","DataProvider"],"kind":"trait"},"23:0:3368":{"crate_id":23,"path":["icu_provider"],"kind":"module"},"1:13559:122":{"crate_id":1,"path":["core","str","lossy","Debug"],"kind":"struct"},"6:5420:9042":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"4:4349:15879":{"crate_id":4,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"1:13138:4066":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"16:6658:5034":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"1:13329:3287":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"17:11805:5794":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"1:44404:4049":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"4:10406:7596":{"crate_id":4,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"5:2147:5155":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"1:10516:155":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"16:6808:5052":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"17:10564:4944":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"6:5641:9147":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"4:2326:150":{"crate_id":4,"path":["std","fs","File"],"kind":"struct"},"5:7883:3321":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"1:31114:3314":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"17:13322:23044":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"5:7580:7380":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"6:5387:9026":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"17:16656:6700":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"4:12026:5162":{"crate_id":4,"path":["std","alloc","System"],"kind":"struct"},"16:6502:22079":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"16:7462:6998":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"18:563:4916":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"11:1005:7011":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"4:11949:7428":{"crate_id":4,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"11:881:7266":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"5:4329:9608":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"1:2802:3847":{"crate_id":1,"path":["core","clone","CloneToUninit"],"kind":"trait"},"4:8213:5154":{"crate_id":4,"path":["std","fs","FileTimes"],"kind":"struct"},"1:12446:4065":{"crate_id":1,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"16:7716:37495":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"17:15887:6482":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"16:7919:7086":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"4:912:5115":{"crate_id":4,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"11:2495:22033":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"16:7016:6924":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"17:16684:6707":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"1:42553:184":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"4:10934:7605":{"crate_id":4,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"4:12454:1348":{"crate_id":4,"path":["std","pointer"],"kind":"primitive"},"4:3602:7545":{"crate_id":4,"path":["std","io","Read"],"kind":"trait"},"4:9241:15947":{"crate_id":4,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"1:46794:7865":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"4:8268:7495":{"crate_id":4,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"6:1703:8763":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"17:15689:6431":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"4:6402:33217":{"crate_id":4,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"16:8096:7102":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"5:1001:2725":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"1:10972:29195":{"crate_id":1,"path":["core","slice","sort","stable","merge","MergeState"],"kind":"struct"},"17:13592:5961":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"17:15540:6413":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"1:23642:7727":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroIsizeInner"],"kind":"struct"},"17:12992:5922":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"22:4416:3550":{"crate_id":22,"path":["icu_properties","provider","DashV1Marker"],"kind":"struct"},"17:12216:5827":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"17:10534:4924":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"5:1784:36257":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"4:5285:7441":{"crate_id":4,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"22:4437:3553":{"crate_id":22,"path":["icu_properties","provider","DiacriticV1Marker"],"kind":"struct"},"1:46823:7866":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"6:8284:9581":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"1:10557:132":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"6:5405:9037":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"17:15106:6247":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"32:2100:37612":{"crate_id":32,"path":["zerovec","ule","ULE","from_byte_slice_unchecked"],"kind":"function"},"17:317:5610":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"20:452:3446":{"crate_id":20,"path":["icu_normalizer","provider","DecompositionSupplementV1"],"kind":"struct"},"4:11272:35727":{"crate_id":4,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"4:7397:33218":{"crate_id":4,"path":["std","sys","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"11:2349:7268":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"4:12434:32720":{"crate_id":4,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"23:818:27537":{"crate_id":23,"path":["icu_provider","fallback","LocaleFallbackSupplement"],"kind":"enum"},"23:835:4890":{"crate_id":23,"path":["icu_provider","fallback","LocaleFallbackConfig"],"kind":"struct"},"1:44321:4058":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"16:4694:6788":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"4:8578:7544":{"crate_id":4,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"17:14140:6066":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"1:22728:15467":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:41317:7646":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"17:16297:6608":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"11:708:5118":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"37:709:5369":{"crate_id":37,"path":["icu_locid_transform","provider","expander","LikelySubtagsForScriptRegionV1"],"kind":"struct"},"1:44210:4043":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"11:2400:4046":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"1:3941:71":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"1:47293:7929":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:31167:3344":{"crate_id":1,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"11:1888:3281":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"1:23484:15814":{"crate_id":1,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"4:5807:15930":{"crate_id":4,"path":["std","process","Termination"],"kind":"trait"},"1:33509:7021":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"6:4881:8841":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"22:0:2444":{"crate_id":22,"path":["icu_properties"],"kind":"module"},"22:4640:3582":{"crate_id":22,"path":["icu_properties","provider","PatternWhiteSpaceV1Marker"],"kind":"struct"},"22:4787:3603":{"crate_id":22,"path":["icu_properties","provider","ExemplarCharactersPunctuationV1Marker"],"kind":"struct"},"32:343:4848":{"crate_id":32,"path":["zerovec","map","map","ZeroMap"],"kind":"struct"},"6:5635:9144":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"5:7570:7379":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"23:1046:5487":{"crate_id":23,"path":["icu_provider","any","DowncastingAnyProvider"],"kind":"struct"},"17:11926:5800":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"22:4990:3632":{"crate_id":22,"path":["icu_properties","provider","LineBreakValueToShortNameV1Marker"],"kind":"struct"},"1:47166:7895":{"crate_id":1,"path":["core","core_arch","simd","m16x16"],"kind":"struct"},"4:9198:7577":{"crate_id":4,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"5:1400:7267":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"6:5127:8937":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"4:8206:7492":{"crate_id":4,"path":["std","fs","OpenOptions"],"kind":"struct"},"4:534:15730":{"crate_id":4,"path":["std","thread","PanicGuard"],"kind":"struct"},"4:9169:7575":{"crate_id":4,"path":["std","process","ExitStatusError"],"kind":"struct"},"16:6573:6878":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"1:4727:5172":{"crate_id":1,"path":["core","cell","once","OnceCell"],"kind":"struct"},"17:14807:6200":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"4:8546:7539":{"crate_id":4,"path":["std","io","Take"],"kind":"struct"},"22:4689:3589":{"crate_id":22,"path":["icu_properties","provider","SegmentStarterV1Marker"],"kind":"struct"},"1:23521:7716":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU8Inner"],"kind":"struct"},"4:8276:7496":{"crate_id":4,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"17:13181:5936":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"1:4775:3346":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"18:613:37511":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"22:5116:3650":{"crate_id":22,"path":["icu_properties","provider","JoiningTypeV1Marker"],"kind":"struct"},"24:429:27438":{"crate_id":24,"path":["yoke","either","EitherCart"],"kind":"enum"},"16:8612:5078":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"1:44311:4060":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"11:123:5085":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"1:46354:7826":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"4:1108:7268":{"crate_id":4,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"41:95:5340":{"crate_id":41,"path":["utf16_iter","Utf16Chars"],"kind":"struct"},"6:6521:9243":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"23:1001:27420":{"crate_id":23,"path":["icu_provider","any","AnyPayloadInner"],"kind":"enum"},"4:6310:33232":{"crate_id":4,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"4:4163:15856":{"crate_id":4,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"6:1563:8675":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"17:12135:5819":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"22:4563:3571":{"crate_id":22,"path":["icu_properties","provider","IdsTrinaryOperatorV1Marker"],"kind":"struct"},"17:16555:6681":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"17:11026:37502":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"5:6526:16007":{"crate_id":5,"path":["alloc","sync","UniqueArcUninit"],"kind":"struct"},"17:12906:4959":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"17:13719:5983":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"4:5682:116":{"crate_id":4,"path":["std","process","Command"],"kind":"struct"},"16:3889:5640":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"16:6188:6825":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"1:44822:7796":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:45328:230":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"1:36801:7031":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:22285:15814":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"16:5198:6802":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"16:5060:6797":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"22:4318:3536":{"crate_id":22,"path":["icu_properties","provider","AlnumV1Marker"],"kind":"struct"},"9:445:21959":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"32:1266:27256":{"crate_id":32,"path":["zerovec","varzerovec","vec","VarZeroVec"],"kind":"enum"},"16:8585:7162":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"1:41789:7661":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"6:5428:9047":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"6:1521:8647":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"17:11319:37504":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"23:545:3459":{"crate_id":23,"path":["icu_provider","any","AsDynamicDataProviderAnyMarkerWrap"],"kind":"trait"},"1:44928:7682":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"22:4521:3565":{"crate_id":22,"path":["icu_properties","provider","HexDigitV1Marker"],"kind":"struct"},"4:12450:1204":{"crate_id":4,"path":["std","never"],"kind":"primitive"},"1:5448:7633":{"crate_id":1,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"24:23:27436":{"crate_id":24,"path":["yoke","cartable_ptr","CloneableCartablePointerLike"],"kind":"trait"},"4:2482:15799":{"crate_id":4,"path":["std","fs","symlink_metadata"],"kind":"function"},"22:1224:8520":{"crate_id":22,"path":["icu_properties","props","BidiClassULE"],"kind":"struct"},"17:12293:5837":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"1:2206:10256":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"4:3659:2644":{"crate_id":4,"path":["std","io","Write"],"kind":"trait"},"5:3267:101":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"37:311:4034":{"crate_id":37,"path":["icu_locid_transform","directionality","Direction"],"kind":"enum"},"17:2437:5622":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"22:1652:3497":{"crate_id":22,"path":["icu_properties","props","LineBreak"],"kind":"struct"},"4:11298:7474":{"crate_id":4,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"16:8151:5074":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"17:12931:4960":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"1:2105:693":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"17:11985:5803":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"16:7807:37496":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"32:2797:5420":{"crate_id":32,"path":["zerovec","ule","unvalidated","UnvalidatedChar"],"kind":"struct"},"16:2467:4991":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"1:13100:4265":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:2896:213":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"17:10141:23029":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"11:1725:167":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"1:23609:7724":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI32Inner"],"kind":"struct"},"6:497:8576":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"4:948:3321":{"crate_id":4,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"20:279:3424":{"crate_id":20,"path":["icu_normalizer","IsNormalizedSinkStr"],"kind":"struct"},"17:13983:6024":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"6:6631:9306":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"16:5727:4924":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"1:44658:4250":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"5:6712:3281":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"17:13070:4928":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"22:4927:3623":{"crate_id":22,"path":["icu_properties","provider","HangulSyllableTypeNameToValueV1Marker"],"kind":"struct"},"4:11832:9621":{"crate_id":4,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"16:7424:22974":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"17:472:5612":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"17:16385:6630":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"16:8546:7158":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"11:772:5115":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"4:12464:758":{"crate_id":4,"path":["std","f128"],"kind":"primitive"},"4:8489:5156":{"crate_id":4,"path":["std","io","util","Empty"],"kind":"struct"},"17:15852:6471":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"6:6813:9368":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"1:23405:5441":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"9:480:21958":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"5:1385:7268":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:44901:7800":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"0:340:2598":{"crate_id":0,"path":["idna","uts46","ErrorPolicy","FailFast"],"kind":"variant"},"1:46567:7845":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"4:8077:15749":{"crate_id":4,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"17:12952:5918":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"17:12095:5816":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"30:366:5440":{"crate_id":30,"path":["writeable","LengthHint"],"kind":"struct"},"1:34261:10277":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"6:6691:9328":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"1:3786:10292":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"30:192:27426":{"crate_id":30,"path":["writeable","Writeable"],"kind":"trait"},"5:1615:5119":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"1:13061:4266":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"5:1576:5115":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"17:15050:6240":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"4:3310:33131":{"crate_id":4,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"5:5571:15984":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"11:328:8544":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"17:14917:6216":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"22:1161:5510":{"crate_id":22,"path":["icu_properties","props","PropertyEnumToValueNameLinearTiny4Mapper"],"kind":"struct"},"34:329:27508":{"crate_id":34,"path":["litemap","store","StoreFromIterable"],"kind":"trait"},"17:16179:6579":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"4:8839:15925":{"crate_id":4,"path":["std","path","Component"],"kind":"enum"},"17:15148:6254":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"6:465:8560":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"6:578:8626":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"6:5319:9005":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"6:5241:8969":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"1:44668:4252":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"17:16264:6601":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"4:9420:198":{"crate_id":4,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"1:44363:4247":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"40:331:3327":{"crate_id":40,"path":["smallvec","SetLenOnDrop"],"kind":"struct"},"17:3854:5625":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"6:7332:9432":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"32:2864:5428":{"crate_id":32,"path":["zerovec","ule","tuple","Tuple3ULE"],"kind":"struct"},"37:492:27541":{"crate_id":37,"path":["icu_locid_transform","provider","canonicalizer","AliasesV2Marker"],"kind":"struct"},"17:12163:5821":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"4:5128:15902":{"crate_id":4,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"4:7813:8026":{"crate_id":4,"path":["std","panicking","begin_panic_handler","StaticStrPayload"],"kind":"struct"},"1:32735:4878":{"crate_id":1,"path":["core","error","tags","Value"],"kind":"struct"},"16:2450:6744":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"4:1871:7404":{"crate_id":4,"path":["std","env","VarsOs"],"kind":"struct"},"22:4535:3567":{"crate_id":22,"path":["icu_properties","provider","IdContinueV1Marker"],"kind":"struct"},"23:1109:5491":{"crate_id":23,"path":["icu_provider","hello_world","HelloWorldV1Marker"],"kind":"struct"},"6:5593:9119":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"6:8255:9574":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"1:32825:3365":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"4:7428:33143":{"crate_id":4,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"6:1625:8720":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"16:2570:6750":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"6:7604:9553":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"4:9364:7585":{"crate_id":4,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"17:11902:5799":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"20:290:3433":{"crate_id":20,"path":["icu_normalizer","error","NormalizerError"],"kind":"enum"},"32:2112:27259":{"crate_id":32,"path":["zerovec","ule","VarULE"],"kind":"trait"},"17:15785:6457":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"6:5682:9163":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"4:954:7273":{"crate_id":4,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"5:4483:279":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"4:9145:210":{"crate_id":4,"path":["std","process","Output"],"kind":"struct"},"17:14019:6033":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"0:248:2416":{"crate_id":0,"path":["idna","domain_to_ascii"],"kind":"function"},"17:12840:5907":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"1:22118:15469":{"crate_id":1,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"22:4633:3581":{"crate_id":22,"path":["icu_properties","provider","PatternSyntaxV1Marker"],"kind":"struct"},"22:4619:3579":{"crate_id":22,"path":["icu_properties","provider","NfkcInertV1Marker"],"kind":"struct"},"1:8200:5138":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"4:5475:214":{"crate_id":4,"path":["std","path","Path"],"kind":"struct"},"17:15963:6504":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"4:11781:5150":{"crate_id":4,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"17:12066:4954":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"17:15586:6421":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"5:1523:2725":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"1:23554:7719":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU64Inner"],"kind":"struct"},"6:8014:9562":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"5:1585:5117":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"1:42562:2725":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"36:614:27527":{"crate_id":36,"path":["icu_collections","codepointtrie","cptrie","TrieType"],"kind":"enum"},"1:46844:7867":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"13:110:37483":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"6:1632:8724":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"1:34060:10278":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:23214:7696":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"17:5305:5632":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"17:14672:6161":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"1:42328:10358":{"crate_id":1,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"40:355:3665":{"crate_id":40,"path":["smallvec","ConstNonNull"],"kind":"struct"},"1:10497:237":{"crate_id":1,"path":["core","fmt","Result"],"kind":"type_alias"},"4:8112:7490":{"crate_id":4,"path":["std","env","JoinPathsError"],"kind":"struct"},"4:4829:9463":{"crate_id":4,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"function"},"1:41374:5587":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"17:13818:6012":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"11:830:7273":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"17:14438:6130":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"23:797:27536":{"crate_id":23,"path":["icu_provider","fallback","LocaleFallbackPriority"],"kind":"enum"},"17:13692:5975":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"1:41195:7753":{"crate_id":1,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:40966:3957":{"crate_id":1,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"0:353:2600":{"crate_id":0,"path":["idna","uts46","ProcessingSuccess","Passthrough"],"kind":"variant"},"9:328:8554":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"6:6823:9371":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"6:7463:9478":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"16:7949:6775":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"6:5676:9160":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"4:8801:7781":{"crate_id":4,"path":["std","path","State"],"kind":"enum"},"32:2354:5408":{"crate_id":32,"path":["zerovec","flexzerovec","owned","FlexZeroVecOwned"],"kind":"struct"},"32:1662:38403":{"crate_id":32,"path":["zerovec","ule","encode","EncodeAsVarULE","encode_var_ule_len"],"kind":"function"},"29:740:27449":{"crate_id":29,"path":["icu_locid","parser","errors","ParserError"],"kind":"enum"},"29:946:2963":{"crate_id":29,"path":["icu_locid","extensions","other","Other"],"kind":"struct"},"22:4507:3563":{"crate_id":22,"path":["icu_properties","provider","GraphemeExtendV1Marker"],"kind":"struct"},"22:1431:3493":{"crate_id":22,"path":["icu_properties","props","GeneralCategoryGroup"],"kind":"struct"},"32:2491:4855":{"crate_id":32,"path":["zerovec","varzerovec","components","VarZeroVecComponents"],"kind":"struct"},"1:8581:189":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:22189:5187":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"11:1140:7271":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"1:10552:122":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"1:44150:7785":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"32:2453:4860":{"crate_id":32,"path":["zerovec","varzerovec","components","Index16"],"kind":"struct"},"36:728:3525":{"crate_id":36,"path":["icu_collections","codepointtrie","cptrie","CodePointMapRange"],"kind":"struct"},"4:6020:5136":{"crate_id":4,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"1:38842:10285":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"16:4766:6789":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"29:1193:4879":{"crate_id":29,"path":["icu_locid","extensions","transform","Transform"],"kind":"struct"},"17:14405:6122":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"4:5666:7448":{"crate_id":4,"path":["std","process","ChildStderr"],"kind":"struct"},"6:6652:9318":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"6:5057:8924":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"17:15160:6258":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"17:11630:5775":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"6:4890:8846":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"22:5213:3524":{"crate_id":22,"path":["icu_properties","sets","CodePointSetData"],"kind":"struct"},"18:548:164":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"18:765:27230":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"1:40152:226":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"22:4815:3607":{"crate_id":22,"path":["icu_properties","provider","CanonicalCombiningClassNameToValueV1Marker"],"kind":"struct"},"5:6839:3324":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"34:351:27511":{"crate_id":34,"path":["litemap","store","StoreIterable"],"kind":"trait"},"17:14573:6148":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"4:4171:15857":{"crate_id":4,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"17:12280:5835":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"16:4184:6784":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"4:6746:5145":{"crate_id":4,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"22:1710:3494":{"crate_id":22,"path":["icu_properties","props","GraphemeClusterBreak"],"kind":"struct"},"4:12418:5163":{"crate_id":4,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"1:42587:3723":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"5:3303:7277":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"20:592:3426":{"crate_id":20,"path":["icu_normalizer","SupplementPayloadHolder"],"kind":"enum"},"31:685:5433":{"crate_id":31,"path":["tinystr","unvalidated","UnvalidatedTinyAsciiStr"],"kind":"struct"},"17:14599:6151":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"29:773:38261":{"crate_id":29,"path":["icu_locid","parser","langid","ParserPosition"],"kind":"enum"},"1:4984:3348":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"17:13119:5932":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"16:8137:5072":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"22:1123:5507":{"crate_id":22,"path":["icu_properties","props","PropertyEnumToValueNameLinearMapper"],"kind":"struct"},"17:14269:6096":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"16:7401:37489":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"6:8343:9594":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"4:12474:1869":{"crate_id":4,"path":["std","u128"],"kind":"primitive"},"4:10983:5154":{"crate_id":4,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"17:11448:5763":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"16:8528:7156":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"5:1229:36213":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"4:5986:7454":{"crate_id":4,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"6:553:8613":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"22:4759:3599":{"crate_id":22,"path":["icu_properties","provider","XidStartV1Marker"],"kind":"struct"},"0:247:2404":{"crate_id":0,"path":["idna","domain_to_ascii_cow"],"kind":"function"},"16:6970:5058":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"1:10567:217":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"22:4423:3551":{"crate_id":22,"path":["icu_properties","provider","DeprecatedV1Marker"],"kind":"struct"},"6:7341:9438":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"17:11818:5795":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"4:0:1755":{"crate_id":4,"path":["std"],"kind":"module"},"41:86:5339":{"crate_id":41,"path":["utf16_iter","report","ErrorReportingUtf16Chars"],"kind":"struct"},"1:3535:127":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"18:623:37512":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"17:11291:37500":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"1:3024:15814":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"16:6852:6906":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"30:380:5441":{"crate_id":30,"path":["writeable","Part"],"kind":"struct"},"1:46950:7887":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"6:538:8605":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"1:42296:7665":{"crate_id":1,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"24:17:15814":{"crate_id":24,"path":["yoke","cartable_ptr","private","Sealed"],"kind":"trait"},"18:0:3267":{"crate_id":18,"path":["memchr"],"kind":"module"},"6:8008:9560":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"4:6824:7466":{"crate_id":4,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"17:11720:5783":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"4:6895:7470":{"crate_id":4,"path":["std","sync","reentrant_lock","ReentrantLockGuard"],"kind":"struct"},"1:39421:10286":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:44219:4044":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"29:1493:4884":{"crate_id":29,"path":["icu_locid","extensions","Extensions"],"kind":"struct"},"16:8105:7103":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"16:7508:7005":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"1:40435:3845":{"crate_id":1,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"17:14586:6149":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"18:651:5573":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"4:1630:3321":{"crate_id":4,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"4:8498:2740":{"crate_id":4,"path":["std","io","util","Sink"],"kind":"struct"},"16:6159:5023":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"17:11553:5771":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"5:4297:9608":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"37:748:5370":{"crate_id":37,"path":["icu_locid_transform","provider","expander","LikelySubtagsExtendedV1"],"kind":"struct"},"1:45316:9710":{"crate_id":1,"path":["core","future","async_drop","Noop"],"kind":"struct"},"22:4409:3549":{"crate_id":22,"path":["icu_properties","provider","ChangesWhenUppercasedV1Marker"],"kind":"struct"},"32:2099:37611":{"crate_id":32,"path":["zerovec","ule","ULE","parse_byte_slice"],"kind":"function"},"4:687:15747":{"crate_id":4,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"6:5151:8939":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"37:300:4807":{"crate_id":37,"path":["icu_locid_transform","canonicalizer","LocaleCanonicalizer"],"kind":"struct"},"4:5362:215":{"crate_id":4,"path":["std","path","PathBuf"],"kind":"struct"},"4:9256:15946":{"crate_id":4,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"22:4654:3584":{"crate_id":22,"path":["icu_properties","provider","PrintV1Marker"],"kind":"struct"},"16:8669:4878":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"1:2854:212":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"22:4794:3604":{"crate_id":22,"path":["icu_properties","provider","ExemplarCharactersNumbersV1Marker"],"kind":"struct"},"6:5107:8935":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"23:1126:5492":{"crate_id":23,"path":["icu_provider","hello_world","HelloWorldFormatter"],"kind":"struct"},"4:11970:7429":{"crate_id":4,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"1:47626:7940":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"27:0:3372":{"crate_id":27,"path":["zerofrom"],"kind":"module"},"17:12941:5917":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"1:10778:168":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"22:4675:3587":{"crate_id":22,"path":["icu_properties","provider","RegionalIndicatorV1Marker"],"kind":"struct"},"16:6822:22971":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCacheStrategy"],"kind":"enum"},"4:7825:8027":{"crate_id":4,"path":["std","panicking","begin_panic","Payload"],"kind":"struct"},"17:15665:6429":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"23:880:5481":{"crate_id":23,"path":["icu_provider","key","DataKeyPath"],"kind":"struct"},"1:3780:10290":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"5:7560:3281":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"22:5067:3643":{"crate_id":22,"path":["icu_properties","provider","SentenceBreakNameToValueV1Marker"],"kind":"struct"},"7:79:21953":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"1:22820:15551":{"crate_id":1,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"36:269:3526":{"crate_id":36,"path":["icu_collections","codepointtrie","cptrie","TrieValue"],"kind":"trait"},"22:993:2775":{"crate_id":22,"path":["icu_properties","maps","CodePointMapDataBorrowed"],"kind":"struct"},"22:4570:3572":{"crate_id":22,"path":["icu_properties","provider","JoinControlV1Marker"],"kind":"struct"},"16:6781:6900":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"4:9229:7578":{"crate_id":4,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"1:8424:157":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"14:40:5999":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"17:16323:6617":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"36:368:9908":{"crate_id":36,"path":["icu_collections","iterator_utils","RangeListIteratorCoalescer"],"kind":"struct"},"4:959:5118":{"crate_id":4,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"5:779:263":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"40:328:3663":{"crate_id":40,"path":["smallvec","Array"],"kind":"trait"},"4:6827:15942":{"crate_id":4,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"4:5630:7446":{"crate_id":4,"path":["std","process","ChildStdin"],"kind":"struct"},"5:7214:278":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"4:4233:15863":{"crate_id":4,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"17:16701:6709":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"32:2097:4806":{"crate_id":32,"path":["zerovec","ule","ULE"],"kind":"trait"},"42:0:2446":{"crate_id":42,"path":["utf8_iter"],"kind":"module"},"16:5649:6811":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"1:44712:3955":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:46403:7831":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"17:11386:23054":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"17:5131:5631":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"16:6640:6884":{"crate_id":16,"path":["gimli","read","dwarf","DwarfSections"],"kind":"struct"},"6:5334:9009":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"30:310:5438":{"crate_id":30,"path":["writeable","try_writeable","TryWriteableInfallibleAsWriteable"],"kind":"struct"},"4:3916:7428":{"crate_id":4,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"11:1884:3324":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"1:42534:205":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"17:2406:5620":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"1:3759:4040":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"16:903:5610":{"crate_id":16,"path":["gimli","read","endian_slice","DebugByte"],"kind":"struct"},"37:940:5371":{"crate_id":37,"path":["icu_locid_transform","provider","StrStrPairVarULE"],"kind":"struct"},"1:43542:3344":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"1:32689:8550":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"16:6843:5056":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"17:10332:23035":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"6:6917:9408":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"1:23048:15547":{"crate_id":1,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"17:10823:4950":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"17:14627:6156":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"16:2620:6752":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"16:7282:6978":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"1:41175:4061":{"crate_id":1,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"22:1168:5511":{"crate_id":22,"path":["icu_properties","props","PropertyEnumToValueNameLinearTiny4MapperBorrowed"],"kind":"struct"},"1:22052:28936":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"41:63:3448":{"crate_id":41,"path":["utf16_iter","Utf16CharsEx"],"kind":"trait"},"29:831:4867":{"crate_id":29,"path":["icu_locid","shortvec","ShortBoxSlice"],"kind":"struct"},"5:7706:15763":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"4:12237:33210":{"crate_id":4,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"16:6914:6913":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"16:8223:7105":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"4:11473:7333":{"crate_id":4,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"37:1009:5373":{"crate_id":37,"path":["icu_locid_transform","provider","LanguageStrStrPairVarULE"],"kind":"struct"},"4:10657:7574":{"crate_id":4,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"16:3987:5648":{"crate_id":16,"path":["gimli","arch","PowerPc64"],"kind":"struct"},"4:1869:7403":{"crate_id":4,"path":["std","env","Vars"],"kind":"struct"},"16:6173:5026":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"6:1530:8652":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"4:1907:7405":{"crate_id":4,"path":["std","env","SplitPaths"],"kind":"struct"},"1:22926:15814":{"crate_id":1,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"16:5224:6803":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"1:5064:490":{"crate_id":1,"path":["core","char"],"kind":"module"},"1:6398:5177":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"22:1850:3499":{"crate_id":22,"path":["icu_properties","props","SentenceBreak"],"kind":"struct"},"31:267:38383":{"crate_id":31,"path":["tinystr","asciibyte","AsciiByte"],"kind":"enum"},"1:46523:7842":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:5006:3350":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"4:4333:9943":{"crate_id":4,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"5:3087:9598":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"17:11232:23056":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"6:7308:9415":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"22:4850:3612":{"crate_id":22,"path":["icu_properties","provider","GeneralCategoryValueToShortNameV1Marker"],"kind":"struct"},"4:9496:7587":{"crate_id":4,"path":["std","time","SystemTimeError"],"kind":"struct"},"16:6794:6901":{"crate_id":16,"path":["gimli","read","relocate","RelocateReader"],"kind":"struct"},"4:6881:5146":{"crate_id":4,"path":["std","sync","reentrant_lock","ReentrantLock"],"kind":"struct"},"1:33297:7024":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"4:8559:4049":{"crate_id":4,"path":["std","io","Split"],"kind":"struct"},"5:134:3271":{"crate_id":5,"path":["alloc","boxed"],"kind":"module"},"1:2112:7620":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"1:44276:4061":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"40:97:3662":{"crate_id":40,"path":["smallvec","SmallVecData"],"kind":"enum"},"17:16159:6573":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"1:14236:118":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"34:370:27514":{"crate_id":34,"path":["litemap","store","StoreFromIterator"],"kind":"trait"},"22:3758:3531":{"crate_id":22,"path":["icu_properties","provider","PropertyUnicodeSetV1"],"kind":"enum"},"17:16632:6695":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"16:8028:5069":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"37:346:4812":{"crate_id":37,"path":["icu_locid_transform","expander","LocaleExpander"],"kind":"struct"},"1:45142:4238":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"17:15829:6468":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"4:8026:7482":{"crate_id":4,"path":["std","thread","Builder"],"kind":"struct"},"11:698:3324":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"24:422:5459":{"crate_id":24,"path":["yoke","cartable_ptr","CartableOptionPointer"],"kind":"struct"},"41:0:3385":{"crate_id":41,"path":["utf16_iter"],"kind":"module"},"4:2554:3195":{"crate_id":4,"path":["std","io"],"kind":"module"},"22:4724:3594":{"crate_id":22,"path":["icu_properties","provider","UppercaseV1Marker"],"kind":"struct"},"1:23452:7712":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"17:14560:6146":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"16:7980:6776":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"4:1652:7279":{"crate_id":4,"path":["std","collections","hash","set","Union"],"kind":"struct"},"4:8889:2725":{"crate_id":4,"path":["std","path","Iter"],"kind":"struct"},"17:16198:6584":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"4:12458:1853":{"crate_id":4,"path":["std","tuple"],"kind":"primitive"},"4:682:7398":{"crate_id":4,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"17:10549:4925":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"36:659:3442":{"crate_id":36,"path":["icu_collections","codepointtrie","cptrie","CodePointTrie"],"kind":"struct"},"17:12260:23145":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCacheSlice"],"kind":"enum"},"43:0:3386":{"crate_id":43,"path":["write16"],"kind":"module"},"1:47062:7891":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"22:5137:3653":{"crate_id":22,"path":["icu_properties","provider","JoiningTypeValueToLongNameV1Marker"],"kind":"struct"},"4:12463:779":{"crate_id":4,"path":["std","f64"],"kind":"primitive"},"6:5217:8961":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"1:43127:5324":{"crate_id":1,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"17:12249:5832":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"1:44422:4053":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"4:10771:7418":{"crate_id":4,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"0:327:2939":{"crate_id":0,"path":["idna","uts46","DnsLength","VerifyAllowRootDot"],"kind":"variant"},"5:4132:3281":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"4:3687:15833":{"crate_id":4,"path":["std","io","BufRead"],"kind":"trait"},"4:3569:9608":{"crate_id":4,"path":["std","io","Guard"],"kind":"struct"},"6:6611:9298":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"20:652:3431":{"crate_id":20,"path":["icu_normalizer","Composition"],"kind":"struct"},"17:14346:6114":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"4:9292:7579":{"crate_id":4,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"4:8629:15880":{"crate_id":4,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"0:50:2668":{"crate_id":0,"path":["idna","punycode","decode_to_string"],"kind":"function"},"6:7539:9528":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"4:1854:719":{"crate_id":4,"path":["std","env"],"kind":"module"},"4:12475:993":{"crate_id":4,"path":["std","isize"],"kind":"primitive"},"18:481:5571":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"17:1339:5618":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"6:6740:9344":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"16:4404:6787":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"17:15864:6477":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"20:663:3432":{"crate_id":20,"path":["icu_normalizer","DecomposingNormalizer"],"kind":"struct"},"5:296:3289":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"22:4752:3598":{"crate_id":22,"path":["icu_properties","provider","XidContinueV1Marker"],"kind":"struct"},"37:331:27534":{"crate_id":37,"path":["icu_locid_transform","error","LocaleTransformError"],"kind":"enum"},"1:47763:7955":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:13084:4263":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:44608:4255":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"17:12897:5914":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"16:8043:37488":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"5:7750:10339":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"35:0:3380":{"crate_id":35,"path":["icu_provider_macros"],"kind":"module"},"17:15760:6452":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"44:0:3387":{"crate_id":44,"path":["icu_normalizer_data"],"kind":"module"},"14:0:3263":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"1:22171:15465":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"5:3455:3321":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"1:3814:115":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"16:5255:6804":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"22:5232:5533":{"crate_id":22,"path":["icu_properties","sets","CodePointSetDataBorrowed"],"kind":"struct"},"31:0:3376":{"crate_id":31,"path":["tinystr"],"kind":"module"},"4:8624:9606":{"crate_id":4,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"6:1711:8767":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"17:12122:5818":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"6:5551:9104":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"16:8179:7104":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"16:7337:6983":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"1:22297:5187":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"29:1281:4881":{"crate_id":29,"path":["icu_locid","extensions","unicode","attributes","Attributes"],"kind":"struct"},"17:11606:4928":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"6:4896:8847":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"16:6984:5059":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"32:1500:28271":{"crate_id":32,"path":["zerovec","zerovec","EyepatchHackVector"],"kind":"struct"},"17:16084:6560":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"11:671:2725":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"36:699:5399":{"crate_id":36,"path":["icu_collections","codepointtrie","cptrie","CodePointTrieHeader"],"kind":"struct"},"1:10190:28844":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"4:9581:7406":{"crate_id":4,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"4:990:7265":{"crate_id":4,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"29:859:5451":{"crate_id":29,"path":["icu_locid","shortvec","ShortBoxSliceIntoIter"],"kind":"struct"},"1:4928:3347":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"17:15931:6496":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"18:698:4919":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"17:13854:4972":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"32:1834:5417":{"crate_id":32,"path":["zerovec","ule","option","OptionULE"],"kind":"struct"},"17:14872:6207":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"17:11706:5781":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"1:43014:96":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"18:754:5609":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"5:928:15765":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"1:44836:7798":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:44572:4258":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"32:2472:5423":{"crate_id":32,"path":["zerovec","varzerovec","components","Index32"],"kind":"struct"},"32:505:27500":{"crate_id":32,"path":["zerovec","map","vecs","MutableZeroVecLike"],"kind":"trait"},"6:5381:9023":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"1:31178:28336":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"17:11678:5778":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"23:744:3464":{"crate_id":23,"path":["icu_provider","error","DataErrorKind"],"kind":"enum"},"23:1012:3455":{"crate_id":23,"path":["icu_provider","any","AnyPayload"],"kind":"struct"},"17:10246:23032":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"17:15121:6251":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"17:12583:5885":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"6:6381:9167":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"6:8031:9571":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"1:32756:7732":{"crate_id":1,"path":["core","error","Source"],"kind":"struct"},"4:9212:7452":{"crate_id":4,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"32:2926:5429":{"crate_id":32,"path":["zerovec","ule","tuple","Tuple4ULE"],"kind":"struct"},"22:1947:8529":{"crate_id":22,"path":["icu_properties","props","CanonicalCombiningClassULE"],"kind":"struct"},"1:8473:133":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"4:8553:4248":{"crate_id":4,"path":["std","io","Bytes"],"kind":"struct"},"4:1647:7278":{"crate_id":4,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"42:82:3676":{"crate_id":42,"path":["utf8_iter","report","Utf8CharsError"],"kind":"struct"},"1:43756:5328":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"9:422:21961":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"11:2228:5088":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"22:5018:3636":{"crate_id":22,"path":["icu_properties","provider","GraphemeClusterBreakValueToShortNameV1Marker"],"kind":"struct"},"12:0:3262":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"26:0:3371":{"crate_id":26,"path":["yoke_derive"],"kind":"module"},"16:5379:6808":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"1:7107:9629":{"crate_id":1,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"17:15431:6373":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"17:11878:4928":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"1:6284:7639":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"6:5249:8973":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"6:6680:9325":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"1:23631:7726":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI128Inner"],"kind":"struct"},"22:2374:3528":{"crate_id":22,"path":["icu_properties","provider","Baked"],"kind":"struct"},"5:7824:3283":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"22:1032:5499":{"crate_id":22,"path":["icu_properties","props","ErasedNameToEnumMapV1Marker"],"kind":"struct"},"1:46730:7861":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"22:4346:3540":{"crate_id":22,"path":["icu_properties","provider","BlankV1Marker"],"kind":"struct"},"4:3448:7423":{"crate_id":4,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"20:474:3445":{"crate_id":20,"path":["icu_normalizer","provider","CompatibilityDecompositionTablesV1Marker"],"kind":"struct"},"5:3337:7276":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"16:6269:6828":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"1:41523:7539":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:46581:7846":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"22:2311:5519":{"crate_id":22,"path":["icu_properties","provider","names","PropertyEnumToValueNameSparseMapV1"],"kind":"struct"},"17:16209:6585":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"17:13970:6023":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"17:15981:6508":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"4:4680:15881":{"crate_id":4,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"16:7521:7008":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"1:881:10173":{"crate_id":1,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"1:41005:3958":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"16:8209:5076":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"22:1283:2778":{"crate_id":22,"path":["icu_properties","props","GeneralCategory"],"kind":"enum"},"1:41120:10325":{"crate_id":1,"path":["core","ffi","c_char"],"kind":"type_alias"},"1:41046:3960":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"struct"},"6:1643:8732":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"22:4864:3614":{"crate_id":22,"path":["icu_properties","provider","BidiClassV1Marker"],"kind":"struct"},"16:2990:6769":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"5:7765:7384":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"11:1907:7277":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"16:6904:6912":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"16:7416:6987":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"37:843:27549":{"crate_id":37,"path":["icu_locid_transform","provider","fallback","CollationFallbackSupplementV1Marker"],"kind":"struct"},"17:10696:4948":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"6:5069:8933":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"22:1587:3492":{"crate_id":22,"path":["icu_properties","props","EastAsianWidth"],"kind":"struct"},"17:12570:5884":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"4:9206:3324":{"crate_id":4,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"23:35:3475":{"crate_id":23,"path":["icu_provider","data_provider","DynamicDataProvider"],"kind":"trait"},"23:1028:3454":{"crate_id":23,"path":["icu_provider","any","AnyMarker"],"kind":"struct"},"4:7801:8025":{"crate_id":4,"path":["std","panicking","begin_panic_handler","FormatStringPayload"],"kind":"struct"},"4:8516:15813":{"crate_id":4,"path":["std","io","SeekFrom"],"kind":"enum"},"17:16822:6017":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"16:7959:7097":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"11:396:9932":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"16:6837:5054":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"18:635:5589":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"1:46371:7829":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"24:358:27422":{"crate_id":24,"path":["yoke","yokeable","Yokeable"],"kind":"trait"},"32:2115:37612":{"crate_id":32,"path":["zerovec","ule","VarULE","from_byte_slice_unchecked"],"kind":"function"},"22:960:3503":{"crate_id":22,"path":["icu_properties","maps","CodePointMapData"],"kind":"struct"},"16:6368:5001":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"1:23321:7697":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"5:4574:36263":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"4:2335:15796":{"crate_id":4,"path":["std","fs","read_to_string"],"kind":"function"},"1:4845:232":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"1:41547:7654":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"22:4976:3630":{"crate_id":22,"path":["icu_properties","provider","LineBreakV1Marker"],"kind":"struct"},"1:45134:4239":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"29:1256:5454":{"crate_id":29,"path":["icu_locid","extensions","unicode","attribute","Attribute"],"kind":"struct"},"5:7612:221":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"17:13157:5934":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"5:1486:100":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"17:12749:5898":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"1:22952:30741":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"4:12045:7479":{"crate_id":4,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"4:11280:5186":{"crate_id":4,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"4:3403:7420":{"crate_id":4,"path":["std","io","stdio","Stdout"],"kind":"struct"},"9:390:21960":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"16:3126:22109":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"4:1984:4315":{"crate_id":4,"path":["std","error","Report"],"kind":"struct"},"1:10004:85":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:47195:7896":{"crate_id":1,"path":["core","core_arch","simd","m32x8"],"kind":"struct"},"1:3129:126":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"6:1589:8691":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"1:42312:7667":{"crate_id":1,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"17:12108:5817":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"29:1159:4878":{"crate_id":29,"path":["icu_locid","extensions","transform","value","Value"],"kind":"struct"},"22:4472:3558":{"crate_id":22,"path":["icu_properties","provider","EmojiPresentationV1Marker"],"kind":"struct"},"1:40172:225":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"22:2198:27240":{"crate_id":22,"path":["icu_properties","bidi_data","BidiPairingProperties"],"kind":"enum"},"6:5311:9003":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"16:6953:6916":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"22:5046:3640":{"crate_id":22,"path":["icu_properties","provider","WordBreakValueToShortNameV1Marker"],"kind":"struct"},"1:8387:10351":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"36:595:27522":{"crate_id":36,"path":["icu_collections","codepointinvliststringlist","CodePointInversionListAndStringListError"],"kind":"enum"},"4:3307:32354":{"crate_id":4,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"4:4702:15882":{"crate_id":4,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"16:8165:5075":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"10:36:8553":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"1:4183:3324":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:45013:4243":{"crate_id":1,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"17:14284:6100":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"36:430:4838":{"crate_id":36,"path":["icu_collections","codepointinvlist","builder","CodePointInversionListBuilder"],"kind":"struct"},"1:46471:7839":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:41733:7656":{"crate_id":1,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"16:7075:22972":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"6:6672:9323":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"0:0:2442":{"crate_id":0,"path":["idna"],"kind":"module"},"1:41358:7649":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"4:7896:5616":{"crate_id":4,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"22:3534:27242":{"crate_id":22,"path":["icu_properties","provider","bidi_data","BidiAuxiliaryPropertiesV1Marker"],"kind":"struct"},"6:6493:9231":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"4:8566:4250":{"crate_id":4,"path":["std","io","Lines"],"kind":"struct"},"1:2668:10246":{"crate_id":1,"path":["core","ptr","with_exposed_provenance_mut"],"kind":"function"},"17:14152:6069":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"4:2328:7411":{"crate_id":4,"path":["std","fs","DirEntry"],"kind":"struct"},"11:299:8541":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"1:10569:3338":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"4:8906:7573":{"crate_id":4,"path":["std","path","StripPrefixError"],"kind":"struct"},"6:7469:9479":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"5:3930:3321":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"1:43239:3336":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"5:1554:3324":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"17:11475:23056":{"crate_id":17,"path":["object","read","archive","SymbolIteratorInternal"],"kind":"enum"},"22:3574:4905":{"crate_id":22,"path":["icu_properties","provider","bidi_data","MirroredPairedBracketData"],"kind":"struct"},"22:1924:2777":{"crate_id":22,"path":["icu_properties","props","CanonicalCombiningClass"],"kind":"struct"},"17:11163:4928":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"1:23463:10186":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"17:13547:4967":{"crate_id":17,"path":["object","read","RelocationMap"],"kind":"struct"},"1:42792:97":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"17:16750:6724":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"9:0:3259":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"1:45387:7816":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"17:10977:37501":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"1:11807:4053":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"17:11998:5804":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"0:367:2603":{"crate_id":0,"path":["idna","uts46","ProcessingError"],"kind":"enum"},"4:5543:132":{"crate_id":4,"path":["std","path","Display"],"kind":"struct"},"23:782:3463":{"crate_id":23,"path":["icu_provider","error","DataError"],"kind":"struct"},"1:3051:174":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"17:14547:6145":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"17:12082:4939":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"6:532:8602":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"11:842:15764":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"6:8330:9590":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"32:267:27261":{"crate_id":32,"path":["zerovec","map","kv","ZeroMapKV"],"kind":"trait"},"1:41039:3959":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"1:2208:10257":{"crate_id":1,"path":["core","ptr","metadata","Thin"],"kind":"trait_alias"},"22:4444:3554":{"crate_id":22,"path":["icu_properties","provider","EmojiModifierBaseV1Marker"],"kind":"struct"},"16:2772:6759":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"5:7721:5126":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"1:46386:7830":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"4:12477:1455":{"crate_id":4,"path":["std","reference"],"kind":"primitive"},"1:8435:176":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:22864:15552":{"crate_id":1,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"6:7350:9439":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"17:12776:5900":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"1:23081:15546":{"crate_id":1,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"16:6144:22967":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"6:545:8608":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"1:23370:28337":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"20:422:3435":{"crate_id":20,"path":["icu_normalizer","provider","CompatibilityDecompositionSupplementV1Marker"],"kind":"struct"},"5:5835:3327":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"37:554:27542":{"crate_id":37,"path":["icu_locid_transform","provider","directionality","ScriptDirectionV1Marker"],"kind":"struct"},"1:46745:7862":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"16:2550:6749":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"1:46339:7825":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"6:5051:8922":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"1:41245:145":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"4:10387:7405":{"crate_id":4,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"1:11627:4046":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"37:1084:27533":{"crate_id":37,"path":["icu_locid_transform","TransformResult"],"kind":"enum"},"37:592:27543":{"crate_id":37,"path":["icu_locid_transform","provider","expander","LikelySubtagsV1Marker"],"kind":"struct"},"17:11851:5797":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"0:128:2380":{"crate_id":0,"path":["idna","uts46"],"kind":"module"},"4:5316:7441":{"crate_id":4,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"4:3405:7421":{"crate_id":4,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"17:12347:5845":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"4:7335:8024":{"crate_id":4,"path":["std","sys","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"17:11691:5779":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"1:13988:5178":{"crate_id":1,"path":["core","future","async_drop","Fuse"],"kind":"struct"},"6:564:8618":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"4:4341:9944":{"crate_id":4,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"1:4975:10316":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:44721:3954":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:42866:94":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:22116:15814":{"crate_id":1,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"6:7586:9550":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:16026:6518":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"0:325:2411":{"crate_id":0,"path":["idna","uts46","DnsLength","Ignore"],"kind":"variant"},"6:5412:1275":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"17:12056:4953":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"6:5025:8911":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"6:4875:8839":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"6:6666:9320":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"41:79:5338":{"crate_id":41,"path":["utf16_iter","report","Utf16CharsError"],"kind":"struct"},"1:22169:15814":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"11:873:7265":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"4:8672:9448":{"crate_id":4,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"6:6544:9256":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"37:984:5372":{"crate_id":37,"path":["icu_locid_transform","provider","StrStrPair"],"kind":"struct"},"20:340:3528":{"crate_id":20,"path":["icu_normalizer","provider","Baked"],"kind":"struct"},"17:13006:5925":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"11:1064:22037":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"5:1369:7011":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"17:15769:6453":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"30:338:5439":{"crate_id":30,"path":["writeable","try_writeable","WriteableAsTryWriteableInfallible"],"kind":"struct"},"5:6758:36257":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"4:925:5117":{"crate_id":4,"path":["std","collections","hash","map","Values"],"kind":"struct"},"1:22084:28941":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"6:7518:9514":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"23:55:3460":{"crate_id":23,"path":["icu_provider","data_provider","BoundDataProvider"],"kind":"trait"},"1:32767:257":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"17:10296:23034":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"20:536:5546":{"crate_id":20,"path":["icu_normalizer","provider","CanonicalCompositionsV1"],"kind":"struct"},"4:11261:7575":{"crate_id":4,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"27:16:3450":{"crate_id":27,"path":["zerofrom","zero_from","ZeroFrom"],"kind":"trait"},"29:760:27462":{"crate_id":29,"path":["icu_locid","parser","langid","ParserMode"],"kind":"enum"},"4:4780:15899":{"crate_id":4,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"1:2890:206":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"4:2245:132":{"crate_id":4,"path":["std","ffi","os_str","Display"],"kind":"struct"},"1:47661:7943":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"22:4962:3628":{"crate_id":22,"path":["icu_properties","provider","EastAsianWidthValueToShortNameV1Marker"],"kind":"struct"},"1:13397:10405":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"29:1633:4888":{"crate_id":29,"path":["icu_locid","subtags","region","Region"],"kind":"struct"},"22:5004:3634":{"crate_id":22,"path":["icu_properties","provider","GraphemeClusterBreakV1Marker"],"kind":"struct"},"22:4997:3633":{"crate_id":22,"path":["icu_properties","provider","LineBreakValueToLongNameV1Marker"],"kind":"struct"},"6:7454:9475":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"17:16812:6735":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"6:8308:9585":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"1:43090:98":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"17:16377:6627":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"17:13798:6002":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"4:12467:924":{"crate_id":4,"path":["std","i32"],"kind":"primitive"},"4:7743:32529":{"crate_id":4,"path":["std","panicking","Hook"],"kind":"enum"},"1:23161:7695":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:10565:3337":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"17:15531:6409":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"32:3086:5431":{"crate_id":32,"path":["zerovec","ule","tuple","Tuple6ULE"],"kind":"struct"},"4:12468:930":{"crate_id":4,"path":["std","i64"],"kind":"primitive"},"23:1114:4904":{"crate_id":23,"path":["icu_provider","hello_world","HelloWorldProvider"],"kind":"struct"},"4:4225:15861":{"crate_id":4,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"6:5570:9112":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"22:1768:3500":{"crate_id":22,"path":["icu_properties","props","WordBreak"],"kind":"struct"},"36:436:5381":{"crate_id":36,"path":["icu_collections","codepointinvlist","cpinvlist","CodePointInversionListULE"],"kind":"struct"},"1:22726:15814":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"17:15136:4960":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"4:4018:7429":{"crate_id":4,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"32:2113:37610":{"crate_id":32,"path":["zerovec","ule","VarULE","validate_byte_slice"],"kind":"function"},"1:44526:4047":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"16:155:4999":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"4:8284:5155":{"crate_id":4,"path":["std","io","cursor","Cursor"],"kind":"struct"},"6:8199:9572":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"37:803:27548":{"crate_id":37,"path":["icu_locid_transform","provider","fallback","LocaleFallbackParentsV1Marker"],"kind":"struct"},"11:2545:8548":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"4:9751:32860":{"crate_id":4,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"6:5648:9150":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"16:6389:6844":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"6:6708:9337":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"5:4998:228":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"1:2792:114":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"17:16494:5984":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"16:8636:22980":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"33:0:3378":{"crate_id":33,"path":["zerovec_derive"],"kind":"module"},"22:5109:3649":{"crate_id":22,"path":["icu_properties","provider","IndicSyllabicCategoryValueToLongNameV1Marker"],"kind":"struct"},"37:756:27547":{"crate_id":37,"path":["icu_locid_transform","provider","fallback","LocaleFallbackLikelySubtagsV1Marker"],"kind":"struct"},"24:117:28258":{"crate_id":24,"path":["yoke","kinda_sorta_dangling","KindaSortaDangling"],"kind":"struct"},"16:3308:6743":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"11:740:5119":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"16:2920:6766":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"1:41235:7754":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"32:776:5411":{"crate_id":32,"path":["zerovec","map2d","cursor","ZeroMap2dCursor"],"kind":"struct"},"22:5164:5528":{"crate_id":22,"path":["icu_properties","script","ScriptWithExt"],"kind":"struct"},"17:14416:6123":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"16:5348:6807":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"22:3622:27243":{"crate_id":22,"path":["icu_properties","provider","bidi_data","CheckedBidiPairedBracketType"],"kind":"enum"},"5:6158:5127":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"4:11045:7490":{"crate_id":4,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"22:4934:3624":{"crate_id":22,"path":["icu_properties","provider","HangulSyllableTypeValueToShortNameV1Marker"],"kind":"struct"},"22:4458:3556":{"crate_id":22,"path":["icu_properties","provider","EmojiModifierV1Marker"],"kind":"struct"},"22:2159:8531":{"crate_id":22,"path":["icu_properties","props","JoiningTypeULE"],"kind":"struct"},"6:5271:8984":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"22:3605:5523":{"crate_id":22,"path":["icu_properties","provider","bidi_data","MirroredPairedBracketDataTryFromError"],"kind":"struct"},"6:0:1029":{"crate_id":6,"path":["libc"],"kind":"module"},"4:9310:118":{"crate_id":4,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"5:4528:9608":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"1:44350:3293":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"6:1727:8772":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"4:12461:760":{"crate_id":4,"path":["std","f16"],"kind":"primitive"},"29:729:27448":{"crate_id":29,"path":["icu_locid","ordering","SubtagOrderingResult"],"kind":"enum"},"6:6723:9341":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"17:16036:6523":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"11:2466:3321":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"1:41217:5174":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"16:6998:6917":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"16:2900:6765":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"23:1032:3457":{"crate_id":23,"path":["icu_provider","any","AnyResponse"],"kind":"struct"},"14:214:7257":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"1:3045:78":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"37:358:5348":{"crate_id":37,"path":["icu_locid_transform","fallback","LocaleFallbacker"],"kind":"struct"},"1:43559:149":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"4:6706:7464":{"crate_id":4,"path":["std","sync","once","Once"],"kind":"struct"},"4:9460:173":{"crate_id":4,"path":["std","time","Instant"],"kind":"struct"},"5:3329:7278":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"5:3308:37469":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"16:6942:6915":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"4:2013:4316":{"crate_id":4,"path":["std","error","Indented"],"kind":"struct"},"1:47568:7936":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"6:6473:9220":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"4:5804:9369":{"crate_id":4,"path":["std","process","exit"],"kind":"function"},"4:8507:7426":{"crate_id":4,"path":["std","io","IoSlice"],"kind":"struct"},"1:22069:28931":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:41339:7760":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:45321:162":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"1:12838:4036":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"17:15549:6414":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"4:4997:7437":{"crate_id":4,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"4:2083:209":{"crate_id":4,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"23:1037:5486":{"crate_id":23,"path":["icu_provider","any","DynamicDataProviderAnyMarkerWrap"],"kind":"struct"},"1:12872:2997":{"crate_id":1,"path":["core","str","converts","from_utf8_unchecked"],"kind":"function"},"20:309:3482":{"crate_id":20,"path":["icu_normalizer","properties","Decomposed"],"kind":"enum"},"1:41756:7658":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"16:6876:6909":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"1:41398:7761":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"22:4542:3568":{"crate_id":22,"path":["icu_properties","provider","IdeographicV1Marker"],"kind":"struct"},"16:2840:6762":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"22:5196:5530":{"crate_id":22,"path":["icu_properties","script","ScriptWithExtensions"],"kind":"struct"},"6:4792:8778":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"22:4353:3541":{"crate_id":22,"path":["icu_properties","provider","CasedV1Marker"],"kind":"struct"},"11:2148:7268":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"29:1355:5453":{"crate_id":29,"path":["icu_locid","extensions","unicode","key","Key"],"kind":"struct"},"1:41204:5173":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"17:10274:23033":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"6:6765:9353":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"22:4584:3574":{"crate_id":22,"path":["icu_properties","provider","LowercaseV1Marker"],"kind":"struct"},"23:648:3476":{"crate_id":23,"path":["icu_provider","marker","KeyedDataMarker"],"kind":"trait"},"17:12625:5886":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"16:7030:6926":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"4:1085:7011":{"crate_id":4,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"1:41255:7636":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:10335:3357":{"crate_id":1,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"17:12035:5088":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"1:3553:3277":{"crate_id":1,"path":["core","ops","deref","DerefPure"],"kind":"trait"},"17:11777:5789":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"6:6419:9194":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"4:9316:7580":{"crate_id":4,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"17:11358:23053":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"1:11845:4054":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:40894:28355":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:5490:1004":{"crate_id":1,"path":["core","iter"],"kind":"module"},"18:515:5570":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"17:16341:6623":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"36:561:5388":{"crate_id":36,"path":["icu_collections","codepointinvliststringlist","CodePointInversionListAndStringList"],"kind":"struct"},"37:880:4836":{"crate_id":37,"path":["icu_locid_transform","provider","fallback","LocaleFallbackSupplementV1"],"kind":"struct"},"4:2718:7414":{"crate_id":4,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"4:12457:1763":{"crate_id":4,"path":["std","str"],"kind":"primitive"},"32:172:4846":{"crate_id":32,"path":["zerovec","map","borrowed","ZeroMapBorrowed"],"kind":"struct"},"16:7044:5060":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"5:7801:256":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"17:15557:6415":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"5:2255:15730":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"17:11114:5749":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"6:5494:9086":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"6:1569:8677":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"16:7938:7094":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"16:6098:6819":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"1:46418:7832":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"21:0:3367":{"crate_id":21,"path":["displaydoc"],"kind":"module"},"22:4339:3539":{"crate_id":22,"path":["icu_properties","provider","BidiMirroredV1Marker"],"kind":"struct"},"1:34194:10275":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"17:13209:149":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"1:7746:3158":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"4:1930:7406":{"crate_id":4,"path":["std","env","Args"],"kind":"struct"},"1:47606:7938":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:5410:30730":{"crate_id":1,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"17:15679:6430":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"1:13948:7684":{"crate_id":1,"path":["core","future","async_drop","AsyncDropOwning"],"kind":"struct"},"6:491:8573":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"37:635:27544":{"crate_id":37,"path":["icu_locid_transform","provider","expander","LikelySubtagsForLanguageV1Marker"],"kind":"struct"},"6:4805:8787":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"0:368:2604":{"crate_id":0,"path":["idna","uts46","ProcessingError","ValidityError"],"kind":"variant"},"11:854:7263":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"4:996:7266":{"crate_id":4,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"1:44239:4056":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"37:430:27540":{"crate_id":37,"path":["icu_locid_transform","provider","canonicalizer","AliasesV1Marker"],"kind":"struct"},"4:12470:1893":{"crate_id":4,"path":["std","u8"],"kind":"primitive"},"16:5085:6798":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"16:6064:6772":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"0:352:2599":{"crate_id":0,"path":["idna","uts46","ProcessingSuccess"],"kind":"enum"},"1:2769:104":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"22:935:3501":{"crate_id":22,"path":["icu_properties","error","PropertiesError"],"kind":"enum"},"1:45379:7814":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"37:418:5358":{"crate_id":37,"path":["icu_locid_transform","fallback","LocaleFallbackIterator"],"kind":"struct"},"18:96:9911":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"1:3025:10120":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"16:8233:22978":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"4:6489:7450":{"crate_id":4,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"23:1055:3461":{"crate_id":23,"path":["icu_provider","buf","BufferMarker"],"kind":"struct"},"4:11717:7781":{"crate_id":4,"path":["std","sys","thread_local","native","eager","State"],"kind":"enum"},"1:46861:7868":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:40192:227":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"6:1657:8743":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"5:0:323":{"crate_id":5,"path":["alloc"],"kind":"module"},"22:4556:3570":{"crate_id":22,"path":["icu_properties","provider","IdsBinaryOperatorV1Marker"],"kind":"struct"},"11:1580:7274":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"30:118:27470":{"crate_id":30,"path":["writeable","try_writeable","TryWriteable"],"kind":"trait"},"1:45411:7819":{"crate_id":1,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"5:6579:15952":{"crate_id":5,"path":["alloc","task","LocalWake"],"kind":"trait"},"16:5742:4925":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"11:1674:37479":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"6:5036:8915":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"16:8121:221":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"6:6790:9362":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"4:1117:7272":{"crate_id":4,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"0:370:2605":{"crate_id":0,"path":["idna","uts46","ProcessingError","SinkError"],"kind":"variant"},"17:12335:5844":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"6:5477:9081":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"23:849:3466":{"crate_id":23,"path":["icu_provider","key","DataKeyHash"],"kind":"struct"},"17:13306:5946":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"16:7495:7002":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"1:46713:7860":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"16:6256:5033":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"6:5533:9093":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"17:12359:5846":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"37:626:5363":{"crate_id":37,"path":["icu_locid_transform","provider","expander","LikelySubtagsV1"],"kind":"struct"},"0:314:2429":{"crate_id":0,"path":["idna","uts46","Hyphens","Check"],"kind":"variant"},"1:22030:3859":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"22:1464:3498":{"crate_id":22,"path":["icu_properties","props","Script"],"kind":"struct"},"1:44302:4057":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"22:2371:5521":{"crate_id":22,"path":["icu_properties","provider","names","PropertyEnumToValueNameLinearTiny4MapV1"],"kind":"struct"},"36:271:37800":{"crate_id":36,"path":["icu_collections","codepointtrie","cptrie","TrieValue","try_from_u32"],"kind":"function"},"4:4119:15853":{"crate_id":4,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"6:4914:8859":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"4:12471:1875":{"crate_id":4,"path":["std","u16"],"kind":"primitive"},"4:6065:5137":{"crate_id":4,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"1:5217:3438":{"crate_id":1,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"6:5165:8940":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"1:10571:3339":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"4:11068:32719":{"crate_id":4,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"1:45338:238":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"22:1130:5508":{"crate_id":22,"path":["icu_properties","props","PropertyEnumToValueNameLinearMapperBorrowed"],"kind":"struct"},"16:908:5611":{"crate_id":16,"path":["gimli","read","endian_slice","DebugLen"],"kind":"struct"},"1:43740:5325":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"6:4970:8881":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"1:46610:7855":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:3293:276":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"16:8723:149":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"6:6443:9210":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"1:41098:7743":{"crate_id":1,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"23:915:3465":{"crate_id":23,"path":["icu_provider","key","DataKey"],"kind":"struct"},"40:368:3666":{"crate_id":40,"path":["smallvec","CollectionAllocErr"],"kind":"enum"},"4:9478:7474":{"crate_id":4,"path":["std","time","SystemTime"],"kind":"struct"},"11:1900:7276":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"32:2102:27262":{"crate_id":32,"path":["zerovec","ule","AsULE"],"kind":"trait"},"22:3654:8532":{"crate_id":22,"path":["icu_properties","provider","bidi_data","CheckedBidiPairedBracketTypeULE"],"kind":"struct"},"6:7414:9467":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"17:13610:5964":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"4:8536:5173":{"crate_id":4,"path":["std","io","Chain"],"kind":"struct"},"4:11787:7612":{"crate_id":4,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"6:6507:9242":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"5:2265:7361":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"1:45146:4232":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"22:2341:5520":{"crate_id":22,"path":["icu_properties","provider","names","PropertyEnumToValueNameLinearMapV1"],"kind":"struct"},"5:7789:7387":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"5:7737:7381":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"16:7305:6979":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"2:0:524":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"22:1873:8528":{"crate_id":22,"path":["icu_properties","props","SentenceBreakULE"],"kind":"struct"},"1:3305:2645":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"1:42474:7430":{"crate_id":1,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"4:2754:7413":{"crate_id":4,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"5:1888:3321":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"4:8895:7572":{"crate_id":4,"path":["std","path","Ancestors"],"kind":"struct"},"18:706:4242":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"17:13055:4932":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"6:5471:9078":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"1:42706:2725":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"24:0:3369":{"crate_id":24,"path":["yoke"],"kind":"module"},"22:4780:3602":{"crate_id":22,"path":["icu_properties","provider","ExemplarCharactersAuxiliaryV1Marker"],"kind":"struct"},"1:38677:10282":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"22:5247:5536":{"crate_id":22,"path":["icu_properties","sets","ErasedUnicodeSetlikeMarker"],"kind":"struct"},"17:11579:5773":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"22:1487:8522":{"crate_id":22,"path":["icu_properties","props","ScriptULE"],"kind":"struct"},"6:485:8571":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"5:1635:7357":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"4:984:7263":{"crate_id":4,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"17:2227:5619":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"11:1601:7275":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"29:1134:5453":{"crate_id":29,"path":["icu_locid","extensions","transform","key","Key"],"kind":"struct"},"6:5541:9098":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"17:16171:6576":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"4:3620:7425":{"crate_id":4,"path":["std","io","IoSliceMut"],"kind":"struct"},"1:40036:10294":{"crate_id":1,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"11:2420:3324":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"22:4822:3608":{"crate_id":22,"path":["icu_properties","provider","CanonicalCombiningClassValueToShortNameV1Marker"],"kind":"struct"},"1:43465:9698":{"crate_id":1,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"13:229:5084":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"22:1396:8521":{"crate_id":22,"path":["icu_properties","props","GeneralCategoryULE"],"kind":"struct"},"17:11065:5748":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"4:6227:231":{"crate_id":4,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"29:1061:4877":{"crate_id":29,"path":["icu_locid","extensions","transform","fields","Fields"],"kind":"struct"},"1:13323:3298":{"crate_id":1,"path":["core","str","pattern"],"kind":"module"},"1:40097:224":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"17:13427:5949":{"crate_id":17,"path":["object","read","ObjectMapFile"],"kind":"struct"},"4:11053:7449":{"crate_id":4,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"5:7089:3327":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"1:45172:134":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"16:2796:6760":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"1:3548:4313":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"16:3014:22107":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"17:14947:6219":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"17:10597:4945":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"24:104:27439":{"crate_id":24,"path":["yoke","erased","ErasedDestructor"],"kind":"trait"},"4:8011:7394":{"crate_id":4,"path":["std","thread","local","AccessError"],"kind":"struct"},"16:4983:6796":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"1:23354:7699":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"23:530:3456":{"crate_id":23,"path":["icu_provider","any","AnyProvider"],"kind":"trait"},"4:963:5119":{"crate_id":4,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"22:4661:3585":{"crate_id":22,"path":["icu_properties","provider","QuotationMarkV1Marker"],"kind":"struct"},"6:5629:9141":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"42:66:2780":{"crate_id":42,"path":["utf8_iter","Utf8CharsEx"],"kind":"trait"},"16:2640:6753":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"4:11333:173":{"crate_id":4,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"1:43225:3335":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"22:4682:3588":{"crate_id":22,"path":["icu_properties","provider","SoftDottedV1Marker"],"kind":"struct"},"23:1079:4899":{"crate_id":23,"path":["icu_provider","hello_world","HelloWorldV1"],"kind":"struct"},"14:7:7251":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"17:12723:5896":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"29:701:4872":{"crate_id":29,"path":["icu_locid","locale","Locale"],"kind":"struct"},"22:1675:8525":{"crate_id":22,"path":["icu_properties","props","LineBreakULE"],"kind":"struct"},"23:735:5467":{"crate_id":23,"path":["icu_provider","data_provider","DataProviderWithKey"],"kind":"struct"},"17:14335:6111":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"6:6700:9334":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"6:5301:9000":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"1:47589:7937":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"17:13041:5930":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"42:72:3674":{"crate_id":42,"path":["utf8_iter","indices","Utf8CharIndices"],"kind":"struct"},"22:1791:8527":{"crate_id":22,"path":["icu_properties","props","WordBreakULE"],"kind":"struct"},"22:5074:3644":{"crate_id":22,"path":["icu_properties","provider","SentenceBreakValueToShortNameV1Marker"],"kind":"struct"},"16:7058:6927":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"17:14099:6055":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"1:13283:3295":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:47615:7939":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"16:7765:7047":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"1:8140:5156":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"22:4528:3566":{"crate_id":22,"path":["icu_properties","provider","HyphenV1Marker"],"kind":"struct"},"17:13290:5698":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"16:2748:6758":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"22:1522:3495":{"crate_id":22,"path":["icu_properties","props","HangulSyllableType"],"kind":"struct"},"2:234:237":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"0:188:2382":{"crate_id":0,"path":["idna","uts46","Uts46"],"kind":"struct"},"1:38732:10283":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"6:1539:8658":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"1:41747:7464":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"4:11029:35729":{"crate_id":4,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"1:9570:3726":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"17:13537:4960":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"22:5144:5527":{"crate_id":22,"path":["icu_properties","runtime","UnicodeProperty"],"kind":"struct"},"32:3000:5430":{"crate_id":32,"path":["zerovec","ule","tuple","Tuple5ULE"],"kind":"struct"},"1:44472:4253":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"32:680:4849":{"crate_id":32,"path":["zerovec","map2d","borrowed","ZeroMap2dBorrowed"],"kind":"struct"},"1:34579:10280":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"4:10993:151":{"crate_id":4,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"17:10803:4248":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"1:43053:91":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"17:12816:5626":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"22:4941:3625":{"crate_id":22,"path":["icu_properties","provider","HangulSyllableTypeValueToLongNameV1Marker"],"kind":"struct"},"4:904:3324":{"crate_id":4,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"17:14127:6065":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"1:41083:10339":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:45122:4234":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"4:10777:7422":{"crate_id":4,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"16:6440:22969":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"16:6205:22968":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"17:1220:5617":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"22:4626:3580":{"crate_id":22,"path":["icu_properties","provider","NfkdInertV1Marker"],"kind":"struct"},"15:0:3264":{"crate_id":15,"path":["addr2line"],"kind":"module"},"4:973:15764":{"crate_id":4,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"16:5282:6805":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"4:6710:7465":{"crate_id":4,"path":["std","sync","once","OnceState"],"kind":"struct"},"17:11539:4932":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"6:6437:9207":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"18:521:27231":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"1:10195:5181":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"13:0:3257":{"crate_id":13,"path":["std_detect"],"kind":"module"},"17:12976:5920":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"1:41388:7651":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"22:2064:8530":{"crate_id":22,"path":["icu_properties","props","IndicSyllabicCategoryULE"],"kind":"struct"},"20:626:3429":{"crate_id":20,"path":["icu_normalizer","CharacterAndClass"],"kind":"struct"},"17:322:5611":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"17:10218:23031":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"1:13965:7687":{"crate_id":1,"path":["core","future","async_drop","AsyncDropInPlace"],"kind":"struct"},"17:14859:6206":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"11:1023:7267":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"22:2214:5516":{"crate_id":22,"path":["icu_properties","bidi_data","BidiAuxiliaryPropertiesBorrowed"],"kind":"struct"},"1:3057:271":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"5:7531:3319":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"17:15905:6486":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"1:4611:10307":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:47547:7935":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"22:4731:3595":{"crate_id":22,"path":["icu_properties","provider","VariationSelectorV1Marker"],"kind":"struct"},"1:23439:7711":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"22:4878:3616":{"crate_id":22,"path":["icu_properties","provider","BidiClassValueToShortNameV1Marker"],"kind":"struct"},"4:8753:7564":{"crate_id":4,"path":["std","path","Prefix"],"kind":"enum"},"17:12648:5887":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"22:4612:3578":{"crate_id":22,"path":["icu_properties","provider","NfdInertV1Marker"],"kind":"struct"},"1:41349:5179":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"17:15876:6478":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"23:595:27425":{"crate_id":23,"path":["icu_provider","dynutil","UpcastDataPayload"],"kind":"trait"},"1:44201:4045":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"37:1058:5374":{"crate_id":37,"path":["icu_locid_transform","provider","LanguageStrStrPair"],"kind":"struct"},"40:281:3324":{"crate_id":40,"path":["smallvec","IntoIter"],"kind":"struct"},"18:531:5574":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"5:3091:36210":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"37:840:4834":{"crate_id":37,"path":["icu_locid_transform","provider","fallback","LocaleFallbackParentsV1"],"kind":"struct"},"22:5123:3651":{"crate_id":22,"path":["icu_properties","provider","JoiningTypeNameToValueV1Marker"],"kind":"struct"},"5:1604:5118":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"1:44696:4259":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"4:12473:1887":{"crate_id":4,"path":["std","u64"],"kind":"primitive"},"1:11102:29194":{"crate_id":1,"path":["core","slice","sort","unstable","quicksort","GapGuard"],"kind":"struct"},"32:1753:38413":{"crate_id":32,"path":["zerovec","ule","multi","BlankSliceEncoder"],"kind":"struct"},"1:42977:89":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:42628:3727":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:43232:3334":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"5:3085:36216":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"1:46456:7838":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"17:14114:6061":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"17:13838:4968":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"1:42578:3324":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"1:4588:111":{"crate_id":1,"path":["core","asserting","Capture"],"kind":"struct"},"16:5757:6813":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"1:40084:7734":{"crate_id":1,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"16:6111:6824":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"1:2666:10245":{"crate_id":1,"path":["core","ptr","with_exposed_provenance"],"kind":"function"},"17:13451:5951":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"6:7563:9538":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"0:252:2440":{"crate_id":0,"path":["idna","domain_to_unicode"],"kind":"function"},"4:7906:7480":{"crate_id":4,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"16:8000:5067":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"5:3693:193":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"6:4984:8889":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"1:42722:3324":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"1:22607:28929":{"crate_id":1,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"4:10548:116":{"crate_id":4,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"4:10953:9609":{"crate_id":4,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"1:22098:28933":{"crate_id":1,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"16:6337:6838":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"1:8444:3680":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"17:16019:6516":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"22:4766:3600":{"crate_id":22,"path":["icu_properties","provider","BasicEmojiV1Marker"],"kind":"struct"},"17:15286:6260":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"1:8935:28848":{"crate_id":1,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"4:663:4317":{"crate_id":4,"path":["std","backtrace","Backtrace"],"kind":"struct"},"1:46692:7859":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"37:369:5351":{"crate_id":37,"path":["icu_locid_transform","fallback","LocaleFallbackerBorrowed"],"kind":"struct"},"4:8736:15912":{"crate_id":4,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"6:8249:9573":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"32:2814:5427":{"crate_id":32,"path":["zerovec","ule","tuple","Tuple2ULE"],"kind":"struct"},"0:186:2601":{"crate_id":0,"path":["idna","uts46","verify_dns_length"],"kind":"function"},"17:10778:5731":{"crate_id":17,"path":["object","read","read_cache","ReadCache"],"kind":"struct"},"4:8879:7438":{"crate_id":4,"path":["std","path","Components"],"kind":"struct"},"6:4976:8884":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"17:15655:6428":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"16:6680:6885":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackageSections"],"kind":"struct"},"22:4808:3606":{"crate_id":22,"path":["icu_properties","provider","CanonicalCombiningClassV1Marker"],"kind":"struct"},"1:7851:3968":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"16:4267:6786":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"1:46552:7844":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:11900:4047":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"17:10167:23030":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"1:41762:7424":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:32765:248":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"5:3719:4046":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"34:363:27513":{"crate_id":34,"path":["litemap","store","StoreIntoIterator"],"kind":"trait"},"1:23620:7725":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI64Inner"],"kind":"struct"},"4:4414:7431":{"crate_id":4,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"1:13349:4240":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"11:1105:7270":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"5:7648:3324":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"1:44703:3956":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"17:10115:23028":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"17:13933:6017":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"1:4918:9628":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"32:1387:3452":{"crate_id":32,"path":["zerovec","zerovec","slice","ZeroSlice"],"kind":"struct"},"6:7361:9444":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"6:4937:8867":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:15036:6239":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"37:387:5352":{"crate_id":37,"path":["icu_locid_transform","fallback","LocaleFallbackerWithConfig"],"kind":"struct"},"23:1059:27424":{"crate_id":23,"path":["icu_provider","buf","BufferFormat"],"kind":"enum"},"1:23267:5188":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"4:8049:5851":{"crate_id":4,"path":["std","thread","Thread"],"kind":"struct"},"4:12038:35745":{"crate_id":4,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"9:500:7336":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"4:3539:7424":{"crate_id":4,"path":["std","io","util","Repeat"],"kind":"struct"},"4:1099:7267":{"crate_id":4,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"17:11222:5750":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"11:2533:8546":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"4:894:4046":{"crate_id":4,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"17:13471:5626":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"5:788:121":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"16:2506:6747":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"17:13890:4981":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"22:5088:3646":{"crate_id":22,"path":["icu_properties","provider","IndicSyllabicCategoryV1Marker"],"kind":"struct"},"22:1410:4909":{"crate_id":22,"path":["icu_properties","props","GeneralCategoryTryFromError"],"kind":"struct"},"16:5113:6799":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"4:4221:15860":{"crate_id":4,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"1:41138:7744":{"crate_id":1,"path":["core","ffi","VaListImpl"],"kind":"struct"},"6:5603:9124":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"1:22595:4041":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"8:0:3258":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"11:1920:7279":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"25:6:27437":{"crate_id":25,"path":["stable_deref_trait","StableDeref"],"kind":"trait"},"23:574:3462":{"crate_id":23,"path":["icu_provider","buf","BufferProvider"],"kind":"trait"},"14:220:7259":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"4:3313:33104":{"crate_id":4,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"4:6386:7693":{"crate_id":4,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"11:1158:7272":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"16:4120:6782":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"5:2367:5124":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"1:3696:222":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"16:4241:6785":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"1:23034:15814":{"crate_id":1,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"5:7287:36290":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"17:11401:5759":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"17:13921:6016":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"6:570:8621":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"1:3335:3360":{"crate_id":1,"path":["core","marker","Freeze"],"kind":"trait"},"17:12962:23171":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"24:601:5463":{"crate_id":24,"path":["yoke","trait_hack","YokeTraitHack"],"kind":"struct"},"17:14299:6105":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV1"],"kind":"struct"},"18:680:5597":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:11772:4067":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"25:0:3370":{"crate_id":25,"path":["stable_deref_trait"],"kind":"module"},"17:3503:5623":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"4:4495:7432":{"crate_id":4,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"1:47518:7934":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"1:7852:3969":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"16:6890:5057":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"6:5658:9151":{"crate_id":6,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"17:10843:4926":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"4:9182:5135":{"crate_id":4,"path":["std","process","ExitCode"],"kind":"struct"},"17:11503:5767":{"crate_id":17,"path":["object","read","archive","ArchiveSymbol"],"kind":"struct"},"11:835:7260":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"4:12455:349":{"crate_id":4,"path":["std","array"],"kind":"primitive"},"5:7548:7378":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"6:7316:9420":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"6:6534:9249":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"1:9533:3725":{"crate_id":1,"path":["core","panic","panic_info","PanicMessage"],"kind":"struct"},"17:12787:5901":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"1:4:1288":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"4:12478:13":{"crate_id":4,"path":["std","fn"],"kind":"primitive"},"1:4849:7629":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"1:42731:207":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:2209:4901":{"crate_id":1,"path":["core","ptr","metadata","metadata"],"kind":"function"},"4:3496:15840":{"crate_id":4,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"5:4561:9608":{"crate_id":5,"path":["alloc","collections","vec_deque","shrink_to","Guard"],"kind":"struct"},"22:1108:5506":{"crate_id":22,"path":["icu_properties","props","ErasedEnumToValueNameLinearMapV1Marker"],"kind":"struct"},"32:2098:37610":{"crate_id":32,"path":["zerovec","ule","ULE","validate_byte_slice"],"kind":"function"},"1:47802:7968":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"4:2086:208":{"crate_id":4,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"1:41287:5178":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"6:4869:8838":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"17:14708:6167":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"4:12476:1955":{"crate_id":4,"path":["std","usize"],"kind":"primitive"},"16:7386:5064":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"5:2161:7359":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"20:513:3443":{"crate_id":20,"path":["icu_normalizer","provider","CanonicalCompositionsV1Marker"],"kind":"struct"},"17:10630:4946":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"17:15844:6470":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"16:7471:7001":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"16:8483:5454":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"1:45196:7811":{"crate_id":1,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"4:12052:7479":{"crate_id":4,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"4:2648:7412":{"crate_id":4,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"1:22573:15471":{"crate_id":1,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"20:615:3428":{"crate_id":20,"path":["icu_normalizer","CharacterAndTrieValue"],"kind":"struct"},"6:8296:9583":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"18:589:5577":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"4:10474:8004":{"crate_id":4,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"22:2237:5517":{"crate_id":22,"path":["icu_properties","provider","names","NormalizedPropertyNameStr"],"kind":"struct"},"5:7814:3282":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"14:160:7251":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"17:14832:6203":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"17:11592:5719":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"23:1130:5493":{"crate_id":23,"path":["icu_provider","hello_world","FormattedHelloWorld"],"kind":"struct"},"1:45346:218":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"17:15439:6374":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"1:23565:7720":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU128Inner"],"kind":"struct"},"17:11757:23076":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"22:2258:3654":{"crate_id":22,"path":["icu_properties","provider","names","GeneralCategoryMaskNameToValueV1Marker"],"kind":"struct"},"6:8267:9576":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"4:12472:1881":{"crate_id":4,"path":["std","u32"],"kind":"primitive"},"5:4498:36263":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"22:4374:3544":{"crate_id":22,"path":["icu_properties","provider","ChangesWhenCasefoldedV1Marker"],"kind":"struct"},"16:6608:217":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"4:10774:7420":{"crate_id":4,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"17:11733:23075":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"17:13145:5933":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"4:9305:5139":{"crate_id":4,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"6:5395:9031":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"20:268:3423":{"crate_id":20,"path":["icu_normalizer","IsNormalizedSinkUtf8"],"kind":"struct"},"11:1085:37478":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"42:98:3673":{"crate_id":42,"path":["utf8_iter","Utf8Chars"],"kind":"struct"},"22:4871:3615":{"crate_id":22,"path":["icu_properties","provider","BidiClassNameToValueV1Marker"],"kind":"struct"},"17:15410:6363":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"1:4576:7628":{"crate_id":1,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"4:11407:7611":{"crate_id":4,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"1:41110:4248":{"crate_id":1,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"20:0:2443":{"crate_id":20,"path":["icu_normalizer"],"kind":"module"},"17:12605:4928":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"16:3110:6777":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"6:1690:8759":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:14043:6037":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"17:15739:6448":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"17:10928:5746":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"5:984:15766":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"1:14053:29064":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:2816:3848":{"crate_id":1,"path":["core","clone","InitializingSlice"],"kind":"struct"},"16:4902:6793":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"17:15973:6507":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"1:3799:28596":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:10813:10383":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"22:4983:3631":{"crate_id":22,"path":["icu_properties","provider","LineBreakNameToValueV1Marker"],"kind":"struct"},"16:3441:6778":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"6:7368:9448":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"18:726:4920":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"36:403:3440":{"crate_id":36,"path":["icu_collections","char16trie","trie","Char16TrieIterator"],"kind":"struct"},"18:718:5603":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"6:5224:8962":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"4:8091:15750":{"crate_id":4,"path":["std","backtrace","RawFrame"],"kind":"enum"},"17:12983:23172":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"4:4899:15903":{"crate_id":4,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"41:69:5337":{"crate_id":41,"path":["utf16_iter","indices","Utf16CharIndices"],"kind":"struct"},"4:8358:7497":{"crate_id":4,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"6:8302:9584":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"1:47725:7953":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"6:5255:8975":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"29:1380:4882":{"crate_id":29,"path":["icu_locid","extensions","unicode","keywords","Keywords"],"kind":"struct"}},"external_crates":{"43":{"name":"write16","html_root_url":null},"40":{"name":"smallvec","html_root_url":null},"37":{"name":"icu_locid_transform","html_root_url":null},"34":{"name":"litemap","html_root_url":null},"31":{"name":"tinystr","html_root_url":null},"28":{"name":"zerofrom_derive","html_root_url":null},"25":{"name":"stable_deref_trait","html_root_url":null},"22":{"name":"icu_properties","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"44":{"name":"icu_normalizer_data","html_root_url":null},"41":{"name":"utf16_iter","html_root_url":null},"38":{"name":"icu_locid_transform_data","html_root_url":null},"35":{"name":"icu_provider_macros","html_root_url":null},"32":{"name":"zerovec","html_root_url":null},"29":{"name":"icu_locid","html_root_url":null},"26":{"name":"yoke_derive","html_root_url":null},"23":{"name":"icu_provider","html_root_url":null},"20":{"name":"icu_normalizer","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"42":{"name":"utf8_iter","html_root_url":null},"39":{"name":"icu_properties_data","html_root_url":null},"36":{"name":"icu_collections","html_root_url":null},"33":{"name":"zerovec_derive","html_root_url":null},"30":{"name":"writeable","html_root_url":null},"27":{"name":"zerofrom","html_root_url":null},"24":{"name":"yoke","html_root_url":null},"21":{"name":"displaydoc","html_root_url":"https://docs.rs/displaydoc/0.2.3/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":30}