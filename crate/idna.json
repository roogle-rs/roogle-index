{"root":"0:0:2467","crate_version":"1.0.2","includes_private":false,"index":{"b:1:3110-0:367:2632":{"id":"b:1:3110-0:367:2632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3113:150","1:3114:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2793-0:253:2410":{"id":"b:1:2793-0:253:2410","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:253:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2795:28306"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3099-0:188:2407":{"id":"b:1:3099-0:188:2407","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:188:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5727:2789":{"id":"5:5727:2789","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7774:257"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:308:496":{"id":"0:308:496","crate_id":0,"name":"clone","span":{"filename":"src/uts46.rs","begin":[349,30],"end":[349,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2406","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2790-0:352:2628":{"id":"b:1:2790-0:352:2628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2628","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2792:2403"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:380":{"id":"0:380","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[501,37],"end":[501,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10656:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:381:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3095-0:257:2409":{"id":"b:1:3095-0:257:2409","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2409","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3098:3908"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:304":{"id":"0:304","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[349,20],"end":[349,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"1:2877:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2406","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:782-0:257:2409":{"id":"b:5:782-0:257:2409","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:778:264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2409","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:784:2616","5:785:28313","5:786:28314"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:3322:261-0:367:2632":{"id":"a:1:3322:261-0:367:2632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:323:496":{"id":"0:323:496","crate_id":0,"name":"clone","span":{"filename":"src/uts46.rs","begin":[434,30],"end":[434,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Hyphens","id":"0:309:2433","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42831:3759-0:188:2407":{"id":"a:1:42831:3759-0:188:2407","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42831:3759","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:188:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3095-0:400:2412":{"id":"b:1:3095-0:400:2412","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:400:2412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3098:3908"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:3322:261-0:352:2628":{"id":"a:1:3322:261-0:352:2628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2628","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2790-0:309:2433":{"id":"b:1:2790-0:309:2433","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2433","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2792:2403"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13862:36286":{"id":"1:13862:36286","crate_id":1,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"4:12652:492","self::pattern":"1:13453:3330"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13460:3320","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:13460:3320","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13477:4278","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:22":{"id":"0:22","crate_id":0,"name":null,"span":{"filename":"src/deprecated.rs","begin":[143,0],"end":[153,1]},"visibility":"default","docs":"The defaults are that of _beStrict=false_ in the [WHATWG URL Standard](https://url.spec.whatwg.org/#idna)","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"1:3147:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2409","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:23:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3095-0:367:2632":{"id":"b:1:3095-0:367:2632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3098:3908"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:240-0:257:2409":{"id":"0:240-0:257:2409","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,28],"end":[61,34]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"crate::deprecated::Config","name":"Config","id":"0:257:2409","glob":false}}},"b:1:2790-0:400:2412":{"id":"b:1:2790-0:400:2412","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:400:2412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2792:2403"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3967-0:253:2410":{"id":"b:1:3967-0:253:2410","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:253:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3969:1872"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13766:36268":{"id":"1:13766:36268","crate_id":1,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13777:31652":{"id":"1:13777:31652","crate_id":1,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"1:42736:203"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"1:42734:206","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"1:11577:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:11577:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13850:36282":{"id":"1:13850:36282","crate_id":1,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:400:2412":{"id":"0:400:2412","crate_id":0,"name":"Errors","span":{"filename":"src/lib.rs","begin":[66,0],"end":[66,20]},"visibility":"public","docs":"Type indicating that there were errors during UTS #46 processing.","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["a:1:32945:249-0:400:2412","a:1:3322:261-0:400:2412","a:1:3357:3392-0:400:2412","a:1:33003:3395-0:400:2412","a:1:42830:3760-0:400:2412","a:1:42831:3759-0:400:2412","b:1:2790-0:400:2412","b:1:2793-0:400:2412","b:1:3095-0:400:2412","b:1:3099-0:400:2412","b:1:3105-0:400:2412","b:1:3110-0:400:2412","b:1:3967-0:400:2412","b:5:5962-0:400:2412","b:23:483-0:400:2412","b:24:105-0:400:2412","0:401","0:403","0:242","0:244","0:245"]}}},"b:23:483-0:367:2632":{"id":"b:23:483-0:367:2632","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/icu_provider-1.5.0/src/any.rs","begin":[32,0],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MaybeSendSync","id":"23:482:27475","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3110-0:299:2406":{"id":"b:1:3110-0:299:2406","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2406","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3113:150","1:3114:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:24:105-0:367:2632":{"id":"b:24:105-0:367:2632","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/yoke-0.7.4/src/erased.rs","begin":[22,0],"end":[22,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ErasedDestructor","id":"24:104:27497","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:302":{"id":"0:302","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[349,9],"end":[349,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2872:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2406","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:303:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:110:2762":{"id":"0:110:2762","crate_id":0,"name":"encode_str","span":{"filename":"src/punycode.rs","begin":[322,0],"end":[330,1]},"visibility":"public","docs":"Convert an Unicode `str` to Punycode.\n\nThis is a convenience wrapper around `encode`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["input",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42734:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"alloc::string::String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3322:261-0:253:2410":{"id":"a:1:3322:261-0:253:2410","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:253:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:181:2954":{"id":"0:181:2954","crate_id":0,"name":"URL","span":{"filename":"src/uts46.rs","begin":[430,4],"end":[430,78]},"visibility":"public","docs":"[Forbidden domain code point](https://url.spec.whatwg.org/#forbidden-domain-code-point) from the WHATWG URL Standard.\n\nEquivalent to `AsciiDenyList::new(true, \"%#/:<>?@[\\\\]^|\")`.\n\nNote that this deny list rejects IPv6 addresses, so (as in URL\nparsing) you need to check for IPv6 addresses first and not\nput them through UTS 46 processing.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2406","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"_"}}},"0:322":{"id":"0:322","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[434,30],"end":[434,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2433","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:323:496"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:3357:3392-0:257:2409":{"id":"a:1:3357:3392-0:257:2409","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3357:3392","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2409","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2790-0:257:2409":{"id":"b:1:2790-0:257:2409","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2409","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2792:2403"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:207:2623":{"id":"0:207:2623","crate_id":0,"name":"process","span":{"filename":"src/uts46.rs","begin":[842,4],"end":[1114,5]},"visibility":"public","docs":"The lower-level function that [`Uts46::to_ascii`], [`Uts46::to_unicode`], and\n[`Uts46::to_user_interface`] are built on to allow support for output types other\nthan `Cow<'a, str>` (e.g. string types in a non-Rust programming language).\n\n# Arguments\n\n* `domain_name` - The input domain name as UTF-8 bytes. (The UTF-8ness is checked by\nthis method and input that is not well-formed UTF-8 is treated as an error. If you\nalready have a `&str`, call `.as_bytes()` on it.)\n* `ascii_deny_list` - What ASCII deny list, if any, to apply. The UTS 46\n_UseSTD3ASCIIRules_ flag or the WHATWG URL Standard forbidden domain code point\nprocessing is handled via this argument. Most callers are probably the best off\nby using [`AsciiDenyList::URL`] here.\n* `hyphens` - The UTS 46 _CheckHyphens_ flag. Most callers are probably the best\noff by using [`Hyphens::Allow`] here.\n* `error_policy` - Whether to fail fast or to produce output that may be rendered\nfor the user to examine in case of errors.\n* `output_as_unicode` - A closure for deciding if a label should be output as Unicode\n(as opposed to Punycode). The first argument is the label for which a decision is\nneeded (always non-empty slice). The second argument is the TLD (potentially empty).\nThe third argument is `true` iff the domain name as a whole is a bidi domain name.\nOnly non-erroneous labels that contain at least one non-ASCII character are passed\nto the closure as the first argument. The second and third argument values are\nguaranteed to remain the same during a single call to `process`, and the closure\nmay cache computations derived from the second and third argument (hence the\n`FnMut` type). To perform the _ToASCII_ operation, `|_, _, _| false` must be\npassed as the closure. To perform the _ToUnicode_ operation, `|_, _, _| true` must\nbe passed as the closure. A more complex closure may be used to prepare a domain\nname for display in a user interface so that labels are converted to the Unicode\nform in general but potentially misleading labels are converted to the Punycode\nform.\n`sink` - The object that receives the output (in the non-passthrough case).\n`ascii_sink` - A second sink that receives the _ToASCII_ form only if there\nwere no errors and `sink` received at least one character of non-ASCII output.\nThe purpose of this argument is to enable a user interface display form of the\ndomain and the _ToASCII_ form of the domain to be computed efficiently together.\nThis argument is useless when `output_as_unicode` always returns `false`, in\nwhich case the _ToASCII_ form ends up in `sink` already. If `ascii_sink` receives\nno output and the return value is `Ok(ProcessingSuccess::WroteToSink)`, use the\noutput received by `sink` also as the _ToASCII_ result.\n\n# Return value\n\n* `Ok(ProcessingSuccess::Passthrough)` - The caller must treat\n`unsafe { core::str::from_utf8_unchecked(domain_name) }` as the output. (This\nreturn value asserts that calling `core::str::from_utf8_unchecked(domain_name)`\nis safe.)\n* `Ok(ProcessingSuccess::WroteToSink)` - The caller must treat was was written\nto `sink` as the output. If another sink was passed as `ascii_sink` but it did\nnot receive output, the caller must treat what was written to `sink` also as\nthe _ToASCII_ output. Otherwise, if `ascii_sink` received output, the caller\nmust treat what was written to `ascii_sink` as the _ToASCII_ output.\n* `Err(ProcessingError::ValidityError)` - The input was in error and must\nnot be used for DNS lookup or otherwise in a network protocol. If `error_policy`\nwas `ErrorPolicy::MarkErrors`, the output written to `sink` may be displayed\nto the user as an illustration of where the error was or the errors were.\n* `Err(ProcessingError::SinkError)` - Either `sink` or `ascii_sink` returned\n[`core::fmt::Error`]. The partial output written to `sink` `ascii_sink` must not\nbe used. If `W` never returns [`core::fmt::Error`], this method never returns\n`Err(ProcessingError::SinkError)`.\n\n# Safety-usable invariant\n\nIf the return value is `Ok(ProcessingSuccess::Passthrough)`, `domain_name` is\nASCII and `core::str::from_utf8_unchecked(domain_name)` is safe. (Note:\nOther return values do _not_ imply that `domain_name` wasn't ASCII!)\n\n# Security considerations\n\nShowing labels whose Unicode form might mislead the user as Punycode instead is\nan imperfect security mechanism, because [the Punycode form itself may be resemble\na user-recognizable name](https://www.unicode.org/reports/tr36/#TablePunycodeSpoofing).\nHowever, since this mechanism is common practice, this API provides support for the\nthe mechanism.\n\nPunycode processing is quadratic, so to avoid denial of service, this method imposes\nlength limits on Punycode treating especially long inputs as being in error. These\nlimits are well higher than the DNS length limits and are not more restrictive than\nthe limits imposed by ICU4C.","links":{"`Uts46::to_unicode`":"0:201:2466","`Uts46::to_ascii`":"0:198:2432","`Hyphens::Allow`":"0:310:2434","`Uts46::to_user_interface`":"0:204:3039","`AsciiDenyList::URL`":"0:181:2954","`core::fmt::Error`":"1:43900:150"},"attrs":["#[allow(clippy::too_many_arguments)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["domain_name",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["ascii_deny_list",{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2406","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["hyphens",{"resolved_path":{"name":"Hyphens","id":"0:309:2433","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["error_policy",{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2626","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["output_as_unicode",{"generic":"OutputUnicode"}],["sink",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"W"}}}],["ascii_sink",{"resolved_path":{"name":"Option","id":"1:42734:206","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"W"}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:43002:238","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2628","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"ProcessingError","id":"0:367:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Write","id":"1:10605:2673","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"OutputUnicode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:3596:154","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"char"}}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"char"}}}},{"primitive":"bool"}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13796:36273":{"id":"1:13796:36273","crate_id":1,"name":"lines_any","span":null,"visibility":"public","docs":"Returns an iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"1:44998:4284","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:242":{"id":"0:242","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[68,0],"end":[72,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Errors","id":"0:400:2412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Result","id":"1:43002:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Errors","id":"0:400:2412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:243:860"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13836:36276":{"id":"1:13836:36276","crate_id":1,"name":"rmatches","span":null,"visibility":"public","docs":"Returns an iterator over the disjoint matches of a pattern within this\nstring slice, yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"1:13453:3330","`DoubleEndedIterator`":"1:8394:134","prim@char":"4:12652:492","str::matches":"1:13834:3265"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"1:44956:4297","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13460:3320","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:13460:3320","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13477:4278","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3322:261-0:309:2433":{"id":"a:1:3322:261-0:309:2433","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2433","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3105-0:400:2412":{"id":"b:1:3105-0:400:2412","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:400:2412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3108:150","1:3109:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:42830:3760-0:253:2410":{"id":"a:1:42830:3760-0:253:2410","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42830:3760","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:253:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:32945:249-0:339:2626":{"id":"a:1:32945:249-0:339:2626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2626","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:13852:36284":{"id":"1:13852:36284","crate_id":1,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"4:12652:492","self::pattern":"1:13453:3330"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13460:3320","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:13460:3320","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"1:13482:4277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3099-0:299:2406":{"id":"b:1:3099-0:299:2406","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2406","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:8-0:299:2406":{"id":"0:8-0:299:2406","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[53,0],"end":[53,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"uts46::AsciiDenyList","name":"AsciiDenyList","id":"0:299:2406","glob":false}}},"0:241-0:253:2410":{"id":"0:241-0:253:2410","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,36],"end":[61,40]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"crate::deprecated::Idna","name":"Idna","id":"0:253:2410","glob":false}}},"0:317":{"id":"0:317","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[434,9],"end":[434,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2872:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2433","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:318:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2825-0:352:2628":{"id":"b:1:2825-0:352:2628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"1:3317:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2820:3883","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2628","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2827:28311"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:32945:249-0:352:2628":{"id":"a:1:32945:249-0:352:2628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2628","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:32945:249-0:367:2632":{"id":"a:1:32945:249-0:367:2632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:245":{"id":"0:245","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[77,0],"end":[81,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"1:10661:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:400:2412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:246:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13872:2719":{"id":"1:13872:2719","crate_id":1,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13779:31653":{"id":"1:13779:31653","crate_id":1,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"1:11577:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:11577:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3110-0:309:2433":{"id":"b:1:3110-0:309:2433","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2433","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3113:150","1:3114:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2790-0:324:2435":{"id":"b:1:2790-0:324:2435","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2792:2403"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:368:2633":{"id":"0:368:2633","crate_id":0,"name":"ValidityError","span":{"filename":"src/uts46.rs","begin":[507,4],"end":[507,17]},"visibility":"default","docs":"There was a validity error according to the chosen options.\n\nIn case of `Operation::ToAscii`, there is no output. Otherwise, output was written to the\nsink and the output contains at least one U+FFFD REPLACEMENT CHARACTER to denote an error.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:1:3105-0:253:2410":{"id":"b:1:3105-0:253:2410","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:253:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3108:150","1:3109:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:42831:3759-0:352:2628":{"id":"a:1:42831:3759-0:352:2628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42831:3759","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2628","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:3357:3392-0:309:2433":{"id":"a:1:3357:3392-0:309:2433","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3357:3392","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2433","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3967-0:400:2412":{"id":"b:1:3967-0:400:2412","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:400:2412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3969:1872"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2822-0:352:2628":{"id":"b:1:2822-0:352:2628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2820:3883","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2628","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2824:28311"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:365":{"id":"0:365","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[483,37],"end":[483,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10656:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2628","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:366:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:3109:1859":{"id":"1:3109:1859","crate_id":1,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"1:43002:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:33003:3395-0:253:2410":{"id":"a:1:33003:3395-0:253:2410","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:33003:3395","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:253:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:403":{"id":"0:403","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,18],"end":[64,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10656:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:400:2412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:404:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:42830:3760-0:257:2409":{"id":"a:1:42830:3760-0:257:2409","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42830:3760","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2409","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:3357:3392-0:339:2626":{"id":"a:1:3357:3392-0:339:2626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3357:3392","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2626","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2790-0:367:2632":{"id":"b:1:2790-0:367:2632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2792:2403"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3110-0:253:2410":{"id":"b:1:3110-0:253:2410","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:253:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3113:150","1:3114:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2822-0:257:2409":{"id":"b:1:2822-0:257:2409","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2820:3883","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2409","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2824:28311"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:303:725":{"id":"0:303:725","crate_id":0,"name":"eq","span":{"filename":"src/uts46.rs","begin":[349,9],"end":[349,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2406","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2822-0:367:2632":{"id":"b:1:2822-0:367:2632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2820:3883","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2824:28311"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3967-0:367:2632":{"id":"b:1:3967-0:367:2632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3969:1872"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:24:105-0:188:2407":{"id":"b:24:105-0:188:2407","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/yoke-0.7.4/src/erased.rs","begin":[22,0],"end":[22,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ErasedDestructor","id":"24:104:27497","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:188:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:32945:249-0:400:2412":{"id":"a:1:32945:249-0:400:2412","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:400:2412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:360":{"id":"0:360","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[483,20],"end":[483,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"1:2877:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2628","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13800:3171":{"id":"1:13800:3171","crate_id":1,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, in which case this function will return true if\nthe `&str` is a prefix of this string slice.\n\nThe [pattern] can also be a [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\nThese will only be checked against the first character of this string slice.\nLook at the second example below regarding behavior for slices of [`char`]s.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```\n\n```\nlet bananas = \"bananas\";\n\n// Note that both of these assert successfully.\nassert!(bananas.starts_with(&['b', 'a', 'n', 'a']));\nassert!(bananas.starts_with(&['a', 'b', 'c', 'd']));\n```","links":{"prim@char":"4:12652:492","self::pattern":"1:13453:3330"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13460:3320","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:321":{"id":"0:321","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[434,24],"end":[434,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"1:3317:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2433","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13783:36271":{"id":"1:13783:36271","crate_id":1,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"4:12658:1772","str::slice_mut_unchecked":"1:13784:36272","crate::ops::Index":"1:40277:3349"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:782-0:309:2433":{"id":"b:5:782-0:309:2433","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:778:264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2433","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:784:2616","5:785:28313","5:786:28314"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5713:10190":{"id":"5:5713:10190","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7774:257"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13460:3320","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2793-0:309:2433":{"id":"b:1:2793-0:309:2433","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2433","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2795:28306"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3967-0:299:2406":{"id":"b:1:3967-0:299:2406","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2406","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3969:1872"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:374:725":{"id":"0:374:725","crate_id":0,"name":"eq","span":{"filename":"src/uts46.rs","begin":[501,9],"end":[501,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ProcessingError","id":"0:367:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:188:2407":{"id":"0:188:2407","crate_id":0,"name":"Uts46","span":{"filename":"src/uts46.rs","begin":[568,0],"end":[574,1]},"visibility":"public","docs":"An implementation of UTS #46.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:196","a:1:32945:249-0:188:2407","a:1:3322:261-0:188:2407","a:1:3357:3392-0:188:2407","a:1:33003:3395-0:188:2407","a:1:42830:3760-0:188:2407","a:1:42831:3759-0:188:2407","b:1:2790-0:188:2407","b:1:2793-0:188:2407","b:1:3095-0:188:2407","b:1:3099-0:188:2407","b:1:3105-0:188:2407","b:1:3110-0:188:2407","b:1:3967-0:188:2407","b:23:483-0:188:2407","b:24:105-0:188:2407","0:194"]}}},"0:347":{"id":"0:347","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[471,20],"end":[471,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"1:2877:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2626","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:24:105-0:253:2410":{"id":"b:24:105-0:253:2410","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/yoke-0.7.4/src/erased.rs","begin":[22,0],"end":[22,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ErasedDestructor","id":"24:104:27497","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:253:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:338:496":{"id":"0:338:496","crate_id":0,"name":"clone","span":{"filename":"src/uts46.rs","begin":[458,30],"end":[458,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"DnsLength","id":"0:324:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:51:642":{"id":"0:51:642","crate_id":0,"name":"decode","span":{"filename":"src/punycode.rs","begin":[62,0],"end":[69,1]},"visibility":"public","docs":"Convert Punycode to Unicode.\n\nReturn None on malformed input or overflow.\nOverflow can only happen on inputs that take more than\n63 encoded bytes, the DNS limit on domain name labels.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["input",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42734:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"alloc::vec::Vec","id":"5:7200:280","args":{"angle_bracketed":{"args":[{"type":{"primitive":"char"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13771:2442":{"id":"1:13771:2442","crate_id":1,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"1:12976:4280"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:357":{"id":"0:357","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[483,9],"end":[483,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"1:32947:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2628","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:402:60":{"id":"0:402:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[64,9],"end":[64,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Errors","id":"0:400:2412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3110-0:188:2407":{"id":"b:1:3110-0:188:2407","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:188:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3113:150","1:3114:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3105-0:352:2628":{"id":"b:1:3105-0:352:2628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2628","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3108:150","1:3109:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:42831:3759-0:400:2412":{"id":"a:1:42831:3759-0:400:2412","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42831:3759","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:400:2412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:2795:28306":{"id":"1:2795:28306","crate_id":1,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:350":{"id":"0:350","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[471,30],"end":[471,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2626","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:351:496"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:334":{"id":"0:334","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[458,20],"end":[458,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"1:2877:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2793-0:188:2407":{"id":"b:1:2793-0:188:2407","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:188:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2795:28306"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2825-0:309:2433":{"id":"b:1:2825-0:309:2433","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"1:3317:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2820:3883","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2433","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2827:28311"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:50:2697":{"id":"0:50:2697","crate_id":0,"name":"decode_to_string","span":{"filename":"src/punycode.rs","begin":[48,0],"end":[55,1]},"visibility":"public","docs":"Convert Punycode to an Unicode `String`.\n\nReturn None on malformed input or overflow.\nOverflow can only happen on inputs that take more than\n63 encoded bytes, the DNS limit on domain name labels.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["input",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42734:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"alloc::string::String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:255":{"id":"0:255","crate_id":0,"name":null,"span":{"filename":"src/deprecated.rs","begin":[65,9],"end":[65,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"1:3147:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:253:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:256:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3105-0:257:2409":{"id":"b:1:3105-0:257:2409","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2409","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3108:150","1:3109:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2822-0:339:2626":{"id":"b:1:2822-0:339:2626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2820:3883","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2626","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2824:28311"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:28:2639":{"id":"0:28:2639","crate_id":0,"name":"check_hyphens","span":{"filename":"src/deprecated.rs","begin":[199,4],"end":[202,5]},"visibility":"public","docs":"Whether to enforce STD3 rules for hyphen placement.\n\n`true` to deny hyphens in the first and last positions.\n`false` to not enforce hyphen placement.\n\nNote that for backward compatibility this is not the same as\nUTS 46 _CheckHyphens_, which also disallows hyphens in the\nthird and fourth positions.\n\nNote that `true` rejects real-world names, including some GitHub user pages.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["value",{"primitive":"bool"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:362":{"id":"0:362","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[483,24],"end":[483,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"1:3317:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2628","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3105-0:367:2632":{"id":"b:1:3105-0:367:2632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3108:150","1:3109:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:250:2452":{"id":"0:250:2452","crate_id":0,"name":"domain_to_ascii_strict","span":{"filename":"src/lib.rs","begin":[136,0],"end":[145,1]},"visibility":"public","docs":"The [domain to ASCII](https://url.spec.whatwg.org/#concept-domain-to-ascii) algorithm,\nwith the `beStrict` flag set.\n\nNote that this rejects various real-world names including:\n* YouTube CDN nodes\n* Some GitHub user pages\n* Pseudo-hosts used by various TXT record-based protocols.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["domain",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:43002:238","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"alloc::string::String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Errors","id":"0:400:2412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13790:2602":{"id":"1:13790:2602","crate_id":1,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"4:12652:492"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"1:44704:3325","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13791:4121":{"id":"1:13791:4121","crate_id":1,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"4:12652:492"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"1:44710:4287","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13793:28516":{"id":"1:13793:28516","crate_id":1,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"1:13794:28517"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"1:45008:4289","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13808:3914":{"id":"1:13808:3914","crate_id":1,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"1:42736:203","prim@char":"4:12652:492","self::pattern":"1:13453:3330"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:42734:206","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13460:3320","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:13460:3320","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13477:4278","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:345":{"id":"0:345","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[471,9],"end":[471,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2872:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2626","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:346:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:349":{"id":"0:349","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[471,24],"end":[471,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"1:3317:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2626","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:42831:3759-0:309:2433":{"id":"a:1:42831:3759-0:309:2433","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42831:3759","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2433","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:3357:3392-0:324:2435":{"id":"a:1:3357:3392-0:324:2435","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3357:3392","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2793-0:352:2628":{"id":"b:1:2793-0:352:2628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2628","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2795:28306"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13786:3197":{"id":"1:13786:3197","crate_id":1,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divides one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_mut_checked`](str::split_at_mut_checked).\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"1:13785:2904","str::split_at_mut_checked":"1:13788:32570"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:329:2455":{"id":"0:329:2455","crate_id":0,"name":"Verify","span":{"filename":"src/uts46.rs","begin":[467,4],"end":[467,10]},"visibility":"default","docs":"_VerifyDNSLength=true_. (The trailing root label dot is not allowed.)","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:112:718":{"id":"0:112:718","crate_id":0,"name":"encode","span":{"filename":"src/punycode.rs","begin":[336,0],"end":[344,1]},"visibility":"public","docs":"Convert Unicode to Punycode.\n\nReturn None on overflow, which can only happen on inputs that would take more than\n63 encoded bytes, the DNS limit on domain name labels.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["input",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"char"}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42734:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"alloc::string::String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:24:105-0:400:2412":{"id":"b:24:105-0:400:2412","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/yoke-0.7.4/src/erased.rs","begin":[22,0],"end":[22,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ErasedDestructor","id":"24:104:27497","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:400:2412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:177":{"id":"0:177","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[355,0],"end":[431,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2406","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:178:1212","0:179:2443","0:180:2453","0:181:2954"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:32:2432":{"id":"0:32:2432","crate_id":0,"name":"to_ascii","span":{"filename":"src/deprecated.rs","begin":[235,4],"end":[239,5]},"visibility":"public","docs":"[UTS 46 ToASCII](http://www.unicode.org/reports/tr46/#ToASCII)","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["domain",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:43002:238","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Errors","id":"0:400:2412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3322:261-0:257:2409":{"id":"a:1:3322:261-0:257:2409","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2409","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:42830:3760-0:299:2406":{"id":"a:1:42830:3760-0:299:2406","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42830:3760","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2406","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:42831:3759-0:299:2406":{"id":"a:1:42831:3759-0:299:2406","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42831:3759","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2406","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3967-0:324:2435":{"id":"b:1:3967-0:324:2435","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3969:1872"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:372":{"id":"0:372","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[501,9],"end":[501,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"1:32947:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:3108:150":{"id":"1:3108:150","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:253:2410":{"id":"0:253:2410","crate_id":0,"name":"Idna","span":{"filename":"src/deprecated.rs","begin":[67,0],"end":[69,1]},"visibility":"public","docs":"Deprecated. Use the crate-top-level functions or [`Uts46`].","links":{"`Uts46`":"0:188:2407"},"attrs":["#[deprecated]"],"deprecation":{"since":null,"note":null},"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:16","a:1:32945:249-0:253:2410","a:1:3322:261-0:253:2410","a:1:3357:3392-0:253:2410","a:1:33003:3395-0:253:2410","a:1:42830:3760-0:253:2410","a:1:42831:3759-0:253:2410","b:1:2790-0:253:2410","b:1:2793-0:253:2410","b:1:3095-0:253:2410","b:1:3099-0:253:2410","b:1:3105-0:253:2410","b:1:3110-0:253:2410","b:1:3967-0:253:2410","b:23:483-0:253:2410","b:24:105-0:253:2410","0:255"]}}},"b:1:3110-0:400:2412":{"id":"b:1:3110-0:400:2412","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:400:2412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3113:150","1:3114:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2790-0:253:2410":{"id":"b:1:2790-0:253:2410","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:253:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2792:2403"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:3357:3392-0:188:2407":{"id":"a:1:3357:3392-0:188:2407","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3357:3392","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:188:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:42830:3760-0:188:2407":{"id":"a:1:42830:3760-0:188:2407","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42830:3760","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:188:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:13878:32502":{"id":"1:13878:32502","crate_id":1,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"1:1148:42119"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:201:2466":{"id":"0:201:2466","crate_id":0,"name":"to_unicode","span":{"filename":"src/uts46.rs","begin":[679,4],"end":[686,5]},"visibility":"public","docs":"Performs the [ToUnicode](https://www.unicode.org/reports/tr46/#ToUnicode) operation\nfrom UTS #46 according to the options given. When there\nare errors, there is still output, which may be rendered user, even through\nthe output must not be used in networking protocols. Errors are denoted\nby U+FFFD REPLACEMENT CHARACTERs in the output. (That is, if the second item of the\nreturn tuple is `Err`, the first item of the return tuple is guaranteed to contain\nat least one U+FFFD.)\n\nMost applications probably shouldn't use this method and should be using\n[`Uts46::to_user_interface`] instead.\n\n# Arguments\n\n* `domain_name` - The input domain name as UTF-8 bytes. (The UTF-8ness is checked by\nthis method and input that is not well-formed UTF-8 is treated as an error. If you\nalready have a `&str`, call `.as_bytes()` on it.)\n* `ascii_deny_list` - What ASCII deny list, if any, to apply. The UTS 46\n_UseSTD3ASCIIRules_ flag or the WHATWG URL Standard forbidden domain code point\nprocessing is handled via this argument. Most callers are probably the best off\nby using [`AsciiDenyList::URL`] here.\n* `hyphens` - The UTS 46 _CheckHyphens_ flag. Most callers are probably the best\noff by using [`Hyphens::Allow`] here.","links":{"`Uts46::to_user_interface`":"0:204:3039","`AsciiDenyList::URL`":"0:181:2954","`Hyphens::Allow`":"0:310:2434"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["domain_name",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["ascii_deny_list",{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2406","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["hyphens",{"resolved_path":{"name":"Hyphens","id":"0:309:2433","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"tuple":[{"resolved_path":{"name":"Cow","id":"5:787:122","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}},{"resolved_path":{"name":"Result","id":"1:43002:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"crate::Errors","id":"0:400:2412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5725:37005":{"id":"5:5725:37005","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7774:257"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:782-0:324:2435":{"id":"b:5:782-0:324:2435","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:778:264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:784:2616","5:785:28313","5:786:28314"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:5962-0:400:2412":{"id":"b:5:5962-0:400:2412","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"1:10661:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5960:265","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:400:2412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5964:1832"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:24:105-0:339:2626":{"id":"b:24:105-0:339:2626","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/yoke-0.7.4/src/erased.rs","begin":[22,0],"end":[22,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ErasedDestructor","id":"24:104:27497","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2626","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:355:2631":{"id":"0:355:2631","crate_id":0,"name":"WroteToSink","span":{"filename":"src/uts46.rs","begin":[497,4],"end":[497,15]},"visibility":"default","docs":"There were no errors. The caller must consider what was written to the sink to be the output.\n\n(Distinct from `Passthrough` in order to allow `Cow` behavior to be implemented on top of\n[`Uts46::process`].)","links":{"`Uts46::process`":"0:207:2623"},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:23:483-0:352:2628":{"id":"b:23:483-0:352:2628","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/icu_provider-1.5.0/src/any.rs","begin":[32,0],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MaybeSendSync","id":"23:482:27475","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2628","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:377":{"id":"0:377","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[501,24],"end":[501,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"1:3317:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3099-0:352:2628":{"id":"b:1:3099-0:352:2628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2628","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:262":{"id":"0:262","crate_id":0,"name":null,"span":{"filename":"src/deprecated.rs","begin":[132,9],"end":[132,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2409","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:263:496"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:23:483-0:299:2406":{"id":"b:23:483-0:299:2406","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/icu_provider-1.5.0/src/any.rs","begin":[32,0],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MaybeSendSync","id":"23:482:27475","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2406","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:332":{"id":"0:332","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[458,9],"end":[458,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2872:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:333:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:370:2634":{"id":"0:370:2634","crate_id":0,"name":"SinkError","span":{"filename":"src/uts46.rs","begin":[511,4],"end":[511,13]},"visibility":"default","docs":"The sink emitted [`core::fmt::Error`]. The partial output written to the sink must not\nbe used.","links":{"`core::fmt::Error`":"1:43900:150"},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:381:830":{"id":"0:381:830","crate_id":0,"name":"fmt","span":{"filename":"src/uts46.rs","begin":[501,37],"end":[501,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:10623:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:10604:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:252:2465":{"id":"0:252:2465","crate_id":0,"name":"domain_to_unicode","span":{"filename":"src/lib.rs","begin":[161,0],"end":[168,1]},"visibility":"public","docs":"The [domain to Unicode](https://url.spec.whatwg.org/#concept-domain-to-unicode) algorithm;\nversion returning `String` and no ASCII deny list (i.e. _UseSTD3ASCIIRules=false_).\n\nThis function exists for backward-compatibility. Consider using [`Uts46::to_user_interface`]\nor [`Uts46::to_unicode`].\n\nReturn the Unicode representation of a domain name,\nnormalizing characters (upper-case to lower-case and other kinds of equivalence)\nand decoding Punycode as necessary.\n\nIf the second item of the tuple indicates an error, the first item of the tuple\ndenotes errors using the REPLACEMENT CHARACTERs in order to be able to illustrate\nerrors to the user. When the second item of the return tuple signals an error,\nthe first item of the tuple must not be used in a network protocol.","links":{"`Uts46::to_user_interface`":"0:204:3039","`Uts46::to_unicode`":"0:201:2466"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["domain",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"tuple":[{"resolved_path":{"name":"alloc::string::String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"resolved_path":{"name":"Result","id":"1:43002:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Errors","id":"0:400:2412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3110-0:257:2409":{"id":"b:1:3110-0:257:2409","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2409","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3113:150","1:3114:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:299:2406":{"id":"0:299:2406","crate_id":0,"name":"AsciiDenyList","span":{"filename":"src/uts46.rs","begin":[351,0],"end":[353,1]},"visibility":"public","docs":"The ASCII deny list to be applied.","links":{},"attrs":["#[repr(transparent)]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:177","a:1:32945:249-0:299:2406","a:1:3322:261-0:299:2406","a:1:3357:3392-0:299:2406","a:1:33003:3395-0:299:2406","a:1:42830:3760-0:299:2406","a:1:42831:3759-0:299:2406","b:1:2790-0:299:2406","b:1:2793-0:299:2406","b:1:2822-0:299:2406","b:1:2825-0:299:2406","b:1:3095-0:299:2406","b:1:3099-0:299:2406","b:1:3105-0:299:2406","b:1:3110-0:299:2406","b:1:3967-0:299:2406","b:5:782-0:299:2406","b:23:483-0:299:2406","b:24:105-0:299:2406","0:301","0:302","0:304","0:306","0:307"]}}},"0:379:496":{"id":"0:379:496","crate_id":0,"name":"clone","span":{"filename":"src/uts46.rs","begin":[501,30],"end":[501,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ProcessingError","id":"0:367:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3322:261-0:324:2435":{"id":"a:1:3322:261-0:324:2435","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:351:496":{"id":"0:351:496","crate_id":0,"name":"clone","span":{"filename":"src/uts46.rs","begin":[471,30],"end":[471,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2626","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5726:37006":{"id":"5:5726:37006","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:299:3322","`String`":"5:7774:257"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:299:3322","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:24:105-0:299:2406":{"id":"b:24:105-0:299:2406","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/yoke-0.7.4/src/erased.rs","begin":[22,0],"end":[22,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ErasedDestructor","id":"24:104:27497","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2406","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3095-0:352:2628":{"id":"b:1:3095-0:352:2628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2628","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3098:3908"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:404:830":{"id":"0:404:830","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[64,18],"end":[64,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:10623:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:10604:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13773:352":{"id":"1:13773:352","crate_id":1,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"1:13774:32548","`u8`":"4:12671:1903"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:26:2622":{"id":"0:26:2622","crate_id":0,"name":"transitional_processing","span":{"filename":"src/deprecated.rs","begin":[172,4],"end":[175,5]},"visibility":"public","docs":"Whether to enable (deprecated) transitional processing.\n\nNote that Firefox, Safari, and Chrome do not use transitional\nprocessing.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["value",{"primitive":"bool"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13797:28518":{"id":"1:13797:28518","crate_id":1,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"1:45026:4283","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:263:496":{"id":"0:263:496","crate_id":0,"name":"clone","span":{"filename":"src/deprecated.rs","begin":[132,9],"end":[132,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Config","id":"0:257:2409","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3967-0:257:2409":{"id":"b:1:3967-0:257:2409","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2409","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3969:1872"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:42830:3760-0:324:2435":{"id":"a:1:42830:3760-0:324:2435","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42830:3760","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3095-0:253:2410":{"id":"b:1:3095-0:253:2410","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:253:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3098:3908"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:307":{"id":"0:307","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[349,30],"end":[349,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2406","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:308:496"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:33003:3395-0:352:2628":{"id":"a:1:33003:3395-0:352:2628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:33003:3395","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2628","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:33003:3395-0:309:2433":{"id":"a:1:33003:3395-0:309:2433","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:33003:3395","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2433","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:256:60":{"id":"0:256:60","crate_id":0,"name":"default","span":{"filename":"src/deprecated.rs","begin":[65,9],"end":[65,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Idna","id":"0:253:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:314:2454":{"id":"0:314:2454","crate_id":0,"name":"Check","span":{"filename":"src/uts46.rs","begin":[454,4],"end":[454,9]},"visibility":"default","docs":"_CheckHyphens=true_: Prohibit hyphens in the first, third, fourth,\nand last position in the label.\n\nNote that this mode rejects real-world names, including YouTube CDN nodes\nand some GitHub user pages.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:29:2662":{"id":"0:29:2662","crate_id":0,"name":"use_idna_2008_rules","span":{"filename":"src/deprecated.rs","begin":[211,4],"end":[214,5]},"visibility":"public","docs":"Obsolete method retained to ease migration. The argument must be `false`.\n\nPanics\n\nIf the argument is `true`.","links":{},"attrs":["#[inline]","#[allow(unused_mut)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["value",{"primitive":"bool"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2790-0:299:2406":{"id":"b:1:2790-0:299:2406","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2406","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2792:2403"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13848:36281":{"id":"1:13848:36281","crate_id":1,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2792:2403":{"id":"1:2792:2403","crate_id":1,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:24:105-0:257:2409":{"id":"b:24:105-0:257:2409","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/yoke-0.7.4/src/erased.rs","begin":[22,0],"end":[22,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ErasedDestructor","id":"24:104:27497","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2409","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:179:2443":{"id":"0:179:2443","crate_id":0,"name":"EMPTY","span":{"filename":"src/uts46.rs","begin":[414,4],"end":[414,67]},"visibility":"public","docs":"No ASCII deny list. This corresponds to _UseSTD3ASCIIRules=false_.\n\nEquivalent to `AsciiDenyList::new(false, \"\")`.\n\nNote: Not denying the space and control characters can result in\nstrange behavior. Without a deny list provided to the UTS 46\noperation, the caller is expected perform filtering afterwards,\nbut it's more efficient to use `AsciiDenyList` than post-processing,\nbecause the internals of this crate can optimize away checks in\ncertain cases.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2406","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"_"}}},"0:327:2971":{"id":"0:327:2971","crate_id":0,"name":"VerifyAllowRootDot","span":{"filename":"src/uts46.rs","begin":[465,4],"end":[465,22]},"visibility":"default","docs":"_VerifyDNSLength=true_ with the exception that the trailing root label dot is\nallowed.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:1:3110-0:324:2435":{"id":"b:1:3110-0:324:2435","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3113:150","1:3114:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:42830:3760-0:309:2433":{"id":"a:1:42830:3760-0:309:2433","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42830:3760","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2433","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:3101:860":{"id":"1:3101:860","crate_id":1,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2822-0:324:2435":{"id":"b:1:2822-0:324:2435","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2820:3883","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2824:28311"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13855:36285":{"id":"1:13855:36285","crate_id":1,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"4:12652:492","self::pattern":"1:13453:3330"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13460:3320","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13867:36288":{"id":"1:13867:36288","crate_id":1,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"4:12652:492","self::pattern":"1:13453:3330"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13460:3320","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:13460:3320","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13477:4278","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42831:3759-0:253:2410":{"id":"a:1:42831:3759-0:253:2410","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42831:3759","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:253:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5717:37004":{"id":"5:5717:37004","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7774:257"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:373":{"id":"0:373","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[501,9],"end":[501,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2872:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:374:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2793-0:257:2409":{"id":"b:1:2793-0:257:2409","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2409","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2795:28306"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:340:2627":{"id":"0:340:2627","crate_id":0,"name":"FailFast","span":{"filename":"src/uts46.rs","begin":[475,4],"end":[475,12]},"visibility":"default","docs":"Return as early as possible without producing output in case of error.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:319":{"id":"0:319","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[434,20],"end":[434,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"1:2877:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2433","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:346:725":{"id":"0:346:725","crate_id":0,"name":"eq","span":{"filename":"src/uts46.rs","begin":[471,9],"end":[471,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2626","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:3114:1857":{"id":"1:3114:1857","crate_id":1,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"1:43002:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32945:249-0:324:2435":{"id":"a:1:32945:249-0:324:2435","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:312:2666":{"id":"0:312:2666","crate_id":0,"name":"CheckFirstLast","span":{"filename":"src/uts46.rs","begin":[447,4],"end":[447,18]},"visibility":"default","docs":"Prohibit hyphens in the first and last position in the label but allow in\nthe third and fourth position.\n\nNote that this mode rejects real-world names, including some GitHub user pages.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:1:3105-0:299:2406":{"id":"b:1:3105-0:299:2406","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2406","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3108:150","1:3109:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:336":{"id":"0:336","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[458,24],"end":[458,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"1:3317:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13873:32498":{"id":"1:13873:32498","crate_id":1,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"1:40630:3881","Self::is_ascii":"1:13872:2719"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42734:206","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"1:40630:3881","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3322:261-0:339:2626":{"id":"a:1:3322:261-0:339:2626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2626","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3099-0:400:2412":{"id":"b:1:3099-0:400:2412","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:400:2412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:246:830":{"id":"0:246:830","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[78,4],"end":[80,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"core::fmt::Formatter","id":"1:10623:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"core::fmt::Result","id":"1:10604:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32945:249-0:299:2406":{"id":"a:1:32945:249-0:299:2406","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2406","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:401":{"id":"0:401","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,9],"end":[64,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"1:3147:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:400:2412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:402:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:194":{"id":"0:194","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[577,0],"end":[581,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"compiled_data\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"1:3147:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:188:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:195:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13834:3265":{"id":"1:13834:3265","crate_id":1,"name":"matches","span":null,"visibility":"public","docs":"Returns an iterator over the disjoint matches of a pattern within the\ngiven string slice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"1:13453:3330","`DoubleEndedIterator`":"1:8394:134","prim@char":"4:12652:492","str::rmatches":"1:13836:36276"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"1:44938:4296","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13460:3320","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3099-0:253:2410":{"id":"b:1:3099-0:253:2410","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:253:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:33003:3395-0:339:2626":{"id":"a:1:33003:3395-0:339:2626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:33003:3395","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2626","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:342:2636":{"id":"0:342:2636","crate_id":0,"name":"MarkErrors","span":{"filename":"src/uts46.rs","begin":[479,4],"end":[479,14]},"visibility":"default","docs":"In case of error, mark errors with the REPLACEMENT CHARACTER. (The output\ncontaining REPLACEMENT CHARACTERs may be show to the user to illustrate\nwhat was wrong but must not be used for naming in a network protocol.)","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:366:830":{"id":"0:366:830","crate_id":0,"name":"fmt","span":{"filename":"src/uts46.rs","begin":[483,37],"end":[483,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:10623:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:10604:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:3098:3908":{"id":"1:3098:3908","crate_id":1,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"1:3072:157"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3322:261-0:299:2406":{"id":"a:1:3322:261-0:299:2406","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2406","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3095-0:299:2406":{"id":"b:1:3095-0:299:2406","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2406","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3098:3908"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3967-0:339:2626":{"id":"b:1:3967-0:339:2626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2626","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3969:1872"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13775:2756":{"id":"1:13775:2756","crate_id":1,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"1:42736:203"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"1:42734:206","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"1:11577:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:11577:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2793-0:299:2406":{"id":"b:1:2793-0:299:2406","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2406","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2795:28306"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:42830:3760-0:352:2628":{"id":"a:1:42830:3760-0:352:2628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42830:3760","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2628","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:3357:3392-0:299:2406":{"id":"a:1:3357:3392-0:299:2406","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3357:3392","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2406","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:32945:249-0:188:2407":{"id":"a:1:32945:249-0:188:2407","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:188:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:20:2466":{"id":"0:20:2466","crate_id":0,"name":"to_unicode","span":{"filename":"src/deprecated.rs","begin":[109,4],"end":[128,5]},"visibility":"public","docs":"[UTS 46 ToUnicode](http://www.unicode.org/reports/tr46/#ToUnicode)","links":{},"attrs":["#[allow(clippy::wrong_self_convention)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["domain",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["out",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:43002:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Errors","id":"0:400:2412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:359:725":{"id":"0:359:725","crate_id":0,"name":"eq","span":{"filename":"src/uts46.rs","begin":[483,9],"end":[483,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2628","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13768:36269":{"id":"1:13768:36269","crate_id":1,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"1:13766:36268"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:325:2436":{"id":"0:325:2436","crate_id":0,"name":"Ignore","span":{"filename":"src/uts46.rs","begin":[462,4],"end":[462,10]},"visibility":"default","docs":"_VerifyDNSLength=false_. (Possibly relevant for allowing non-DNS naming systems.)","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:23:483-0:257:2409":{"id":"b:23:483-0:257:2409","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/icu_provider-1.5.0/src/any.rs","begin":[32,0],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MaybeSendSync","id":"23:482:27475","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2409","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3110-0:352:2628":{"id":"b:1:3110-0:352:2628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2628","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3113:150","1:3114:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13798:3134":{"id":"1:13798:3134","crate_id":1,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"4:12652:492","self::pattern":"1:13453:3330"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13460:3320","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:196":{"id":"0:196","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[583,0],"end":[1730,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Uts46","id":"0:188:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:197:1212","0:198:2432","0:201:2466","0:204:3039","0:207:2623"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13826:32575":{"id":"1:13826:32575","crate_id":1,"name":"rsplitn","span":null,"visibility":"public","docs":"Returns an iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning at\nmost `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"4:12652:492","str::splitn":"1:13824:32573","self::pattern":"1:13453:3330"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"1:44856:4099","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13460:3320","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:13460:3320","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13477:4278","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3322:261-0:400:2412":{"id":"a:1:3322:261-0:400:2412","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:400:2412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:13865:36287":{"id":"1:13865:36287","crate_id":1,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"4:12652:492","self::pattern":"1:13453:3330"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13460:3320","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:324:2435":{"id":"0:324:2435","crate_id":0,"name":"DnsLength","span":{"filename":"src/uts46.rs","begin":[460,0],"end":[468,1]},"visibility":"public","docs":"The UTS 46 _VerifyDNSLength_ flag.","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:325:2436","0:327:2971","0:329:2455"],"impls":["a:1:32945:249-0:324:2435","a:1:3322:261-0:324:2435","a:1:3357:3392-0:324:2435","a:1:33003:3395-0:324:2435","a:1:42830:3760-0:324:2435","a:1:42831:3759-0:324:2435","b:1:2790-0:324:2435","b:1:2793-0:324:2435","b:1:2822-0:324:2435","b:1:2825-0:324:2435","b:1:3095-0:324:2435","b:1:3099-0:324:2435","b:1:3105-0:324:2435","b:1:3110-0:324:2435","b:1:3967-0:324:2435","b:5:782-0:324:2435","b:23:483-0:324:2435","b:24:105-0:324:2435","0:331","0:332","0:334","0:336","0:337"]}}},"b:1:3967-0:352:2628":{"id":"b:1:3967-0:352:2628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2628","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3969:1872"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:18:2432":{"id":"0:18:2432","crate_id":0,"name":"to_ascii","span":{"filename":"src/deprecated.rs","begin":[78,4],"end":[105,5]},"visibility":"public","docs":"[UTS 46 ToASCII](http://www.unicode.org/reports/tr46/#ToASCII)","links":{},"attrs":["#[allow(clippy::wrong_self_convention)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["domain",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["out",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:43002:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Errors","id":"0:400:2412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13880:36290":{"id":"1:13880:36290","crate_id":1,"name":"escape_debug","span":null,"visibility":"public","docs":"Returns an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"1:5068:36290"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"1:45033:3992","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13882:10265":{"id":"1:13882:10265","crate_id":1,"name":"escape_default","span":null,"visibility":"public","docs":"Returns an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:5069:10265"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"1:45042:3991","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13819:36274":{"id":"1:13819:36274","crate_id":1,"name":"split_terminator","span":null,"visibility":"public","docs":"Returns an iterator over substrings of the given string slice, separated\nby characters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"1:13453:3330","str::split":"1:13812:3005","prim@char":"4:12652:492","`DoubleEndedIterator`":"1:8394:134","str::rsplit_terminator":"1:13821:36275"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"1:44784:4299","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13460:3320","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13841:36278":{"id":"1:13841:36278","crate_id":1,"name":"rmatch_indices","span":null,"visibility":"public","docs":"Returns an iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"1:13453:3330","`DoubleEndedIterator`":"1:8394:134","prim@char":"4:12652:492","str::match_indices":"1:13839:36277"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"1:44902:4291","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13460:3320","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:13460:3320","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13477:4278","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13884:33736":{"id":"1:13884:33736","crate_id":1,"name":"substr_range","span":null,"visibility":"public","docs":"Returns the range that a substring points to.\n\nReturns `None` if `substr` does not point within `self`.\n\nUnlike [`str::find`], **this does not search through the string**.\nInstead, it uses pointer arithmetic to find where in the string\n`substr` is derived from.\n\nThis is useful for extending [`str::split`] and similar methods.\n\nNote that this method may return false positives (typically either\n`Some(0..0)` or `Some(self.len()..self.len())`) if `substr` is a\nzero-length `str` that points at the beginning or end of another,\nindependent, `str`.\n\n# Examples\n```\n#![feature(substr_range)]\n\nlet data = \"a, b, b, a\";\nlet mut iter = data.split(\", \").map(|s| data.substr_range(s).unwrap());\n\nassert_eq!(iter.next(), Some(0..1));\nassert_eq!(iter.next(), Some(3..4));\nassert_eq!(iter.next(), Some(6..7));\nassert_eq!(iter.next(), Some(9..10));\n```","links":{"`str::split`":"1:13812:3005","`str::find`":"1:13805:3948"},"attrs":["#[must_use]","#[unstable(feature = \"substr_range\", issue = \"126769\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["substr",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42734:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Range","id":"1:40309:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:17:1212":{"id":"0:17:1212","crate_id":0,"name":"new","span":{"filename":"src/deprecated.rs","begin":[72,4],"end":[74,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["config",{"resolved_path":{"name":"Config","id":"0:257:2409","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2827:28311":{"id":"1:2827:28311","crate_id":1,"name":"clone_to_uninit","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["dst",{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2822-0:309:2433":{"id":"b:1:2822-0:309:2433","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2820:3883","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2433","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2824:28311"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3105-0:309:2433":{"id":"b:1:3105-0:309:2433","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2433","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3108:150","1:3109:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:316":{"id":"0:316","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[434,9],"end":[434,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"1:32947:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2433","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:331":{"id":"0:331","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[458,9],"end":[458,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"1:32947:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:244":{"id":"0:244","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[75,0],"end":[75,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["type_id","description","cause","source","provide"],"trait":{"name":"Error","id":"1:3158:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:400:2412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13764:3006":{"id":"1:13764:3006","crate_id":1,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13781:31654":{"id":"1:13781:31654","crate_id":1,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"1:11577:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:11577:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:301":{"id":"0:301","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[349,9],"end":[349,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"1:32947:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2406","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:3357:3392-0:400:2412":{"id":"a:1:3357:3392-0:400:2412","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3357:3392","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:400:2412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:13816:3137":{"id":"1:13816:3137","crate_id":1,"name":"rsplit","span":null,"visibility":"public","docs":"Returns an iterator over substrings of the given string slice, separated\nby characters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"1:13453:3330","`DoubleEndedIterator`":"1:8394:134","prim@char":"4:12652:492","str::split":"1:13812:3005"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"1:44752:4097","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13460:3320","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:13460:3320","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13477:4278","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13851:36283":{"id":"1:13851:36283","crate_id":1,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:786:28314":{"id":"5:786:28314","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:318:725":{"id":"0:318:725","crate_id":0,"name":"eq","span":{"filename":"src/uts46.rs","begin":[434,9],"end":[434,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Hyphens","id":"0:309:2433","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3095-0:188:2407":{"id":"b:1:3095-0:188:2407","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:188:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3098:3908"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5711":{"id":"5:5711","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5712:37002","5:5713:10190","5:5715:37003","5:5717:37004","5:5725:37005","5:5726:37006","5:5727:2789","5:5728:32330","5:5729:2727"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:785:28313":{"id":"5:785:28313","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3099-0:324:2435":{"id":"b:1:3099-0:324:2435","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3105-0:188:2407":{"id":"b:1:3105-0:188:2407","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:188:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3108:150","1:3109:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:24:105-0:352:2628":{"id":"b:24:105-0:352:2628","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/yoke-0.7.4/src/erased.rs","begin":[22,0],"end":[22,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ErasedDestructor","id":"24:104:27497","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2628","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13765:36267":{"id":"1:13765:36267","crate_id":1,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13876:32328":{"id":"1:13876:32328","crate_id":1,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13814:28505":{"id":"1:13814:28505","crate_id":1,"name":"split_inclusive","span":null,"visibility":"public","docs":"Returns an iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nDiffers from the iterator produced by `split` in that `split_inclusive`\nleaves the matched part as the terminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"4:12652:492","self::pattern":"1:13453:3330"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"1:13240:4105","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13460:3320","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2793-0:339:2626":{"id":"b:1:2793-0:339:2626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2626","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2795:28306"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:128:2405":{"id":"0:128:2405","crate_id":0,"name":"uts46","span":{"filename":"src/uts46.rs","begin":[9,0],"end":[1768,1]},"visibility":"public","docs":"This module provides the lower-level API for UTS 46.\n\n[`Uts46::process`] is the core that the other convenience\nmethods build on.\n\nUTS 46 flags map to this API as follows:\n\n* _CheckHyphens_ - _true_: [`Hyphens::Check`], _false_: [`Hyphens::Allow`]; the WHATWG URL Standard sets this to _false_ for normal (non-conformance-checker) user agents.\n* _CheckBidi_ - Always _true_; cannot be configured, since this flag is _true_ even when WHATWG URL Standard _beStrict_ is _false_.\n* _CheckJoiners_ - Always _true_; cannot be configured, since this flag is _true_ even when WHATWG URL Standard _beStrict_ is _false_.\n* _UseSTD3ASCIIRules_ - _true_: [`AsciiDenyList::STD3`], _false_: [`AsciiDenyList::EMPTY`]; however, the check the WHATWG URL Standard performs right after the UTS 46 invocation corresponds to [`AsciiDenyList::URL`].\n* _Transitional_Processing_ - Always _false_ but could be implemented as a preprocessing step. This flag is deprecated and for Web purposes the transition is over in the sense that all of Firefox, Safari, or Chrome set this flag to _false_.\n* _VerifyDnsLength_ - _true_: [`DnsLength::Verify`], _false_: [`DnsLength::Ignore`]; the WHATWG URL Standard sets this to _false_ for normal (non-conformance-checker) user agents.\n* _IgnoreInvalidPunycode_ - Always _false_; cannot be configured. (Not yet covered by the WHATWG URL Standard, but 2 out of 3 major browser clearly behave as if this was _false_).","links":{"`Hyphens::Allow`":"0:310:2434","`Hyphens::Check`":"0:314:2454","`AsciiDenyList::EMPTY`":"0:179:2443","`AsciiDenyList::STD3`":"0:180:2453","`DnsLength::Verify`":"0:329:2455","`AsciiDenyList::URL`":"0:181:2954","`Uts46::process`":"0:207:2623","`DnsLength::Ignore`":"0:325:2436"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:299:2406","0:309:2433","0:324:2435","0:339:2626","0:352:2628","0:367:2632","0:186:2630","0:188:2407"],"is_stripped":false}}},"0:339:2626":{"id":"0:339:2626","crate_id":0,"name":"ErrorPolicy","span":{"filename":"src/uts46.rs","begin":[473,0],"end":[480,1]},"visibility":"public","docs":"Policy for customizing behavior in case of an error.","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:340:2627","0:342:2636"],"impls":["a:1:32945:249-0:339:2626","a:1:3322:261-0:339:2626","a:1:3357:3392-0:339:2626","a:1:33003:3395-0:339:2626","a:1:42830:3760-0:339:2626","a:1:42831:3759-0:339:2626","b:1:2790-0:339:2626","b:1:2793-0:339:2626","b:1:2822-0:339:2626","b:1:2825-0:339:2626","b:1:3095-0:339:2626","b:1:3099-0:339:2626","b:1:3105-0:339:2626","b:1:3110-0:339:2626","b:1:3967-0:339:2626","b:5:782-0:339:2626","b:23:483-0:339:2626","b:24:105-0:339:2626","0:344","0:345","0:347","0:349","0:350"]}}},"0:198:2432":{"id":"0:198:2432","crate_id":0,"name":"to_ascii","span":{"filename":"src/uts46.rs","begin":[614,4],"end":[655,5]},"visibility":"public","docs":"Performs the [ToASCII](https://www.unicode.org/reports/tr46/#ToASCII) operation\nfrom UTS #46 with the options indicated.\n\n# Arguments\n\n* `domain_name` - The input domain name as UTF-8 bytes. (The UTF-8ness is checked by\nthis method and input that is not well-formed UTF-8 is treated as an error. If you\nalready have a `&str`, call `.as_bytes()` on it.)\n* `ascii_deny_list` - What ASCII deny list, if any, to apply. The UTS 46\n_UseSTD3ASCIIRules_ flag or the WHATWG URL Standard forbidden domain code point\nprocessing is handled via this argument. Most callers are probably the best off\nby using [`AsciiDenyList::URL`] here.\n* `hyphens` - The UTS 46 _CheckHyphens_ flag. Most callers are probably the best\noff by using [`Hyphens::Allow`] here.\n* `dns_length` - The UTS 46 _VerifyDNSLength_ flag.","links":{"`AsciiDenyList::URL`":"0:181:2954","`Hyphens::Allow`":"0:310:2434"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["domain_name",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["ascii_deny_list",{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2406","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["hyphens",{"resolved_path":{"name":"Hyphens","id":"0:309:2433","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["dns_length",{"resolved_path":{"name":"DnsLength","id":"0:324:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:43002:238","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:787:122","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"crate::Errors","id":"0:400:2412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3095-0:324:2435":{"id":"b:1:3095-0:324:2435","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3098:3908"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:3969:1872":{"id":"1:3969:1872","crate_id":1,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"1:40446:7295","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:33003:3395-0:257:2409":{"id":"a:1:33003:3395-0:257:2409","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:33003:3395","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2409","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:24:105-0:324:2435":{"id":"b:24:105-0:324:2435","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/yoke-0.7.4/src/erased.rs","begin":[22,0],"end":[22,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ErasedDestructor","id":"24:104:27497","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:23:60":{"id":"0:23:60","crate_id":0,"name":"default","span":{"filename":"src/deprecated.rs","begin":[144,4],"end":[152,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2825-0:339:2626":{"id":"b:1:2825-0:339:2626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"1:3317:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2820:3883","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2626","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2827:28311"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13874:32331":{"id":"1:13874:32331","crate_id":1,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:33003:3395-0:188:2407":{"id":"a:1:33003:3395-0:188:2407","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:33003:3395","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:188:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:13824:32573":{"id":"1:13824:32573","crate_id":1,"name":"splitn","span":null,"visibility":"public","docs":"Returns an iterator over substrings of the given string slice, separated\nby a pattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"4:12652:492","self::pattern":"1:13453:3330","str::rsplitn":"1:13826:32575"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"1:44838:4103","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13460:3320","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:186:2630":{"id":"0:186:2630","crate_id":0,"name":"verify_dns_length","span":{"filename":"src/uts46.rs","begin":[542,0],"end":[565,1]},"visibility":"public","docs":"Performs the _VerifyDNSLength_ check on the output of the _ToASCII_ operation.\n\nIf the second argument is `false`, the trailing root label dot is allowed.\n\n# Panics\n\nPanics in debug mode if the argument isn't ASCII.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["domain_name",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["allow_trailing_dot",{"primitive":"bool"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3357:3392-0:352:2628":{"id":"a:1:3357:3392-0:352:2628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3357:3392","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2628","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:13875:32329":{"id":"1:13875:32329","crate_id":1,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:25:2638":{"id":"0:25:2638","crate_id":0,"name":"use_std3_ascii_rules","span":{"filename":"src/deprecated.rs","begin":[162,4],"end":[165,5]},"visibility":"public","docs":"Whether to enforce STD3 or WHATWG URL Standard ASCII deny list.\n\n`true` for STD3, `false` for no deny list.\n\nNote that `true` rejects pseudo-hosts used by various TXT record-based protocols.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["value",{"primitive":"bool"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2790-0:339:2626":{"id":"b:1:2790-0:339:2626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2626","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2792:2403"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:247:2429":{"id":"0:247:2429","crate_id":0,"name":"domain_to_ascii_cow","span":{"filename":"src/lib.rs","begin":[102,0],"end":[112,1]},"visibility":"public","docs":"The [domain to ASCII](https://url.spec.whatwg.org/#concept-domain-to-ascii) algorithm;\nversion returning a `Cow`.\n\nMost applications should be using this function rather than the sibling functions,\nand most applications should pass [`AsciiDenyList::URL`] as the second argument.\nPassing [`AsciiDenyList::URL`] as the second argument makes this function also\nperform the [forbidden domain code point](https://url.spec.whatwg.org/#forbidden-domain-code-point)\ncheck in addition to the [domain to ASCII](https://url.spec.whatwg.org/#concept-domain-to-ascii)\nalgorithm.\n\nReturns the ASCII representation a domain name,\nnormalizing characters (upper-case to lower-case and other kinds of equivalence)\nand using Punycode as necessary.\n\nThis process may fail.\n\nIf you have a `&str` instead of `&[u8]`, just call `.to_bytes()` on it before\npassing it to this function. It's still preferable to use this function over\nthe sibling functions that take `&str`.","links":{"`AsciiDenyList::URL`":"0:181:2954"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["domain",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["ascii_deny_list",{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2406","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:43002:238","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"alloc::borrow::Cow","id":"5:787:122","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"primitive":"str"}}],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Errors","id":"0:400:2412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:180:2453":{"id":"0:180:2453","crate_id":0,"name":"STD3","span":{"filename":"src/uts46.rs","begin":[421,4],"end":[421,71]},"visibility":"public","docs":"The STD3 deny list. This corresponds to _UseSTD3ASCIIRules=true_.\n\nNote that this deny list rejects the underscore, which occurs in\npseudo-hosts used by various TXT record-based protocols, and also\ncharacters that may occurs in non-DNS naming, such as NetBIOS.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2406","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"_"}}},"1:13805:3948":{"id":"1:13805:3948","crate_id":1,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"1:42736:203","prim@char":"4:12652:492","self::pattern":"1:13453:3330"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:42734:206","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13460:3320","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:23:483-0:253:2410":{"id":"b:23:483-0:253:2410","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/icu_provider-1.5.0/src/any.rs","begin":[32,0],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MaybeSendSync","id":"23:482:27475","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:253:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2825-0:257:2409":{"id":"b:1:2825-0:257:2409","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"1:3317:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2820:3883","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2409","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2827:28311"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:364:496":{"id":"0:364:496","crate_id":0,"name":"clone","span":{"filename":"src/uts46.rs","begin":[483,30],"end":[483,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2628","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:375":{"id":"0:375","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[501,20],"end":[501,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"1:2877:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:782-0:367:2632":{"id":"b:5:782-0:367:2632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:778:264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:784:2616","5:785:28313","5:786:28314"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:264":{"id":"0:264","crate_id":0,"name":null,"span":{"filename":"src/deprecated.rs","begin":[132,16],"end":[132,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"1:3317:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2409","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2825-0:367:2632":{"id":"b:1:2825-0:367:2632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"1:3317:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2820:3883","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2827:28311"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3099-0:309:2433":{"id":"b:1:3099-0:309:2433","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2433","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:23:483-0:188:2407":{"id":"b:23:483-0:188:2407","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/icu_provider-1.5.0/src/any.rs","begin":[32,0],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MaybeSendSync","id":"23:482:27475","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:188:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:195:60":{"id":"0:195:60","crate_id":0,"name":"default","span":{"filename":"src/uts46.rs","begin":[578,4],"end":[580,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:34:2466":{"id":"0:34:2466","crate_id":0,"name":"to_unicode","span":{"filename":"src/deprecated.rs","begin":[242,4],"end":[247,5]},"visibility":"public","docs":"[UTS 46 ToUnicode](http://www.unicode.org/reports/tr46/#ToUnicode)","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["domain",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"tuple":[{"resolved_path":{"name":"String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"resolved_path":{"name":"Result","id":"1:43002:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Errors","id":"0:400:2412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:243:860":{"id":"0:243:860","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[69,4],"end":[71,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["e",{"resolved_path":{"name":"Errors","id":"0:400:2412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:43002:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Errors","id":"0:400:2412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13883:36291":{"id":"1:13883:36291","crate_id":1,"name":"escape_unicode","span":null,"visibility":"public","docs":"Returns an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:5066:36291"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"1:45051:3990","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3322:261-0:188:2407":{"id":"a:1:3322:261-0:188:2407","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:188:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"1:13772:36270":{"id":"1:13772:36270","crate_id":1,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3095-0:309:2433":{"id":"b:1:3095-0:309:2433","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2433","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3098:3908"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:257:2409":{"id":"0:257:2409","crate_id":0,"name":"Config","span":{"filename":"src/deprecated.rs","begin":[135,0],"end":[140,1]},"visibility":"public","docs":"Deprecated configuration API.","links":{},"attrs":["#[must_use]","#[deprecated]"],"deprecation":{"since":null,"note":null},"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:24","a:1:32945:249-0:257:2409","a:1:3322:261-0:257:2409","a:1:3357:3392-0:257:2409","a:1:33003:3395-0:257:2409","a:1:42830:3760-0:257:2409","a:1:42831:3759-0:257:2409","b:1:2790-0:257:2409","b:1:2793-0:257:2409","b:1:2822-0:257:2409","b:1:2825-0:257:2409","b:1:3095-0:257:2409","b:1:3099-0:257:2409","b:1:3105-0:257:2409","b:1:3110-0:257:2409","b:1:3967-0:257:2409","b:5:782-0:257:2409","b:23:483-0:257:2409","b:24:105-0:257:2409","0:262","0:264","0:22"]}}},"b:1:3099-0:257:2409":{"id":"b:1:3099-0:257:2409","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2409","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:333:725":{"id":"0:333:725","crate_id":0,"name":"eq","span":{"filename":"src/uts46.rs","begin":[458,9],"end":[458,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"DnsLength","id":"0:324:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42830:3760-0:339:2626":{"id":"a:1:42830:3760-0:339:2626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42830:3760","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2626","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3105-0:339:2626":{"id":"b:1:3105-0:339:2626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2626","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3108:150","1:3109:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:23:483-0:339:2626":{"id":"b:23:483-0:339:2626","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/icu_provider-1.5.0/src/any.rs","begin":[32,0],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MaybeSendSync","id":"23:482:27475","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2626","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:344":{"id":"0:344","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[471,9],"end":[471,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"1:32947:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2626","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:352:2628":{"id":"0:352:2628","crate_id":0,"name":"ProcessingSuccess","span":{"filename":"src/uts46.rs","begin":[484,0],"end":[498,1]},"visibility":"public","docs":"The success outcome of [`Uts46::process`]","links":{"`Uts46::process`":"0:207:2623"},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:353:2629","0:355:2631"],"impls":["a:1:32945:249-0:352:2628","a:1:3322:261-0:352:2628","a:1:3357:3392-0:352:2628","a:1:33003:3395-0:352:2628","a:1:42830:3760-0:352:2628","a:1:42831:3759-0:352:2628","b:1:2790-0:352:2628","b:1:2793-0:352:2628","b:1:2822-0:352:2628","b:1:2825-0:352:2628","b:1:3095-0:352:2628","b:1:3099-0:352:2628","b:1:3105-0:352:2628","b:1:3110-0:352:2628","b:1:3967-0:352:2628","b:5:782-0:352:2628","b:23:483-0:352:2628","b:24:105-0:352:2628","0:357","0:358","0:360","0:362","0:363","0:365"]}}},"b:1:2790-0:188:2407":{"id":"b:1:2790-0:188:2407","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:188:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2792:2403"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:0:2467":{"id":"0:0:2467","crate_id":0,"name":"idna","span":{"filename":"src/lib.rs","begin":[9,0],"end":[168,1]},"visibility":"public","docs":"This Rust crate implements IDNA\n[per the WHATWG URL Standard](https://url.spec.whatwg.org/#idna).\n\nIt also exposes the underlying algorithms from [*Unicode IDNA Compatibility Processing*\n(Unicode Technical Standard #46)](http://www.unicode.org/reports/tr46/)\nand [Punycode (RFC 3492)](https://tools.ietf.org/html/rfc3492).\n\nQuoting from [UTS #46’s introduction](http://www.unicode.org/reports/tr46/#Introduction):\n\n> Initially, domain names were restricted to ASCII characters.\n> A system was introduced in 2003 for internationalized domain names (IDN).\n> This system is called Internationalizing Domain Names for Applications,\n> or IDNA2003 for short.\n> This mechanism supports IDNs by means of a client software transformation\n> into a format known as Punycode.\n> A revision of IDNA was approved in 2010 (IDNA2008).\n> This revision has a number of incompatibilities with IDNA2003.\n>\n> The incompatibilities force implementers of client software,\n> such as browsers and emailers,\n> to face difficult choices during the transition period\n> as registries shift from IDNA2003 to IDNA2008.\n> This document specifies a mechanism\n> that minimizes the impact of this transition for client software,\n> allowing client software to access domains that are valid under either system.","links":{},"attrs":["#![no_std]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:35:2408","0:128:2405","0:8-0:299:2406","0:240-0:257:2409","0:241-0:253:2410","0:400:2412","0:247:2429","0:248:2441","0:250:2452","0:252:2465"],"is_stripped":false}}},"1:13788:32570":{"id":"1:13788:32570","crate_id":1,"name":"split_at_mut_checked","span":null,"visibility":"public","docs":"Divides one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at_checked`] method.\n\n[`split_at_checked`]: str::split_at_checked\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\nif let Some((first, last)) = s.split_at_mut_checked(3) {\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n\nassert_eq!(None, s.split_at_mut_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_mut_checked(16));  // Beyond the string length\n```","links":{"str::split_at_checked":"1:13787:32569"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"1:42734:206","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13795:9757":{"id":"1:13795:9757","crate_id":1,"name":"lines","span":null,"visibility":"public","docs":"Returns an iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"1:44988:4288","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3095-0:339:2626":{"id":"b:1:3095-0:339:2626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2626","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3098:3908"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:363":{"id":"0:363","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[483,30],"end":[483,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2628","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:364:496"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:42831:3759-0:367:2632":{"id":"a:1:42831:3759-0:367:2632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42831:3759","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:782-0:339:2626":{"id":"b:5:782-0:339:2626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:778:264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2626","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:784:2616","5:785:28313","5:786:28314"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:309:2433":{"id":"0:309:2433","crate_id":0,"name":"Hyphens","span":{"filename":"src/uts46.rs","begin":[436,0],"end":[455,1]},"visibility":"public","docs":"The _CheckHyphens_ mode.","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:310:2434","0:312:2666","0:314:2454"],"impls":["a:1:32945:249-0:309:2433","a:1:3322:261-0:309:2433","a:1:3357:3392-0:309:2433","a:1:33003:3395-0:309:2433","a:1:42830:3760-0:309:2433","a:1:42831:3759-0:309:2433","b:1:2790-0:309:2433","b:1:2793-0:309:2433","b:1:2822-0:309:2433","b:1:2825-0:309:2433","b:1:3095-0:309:2433","b:1:3099-0:309:2433","b:1:3105-0:309:2433","b:1:3110-0:309:2433","b:1:3967-0:309:2433","b:5:782-0:309:2433","b:23:483-0:309:2433","b:24:105-0:309:2433","0:316","0:317","0:319","0:321","0:322"]}}},"a:1:42831:3759-0:324:2435":{"id":"a:1:42831:3759-0:324:2435","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42831:3759","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2793-0:324:2435":{"id":"b:1:2793-0:324:2435","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2795:28306"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:204:3039":{"id":"0:204:3039","crate_id":0,"name":"to_user_interface","span":{"filename":"src/uts46.rs","begin":[734,4],"end":[760,5]},"visibility":"public","docs":"Performs the [ToUnicode](https://www.unicode.org/reports/tr46/#ToUnicode) operation\nfrom UTS #46 according to options given with some\nerror-free Unicode labels output according to\n[ToASCII](https://www.unicode.org/reports/tr46/#ToASCII) instead as decided by\napplication policy implemented via the `output_as_unicode` closure. The purpose\nis to convert user-visible domains to the Unicode form in general but to render\npotentially misleading labels as Punycode.\n\nThis is an imperfect security mechanism, because [the Punycode form itself may be\nresemble a user-recognizable name](https://www.unicode.org/reports/tr36/#TablePunycodeSpoofing).\nHowever, since this mechanism is common practice, this API provides support for The\nthe mechanism.\n\nASCII labels always pass through as ASCII and labels with errors always pass through\nas Unicode. For non-erroneous labels that contain at least one non-ASCII character\n(implies non-empty), `output_as_unicode` is called with the Unicode form of the label,\nthe TLD (potentially empty), and a flag indicating whether the domain name as a whole\nis a bidi domain name. If the return value is `true`, the label passes through as\nUnicode. If the return value is `false`, the label is converted to Punycode.\n\nWhen there are errors, there is still output, which may be rendered user, even through\nthe output must not be used in networking protocols. Errors are denoted by\nU+FFFD REPLACEMENT CHARACTERs in the output. (That is, if the second item\nof the return tuple is `Err`, the first item of the return tuple is guaranteed to contain\nat least one U+FFFD.) Labels that contain errors are not converted to Punycode.\n\n# Arguments\n\n* `domain_name` - The input domain name as UTF-8 bytes. (The UTF-8ness is checked by\nthis method and input that is not well-formed UTF-8 is treated as an error. If you\nalready have a `&str`, call `.as_bytes()` on it.)\n* `ascii_deny_list` - What ASCII deny list, if any, to apply. The UTS 46\n_UseSTD3ASCIIRules_ flag or the WHATWG URL Standard forbidden domain code point\nprocessing is handled via this argument. Most callers are probably the best off\nby using [`AsciiDenyList::URL`] here.\n* `hyphens` - The UTS 46 _CheckHyphens_ flag. Most callers are probably the best\noff by using [`Hyphens::Allow`] here.\n* `output_as_unicode` - A closure for deciding if a label should be output as Unicode\n(as opposed to Punycode). The first argument is the label for which a decision is\nneeded (always non-empty slice). The second argument is the TLD (potentially empty).\nThe third argument is `true` iff the domain name as a whole is a bidi domain name.\nOnly non-erroneous labels that contain at least one non-ASCII character are passed\nto the closure as the first argument. The second and third argument values are\nguaranteed to remain the same during a single call to `process`, and the closure\nmay cache computations derived from the second and third argument (hence the\n`FnMut` type).","links":{"`AsciiDenyList::URL`":"0:181:2954","`Hyphens::Allow`":"0:310:2434"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["domain_name",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["ascii_deny_list",{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2406","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["hyphens",{"resolved_path":{"name":"Hyphens","id":"0:309:2433","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["output_as_unicode",{"generic":"OutputUnicode"}]],"output":{"tuple":[{"resolved_path":{"name":"Cow","id":"5:787:122","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}},{"resolved_path":{"name":"Result","id":"1:43002:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"crate::Errors","id":"0:400:2412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"OutputUnicode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:3596:154","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"char"}}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"char"}}}},{"primitive":"bool"}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2824:28311":{"id":"1:2824:28311","crate_id":1,"name":"clone_to_uninit","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["dst",{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32945:249-0:309:2433":{"id":"a:1:32945:249-0:309:2433","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2433","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:378":{"id":"0:378","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[501,30],"end":[501,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:379:496"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:358":{"id":"0:358","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[483,9],"end":[483,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2872:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2628","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:359:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:182":{"id":"0:182","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[514,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Error","id":"1:43900:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:183:860"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:197:1212":{"id":"0:197:1212","crate_id":0,"name":"new","span":{"filename":"src/uts46.rs","begin":[586,4],"end":[594,5]},"visibility":"public","docs":"Constructor using data compiled into the binary.","links":{},"attrs":["#[cfg(feature = \"compiled_data\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42831:3759-0:257:2409":{"id":"a:1:42831:3759-0:257:2409","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42831:3759","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2409","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2825-0:299:2406":{"id":"b:1:2825-0:299:2406","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"1:3317:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2820:3883","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2406","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2827:28311"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:310:2434":{"id":"0:310:2434","crate_id":0,"name":"Allow","span":{"filename":"src/uts46.rs","begin":[441,4],"end":[441,9]},"visibility":"default","docs":"_CheckHyphens=false_: Do not place positional restrictions on hyphens.\n\nThis mode is used by the WHATWG URL Standard for normal User Agent processing\n(i.e. not conformance checking).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:367:2632":{"id":"0:367:2632","crate_id":0,"name":"ProcessingError","span":{"filename":"src/uts46.rs","begin":[502,0],"end":[512,1]},"visibility":"public","docs":"The failure outcome of [`Uts46::process`]","links":{"`Uts46::process`":"0:207:2623"},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:368:2633","0:370:2634"],"impls":["a:1:32945:249-0:367:2632","a:1:3322:261-0:367:2632","a:1:3357:3392-0:367:2632","a:1:33003:3395-0:367:2632","a:1:42830:3760-0:367:2632","a:1:42831:3759-0:367:2632","b:1:2790-0:367:2632","b:1:2793-0:367:2632","b:1:2822-0:367:2632","b:1:2825-0:367:2632","b:1:3095-0:367:2632","b:1:3099-0:367:2632","b:1:3105-0:367:2632","b:1:3110-0:367:2632","b:1:3967-0:367:2632","b:5:782-0:367:2632","b:23:483-0:367:2632","b:24:105-0:367:2632","0:372","0:373","0:375","0:377","0:378","0:380","0:182"]}}},"0:248:2441":{"id":"0:248:2441","crate_id":0,"name":"domain_to_ascii","span":{"filename":"src/lib.rs","begin":[125,0],"end":[127,1]},"visibility":"public","docs":"The [domain to ASCII](https://url.spec.whatwg.org/#concept-domain-to-ascii) algorithm;\nversion returning `String` and no ASCII deny list (i.e. _UseSTD3ASCIIRules=false_).\n\nThis function exists for backward-compatibility. Consider using [`domain_to_ascii_cow`]\ninstead.\n\nReturn the ASCII representation a domain name,\nnormalizing characters (upper-case to lower-case and other kinds of equivalence)\nand using Punycode as necessary.\n\nThis process may fail.","links":{"`domain_to_ascii_cow`":"0:247:2429"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["domain",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:43002:238","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"alloc::string::String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Errors","id":"0:400:2412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13792:2931":{"id":"1:13792:2931","crate_id":1,"name":"bytes","span":null,"visibility":"public","docs":"Returns an iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"1:44720:4286","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13802:32579":{"id":"1:13802:32579","crate_id":1,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"4:12652:492","self::pattern":"1:13453:3330"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13460:3320","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:13460:3320","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13477:4278","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13859:3003":{"id":"1:13859:3003","crate_id":1,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"4:12652:492","self::pattern":"1:13453:3330"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:42734:206","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13460:3320","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:13460:3320","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13477:4278","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:35:2408":{"id":"0:35:2408","crate_id":0,"name":"punycode","span":{"filename":"src/punycode.rs","begin":[9,0],"end":[477,1]},"visibility":"public","docs":"Punycode ([RFC 3492](http://tools.ietf.org/html/rfc3492)) implementation.\n\nSince Punycode fundamentally works on unicode code points,\n`encode` and `decode` take and return slices and vectors of `char`.\n`encode_str` and `decode_to_string` provide convenience wrappers\nthat convert from and to Rust’s UTF-8 based `str` and `String` types.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:50:2697","0:51:642","0:110:2762","0:112:718"],"is_stripped":false}}},"0:183:860":{"id":"0:183:860","crate_id":0,"name":"from","span":{"filename":"src/uts46.rs","begin":[515,4],"end":[517,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_",{"resolved_path":{"name":"core::fmt::Error","id":"1:43900:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13774:32548":{"id":"1:13774:32548","crate_id":1,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"4:12671:1903"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13821:36275":{"id":"1:13821:36275","crate_id":1,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"Returns an iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"1:13453:3330","str::split":"1:13812:3005","prim@char":"4:12652:492","str::split_terminator":"1:13819:36274"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"1:44802:4298","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13460:3320","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:13460:3320","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13477:4278","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32945:249-0:257:2409":{"id":"a:1:32945:249-0:257:2409","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Config","id":"0:257:2409","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:13870:36289":{"id":"1:13870:36289","crate_id":1,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"1:13412:149","`FromStr`":"1:13411:3328"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:43002:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"1:13411:3328","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"1:13411:3328","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5729:2727":{"id":"5:5729:2727","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:13876:32328"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:178:1212":{"id":"0:178:1212","crate_id":0,"name":"new","span":{"filename":"src/uts46.rs","begin":[373,4],"end":[402,5]},"visibility":"public","docs":"Computes (preferably at compile time) an ASCII deny list.\n\nSetting `deny_glyphless` to `true` denies U+0020 SPACE and below\nas well as U+007F DELETE for convenience without having to list\nthese characters in the `deny_list` string.\n\n`deny_list` is the list of ASCII characters to deny. This\nlist must not contain any of:\n* Letters\n* Digits\n* Hyphen\n* Dot (period / full-stop)\n* Non-ASCII\n\n# Panics\n\nIf the deny list contains characters listed as prohibited above.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["deny_glyphless",{"primitive":"bool"}],["deny_list",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42830:3760-0:367:2632":{"id":"a:1:42830:3760-0:367:2632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42830:3760","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:13857:32223":{"id":"1:13857:32223","crate_id":1,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns the substring after the prefix,\nwrapped in `Some`. Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"4:12652:492","self::pattern":"1:13453:3330"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:42734:206","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13460:3320","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3967-0:309:2433":{"id":"b:1:3967-0:309:2433","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2433","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3969:1872"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:3113:150":{"id":"1:3113:150","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"1:32869:8371","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:353:2629":{"id":"0:353:2629","crate_id":0,"name":"Passthrough","span":{"filename":"src/uts46.rs","begin":[491,4],"end":[491,15]},"visibility":"default","docs":"There were no errors. The caller must consider the input to be the output.\n\nThis asserts that the input can be safely passed to [`core::str::from_utf8_unchecked`].\n\n(Distinct from `WroteToSink` in order to allow `Cow` behavior to be implemented on top of\n[`Uts46::process`].)","links":{"`core::str::from_utf8_unchecked`":"1:12978:3029","`Uts46::process`":"0:207:2623"},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:1:3967-0:188:2407":{"id":"b:1:3967-0:188:2407","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uts46","id":"0:188:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3969:1872"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13787:32569":{"id":"1:13787:32569","crate_id":1,"name":"split_at_checked","span":null,"visibility":"public","docs":"Divides one string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut_checked`]\nmethod.\n\n[`split_at_mut_checked`]: str::split_at_mut_checked\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at_checked(3).unwrap();\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n\nassert_eq!(None, s.split_at_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_checked(16));  // Beyond the string length\n```","links":{"str::split_at_mut_checked":"1:13788:32570"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"1:42734:206","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13844:36279":{"id":"1:13844:36279","crate_id":1,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:24:105-0:309:2433":{"id":"b:24:105-0:309:2433","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/yoke-0.7.4/src/erased.rs","begin":[22,0],"end":[22,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ErasedDestructor","id":"24:104:27497","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2433","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2825-0:324:2435":{"id":"b:1:2825-0:324:2435","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"1:3317:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2820:3883","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2827:28311"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3105-0:324:2435":{"id":"b:1:3105-0:324:2435","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3108:150","1:3109:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:16":{"id":"0:16","crate_id":0,"name":null,"span":{"filename":"src/deprecated.rs","begin":[71,0],"end":[129,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Idna","id":"0:253:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:17:1212","0:18:2432","0:20:2466"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:23:483-0:324:2435":{"id":"b:23:483-0:324:2435","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/icu_provider-1.5.0/src/any.rs","begin":[32,0],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MaybeSendSync","id":"23:482:27475","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:32945:249-0:253:2410":{"id":"a:1:32945:249-0:253:2410","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32945:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:253:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3099-0:339:2626":{"id":"b:1:3099-0:339:2626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2626","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3099-0:367:2632":{"id":"b:1:3099-0:367:2632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:33003:3395-0:400:2412":{"id":"a:1:33003:3395-0:400:2412","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:33003:3395","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:400:2412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:33003:3395-0:324:2435":{"id":"a:1:33003:3395-0:324:2435","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:33003:3395","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:784:2616":{"id":"5:784:2616","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"b:1:2793-0:400:2412":{"id":"b:1:2793-0:400:2412","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:400:2412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2795:28306"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13839:36277":{"id":"1:13839:36277","crate_id":1,"name":"match_indices","span":null,"visibility":"public","docs":"Returns an iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"1:13453:3330","`DoubleEndedIterator`":"1:8394:134","prim@char":"4:12652:492","str::rmatch_indices":"1:13841:36278"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"1:44884:4290","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13460:3320","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5715:37003":{"id":"5:5715:37003","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7774:257"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13460:3320","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13829:32577":{"id":"1:13829:32577","crate_id":1,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:42734:206","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13460:3320","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2822-0:299:2406":{"id":"b:1:2822-0:299:2406","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2820:3883","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2406","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2824:28311"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13846:36280":{"id":"1:13846:36280","crate_id":1,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:33003:3395-0:299:2406":{"id":"a:1:33003:3395-0:299:2406","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:33003:3395","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2406","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:13879:32503":{"id":"1:13879:32503","crate_id":1,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"1:1148:42119"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42830:3760-0:400:2412":{"id":"a:1:42830:3760-0:400:2412","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42830:3760","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:400:2412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:23:483-0:309:2433":{"id":"b:23:483-0:309:2433","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/icu_provider-1.5.0/src/any.rs","begin":[32,0],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MaybeSendSync","id":"23:482:27475","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphens","id":"0:309:2433","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13762":{"id":"1:13762","crate_id":1,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["1:13763:1027","1:13764:3006","1:13765:36267","1:13766:36268","1:13768:36269","1:13771:2442","1:13772:36270","1:13773:352","1:13774:32548","1:13775:2756","1:13777:31652","1:13779:31653","1:13781:31654","1:13783:36271","1:13784:36272","1:13785:2904","1:13786:3197","1:13787:32569","1:13788:32570","1:13790:2602","1:13791:4121","1:13792:2931","1:13793:28516","1:13794:28517","1:13795:9757","1:13796:36273","1:13797:28518","1:13798:3134","1:13800:3171","1:13802:32579","1:13805:3948","1:13808:3914","1:13812:3005","1:13814:28505","1:13816:3137","1:13819:36274","1:13821:36275","1:13824:32573","1:13826:32575","1:13829:32577","1:13831:32578","1:13834:3265","1:13836:36276","1:13839:36277","1:13841:36278","1:13844:36279","1:13846:36280","1:13848:36281","1:13850:36282","1:13851:36283","1:13852:36284","1:13855:36285","1:13857:32223","1:13859:3003","1:13862:36286","1:13865:36287","1:13867:36288","1:13870:36289","1:13872:2719","1:13873:32498","1:13874:32331","1:13875:32329","1:13876:32328","1:13877:32501","1:13878:32502","1:13879:32503","1:13880:36290","1:13882:10265","1:13883:36291","1:13884:33736"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:306":{"id":"0:306","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[349,24],"end":[349,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"1:3317:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2406","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:3357:3392-0:367:2632":{"id":"a:1:3357:3392-0:367:2632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3357:3392","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:23:483-0:400:2412":{"id":"b:23:483-0:400:2412","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/icu_provider-1.5.0/src/any.rs","begin":[32,0],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MaybeSendSync","id":"23:482:27475","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errors","id":"0:400:2412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:27:2630":{"id":"0:27:2630","crate_id":0,"name":"verify_dns_length","span":{"filename":"src/deprecated.rs","begin":[183,4],"end":[186,5]},"visibility":"public","docs":"Whether the _VerifyDNSLength_ operation should be performed\nby `to_ascii`.\n\nFor compatibility with previous behavior, even when set to `true`,\nthe trailing root label dot is allowed contrary to the spec.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["value",{"primitive":"bool"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:337":{"id":"0:337","crate_id":0,"name":null,"span":{"filename":"src/uts46.rs","begin":[458,30],"end":[458,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DnsLength","id":"0:324:2435","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:338:496"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:3357:3392-0:253:2410":{"id":"a:1:3357:3392-0:253:2410","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3357:3392","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Idna","id":"0:253:2410","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3110-0:339:2626":{"id":"b:1:3110-0:339:2626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2626","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3113:150","1:3114:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:782-0:352:2628":{"id":"b:5:782-0:352:2628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:778:264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingSuccess","id":"0:352:2628","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:784:2616","5:785:28313","5:786:28314"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13831:32578":{"id":"1:13831:32578","crate_id":1,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:42734:206","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13460:3320","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:13460:3320","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13477:4278","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:24":{"id":"0:24","crate_id":0,"name":null,"span":{"filename":"src/deprecated.rs","begin":[155,0],"end":[248,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Config","id":"0:257:2409","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:25:2638","0:26:2622","0:27:2630","0:28:2639","0:29:2662","0:32:2432","0:34:2466"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2793-0:367:2632":{"id":"b:1:2793-0:367:2632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2795:28306"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:42831:3759-0:339:2626":{"id":"a:1:42831:3759-0:339:2626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42831:3759","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ErrorPolicy","id":"0:339:2626","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:13784:36272":{"id":"1:13784:36272","crate_id":1,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"4:12658:1772","crate::ops::IndexMut":"1:3628:3350","str::slice_unchecked":"1:13783:36271"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"5:5964:1832":{"id":"5:5964:1832","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5712:37002":{"id":"5:5712:37002","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:299:3322","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:299:3322","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:33003:3395-0:367:2632":{"id":"a:1:33003:3395-0:367:2632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:33003:3395","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ProcessingError","id":"0:367:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:782-0:299:2406":{"id":"b:5:782-0:299:2406","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:778:264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsciiDenyList","id":"0:299:2406","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:784:2616","5:785:28313","5:786:28314"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13763:1027":{"id":"1:13763:1027","crate_id":1,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"4:12652:492"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13794:28517":{"id":"1:13794:28517","crate_id":1,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"1:13793:28516"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"1:45017:4285","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13812:3005":{"id":"1:13812:3005","crate_id":1,"name":"split","span":null,"visibility":"public","docs":"Returns an iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"1:13453:3330","`DoubleEndedIterator`":"1:8394:134","prim@char":"4:12652:492","str::split_whitespace":"1:13793:28516","str::rsplit":"1:13816:3137"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"1:44734:4101","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13460:3320","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5728:32330":{"id":"5:5728:32330","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:13875:32329"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13785:2904":{"id":"1:13785:2904","crate_id":1,"name":"split_at","span":null,"visibility":"public","docs":"Divides one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_checked`](str::split_at_checked).\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_checked":"1:13787:32569","str::split_at_mut":"1:13786:3197"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13877:32501":{"id":"1:13877:32501","crate_id":1,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"1:1148:42119"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"1:45689:231":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"24:356:27480":{"crate_id":24,"path":["yoke","yokeable","Yokeable"],"kind":"trait"},"37:709:5030":{"crate_id":37,"path":["icu_locid_transform","provider","expander","LikelySubtagsForScriptRegionV1"],"kind":"struct"},"1:2908:207":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"1:44591:4082":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"22:4934:3656":{"crate_id":22,"path":["icu_properties","provider","HangulSyllableTypeValueToShortNameV1Marker"],"kind":"struct"},"5:2364:4725":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"11:1866:3314":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"18:718:5264":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"1:44491:7457":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"6:5568:8938":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"17:16538:6315":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"17:2422:5281":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"1:23396:28337":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"5:7549:7043":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"6:5325:8827":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"6:5611:8962":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"4:11074:9432":{"crate_id":4,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"4:6557:7114":{"crate_id":4,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"1:43816:3376":{"crate_id":1,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"6:6695:9161":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"22:4647:3615":{"crate_id":22,"path":["icu_properties","provider","PrependedConcatenationMarkV1Marker"],"kind":"struct"},"1:38984:10246":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:41275:7411":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:47509:7563":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"4:8351:7160":{"crate_id":4,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"37:474:4418":{"crate_id":37,"path":["icu_locid_transform","provider","canonicalizer","AliasesV1"],"kind":"struct"},"17:11616:5437":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"16:4265:6450":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"1:3364:3394":{"crate_id":1,"path":["core","marker","FnPtr"],"kind":"trait"},"22:4850:3644":{"crate_id":22,"path":["icu_properties","provider","GeneralCategoryValueToShortNameV1Marker"],"kind":"struct"},"17:14178:5730":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"1:41104:4004":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"22:4437:3585":{"crate_id":22,"path":["icu_properties","provider","DiacriticV1Marker"],"kind":"struct"},"17:13771:5648":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"6:6710:9163":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"41:69:4998":{"crate_id":41,"path":["utf16_iter","indices","Utf16CharIndices"],"kind":"struct"},"1:41981:7329":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"16:7935:6758":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"16:6366:4602":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"17:10311:23085":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"17:11939:5463":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"32:168:4448":{"crate_id":32,"path":["zerovec","map","borrowed","ZeroMapBorrowed"],"kind":"struct"},"6:7344:9269":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"22:1092:5166":{"crate_id":22,"path":["icu_properties","props","PropertyEnumToValueNameSparseMapperBorrowed"],"kind":"struct"},"1:10669:3369":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"22:4332:3570":{"crate_id":22,"path":["icu_properties","provider","BidiControlV1Marker"],"kind":"struct"},"22:1396:8342":{"crate_id":22,"path":["icu_properties","props","GeneralCategoryULE"],"kind":"struct"},"1:44680:3326":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"4:7915:7792":{"crate_id":4,"path":["std","panicking","rust_panic_without_hook","RewrapBox"],"kind":"struct"},"20:268:3455":{"crate_id":20,"path":["icu_normalizer","IsNormalizedSinkUtf8"],"kind":"struct"},"4:5575:133":{"crate_id":4,"path":["std","path","Display"],"kind":"struct"},"6:5575:8940":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"22:4724:3626":{"crate_id":22,"path":["icu_properties","provider","UppercaseV1Marker"],"kind":"struct"},"4:6605:232":{"crate_id":4,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"1:23618:7389":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU64Inner"],"kind":"struct"},"22:4759:3631":{"crate_id":22,"path":["icu_properties","provider","XidStartV1Marker"],"kind":"struct"},"4:6132:4738":{"crate_id":4,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"6:7326:9260":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"4:9457:32245":{"crate_id":4,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"11:2297:6931":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"20:592:3458":{"crate_id":20,"path":["icu_normalizer","SupplementPayloadHolder"],"kind":"enum"},"23:530:3488":{"crate_id":23,"path":["icu_provider","any","AnyProvider"],"kind":"trait"},"17:11603:5436":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"1:2914:214":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:3401:10233":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"16:8666:4479":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"0:51:642":{"crate_id":0,"path":["idna","punycode","decode"],"kind":"function"},"17:12229:5488":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"6:6631:9139":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"1:47308:7540":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"6:7367:9287":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"1:45677:9532":{"crate_id":1,"path":["core","future","async_drop","Noop"],"kind":"struct"},"16:6571:6542":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"37:418:5019":{"crate_id":37,"path":["icu_locid_transform","fallback","LocaleFallbackIterator"],"kind":"struct"},"16:5755:6477":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"17:15809:6119":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"18:589:5238":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"34:339:27568":{"crate_id":34,"path":["litemap","store","StoreMut"],"kind":"trait"},"14:213:6921":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"1:41323:7413":{"crate_id":1,"path":["core","ffi","va_list","VaListImpl"],"kind":"struct"},"4:6774:7128":{"crate_id":4,"path":["std","sync","once","Once"],"kind":"struct"},"1:47291:7539":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"16:3306:6407":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"22:1791:8348":{"crate_id":22,"path":["icu_properties","props","WordBreakULE"],"kind":"struct"},"17:12814:5564":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"37:588:5021":{"crate_id":37,"path":["icu_locid_transform","provider","directionality","ScriptDirectionV1"],"kind":"struct"},"17:12173:5483":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"4:974:4719":{"crate_id":4,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"5:4473:281":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"16:6678:6549":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackageSections"],"kind":"struct"},"17:11643:4529":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"22:4318:3568":{"crate_id":22,"path":["icu_properties","provider","AlnumV1Marker"],"kind":"struct"},"16:901:5271":{"crate_id":16,"path":["gimli","read","endian_slice","DebugByte"],"kind":"struct"},"5:4565:35869":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"17:11715:5442":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"1:11215:29359":{"crate_id":1,"path":["core","slice","sort","unstable","quicksort","GapGuard"],"kind":"struct"},"1:7857:10303":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"20:279:3456":{"crate_id":20,"path":["icu_normalizer","IsNormalizedSinkStr"],"kind":"struct"},"1:43566:3367":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:45181:7471":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:13460:3320":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"17:14650:5817":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"11:859:6930":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"4:8271:5343":{"crate_id":4,"path":["std","fs","Metadata"],"kind":"struct"},"1:42734:206":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"17:12854:5287":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"17:15721:6095":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"6:7337:9265":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"6:5494:8907":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"22:5116:3682":{"crate_id":22,"path":["icu_properties","provider","JoiningTypeV1Marker"],"kind":"struct"},"17:10700:4548":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:41733:7323":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"22:5137:3685":{"crate_id":22,"path":["icu_properties","provider","JoiningTypeValueToLongNameV1Marker"],"kind":"struct"},"1:4840:9450":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"23:1037:5147":{"crate_id":23,"path":["icu_provider","any","DynamicDataProviderAnyMarkerWrap"],"kind":"struct"},"6:6602:9126":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"4:5870:9190":{"crate_id":4,"path":["std","process","exit"],"kind":"function"},"1:44643:4096":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:47224:7536":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"16:4182:6448":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"4:7819:34462":{"crate_id":4,"path":["std","panicking","Hook"],"kind":"enum"},"1:43845:6796":{"crate_id":1,"path":["core","fmt","rt","Flag"],"kind":"enum"},"17:1352:5279":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"1:41971:7434":{"crate_id":1,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"4:6898:15995":{"crate_id":4,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"16:3108:6441":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"5:3792:35859":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"4:12656:351":{"crate_id":4,"path":["std","array"],"kind":"primitive"},"5:884:102":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"37:984:5033":{"crate_id":37,"path":["icu_locid_transform","provider","StrStrPair"],"kind":"struct"},"6:7308:9253":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"1:23347:4767":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:46985:7515":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"1:4621:4772":{"crate_id":1,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"16:7072:23023":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"17:12924:5577":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"4:8124:5515":{"crate_id":4,"path":["std","thread","Thread"],"kind":"struct"},"1:45168:7470":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:0:527":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"1:23418:7369":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"22:5200:5192":{"crate_id":22,"path":["icu_properties","script","ScriptWithExtensionsBorrowed"],"kind":"struct"},"11:123:4686":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"16:5222:6467":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"4:4233:15911":{"crate_id":4,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"1:45051:3990":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"32:2490:5085":{"crate_id":32,"path":["zerovec","ule","chars","CharULE"],"kind":"struct"},"1:42927:7452":{"crate_id":1,"path":["core","range","iter","IterRangeFrom"],"kind":"struct"},"22:4920:3654":{"crate_id":22,"path":["icu_properties","provider","HangulSyllableTypeV1Marker"],"kind":"struct"},"1:3965:71":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"5:6274:9429":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"22:4948:3658":{"crate_id":22,"path":["icu_properties","provider","EastAsianWidthV1Marker"],"kind":"struct"},"15:394:22122":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"32:767:5072":{"crate_id":32,"path":["zerovec","map2d","cursor","ZeroMap2dCursor"],"kind":"struct"},"17:13133:5595":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"5:7872:3354":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"16:5725:4525":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"16:6438:23020":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"42:82:3708":{"crate_id":42,"path":["utf8_iter","report","Utf8CharsError"],"kind":"struct"},"4:2258:133":{"crate_id":4,"path":["std","ffi","os_str","Display"],"kind":"struct"},"22:5018:3668":{"crate_id":22,"path":["icu_properties","provider","GraphemeClusterBreakValueToShortNameV1Marker"],"kind":"struct"},"4:6668:198":{"crate_id":4,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"30:96:38397":{"crate_id":30,"path":["writeable","testing","TestWriter"],"kind":"struct"},"17:13157:5596":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"11:2469:22085":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"32:55:5070":{"crate_id":32,"path":["zerovec","flexzerovec","slice","FlexZeroSlice"],"kind":"struct"},"6:5341:8831":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"17:13399:5612":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"23:648:3508":{"crate_id":23,"path":["icu_provider","marker","KeyedDataMarker"],"kind":"trait"},"4:11272:32302":{"crate_id":4,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"6:7445:9300":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"17:13983:5684":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"1:43573:3366":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"4:8335:4731":{"crate_id":4,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"17:519:5275":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"36:595:27580":{"crate_id":36,"path":["icu_collections","codepointinvliststringlist","CodePointInversionListAndStringListError"],"kind":"enum"},"40:328:3695":{"crate_id":40,"path":["smallvec","Array"],"kind":"trait"},"23:1140:5155":{"crate_id":23,"path":["icu_provider","marker","NeverMarker"],"kind":"struct"},"16:6887:4658":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"17:15640:6088":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"22:4346:3572":{"crate_id":22,"path":["icu_properties","provider","BlankV1Marker"],"kind":"struct"},"22:4836:3642":{"crate_id":22,"path":["icu_properties","provider","GeneralCategoryV1Marker"],"kind":"struct"},"17:11102:5412":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"11:1001:6931":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"1:47078:7528":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:41464:7308":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"17:13553:23097":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"5:7723:10297":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:41371:7420":{"crate_id":1,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"4:12253:7143":{"crate_id":4,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"5:3358:6943":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"5:1366:6675":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"17:15995:6168":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"4:3707:15885":{"crate_id":4,"path":["std","io","BufRead"],"kind":"trait"},"11:1136:6936":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"1:45509:4276":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"22:4598:3608":{"crate_id":22,"path":["icu_properties","provider","NoncharacterCodePointV1Marker"],"kind":"struct"},"32:1095:4461":{"crate_id":32,"path":["zerovec","varzerovec","owned","VarZeroVecOwned"],"kind":"struct"},"32:1177:5075":{"crate_id":32,"path":["zerovec","varzerovec","slice","VarZeroSlice"],"kind":"struct"},"17:16211:6243":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"1:4986:492":{"crate_id":1,"path":["core","char"],"kind":"module"},"14:186:22102":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"17:14365:5773":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"1:45042:3991":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"4:11090:7254":{"crate_id":4,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"40:57:3314":{"crate_id":40,"path":["smallvec","Drain"],"kind":"struct"},"1:41558:7319":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"6:7962:9380":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"6:5044:8741":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"17:14258:5735":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"22:1085:5165":{"crate_id":22,"path":["icu_properties","props","PropertyEnumToValueNameSparseMapper"],"kind":"struct"},"17:13836:5666":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"20:588:2805":{"crate_id":20,"path":["icu_normalizer","uts46","Uts46Mapper"],"kind":"struct"},"0:339:2626":{"crate_id":0,"path":["idna","uts46","ErrorPolicy"],"kind":"enum"},"37:669:5029":{"crate_id":37,"path":["icu_locid_transform","provider","expander","LikelySubtagsForLanguageV1"],"kind":"struct"},"4:896:2755":{"crate_id":4,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"4:2344:5397":{"crate_id":4,"path":["std","fs","read"],"kind":"function"},"36:436:5042":{"crate_id":36,"path":["icu_collections","codepointinvlist","cpinvlist","CodePointInversionListULE"],"kind":"struct"},"17:15198:5922":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"23:553:3490":{"crate_id":23,"path":["icu_provider","any","AsDowncastingAnyProvider"],"kind":"trait"},"17:11346:5416":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"1:2810:114":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"4:8166:15804":{"crate_id":4,"path":["std","backtrace","RawFrame"],"kind":"enum"},"17:11502:5429":{"crate_id":17,"path":["object","read","archive","ArchiveSymbolIterator"],"kind":"struct"},"17:12907:5615":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"6:5069:8754":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"17:13243:5602":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"17:12430:5511":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"4:12651:1208":{"crate_id":4,"path":["std","never"],"kind":"primitive"},"27:16:3482":{"crate_id":27,"path":["zerofrom","zero_from","ZeroFrom"],"kind":"trait"},"36:382:3471":{"crate_id":36,"path":["icu_collections","char16trie","trie","Char16Trie"],"kind":"struct"},"5:7527:7042":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"16:7459:6662":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"6:4914:8680":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:44884:4290":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"11:2394:3356":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"6:5107:8756":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"6:1569:8498":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"1:13477:4278":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"0:352:2628":{"crate_id":0,"path":["idna","uts46","ProcessingSuccess"],"kind":"enum"},"37:430:27598":{"crate_id":37,"path":["icu_locid_transform","provider","canonicalizer","AliasesV1Marker"],"kind":"struct"},"4:1883:7067":{"crate_id":4,"path":["std","env","Vars"],"kind":"struct"},"34:329:27566":{"crate_id":34,"path":["litemap","store","StoreFromIterable"],"kind":"trait"},"4:6778:7129":{"crate_id":4,"path":["std","sync","once","OnceState"],"kind":"struct"},"1:12077:4100":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:36998:6695":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"17:3524:5284":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"40:281:3356":{"crate_id":40,"path":["smallvec","IntoIter"],"kind":"struct"},"17:14081:5701":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"6:5623:8968":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"4:11412:4787":{"crate_id":4,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"1:47397:7559":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"22:2159:8352":{"crate_id":22,"path":["icu_properties","props","JoiningTypeULE"],"kind":"struct"},"1:45761:28588":{"crate_id":1,"path":["core","task","wake","ExtData"],"kind":"enum"},"17:13592:5622":{"crate_id":17,"path":["object","read","RelocationMapEntry"],"kind":"struct"},"17:11458:5426":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"1:22925:15512":{"crate_id":1,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"6:1625:8541":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"16:4900:6457":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"1:41445:146":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"17:12575:5545":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"22:4542:3600":{"crate_id":22,"path":["icu_properties","provider","IdeographicV1Marker"],"kind":"struct"},"1:40446:7295":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"4:436:197":{"crate_id":4,"path":["std","thread","local","LocalKey"],"kind":"struct"},"16:3585:6443":{"crate_id":16,"path":["gimli","arch","MIPS"],"kind":"struct"},"1:2872:213":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"17:16730:6379":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"6:1667:8570":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"6:1521:8468":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"23:735:5128":{"crate_id":23,"path":["icu_provider","data_provider","DataProviderWithKey"],"kind":"struct"},"32:2073:37742":{"crate_id":32,"path":["zerovec","ule","ULE","validate_byte_slice"],"kind":"function"},"4:11153:7216":{"crate_id":4,"path":["std","sys","pal","unix","linux","pidfd","PidFd"],"kind":"struct"},"1:46932:7512":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:3576:3310":{"crate_id":1,"path":["core","ops","deref","DerefPure"],"kind":"trait"},"17:16301:6270":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"17:13465:5613":{"crate_id":17,"path":["object","read","ObjectMapFile"],"kind":"struct"},"30:304:5099":{"crate_id":30,"path":["writeable","try_writeable","TryWriteableInfallibleAsWriteable"],"kind":"struct"},"17:15733:6098":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"5:6547:16004":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"17:13093:4533":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"17:12263:5492":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"6:4984:8710":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"4:9551:174":{"crate_id":4,"path":["std","time","Instant"],"kind":"struct"},"4:7982:7144":{"crate_id":4,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"1:40233:10250":{"crate_id":1,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"32:1374:3484":{"crate_id":32,"path":["zerovec","zerovec","slice","ZeroSlice"],"kind":"struct"},"4:2341:7075":{"crate_id":4,"path":["std","fs","DirEntry"],"kind":"struct"},"6:4929:8686":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"6:6792:9189":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"14:219:6923":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"17:13630:5625":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"17:15792:6116":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"1:23607:7388":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU32Inner"],"kind":"struct"},"6:4816:8616":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"6:4792:8599":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"1:47323:7541":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"4:8577:7090":{"crate_id":4,"path":["std","io","IoSlice"],"kind":"struct"},"5:299:3322":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"4:5946:7115":{"crate_id":4,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"6:5217:8782":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"16:7189:23024":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"29:760:27520":{"crate_id":29,"path":["icu_locid","parser","langid","ParserMode"],"kind":"enum"},"16:6040:6434":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"1:3423:10238":{"crate_id":1,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"5:5821:3359":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"1:22881:15511":{"crate_id":1,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"1:42861:4350":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"29:1193:4480":{"crate_id":29,"path":["icu_locid","extensions","transform","Transform"],"kind":"struct"},"5:6746:35859":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"22:4731:3627":{"crate_id":22,"path":["icu_properties","provider","VariationSelectorV1Marker"],"kind":"struct"},"36:269:3558":{"crate_id":36,"path":["icu_collections","codepointtrie","cptrie","TrieValue"],"kind":"trait"},"16:6711:6554":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"16:8633:23031":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"4:1123:6932":{"crate_id":4,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"22:5177:5190":{"crate_id":22,"path":["icu_properties","script","ScriptExtensionsSet"],"kind":"struct"},"1:45748:7488":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"6:8243:9397":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"16:2682:6419":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"17:13876:4569":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"1:13163:4295":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:4906:3380":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"1:32945:249":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"5:1247:9775":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"16:2918:6430":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"16:2794:6424":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"17:11901:5462":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"1:42869:7450":{"crate_id":1,"path":["core","range","iter","IterRange"],"kind":"struct"},"4:12650:436":{"crate_id":4,"path":["std","bool"],"kind":"primitive"},"4:383:7056":{"crate_id":4,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"22:2188:5174":{"crate_id":22,"path":["icu_properties","bidi_data","BidiMirroringProperties"],"kind":"struct"},"23:1028:3486":{"crate_id":23,"path":["icu_provider","any","AnyMarker"],"kind":"struct"},"1:22383:15426":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"16:6623:6546":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"32:2720:5080":{"crate_id":32,"path":["zerovec","ule","unvalidated","UnvalidatedStr"],"kind":"struct"},"9:380:22012":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"6:7430:9296":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"17:11356:37625":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"32:2074:37743":{"crate_id":32,"path":["zerovec","ule","ULE","parse_byte_slice"],"kind":"function"},"1:41505:7428":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"6:5488:8905":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"18:698:4520":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"17:5154:5292":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"17:15389:5975":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"1:45485:4271":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"16:6850:6570":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"1:22265:15428":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"17:15868:6133":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"16:5170:6465":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"1:42852:3863":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"17:11438:5423":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"17:13183:5597":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"22:4423:3583":{"crate_id":22,"path":["icu_properties","provider","DeprecatedV1Marker"],"kind":"struct"},"14:164:22095":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"4:1942:7070":{"crate_id":4,"path":["std","env","Args"],"kind":"struct"},"22:4444:3586":{"crate_id":22,"path":["icu_properties","provider","EmojiModifierBaseV1Marker"],"kind":"struct"},"6:4957:8697":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"37:626:5024":{"crate_id":37,"path":["icu_locid_transform","provider","expander","LikelySubtagsV1"],"kind":"struct"},"18:623:37630":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"17:12287:5496":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"17:15659:4583":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"1:41947:7128":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:3792:268":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"6:6645:9141":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"1:14055:7354":{"crate_id":1,"path":["core","future","async_drop","AsyncDropOwning"],"kind":"struct"},"5:1382:6932":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"17:10898:151":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"4:11465:174":{"crate_id":4,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"1:43072:208":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"37:1084:27591":{"crate_id":37,"path":["icu_locid_transform","TransformResult"],"kind":"enum"},"31:632:27538":{"crate_id":31,"path":["tinystr","error","TinyStrError"],"kind":"enum"},"22:4486:3592":{"crate_id":22,"path":["icu_properties","provider","ExtendedPictographicV1Marker"],"kind":"struct"},"1:46771:7494":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"6:8249:9398":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"1:14369:7363":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"1:32911:7400":{"crate_id":1,"path":["core","error","private","Internal"],"kind":"struct"},"4:5939:7114":{"crate_id":4,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"6:7439:9299":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"6:6416:9028":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"1:12035:4103":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"16:8162:4676":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"16:4842:6455":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"20:303:3513":{"crate_id":20,"path":["icu_normalizer","properties","CanonicalComposition"],"kind":"struct"},"17:1233:5278":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"0:188:2407":{"crate_id":0,"path":["idna","uts46","Uts46"],"kind":"struct"},"4:2509:15855":{"crate_id":4,"path":["std","fs","read_link"],"kind":"function"},"5:2167:7024":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"4:4838:15910":{"crate_id":4,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"4:9403:32244":{"crate_id":4,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"4:12038:9444":{"crate_id":4,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"1:44902:4291":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"4:3688:34515":{"crate_id":4,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"4:5389:216":{"crate_id":4,"path":["std","path","PathBuf"],"kind":"struct"},"1:47530:7564":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"4:6295:232":{"crate_id":4,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"5:0:325":{"crate_id":5,"path":["alloc"],"kind":"module"},"1:48053:7610":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"32:2082:27554":{"crate_id":32,"path":["zerovec","ule","SliceAsULE"],"kind":"trait"},"16:6995:6581":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"37:884:3560":{"crate_id":37,"path":["icu_locid_transform","provider","Baked"],"kind":"struct"},"11:750:4716":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"11:1118:6935":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"1:45685:176":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"16:6981:4660":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"1:32915:4479":{"crate_id":1,"path":["core","error","tags","Value"],"kind":"struct"},"1:45324:7473":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:11844:4105":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:41549:4780":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"4:7877:7789":{"crate_id":4,"path":["std","panicking","begin_panic_handler","FormatStringPayload"],"kind":"struct"},"1:11222:29360":{"crate_id":1,"path":["core","slice","sort","unstable","quicksort","GapGuardRaw"],"kind":"struct"},"17:10840:4286":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"22:4325:3569":{"crate_id":22,"path":["icu_properties","provider","AlphabeticV1Marker"],"kind":"struct"},"4:8719:7214":{"crate_id":4,"path":["std","os","unix","net","ucred","UCred"],"kind":"struct"},"20:688:3457":{"crate_id":20,"path":["icu_normalizer","ComposingNormalizer"],"kind":"struct"},"18:521:27291":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"1:8315:158":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"22:1130:5169":{"crate_id":22,"path":["icu_properties","props","PropertyEnumToValueNameLinearMapperBorrowed"],"kind":"struct"},"1:47435:7561":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"17:11888:5461":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"11:663:4092":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"4:11206:4736":{"crate_id":4,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"5:7273:35922":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"1:12547:4085":{"crate_id":1,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"17:13231:5601":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"1:42753:185":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"16:8543:6822":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"22:3715:3562":{"crate_id":22,"path":["icu_properties","provider","PropertyCodePointMapV1"],"kind":"enum"},"1:42640:28368":{"crate_id":1,"path":["core","net","parser","AddrKind"],"kind":"enum"},"30:118:27528":{"crate_id":30,"path":["writeable","try_writeable","TryWriteable"],"kind":"trait"},"6:4875:8660":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:44136:4931":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:2671:697":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:47994:7607":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"22:3654:8353":{"crate_id":22,"path":["icu_properties","provider","bidi_data","CheckedBidiPairedBracketTypeULE"],"kind":"struct"},"16:2818:6425":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"18:80:9744":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"16:8011:4669":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"22:1070:5164":{"crate_id":22,"path":["icu_properties","props","ErasedEnumToValueNameSparseMapV1Marker"],"kind":"struct"},"22:1873:8349":{"crate_id":22,"path":["icu_properties","props","SentenceBreakULE"],"kind":"struct"},"1:47209:7535":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"4:1665:6943":{"crate_id":4,"path":["std","collections","hash","set","Union"],"kind":"struct"},"1:47110:7530":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"5:6566:16005":{"crate_id":5,"path":["alloc","task","LocalWake"],"kind":"trait"},"4:10889:7084":{"crate_id":4,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"4:9219:7240":{"crate_id":4,"path":["std","process","CommandArgs"],"kind":"struct"},"1:14212:7359":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"24:183:5117":{"crate_id":24,"path":["yoke","yoke","Yoke"],"kind":"struct"},"4:2025:4353":{"crate_id":4,"path":["std","error","Indented"],"kind":"struct"},"1:3599:155":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"17:14350:5771":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV2"],"kind":"struct"},"6:7407:9289":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"1:47862:7603":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"17:13387:4564":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"1:10876:165":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"1:41933:7326":{"crate_id":1,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"5:7248:35918":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"1:46833:7502":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"32:2088:37742":{"crate_id":32,"path":["zerovec","ule","VarULE","validate_byte_slice"],"kind":"function"},"16:8220:6769":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"22:2184:5173":{"crate_id":22,"path":["icu_properties","bidi_data","BidiAuxiliaryProperties"],"kind":"struct"},"4:12672:1885":{"crate_id":4,"path":["std","u16"],"kind":"primitive"},"22:4500:3594":{"crate_id":22,"path":["icu_properties","provider","GraphemeBaseV1Marker"],"kind":"struct"},"1:43394:91":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:46886:7509":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"22:4668:3618":{"crate_id":22,"path":["icu_properties","provider","RadicalV1Marker"],"kind":"struct"},"37:840:4436":{"crate_id":37,"path":["icu_locid_transform","provider","fallback","LocaleFallbackParentsV1"],"kind":"struct"},"37:326:4412":{"crate_id":37,"path":["icu_locid_transform","directionality","LocaleDirectionality"],"kind":"struct"},"1:41301:7412":{"crate_id":1,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"16:894:6402":{"crate_id":16,"path":["gimli","read","endian_slice","DebugBytes"],"kind":"struct"},"37:369:5012":{"crate_id":37,"path":["icu_locid_transform","fallback","LocaleFallbackerBorrowed"],"kind":"struct"},"4:8687:7094":{"crate_id":4,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"1:3431:10240":{"crate_id":1,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"6:8304:9411":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"4:8106:7148":{"crate_id":4,"path":["std","thread","ThreadId"],"kind":"struct"},"1:14483:3321":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"1:32946:251":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"16:6109:6488":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"6:5025:8732":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"4:8586:15865":{"crate_id":4,"path":["std","io","SeekFrom"],"kind":"enum"},"1:44734:4101":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"1:41244:3996":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"struct"},"4:2032:813":{"crate_id":4,"path":["std","ffi"],"kind":"module"},"17:16613:5666":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"4:5045:15920":{"crate_id":4,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"4:12246:7143":{"crate_id":4,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"17:15513:6067":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"5:7569:35947":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"17:12889:5575":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"16:7804:37611":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"7:31:21998":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"18:608:5244":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"16:4692:6452":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"16:2548:6413":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"6:6769:9183":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"37:635:27602":{"crate_id":37,"path":["icu_locid_transform","provider","expander","LikelySubtagsForLanguageV1Marker"],"kind":"struct"},"17:11743:5445":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"16:7956:6761":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"4:9505:7125":{"crate_id":4,"path":["std","sync","mutex","MappedMutexGuard"],"kind":"struct"},"4:4703:15933":{"crate_id":4,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"6:6459:9043":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"5:4488:35869":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"1:7740:4002":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"22:1675:8346":{"crate_id":22,"path":["icu_properties","props","LineBreakULE"],"kind":"struct"},"22:1610:8345":{"crate_id":22,"path":["icu_properties","props","EastAsianWidthULE"],"kind":"struct"},"30:0:3407":{"crate_id":30,"path":["writeable"],"kind":"module"},"4:8281:7156":{"crate_id":4,"path":["std","fs","OpenOptions"],"kind":"struct"},"1:6121:9429":{"crate_id":1,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"11:1652:37598":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"1:3063:78":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"1:44634:4093":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:32947:258":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"22:4563:3603":{"crate_id":22,"path":["icu_properties","provider","IdsTrinaryOperatorV1Marker"],"kind":"struct"},"17:14190:5733":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"18:563:4517":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"22:0:2469":{"crate_id":22,"path":["icu_properties"],"kind":"module"},"6:5366:8837":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"4:9236:4735":{"crate_id":4,"path":["std","process","ExitStatus"],"kind":"struct"},"16:8525:6820":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"17:13947:5677":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"29:1355:5114":{"crate_id":29,"path":["icu_locid","extensions","unicode","key","Key"],"kind":"struct"},"1:3147:127":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"17:11855:5459":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"6:5151:8760":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"22:4612:3610":{"crate_id":22,"path":["icu_properties","provider","NfdInertV1Marker"],"kind":"struct"},"36:509:27579":{"crate_id":36,"path":["icu_collections","codepointinvlist","CodePointInversionListError"],"kind":"enum"},"4:6378:32293":{"crate_id":4,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"4:2750:10356":{"crate_id":4,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"17:14122:5713":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"32:1645:39021":{"crate_id":32,"path":["zerovec","ule","encode","EncodeAsVarULE","encode_var_ule_len"],"kind":"function"},"1:6810:7311":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"23:994:5144":{"crate_id":23,"path":["icu_provider","response","Cart"],"kind":"struct"},"17:15963:6160":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"1:41203:3994":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"37:387:5013":{"crate_id":37,"path":["icu_locid_transform","fallback","LocaleFallbackerWithConfig"],"kind":"struct"},"1:8090:4739":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"4:11981:4751":{"crate_id":4,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"1:3628:3350":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"6:491:8394":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"25:0:3402":{"crate_id":25,"path":["stable_deref_trait"],"kind":"module"},"22:1947:8350":{"crate_id":22,"path":["icu_properties","props","CanonicalCombiningClassULE"],"kind":"struct"},"6:5349:8832":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"16:7987:6763":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"22:1545:8344":{"crate_id":22,"path":["icu_properties","props","HangulSyllableTypeULE"],"kind":"struct"},"4:3426:7085":{"crate_id":4,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"17:12447:23198":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"4:10657:116":{"crate_id":4,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"17:16288:6265":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"17:15624:6085":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"4:2096:210":{"crate_id":4,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"1:22385:4788":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"17:14571:5517":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"22:2214:5177":{"crate_id":22,"path":["icu_properties","bidi_data","BidiAuxiliaryPropertiesBorrowed"],"kind":"struct"},"29:1493:4485":{"crate_id":29,"path":["icu_locid","extensions","Extensions"],"kind":"struct"},"16:2413:4246":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"6:7984:9381":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"4:12668:927":{"crate_id":4,"path":["std","i32"],"kind":"primitive"},"17:12774:5561":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"4:3334:34909":{"crate_id":4,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"1:47547:7565":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"17:14008:5687":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"17:10405:23088":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"17:16013:6172":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"1:34603:10241":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:23673:7394":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI32Inner"],"kind":"struct"},"6:1589:8512":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"11:292:8362":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"11:0:3294":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"24:104:27497":{"crate_id":24,"path":["yoke","erased","ErasedDestructor"],"kind":"trait"},"17:14443:5786":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"32:2799:5089":{"crate_id":32,"path":["zerovec","ule","tuple","Tuple3ULE"],"kind":"struct"},"22:4801:3637":{"crate_id":22,"path":["icu_properties","provider","ExemplarCharactersIndexV1Marker"],"kind":"struct"},"18:113:9748":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"41:79:4999":{"crate_id":41,"path":["utf16_iter","report","Utf16CharsError"],"kind":"struct"},"4:12675:1879":{"crate_id":4,"path":["std","u128"],"kind":"primitive"},"1:43042:2755":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"17:13909:4575":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"17:16177:6231":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"34:351:27569":{"crate_id":34,"path":["litemap","store","StoreIterable"],"kind":"trait"},"16:5377:6472":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"17:12331:5501":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"1:11776:4092":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"17:5328:5293":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"4:4355:9777":{"crate_id":4,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"5:2291:4722":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"17:12318:5499":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"1:44542:4089":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"16:7383:4665":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"4:3328:34764":{"crate_id":4,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"11:321:8365":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"1:47270:7538":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"17:15884:6135":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"16:6806:4653":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"17:10975:37618":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"6:6737:9173":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"17:14585:5809":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"37:346:4414":{"crate_id":37,"path":["icu_locid_transform","expander","LocaleExpander"],"kind":"struct"},"1:10623:156":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"23:1032:3489":{"crate_id":23,"path":["icu_provider","any","AnyResponse"],"kind":"struct"},"17:12979:5581":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"31:0:3408":{"crate_id":31,"path":["tinystr"],"kind":"module"},"22:1410:4510":{"crate_id":22,"path":["icu_properties","props","GeneralCategoryTryFromError"],"kind":"struct"},"6:5265:8802":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:7009:9451":{"crate_id":1,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"4:8738:7216":{"crate_id":4,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"1:22134:3895":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"20:326:3515":{"crate_id":20,"path":["icu_normalizer","properties","CanonicalDecomposition"],"kind":"struct"},"32:2075:37744":{"crate_id":32,"path":["zerovec","ule","ULE","from_byte_slice_unchecked"],"kind":"function"},"4:707:15801":{"crate_id":4,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"16:4808:6454":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"4:3622:7209":{"crate_id":4,"path":["std","io","Read"],"kind":"trait"},"6:578:8447":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"6:485:8392":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"9:318:8375":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"22:4367:3575":{"crate_id":22,"path":["icu_properties","provider","FullCompositionExclusionV1Marker"],"kind":"struct"},"22:1850:3531":{"crate_id":22,"path":["icu_properties","props","SentenceBreak"],"kind":"struct"},"4:537:15783":{"crate_id":4,"path":["std","thread","PanicGuard"],"kind":"struct"},"1:41141:3990":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"22:2041:3528":{"crate_id":22,"path":["icu_properties","props","IndicSyllabicCategory"],"kind":"struct"},"1:5356:454":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"22:4633:3613":{"crate_id":22,"path":["icu_properties","provider","PatternSyntaxV1Marker"],"kind":"struct"},"1:23548:15866":{"crate_id":1,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"22:4514:3596":{"crate_id":22,"path":["icu_properties","provider","GraphemeLinkV1Marker"],"kind":"struct"},"1:10919:10343":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"16:3985:5309":{"crate_id":16,"path":["gimli","arch","PowerPc64"],"kind":"struct"},"1:2122:696":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"18:531:5235":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"29:1702:3530":{"crate_id":29,"path":["icu_locid","subtags","script","Script"],"kind":"struct"},"5:3686:194":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"4:4371:15931":{"crate_id":4,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"4:1636:3356":{"crate_id":4,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"17:15469:6037":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"6:5375:8843":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"32:2522:4464":{"crate_id":32,"path":["zerovec","ule","niche","NichedOption"],"kind":"struct"},"11:2206:4689":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"22:4899:3651":{"crate_id":22,"path":["icu_properties","provider","ScriptNameToValueV1Marker"],"kind":"struct"},"16:6267:6492":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"1:32936:7402":{"crate_id":1,"path":["core","error","Source"],"kind":"struct"},"1:31062:10080":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"11:1083:6934":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"17:15691:6092":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"11:1579:6939":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"1:3315:277":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"16:6142:23018":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"22:1587:3524":{"crate_id":22,"path":["icu_properties","props","EastAsianWidth"],"kind":"struct"},"6:5036:8736":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"17:596:5276":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"1:41237:3995":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"22:4885:3649":{"crate_id":22,"path":["icu_properties","provider","BidiClassValueToLongNameV1Marker"],"kind":"struct"},"23:35:3507":{"crate_id":23,"path":["icu_provider","data_provider","DynamicDataProvider"],"kind":"trait"},"4:6060:7122":{"crate_id":4,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"1:45809:6947":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"5:3291:2755":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"1:14389:7364":{"crate_id":1,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"22:4577:3605":{"crate_id":22,"path":["icu_properties","provider","LogicalOrderExceptionV1Marker"],"kind":"struct"},"16:544:4606":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"16:4927:6458":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"17:14137:5719":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"6:586:8451":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"1:44338:4080":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"6:5420:8863":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"1:22165:31897":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"22:4780:3634":{"crate_id":22,"path":["icu_properties","provider","ExemplarCharactersAuxiliaryV1Marker"],"kind":"struct"},"6:8326:9417":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"1:22206:15429":{"crate_id":1,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"5:3843:4756":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"29:1256:5115":{"crate_id":29,"path":["icu_locid","extensions","unicode","attribute","Attribute"],"kind":"struct"},"5:214:7014":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"29:1134:5114":{"crate_id":29,"path":["icu_locid","extensions","transform","key","Key"],"kind":"struct"},"23:782:3495":{"crate_id":23,"path":["icu_provider","error","DataError"],"kind":"struct"},"4:10935:5515":{"crate_id":4,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"1:3797:159":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"23:545:3491":{"crate_id":23,"path":["icu_provider","any","AsDynamicDataProviderAnyMarkerWrap"],"kind":"trait"},"17:15677:6089":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"34:363:27571":{"crate_id":34,"path":["litemap","store","StoreIntoIterator"],"kind":"trait"},"5:5414:16035":{"crate_id":5,"path":["alloc","rc","UniqueRcUninit"],"kind":"struct"},"5:3925:3351":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"1:3396:3308":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"17:12608:5548":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"1:32929:3379":{"crate_id":1,"path":["core","error","tags","Ref"],"kind":"struct"},"1:43883:3376":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"16:8708:6837":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"5:4157:35859":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"16:4981:6460":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"1:46818:7501":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"29:1061:4478":{"crate_id":29,"path":["icu_locid","extensions","transform","fields","Fields"],"kind":"struct"},"4:4134:15906":{"crate_id":4,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"11:2533:8372":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"6:6505:9065":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"11:2340:6946":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"22:5046:3672":{"crate_id":22,"path":["icu_properties","provider","WordBreakValueToShortNameV1Marker"],"kind":"struct"},"1:41286:10297":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"16:6638:6548":{"crate_id":16,"path":["gimli","read","dwarf","DwarfSections"],"kind":"struct"},"16:4239:6449":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"1:12619:4111":{"crate_id":1,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"17:2243:5280":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"1:47095:7529":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"40:367:3698":{"crate_id":40,"path":["smallvec","CollectionAllocErr"],"kind":"enum"},"17:15985:6165":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"5:3086:36057":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"4:4517:7096":{"crate_id":4,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"1:22963:15513":{"crate_id":1,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"23:1012:3487":{"crate_id":23,"path":["icu_provider","any","AnyPayload"],"kind":"struct"},"4:8629:4101":{"crate_id":4,"path":["std","io","Split"],"kind":"struct"},"32:2072:4370":{"crate_id":32,"path":["zerovec","ule","ULE"],"kind":"trait"},"22:3534:27301":{"crate_id":22,"path":["icu_properties","provider","bidi_data","BidiAuxiliaryPropertiesV1Marker"],"kind":"struct"},"4:4171:15907":{"crate_id":4,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"1:3587:3711":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:31705:208":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"1:41487:4779":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:3782:4077":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"6:6687:9158":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"1:22142:31892":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"16:7279:6642":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"17:10062:23078":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"4:6816:4746":{"crate_id":4,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"5:1001:2755":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"22:4738:3628":{"crate_id":22,"path":["icu_properties","provider","WhiteSpaceV1Marker"],"kind":"struct"},"22:5074:3676":{"crate_id":22,"path":["icu_properties","provider","SentenceBreakValueToShortNameV1Marker"],"kind":"struct"},"40:164:39094":{"crate_id":40,"path":["smallvec","insert_many","DropOnPanic"],"kind":"struct"},"4:5139:15953":{"crate_id":4,"path":["std","os","net","linux_ext","socket","UnixSocketExt"],"kind":"trait"},"1:12580:4086":{"crate_id":1,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"16:2658:6418":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"4:595:15789":{"crate_id":4,"path":["std","thread","Packet"],"kind":"struct"},"32:2339:27561":{"crate_id":32,"path":["zerovec","flexzerovec","vec","FlexZeroVec"],"kind":"enum"},"17:12588:5547":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"16:8102:6767":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"4:8806:15964":{"crate_id":4,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"20:601:3459":{"crate_id":20,"path":["icu_normalizer","IgnorableBehavior"],"kind":"enum"},"4:8091:7058":{"crate_id":4,"path":["std","thread","local","AccessError"],"kind":"struct"},"22:4892:3650":{"crate_id":22,"path":["icu_properties","provider","ScriptV1Marker"],"kind":"struct"},"17:11590:5435":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"17:16766:6388":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"4:12657:1738":{"crate_id":4,"path":["std","slice"],"kind":"primitive"},"16:6694:6552":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"1:46918:7511":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"4:12619:4764":{"crate_id":4,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"6:8284:9406":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"30:297:5098":{"crate_id":30,"path":["writeable","parts_write_adapter","CoreWriteAsPartsWrite"],"kind":"struct"},"4:1660:6942":{"crate_id":4,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"4:8699:15932":{"crate_id":4,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"1:22259:15425":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:43281:95":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:45481:4269":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"23:55:3492":{"crate_id":23,"path":["icu_provider","data_provider","BoundDataProvider"],"kind":"trait"},"4:8705:7213":{"crate_id":4,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"23:1079:4500":{"crate_id":23,"path":["icu_provider","hello_world","HelloWorldV1"],"kind":"struct"},"4:1885:7068":{"crate_id":4,"path":["std","env","VarsOs"],"kind":"struct"},"4:1919:7069":{"crate_id":4,"path":["std","env","SplitPaths"],"kind":"struct"},"1:43050:4092":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"0:329:2455":{"crate_id":0,"path":["idna","uts46","DnsLength","Verify"],"kind":"variant"},"16:5196:6466":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"16:7165:6616":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"17:16777:6389":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"32:2311:3559":{"crate_id":32,"path":["zerovec","error","ZeroVecError"],"kind":"enum"},"4:2511:15856":{"crate_id":4,"path":["std","fs","canonicalize"],"kind":"function"},"4:8330:4732":{"crate_id":4,"path":["std","hash","random","RandomState"],"kind":"struct"},"1:44623:4084":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"25:6:27495":{"crate_id":25,"path":["stable_deref_trait","StableDeref"],"kind":"trait"},"16:8264:6777":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"6:7284:9236":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"4:11069:9430":{"crate_id":4,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"1:11084:29358":{"crate_id":1,"path":["core","slice","sort","stable","merge","MergeState"],"kind":"struct"},"1:8813:10310":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"42:89:3707":{"crate_id":42,"path":["utf8_iter","report","ErrorReportingUtf8Chars"],"kind":"struct"},"6:7424:9294":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"4:12603:7282":{"crate_id":4,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"4:12673:1891":{"crate_id":4,"path":["std","u32"],"kind":"primitive"},"9:435:22011":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"34:370:27572":{"crate_id":34,"path":["litemap","store","StoreFromIterator"],"kind":"trait"},"6:5139:8759":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"4:650:15799":{"crate_id":4,"path":["std","ascii","AsciiExt"],"kind":"trait"},"4:9846:32298":{"crate_id":4,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"1:42556:4924":{"crate_id":1,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"22:2374:3560":{"crate_id":22,"path":["icu_properties","provider","Baked"],"kind":"struct"},"37:1009:5034":{"crate_id":37,"path":["icu_locid_transform","provider","LanguageStrStrPairVarULE"],"kind":"struct"},"4:1506:168":{"crate_id":4,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"11:983:6675":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"4:12678:1460":{"crate_id":4,"path":["std","reference"],"kind":"primitive"},"6:6679:9155":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"17:11989:4552":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"15:327:4681":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"17:15785:6115":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"34:0:3411":{"crate_id":34,"path":["litemap"],"kind":"module"},"4:12438:32315":{"crate_id":4,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"6:7553:9368":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"22:4388:3578":{"crate_id":22,"path":["icu_properties","provider","ChangesWhenNfkcCasefoldedV1Marker"],"kind":"struct"},"6:570:8442":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"1:4489:7297":{"crate_id":1,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"16:6300:6499":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"22:5232:5194":{"crate_id":22,"path":["icu_properties","sets","CodePointSetDataBorrowed"],"kind":"struct"},"1:47014:7517":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"32:2935:5091":{"crate_id":32,"path":["zerovec","ule","tuple","Tuple5ULE"],"kind":"struct"},"7:0:1957":{"crate_id":7,"path":["unwind"],"kind":"module"},"18:735:27289":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"1:8326:177":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"4:12655:1352":{"crate_id":4,"path":["std","pointer"],"kind":"primitive"},"1:42528:10317":{"crate_id":1,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"4:4850:9282":{"crate_id":4,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"function"},"6:6659:9146":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"6:5271:8805":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"4:5312:7105":{"crate_id":4,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"4:12110:7091":{"crate_id":4,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"20:474:3477":{"crate_id":20,"path":["icu_normalizer","provider","CompatibilityDecompositionTablesV1Marker"],"kind":"struct"},"4:9528:246":{"crate_id":4,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"5:5289:4728":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"1:45740:7486":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"17:14396:5780":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"6:6749:9175":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"36:430:4440":{"crate_id":36,"path":["icu_collections","codepointinvlist","builder","CodePointInversionListBuilder"],"kind":"struct"},"5:3090:36058":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"4:789:166":{"crate_id":4,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"16:7835:23027":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"17:15817:6121":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"16:6419:4608":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"1:22788:15866":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"16:6237:4629":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"17:15978:6164":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"29:1466:27518":{"crate_id":29,"path":["icu_locid","extensions","ExtensionType"],"kind":"enum"},"0:340:2627":{"crate_id":0,"path":["idna","uts46","ErrorPolicy","FailFast"],"kind":"variant"},"11:2115:6931":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"16:8295:6781":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"1:41956:7328":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"17:16250:6251":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"40:97:3694":{"crate_id":40,"path":["smallvec","SmallVecData"],"kind":"enum"},"5:7074:3359":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"16:7369:4664":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"1:5375:7303":{"crate_id":1,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"1:32869:8371":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"22:5123:3683":{"crate_id":22,"path":["icu_properties","provider","JoiningTypeNameToValueV1Marker"],"kind":"struct"},"4:0:1764":{"crate_id":4,"path":["std"],"kind":"module"},"6:1494:8457":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"6:6360:8988":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"39:0:3416":{"crate_id":39,"path":["icu_properties_data"],"kind":"module"},"22:1047:5161":{"crate_id":22,"path":["icu_properties","props","PropertyValueNameToEnumMapper"],"kind":"struct"},"1:48082:7613":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"17:14971:5881":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"22:5004:3666":{"crate_id":22,"path":["icu_properties","provider","GraphemeClusterBreakV1Marker"],"kind":"struct"},"23:645:3500":{"crate_id":23,"path":["icu_provider","marker","DataMarker"],"kind":"trait"},"4:6279:7114":{"crate_id":4,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"5:724:7015":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"22:4997:3665":{"crate_id":22,"path":["icu_properties","provider","LineBreakValueToLongNameV1Marker"],"kind":"struct"},"4:963:3351":{"crate_id":4,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"6:8266:9403":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"4:1114:6931":{"crate_id":4,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"16:6062:6436":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"11:1898:6943":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"1:47907:7604":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"4:8101:7146":{"crate_id":4,"path":["std","thread","Builder"],"kind":"struct"},"0:324:2435":{"crate_id":0,"path":["idna","uts46","DnsLength"],"kind":"enum"},"19:0:1327":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"4:12652:492":{"crate_id":4,"path":["std","char"],"kind":"primitive"},"1:4850:3379":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"1:45154:7468":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"4:969:6937":{"crate_id":4,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"4:8172:15837":{"crate_id":4,"path":["std","env","VarError"],"kind":"enum"},"17:13971:5681":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"17:14788:5852":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"1:47160:7532":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"16:2433:22157":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"17:11469:23107":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"16:6335:6502":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"4:3097:150":{"crate_id":4,"path":["std","io","error","Error"],"kind":"struct"},"18:659:5251":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:12063:4104":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:43058:3356":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"4:1011:6930":{"crate_id":4,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"22:5088:3678":{"crate_id":22,"path":["icu_properties","provider","IndicSyllabicCategoryV1Marker"],"kind":"struct"},"4:11917:7453":{"crate_id":4,"path":["std","sys","thread_local","native","eager","State"],"kind":"enum"},"4:2772:7077":{"crate_id":4,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"6:1696:8581":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"4:1996:4352":{"crate_id":4,"path":["std","error","Report"],"kind":"struct"},"22:2198:27299":{"crate_id":22,"path":["icu_properties","bidi_data","BidiPairingProperties"],"kind":"enum"},"1:32922:7401":{"crate_id":1,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"4:2339:151":{"crate_id":4,"path":["std","fs","File"],"kind":"struct"},"4:3937:7092":{"crate_id":4,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"6:1584:8510":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"1:3874:132":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:45118:10371":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"17:14665:5820":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"4:9372:7245":{"crate_id":4,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"17:10132:23079":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"17:15611:6080":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"17:14859:5866":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"1:45772:7491":{"crate_id":1,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"17:321:5272":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"17:11690:5440":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"1:11359:29361":{"crate_id":1,"path":["core","slice","sort","shared","smallsort","CopyOnDrop"],"kind":"struct"},"1:42830:3760":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:3199:4356":{"crate_id":1,"path":["core","error","Request"],"kind":"struct"},"29:1409:4479":{"crate_id":29,"path":["icu_locid","extensions","unicode","value","Value"],"kind":"struct"},"1:41962:7088":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"29:1159:4479":{"crate_id":29,"path":["icu_locid","extensions","transform","value","Value"],"kind":"struct"},"22:4472:3590":{"crate_id":22,"path":["icu_properties","provider","EmojiPresentationV1Marker"],"kind":"struct"},"1:24260:248":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:2129:7289":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"22:4605:3609":{"crate_id":22,"path":["icu_properties","provider","NfcInertV1Marker"],"kind":"struct"},"6:473:8386":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"1:34458:10236":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"17:14985:5883":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"1:23434:28339":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"17:10283:23084":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"1:2424:7293":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"22:4955:3659":{"crate_id":22,"path":["icu_properties","provider","EastAsianWidthNameToValueV1Marker"],"kind":"struct"},"23:482:27475":{"crate_id":23,"path":["icu_provider","any","MaybeSendSync"],"kind":"trait"},"16:2964:6432":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"4:1005:6929":{"crate_id":4,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"16:7904:6749":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"17:11161:37622":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"6:8237:9396":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"17:16241:6249":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"5:7559:7044":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"17:15062:5902":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"13:0:3290":{"crate_id":13,"path":["std_detect"],"kind":"module"},"5:6826:3356":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"17:680:5277":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"22:5025:3669":{"crate_id":22,"path":["icu_properties","provider","GraphemeClusterBreakValueToLongNameV1Marker"],"kind":"struct"},"16:5447:6474":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"16:2448:6408":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"11:2323:6932":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"1:46953:7513":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"17:14431:5784":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"17:15919:6146":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"40:331:3359":{"crate_id":40,"path":["smallvec","SetLenOnDrop"],"kind":"struct"},"1:6197:7309":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"23:1046:5148":{"crate_id":23,"path":["icu_provider","any","DowncastingAnyProvider"],"kind":"struct"},"4:12624:15805":{"crate_id":4,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"22:4458:3588":{"crate_id":22,"path":["icu_properties","provider","EmojiModifierV1Marker"],"kind":"struct"},"17:16512:5648":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"4:12663:766":{"crate_id":4,"path":["std","f32"],"kind":"primitive"},"2:2062:7286":{"crate_id":2,"path":["compiler_builtins","int","big","u256"],"kind":"struct"},"17:11063:37620":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"30:332:5100":{"crate_id":30,"path":["writeable","try_writeable","WriteableAsTryWriteableInfallible"],"kind":"struct"},"1:44998:4284":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"18:651:5234":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"11:1042:22089":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"6:5295:8818":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"4:10388:7444":{"crate_id":4,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"1:40309:222":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"22:4353:3573":{"crate_id":22,"path":["icu_properties","provider","CasedV1Marker"],"kind":"struct"},"4:9351:16001":{"crate_id":4,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"6:465:8381":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"22:4374:3576":{"crate_id":22,"path":["icu_properties","provider","ChangesWhenCasefoldedV1Marker"],"kind":"struct"},"29:831:4468":{"crate_id":29,"path":["icu_locid","shortvec","ShortBoxSlice"],"kind":"struct"},"17:13108:4529":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"1:46903:7510":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"5:4127:3314":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"18:515:5231":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"1:43133:97":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:45359:7478":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"6:5165:8761":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"1:11801:4101":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"4:3872:15904":{"crate_id":4,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"4:1648:6940":{"crate_id":4,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"6:5205:8775":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"22:4871:3647":{"crate_id":22,"path":["icu_properties","provider","BidiClassNameToValueV1Marker"],"kind":"struct"},"16:7492:6666":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"4:8713:7206":{"crate_id":4,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"17:12864:5567":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"16:7347:4620":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"17:12357:5506":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"20:513:3475":{"crate_id":20,"path":["icu_normalizer","provider","CanonicalCompositionsV1Marker"],"kind":"struct"},"29:866:38353":{"crate_id":29,"path":["icu_locid","shortvec","ShortBoxSliceIntoIterInner"],"kind":"enum"},"4:12669:933":{"crate_id":4,"path":["std","i64"],"kind":"primitive"},"1:23109:15507":{"crate_id":1,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"1:41526:7317":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"22:5144:5188":{"crate_id":22,"path":["icu_properties","runtime","UnicodeProperty"],"kind":"struct"},"16:7966:6762":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"6:4805:8608":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"11:2507:8367":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"11:1862:3356":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"1:44988:4288":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"5:5560:16037":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"37:803:27606":{"crate_id":37,"path":["icu_locid_transform","provider","fallback","LocaleFallbackParentsV1Marker"],"kind":"struct"},"4:7471:32309":{"crate_id":4,"path":["std","sys","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"1:6310:4778":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:11752:2755":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"4:5505:215":{"crate_id":4,"path":["std","path","Path"],"kind":"struct"},"16:2618:6416":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"18:613:37629":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"29:799:38349":{"crate_id":29,"path":["icu_locid","shortvec","ShortBoxSliceInner"],"kind":"enum"},"22:4962:3660":{"crate_id":22,"path":["icu_properties","provider","EastAsianWidthValueToShortNameV1Marker"],"kind":"struct"},"22:2258:3686":{"crate_id":22,"path":["icu_properties","provider","names","GeneralCategoryMaskNameToValueV1Marker"],"kind":"struct"},"1:7741:4003":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"22:4983:3663":{"crate_id":22,"path":["icu_properties","provider","LineBreakNameToValueV1Marker"],"kind":"struct"},"5:1411:6936":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"11:820:15818":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"1:34391:10234":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"4:8433:4754":{"crate_id":4,"path":["std","io","error","Custom"],"kind":"struct"},"1:41496:7310":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"16:8118:222":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"1:44663:4095":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:34949:10243":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"17:15876:6134":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"16:8176:6768":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"1:5323:29323":{"crate_id":1,"path":["core","ffi","va_list","sealed_trait","VaArgSafe"],"kind":"trait"},"5:284:35859":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"0:110:2762":{"crate_id":0,"path":["idna","punycode","encode_str"],"kind":"function"},"1:42474:182":{"crate_id":1,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"4:5682:7106":{"crate_id":4,"path":["std","process","Child"],"kind":"struct"},"1:45682:163":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"1:41042:3991":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"16:6820:23022":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCacheStrategy"],"kind":"enum"},"37:554:27600":{"crate_id":37,"path":["icu_locid_transform","provider","directionality","ScriptDirectionV1Marker"],"kind":"struct"},"36:522:5047":{"crate_id":36,"path":["icu_collections","codepointinvliststringlist","CodePointInversionListAndStringListULE"],"kind":"struct"},"37:311:4071":{"crate_id":37,"path":["icu_locid_transform","directionality","Direction"],"kind":"enum"},"18:0:3300":{"crate_id":18,"path":["memchr"],"kind":"module"},"5:4990:229":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"37:358:5009":{"crate_id":37,"path":["icu_locid_transform","fallback","LocaleFallbacker"],"kind":"struct"},"37:592:27601":{"crate_id":37,"path":["icu_locid_transform","provider","expander","LikelySubtagsV1Marker"],"kind":"struct"},"5:5:1983":{"crate_id":5,"path":["alloc","vec"],"kind":"macro"},"14:0:3296":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"4:562:7735":{"crate_id":4,"path":["std","thread","thread_name_string","ThreadNameString"],"kind":"struct"},"6:5521:8914":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"1:23596:7387":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU16Inner"],"kind":"struct"},"43:0:3418":{"crate_id":43,"path":["write16"],"kind":"module"},"11:1892:6942":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"18:670:5257":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"4:12677:1967":{"crate_id":4,"path":["std","usize"],"kind":"primitive"},"1:41473:7425":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"16:2988:6433":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"1:22277:4788":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:44560:4088":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"29:1633:4489":{"crate_id":29,"path":["icu_locid","subtags","region","Region"],"kind":"struct"},"17:13304:23095":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"17:16717:6373":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"4:4963:15921":{"crate_id":4,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"17:3743:5285":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"1:2784:103":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"1:3043:10079":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"4:9841:7155":{"crate_id":4,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"6:6744:9174":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"1:48073:7612":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"4:999:6927":{"crate_id":4,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"17:10601:4545":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"6:6543:9093":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"5:7510:3352":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"11:1871:3351":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"23:1114:4505":{"crate_id":23,"path":["icu_provider","hello_world","HelloWorldProvider"],"kind":"struct"},"1:23469:5102":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"4:11128:7090":{"crate_id":4,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"1:44612:4083":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"17:13207:5599":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"14:159:6915":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"4:6087:4737":{"crate_id":4,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"35:0:3412":{"crate_id":35,"path":["icu_provider_macros"],"kind":"module"},"0:50:2697":{"crate_id":0,"path":["idna","punycode","decode_to_string"],"kind":"function"},"1:10296:31426":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:3822:30944":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"16:3139:5296":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"14:40:5663":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"37:748:5031":{"crate_id":37,"path":["icu_locid_transform","provider","expander","LikelySubtagsExtendedV1"],"kind":"struct"},"17:14039:5696":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"1:48157:7624":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"17:16525:5662":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"17:14710:5825":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"5:3303:36053":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"4:10766:7240":{"crate_id":4,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"17:14057:5697":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"6:7317:9259":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"17:11814:5453":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"29:921:5113":{"crate_id":29,"path":["icu_locid","extensions","other","subtag","Subtag"],"kind":"struct"},"1:42778:3356":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"16:5647:6475":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"5:7591:222":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"17:10150:23080":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"16:7539:6674":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"22:2136:2811":{"crate_id":22,"path":["icu_properties","props","JoiningType"],"kind":"struct"},"18:706:4279":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"22:4430:3584":{"crate_id":22,"path":["icu_properties","provider","DefaultIgnorableCodePointV1Marker"],"kind":"struct"},"17:12990:5582":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"6:4937:8688":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:16403:6294":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:14498:5795":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"17:11757:5447":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"1:23142:15506":{"crate_id":1,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"17:14337:5769":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV1"],"kind":"struct"},"4:10674:34423":{"crate_id":4,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"0:370:2634":{"crate_id":0,"path":["idna","uts46","ProcessingError","SinkError"],"kind":"variant"},"4:4436:7095":{"crate_id":4,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"5:4362:2755":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"9:490:7000":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"1:47139:7531":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"6:6670:9149":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"1:41417:4775":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"37:940:5032":{"crate_id":37,"path":["icu_locid_transform","provider","StrStrPairVarULE"],"kind":"struct"},"17:13730:5639":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"6:5512:8913":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"5:3699:2755":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"6:1551:8488":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"22:4689:3621":{"crate_id":22,"path":["icu_properties","provider","SegmentStarterV1Marker"],"kind":"struct"},"5:3332:6940":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"1:23385:7367":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:13471:4279":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"22:1733:8347":{"crate_id":22,"path":["icu_properties","props","GraphemeClusterBreakULE"],"kind":"struct"},"22:4395:3579":{"crate_id":22,"path":["icu_properties","provider","ChangesWhenLowercasedV1Marker"],"kind":"struct"},"18:689:5260":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"0:314:2454":{"crate_id":0,"path":["idna","uts46","Hyphens","Check"],"kind":"variant"},"17:13959:5680":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"11:423:9768":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"37:756:27605":{"crate_id":37,"path":["icu_locid_transform","provider","fallback","LocaleFallbackLikelySubtagsV1Marker"],"kind":"struct"},"0:327:2971":{"crate_id":0,"path":["idna","uts46","DnsLength","VerifyAllowRootDot"],"kind":"variant"},"22:4451:3587":{"crate_id":22,"path":["icu_properties","provider","EmojiComponentV1Marker"],"kind":"struct"},"1:31358:28347":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"1:5417:1007":{"crate_id":1,"path":["core","iter"],"kind":"module"},"17:12055:5470":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"5:7694:4727":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"17:316:5271":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"22:5164:5189":{"crate_id":22,"path":["icu_properties","script","ScriptWithExt"],"kind":"struct"},"1:43900:150":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"1:44653:4094":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"17:13436:4567":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"17:15801:6117":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"1:3481:6690":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"17:10830:5399":{"crate_id":17,"path":["object","read","read_cache","ReadCacheRange"],"kind":"struct"},"17:16116:6224":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"1:22204:15866":{"crate_id":1,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"6:6590:9119":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"22:1924:2809":{"crate_id":22,"path":["icu_properties","props","CanonicalCombiningClass"],"kind":"struct"},"22:4493:3593":{"crate_id":22,"path":["icu_properties","provider","GraphV1Marker"],"kind":"struct"},"1:23013:32127":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"4:12667:921":{"crate_id":4,"path":["std","i16"],"kind":"primitive"},"17:14110:5710":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"22:3605:5184":{"crate_id":22,"path":["icu_properties","provider","bidi_data","MirroredPairedBracketDataTryFromError"],"kind":"struct"},"23:947:3504":{"crate_id":23,"path":["icu_provider","request","DataRequestMetadata"],"kind":"struct"},"23:1055:3493":{"crate_id":23,"path":["icu_provider","buf","BufferMarker"],"kind":"struct"},"32:671:4451":{"crate_id":32,"path":["zerovec","map2d","borrowed","ZeroMap2dBorrowed"],"kind":"struct"},"6:8225:9394":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:10605:2673":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"6:6441:9033":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"4:9262:4736":{"crate_id":4,"path":["std","process","ExitCode"],"kind":"struct"},"1:22257:15866":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"6:1632:8545":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"22:4549:3601":{"crate_id":22,"path":["icu_properties","provider","IdStartV1Marker"],"kind":"struct"},"14:201:3313":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"16:2838:6426":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"1:43587:3369":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:8394:134":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"17:15074:5903":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"16:2898:6429":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"4:8187:7154":{"crate_id":4,"path":["std","env","JoinPathsError"],"kind":"struct"},"1:48036:7609":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"34:316:27564":{"crate_id":34,"path":["litemap","store","StoreConstEmpty"],"kind":"trait"},"1:12946:4073":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"17:10571:4525":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"6:5051:8743":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"1:7806:9784":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"16:8317:23030":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"4:4193:15909":{"crate_id":4,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"16:6656:4635":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"4:9834:151":{"crate_id":4,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"17:10733:4549":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"36:728:3557":{"crate_id":36,"path":["icu_collections","codepointtrie","cptrie","CodePointMapRange"],"kind":"struct"},"1:47642:7568":{"crate_id":1,"path":["core","core_arch","simd","m32x8"],"kind":"struct"},"1:23503:7381":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"17:11629:5383":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"9:49:4691":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"1:22987:15866":{"crate_id":1,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"4:11670:6997":{"crate_id":4,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"5:5515:35859":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"1:44570:4090":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:13411:3328":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"31:650:5094":{"crate_id":31,"path":["tinystr","unvalidated","UnvalidatedTinyAsciiStr"],"kind":"struct"},"1:41157:3992":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"17:12898:5576":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"1:23706:7397":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroIsizeInner"],"kind":"struct"},"32:2554:5087":{"crate_id":32,"path":["zerovec","ule","plain","RawBytesULE"],"kind":"struct"},"16:8562:6825":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"10:0:3293":{"crate_id":10,"path":["adler"],"kind":"module"},"23:818:27595":{"crate_id":23,"path":["icu_provider","fallback","LocaleFallbackSupplement"],"kind":"enum"},"16:8055:6765":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"6:0:1032":{"crate_id":6,"path":["libc"],"kind":"module"},"22:4906:3652":{"crate_id":22,"path":["icu_properties","provider","ScriptValueToShortNameV1Marker"],"kind":"struct"},"17:16658:6360":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"1:8807:4001":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"22:3574:4506":{"crate_id":22,"path":["icu_properties","provider","bidi_data","MirroredPairedBracketData"],"kind":"struct"},"1:13482:4277":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"4:9533:247":{"crate_id":4,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"17:15456:6030":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"22:1224:8341":{"crate_id":22,"path":["icu_properties","props","BidiClassULE"],"kind":"struct"},"36:561:5049":{"crate_id":36,"path":["icu_collections","codepointinvliststringlist","CodePointInversionListAndStringList"],"kind":"struct"},"22:4528:3598":{"crate_id":22,"path":["icu_properties","provider","HyphenV1Marker"],"kind":"struct"},"1:31347:3376":{"crate_id":1,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"22:5196:5191":{"crate_id":22,"path":["icu_properties","script","ScriptWithExtensions"],"kind":"struct"},"1:10671:218":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"17:14521:5800":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"17:12120:4540":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"16:5253:6468":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"5:136:3304":{"crate_id":5,"path":["alloc","boxed"],"kind":"module"},"1:44720:4286":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"4:1132:6936":{"crate_id":4,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"5:4552:9429":{"crate_id":5,"path":["alloc","collections","vec_deque","shrink_to","Guard"],"kind":"struct"},"17:16315:6272":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"1:31294:3346":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"32:1485:28329":{"crate_id":32,"path":["zerovec","zerovec","EyepatchHackVector"],"kind":"struct"},"11:776:3314":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"24:117:28316":{"crate_id":24,"path":["yoke","kinda_sorta_dangling","KindaSortaDangling"],"kind":"struct"},"1:1919:4225":{"crate_id":1,"path":["core","intrinsics","AggregateRawPtr"],"kind":"trait"},"17:15048:5901":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"17:15771:6112":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"5:928:15819":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"6:545:8429":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"22:1283:2810":{"crate_id":22,"path":["icu_properties","props","GeneralCategory"],"kind":"enum"},"16:8720:150":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"1:42496:7335":{"crate_id":1,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"5:1632:7021":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"17:16791:6393":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"1:3411:6689":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:44118:7453":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"22:1464:3530":{"crate_id":22,"path":["icu_properties","props","Script"],"kind":"struct"},"16:7013:6588":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"1:44321:9530":{"crate_id":1,"path":["core","slice","sort","stable","drift","DriftsortRun"],"kind":"struct"},"22:4675:3619":{"crate_id":22,"path":["icu_properties","provider","RegionalIndicatorV1Marker"],"kind":"struct"},"1:48249:7640":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"16:2702:6420":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"20:663:3464":{"crate_id":20,"path":["icu_normalizer","DecomposingNormalizer"],"kind":"struct"},"4:4247:15913":{"crate_id":4,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"4:982:6924":{"crate_id":4,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"16:7518:6672":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"17:15569:6073":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"1:3837:115":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:10114:92":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"25:7:27501":{"crate_id":25,"path":["stable_deref_trait","CloneStableDeref"],"kind":"trait"},"23:849:3498":{"crate_id":23,"path":["icu_provider","key","DataKeyHash"],"kind":"struct"},"16:5346:6471":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"1:23410:7368":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"9:345:22026":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"4:12270:32313":{"crate_id":4,"path":["std","backtrace_rs","backtrace","libunwind","Bomb"],"kind":"struct"},"1:41747:7324":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"4:11447:9434":{"crate_id":4,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"5:7108:3361":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"17:11728:5443":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"1:46970:7514":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"11:357:9764":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"23:896:4495":{"crate_id":23,"path":["icu_provider","key","DataKeyMetadata"],"kind":"struct"},"1:11994:4098":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:14072:7357":{"crate_id":1,"path":["core","future","async_drop","AsyncDropInPlace"],"kind":"struct"},"4:8276:7155":{"crate_id":4,"path":["std","fs","ReadDir"],"kind":"struct"},"32:334:4450":{"crate_id":32,"path":["zerovec","map","map","ZeroMap"],"kind":"struct"},"5:1211:9774":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"6:5585:8945":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"0:367:2632":{"crate_id":0,"path":["idna","uts46","ProcessingError"],"kind":"enum"},"0:310:2434":{"crate_id":0,"path":["idna","uts46","Hyphens","Allow"],"kind":"variant"},"1:12976:4280":{"crate_id":1,"path":["core","str","converts","from_utf8"],"kind":"function"},"1:8852:31425":{"crate_id":1,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"4:8653:15903":{"crate_id":4,"path":["std","net","Shutdown"],"kind":"enum"},"5:6116:72":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"1:41517:7316":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"22:1161:5171":{"crate_id":22,"path":["icu_properties","props","PropertyEnumToValueNameLinearTiny4Mapper"],"kind":"struct"},"32:3021:5092":{"crate_id":32,"path":["zerovec","ule","tuple","Tuple6ULE"],"kind":"struct"},"4:3467:7086":{"crate_id":4,"path":["std","io","stdio","Stderr"],"kind":"struct"},"22:4794:3636":{"crate_id":22,"path":["icu_properties","provider","ExemplarCharactersNumbersV1Marker"],"kind":"struct"},"1:31326:3347":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"16:6747:4650":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"0:353:2629":{"crate_id":0,"path":["idna","uts46","ProcessingSuccess","Passthrough"],"kind":"variant"},"1:23066:10204":{"crate_id":1,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","with_exposed_provenance"],"kind":"function"},"22:4465:3589":{"crate_id":22,"path":["icu_properties","provider","EmojiV1Marker"],"kind":"struct"},"1:3042:15866":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"22:4822:3640":{"crate_id":22,"path":["icu_properties","provider","CanonicalCombiningClassValueToShortNameV1Marker"],"kind":"struct"},"1:11921:4106":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"11:344:9761":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"17:14384:5778":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"17:15587:6078":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"4:6470:32297":{"crate_id":4,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"6:6428:9032":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"29:1564:4469":{"crate_id":29,"path":["icu_locid","subtags","language","Language"],"kind":"struct"},"5:4519:9429":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"1:912:202":{"crate_id":1,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"1:33004:3397":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"22:4570:3604":{"crate_id":22,"path":["icu_properties","provider","JoinControlV1Marker"],"kind":"struct"},"6:1703:8584":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"20:385:3466":{"crate_id":20,"path":["icu_normalizer","provider","CanonicalDecompositionDataV1Marker"],"kind":"struct"},"16:7256:6641":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"16:7728:3755":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"1:3809:10253":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:40439:7405":{"crate_id":1,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"11:2540:3323":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"6:5186:8763":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"5:7200:280":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"6:7580:9374":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"1:8030:4757":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"11:2099:6675":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"4:1632:2755":{"crate_id":4,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"4:5022:7101":{"crate_id":4,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"17:14776:5850":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"4:9336:15999":{"crate_id":4,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"17:12737:5558":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"17:15908:6142":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"16:8134:4673":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"17:11770:23127":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"5:1227:36056":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"1:41252:3989":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"5:1623:222":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"17:12022:5467":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"4:7408:7788":{"crate_id":4,"path":["std","sys","backtrace","print","DisplayBacktrace"],"kind":"struct"},"1:4555:10267":{"crate_id":1,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"1:10656:123":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"16:5111:6463":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"17:13423:4565":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"6:6422:9031":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:16164:6225":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"6:6578:9114":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"16:8025:4670":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"22:2371:5182":{"crate_id":22,"path":["icu_properties","provider","names","PropertyEnumToValueNameLinearTiny4MapV1"],"kind":"struct"},"22:1768:3532":{"crate_id":22,"path":["icu_properties","props","WordBreak"],"kind":"struct"},"6:7515:9349":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"22:4682:3620":{"crate_id":22,"path":["icu_properties","provider","SoftDottedV1Marker"],"kind":"struct"},"1:45531:135":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"5:7750:7050":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"4:9587:7253":{"crate_id":4,"path":["std","time","SystemTimeError"],"kind":"struct"},"2:2077:7287":{"crate_id":2,"path":["compiler_builtins","int","big","i256"],"kind":"struct"},"5:1885:3351":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"6:4976:8705":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"1:44704:3325":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"18:643:5234":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"5:888:7016":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"1:10604:238":{"crate_id":1,"path":["core","fmt","Result"],"kind":"type_alias"},"32:1754:27557":{"crate_id":32,"path":["zerovec","ule","niche","NicheBytes"],"kind":"trait"},"6:4890:8667":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"4:9538:7136":{"crate_id":4,"path":["std","sync","rwlock","MappedRwLockReadGuard"],"kind":"struct"},"4:6502:4744":{"crate_id":4,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"6:7990:9383":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"1:46999:7516":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:3322:261":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"4:12227:4763":{"crate_id":4,"path":["std","alloc","System"],"kind":"struct"},"4:683:4357":{"crate_id":4,"path":["std","backtrace","Backtrace"],"kind":"struct"},"4:9209:7238":{"crate_id":4,"path":["std","pipe","PipeReader"],"kind":"struct"},"6:6852:9203":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"4:5130:15952":{"crate_id":4,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"43:5:3481":{"crate_id":43,"path":["write16","Write16"],"kind":"trait"},"22:2341:5181":{"crate_id":22,"path":["icu_properties","provider","names","PropertyEnumToValueNameLinearMapV1"],"kind":"struct"},"17:16341:6281":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"17:16744:6382":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"6:7494:9335":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"6:1643:8553":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"17:15174:4561":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"4:12671:1903":{"crate_id":4,"path":["std","u8"],"kind":"primitive"},"1:7635:3190":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"5:7583:3356":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"16:6873:6573":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"41:95:5001":{"crate_id":41,"path":["utf16_iter","Utf16Chars"],"kind":"struct"},"6:8278:9405":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"6:5319:8826":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"4:9390:119":{"crate_id":4,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"4:8642:7206":{"crate_id":4,"path":["std","net","tcp","Incoming"],"kind":"struct"},"1:33003:3395":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"1:13240:4105":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"17:11485:5427":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"32:263:27320":{"crate_id":32,"path":["zerovec","map","kv","ZeroMapKV"],"kind":"trait"},"17:15448:6027":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"22:5247:5197":{"crate_id":22,"path":["icu_properties","sets","ErasedUnicodeSetlikeMarker"],"kind":"struct"},"37:536:4430":{"crate_id":37,"path":["icu_locid_transform","provider","canonicalizer","AliasesV2"],"kind":"struct"},"6:5007:8723":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"4:8438:15898":{"crate_id":4,"path":["std","io","error","ErrorKind"],"kind":"enum"},"11:102:8361":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"6:5381:8844":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"1:45477:4275":{"crate_id":1,"path":["core","str","LinesMap"],"kind":"struct"},"4:4384:9779":{"crate_id":4,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"16:5740:4526":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"6:6610:9127":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"1:40630:3881":{"crate_id":1,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"16:7413:6651":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"1:2303:201":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"17:12825:5565":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"4:4725:15934":{"crate_id":4,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"1:45372:4300":{"crate_id":1,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"4:5732:7112":{"crate_id":4,"path":["std","process","ChildStderr"],"kind":"struct"},"1:46786:7497":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"17:11995:5465":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"1:41333:7419":{"crate_id":1,"path":["core","ffi","va_list","VaList"],"kind":"struct"},"16:4150:6447":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"17:15115:5908":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"4:8797:7217":{"crate_id":4,"path":["std","panic","PanicHookInfo"],"kind":"struct"},"32:2081:27553":{"crate_id":32,"path":["zerovec","ule","EqULE"],"kind":"trait"},"20:290:3465":{"crate_id":20,"path":["icu_normalizer","error","NormalizerError"],"kind":"enum"},"4:4185:15908":{"crate_id":4,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"1:43833:9529":{"crate_id":1,"path":["core","fmt","rt","Count"],"kind":"enum"},"4:9477:4760":{"crate_id":4,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"30:192:27484":{"crate_id":30,"path":["writeable","Writeable"],"kind":"trait"},"11:718:4720":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"4:12658:1772":{"crate_id":4,"path":["std","str"],"kind":"primitive"},"17:15763:6109":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"4:7250:16003":{"crate_id":4,"path":["std","std_float","StdFloat"],"kind":"trait"},"11:481:166":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"1:23015:10204":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_exposed_provenance"],"kind":"function"},"1:38929:10245":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"17:12958:5579":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"17:12254:5491":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"4:4925:15933":{"crate_id":4,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"32:2512:5086":{"crate_id":32,"path":["zerovec","ule","multi","MultiFieldsULE"],"kind":"struct"},"16:0:3298":{"crate_id":16,"path":["gimli"],"kind":"module"},"1:42674:7094":{"crate_id":1,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"23:744:3496":{"crate_id":23,"path":["icu_provider","error","DataErrorKind"],"kind":"enum"},"6:497:8397":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"4:4243:15912":{"crate_id":4,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"4:3469:7087":{"crate_id":4,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"1:39618:10248":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"20:550:3516":{"crate_id":20,"path":["icu_normalizer","provider","NonRecursiveDecompositionSupplementV1Marker"],"kind":"struct"},"11:2374:4092":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"16:2588:6415":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"22:1123:5168":{"crate_id":22,"path":["icu_properties","props","PropertyEnumToValueNameLinearMapper"],"kind":"struct"},"1:48187:7626":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"42:0:2471":{"crate_id":42,"path":["utf8_iter"],"kind":"module"},"4:3331:34908":{"crate_id":4,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"1:12960:4075":{"crate_id":1,"path":["core","slice","GetManyMutError"],"kind":"struct"},"1:47480:7562":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"6:479:8389":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"17:14910:5871":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"0:112:718":{"crate_id":0,"path":["idna","punycode","encode"],"kind":"function"},"1:47740:7601":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"23:797:27594":{"crate_id":23,"path":["icu_provider","fallback","LocaleFallbackPriority"],"kind":"enum"},"4:508:32289":{"crate_id":4,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"1:23052:15515":{"crate_id":1,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"17:14730:5826":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"22:4584:3606":{"crate_id":22,"path":["icu_properties","provider","LowercaseV1Marker"],"kind":"struct"},"17:12761:5560":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"17:12663:5550":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"4:9431:4743":{"crate_id":4,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"17:15324:5924":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"4:8694:9427":{"crate_id":4,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"16:6606:218":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"17:16395:6291":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"4:5154:15954":{"crate_id":4,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"4:8648:7208":{"crate_id":4,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"11:1542:22090":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"1:12049:4099":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"5:7787:3315":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"4:8086:15866":{"crate_id":4,"path":["std","sealed","Sealed"],"kind":"trait"},"6:5482:8904":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"4:940:4718":{"crate_id":4,"path":["std","collections","hash","map","Values"],"kind":"struct"},"4:5802:7113":{"crate_id":4,"path":["std","process","Stdio"],"kind":"struct"},"16:3046:22159":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"32:1757:5076":{"crate_id":32,"path":["zerovec","ule","niche","NichedOptionULE"],"kind":"union"},"1:34324:10235":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"17:11842:5458":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"36:699:5060":{"crate_id":36,"path":["icu_collections","codepointtrie","cptrie","CodePointTrieHeader"],"kind":"struct"},"1:44551:4087":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:43207:94":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"6:6486:9063":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"22:4696:3622":{"crate_id":22,"path":["icu_properties","provider","CaseSensitiveV1Marker"],"kind":"struct"},"16:155:4600":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"16:5142:6464":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"1:41164:3993":{"crate_id":1,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"34:357:27570":{"crate_id":34,"path":["litemap","store","StoreIterableMut"],"kind":"trait"},"1:23001:15514":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"17:16203:6240":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"6:5395:8852":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"1:8277:10312":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"17:13247:150":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"4:4922:15955":{"crate_id":4,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"17:11395:23105":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"1:10301:4782":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:4767:233":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"22:4409:3581":{"crate_id":22,"path":["icu_properties","provider","ChangesWhenUppercasedV1Marker"],"kind":"struct"},"17:13608:23065":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"5:7668:3323":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"6:7463:9310":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"17:15844:6125":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"37:880:4438":{"crate_id":37,"path":["icu_locid_transform","provider","fallback","LocaleFallbackSupplementV1"],"kind":"struct"},"16:6864:4482":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"41:0:3417":{"crate_id":41,"path":["utf16_iter"],"kind":"module"},"6:6893:9229":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"17:12272:5493":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"17:10667:4547":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"23:15:3502":{"crate_id":23,"path":["icu_provider","data_provider","DataProvider"],"kind":"trait"},"17:14611:5812":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"0:312:2666":{"crate_id":0,"path":["idna","uts46","Hyphens","CheckFirstLast"],"kind":"variant"},"5:6915:35859":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"6:5241:8790":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"1:42714:7341":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"36:271:37930":{"crate_id":36,"path":["icu_collections","codepointtrie","cptrie","TrieValue","try_from_u32"],"kind":"function"},"6:5179:8762":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"1:45239:7472":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"1:44580:4091":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"17:12160:5482":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"16:6460:23021":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"4:2534:15863":{"crate_id":4,"path":["std","fs","exists"],"kind":"function"},"40:118:2730":{"crate_id":40,"path":["smallvec","SmallVec"],"kind":"struct"},"1:13202:4293":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"13:110:37602":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"1:3426:10239":{"crate_id":1,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"1:22686:31903":{"crate_id":1,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"1:42790:3755":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"21:0:3399":{"crate_id":21,"path":["displaydoc"],"kind":"module"},"23:0:3400":{"crate_id":23,"path":["icu_provider"],"kind":"module"},"40:0:2470":{"crate_id":40,"path":["smallvec"],"kind":"module"},"1:40457:7406":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"22:4556:3602":{"crate_id":22,"path":["icu_properties","provider","IdsBinaryOperatorV1Marker"],"kind":"struct"},"26:0:3403":{"crate_id":26,"path":["yoke_derive"],"kind":"module"},"17:2453:5283":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"4:8288:4755":{"crate_id":4,"path":["std","fs","FileTimes"],"kind":"struct"},"4:9396:7246":{"crate_id":4,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"17:15951:6157":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"22:1146:5170":{"crate_id":22,"path":["icu_properties","props","ErasedEnumToValueNameLinearTiny4MapV1Marker"],"kind":"struct"},"32:1736:39031":{"crate_id":32,"path":["zerovec","ule","multi","BlankSliceEncoder"],"kind":"struct"},"16:8609:4679":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"6:1563:8496":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"5:2142:4756":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"6:559:8437":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"11:763:4718":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"4:8894:7231":{"crate_id":4,"path":["std","path","PrefixComponent"],"kind":"struct"},"4:953:3314":{"crate_id":4,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"6:6398:9015":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"17:14069:5700":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"1:2787:104":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"20:0:2468":{"crate_id":20,"path":["icu_normalizer"],"kind":"module"},"1:41127:3999":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"16:7916:6750":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"10:36:8374":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"6:517:8414":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"15:288:9752":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"1:42937:222":{"crate_id":1,"path":["core","range","Range"],"kind":"struct"},"17:11825:5455":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"17:12878:5571":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"17:15971:6163":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"4:5716:7111":{"crate_id":4,"path":["std","process","ChildStdout"],"kind":"struct"},"13:229:4685":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"1:4928:3382":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"4:9543:7137":{"crate_id":4,"path":["std","sync","rwlock","MappedRwLockWriteGuard"],"kind":"struct"},"1:45033:3992":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"4:9385:4740":{"crate_id":4,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"1:45566:10382":{"crate_id":1,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:44106:169":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"17:12935:5578":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"5:1122:35859":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"30:360:5101":{"crate_id":30,"path":["writeable","LengthHint"],"kind":"struct"},"6:5117:8757":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"22:4535:3599":{"crate_id":22,"path":["icu_properties","provider","IdContinueV1Marker"],"kind":"struct"},"6:5462:8893":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"23:1109:5152":{"crate_id":23,"path":["icu_provider","hello_world","HelloWorldV1Marker"],"kind":"struct"},"22:1168:5172":{"crate_id":22,"path":["icu_properties","props","PropertyEnumToValueNameLinearTiny4MapperBorrowed"],"kind":"struct"},"5:7774:257":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"18:581:3895":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"4:11174:7113":{"crate_id":4,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"17:15534:6072":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"22:5081:3677":{"crate_id":22,"path":["icu_properties","provider","SentenceBreakValueToLongNameV1Marker"],"kind":"struct"},"17:13996:5686":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"36:659:3474":{"crate_id":36,"path":["icu_collections","codepointtrie","cptrie","CodePointTrie"],"kind":"struct"},"17:15861:6132":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"32:1257:27315":{"crate_id":32,"path":["zerovec","varzerovec","vec","VarZeroVec"],"kind":"enum"},"4:12676:996":{"crate_id":4,"path":["std","isize"],"kind":"primitive"},"17:16021:6174":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"5:1601:4719":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"20:452:3478":{"crate_id":20,"path":["icu_normalizer","provider","DecompositionSupplementV1"],"kind":"struct"},"1:3317:121":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"16:8063:23028":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"1:43875:74":{"crate_id":1,"path":["core","fmt","rt","Argument"],"kind":"struct"},"1:4771:7299":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"17:12187:5484":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"1:31332:7399":{"crate_id":1,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"37:406:5015":{"crate_id":37,"path":["icu_locid_transform","fallback","LocaleFallbackIteratorInner"],"kind":"struct"},"1:40409:4076":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"16:6186:6489":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"1:44089:4928":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"4:9436:4758":{"crate_id":4,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"6:5652:8979":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"1:23662:7393":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI16Inner"],"kind":"struct"},"17:12373:5508":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"17:12409:4557":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"16:6406:6515":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"5:6148:4728":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"17:14322:5764":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"4:8871:7453":{"crate_id":4,"path":["std","path","State"],"kind":"enum"},"1:4536:10266":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"17:15477:6038":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"16:6792:6565":{"crate_id":16,"path":["gimli","read","relocate","RelocateReader"],"kind":"struct"},"17:14021:5688":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"17:14558:5804":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"1:34190:3309":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"11:1858:2755":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"1:10109:85":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"22:4752:3630":{"crate_id":22,"path":["icu_properties","provider","XidContinueV1Marker"],"kind":"struct"},"1:41539:7429":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:3803:10251":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"17:12725:5557":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"16:8500:6817":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"17:15144:5911":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"6:8272:9404":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"20:422:3467":{"crate_id":20,"path":["icu_normalizer","provider","CompatibilityDecompositionSupplementV1Marker"],"kind":"struct"},"17:15746:6104":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"1:45493:4274":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"41:63:3480":{"crate_id":41,"path":["utf16_iter","Utf16CharsEx"],"kind":"trait"},"4:11050:7271":{"crate_id":4,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"1:9447:3757":{"crate_id":1,"path":["core","panic","panic_info","PanicMessage"],"kind":"struct"},"0:248:2441":{"crate_id":0,"path":["idna","domain_to_ascii"],"kind":"function"},"1:45390:4301":{"crate_id":1,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"4:8742:9269":{"crate_id":4,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"6:523:8417":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"30:8:38396":{"crate_id":30,"path":["writeable","cmp","WriteComparator"],"kind":"struct"},"22:5213:3556":{"crate_id":22,"path":["icu_properties","sets","CodePointSetData"],"kind":"struct"},"22:5130:3684":{"crate_id":22,"path":["icu_properties","provider","JoiningTypeValueToShortNameV1Marker"],"kind":"struct"},"1:44710:4287":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:2226:10215":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:41149:3991":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:45782:192":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"16:2484:6410":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"23:449:3505":{"crate_id":23,"path":["icu_provider","response","DataResponse"],"kind":"struct"},"6:5550:8931":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"17:12201:5485":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"34:374:4442":{"crate_id":34,"path":["litemap","map","LiteMap"],"kind":"struct"},"1:44752:4097":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"5:984:15820":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"17:11552:5432":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"1:22653:15431":{"crate_id":1,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"29:773:38351":{"crate_id":29,"path":["icu_locid","parser","langid","ParserPosition"],"kind":"enum"},"6:6617:9128":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"29:1013:5113":{"crate_id":29,"path":["icu_locid","extensions","private","other","Subtag"],"kind":"struct"},"17:10553:23093":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"22:4857:3645":{"crate_id":22,"path":["icu_properties","provider","GeneralCategoryValueToLongNameV1Marker"],"kind":"struct"},"16:7041:4661":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"4:12653:1925":{"crate_id":4,"path":["std","unit"],"kind":"primitive"},"4:4803:15951":{"crate_id":4,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"1:44097:4929":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:9597:3320":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"30:374:5102":{"crate_id":30,"path":["writeable","Part"],"kind":"struct"},"16:7786:37610":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"4:12670:914":{"crate_id":4,"path":["std","i128"],"kind":"primitive"},"4:2811:7080":{"crate_id":4,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"6:5249:8794":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"4:2493:4502":{"crate_id":4,"path":["std","fs","metadata"],"kind":"function"},"5:1397:6931":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"6:1711:8588":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"22:5095:3679":{"crate_id":22,"path":["icu_properties","provider","IndicSyllabicCategoryNameToValueV1Marker"],"kind":"struct"},"6:5224:8783":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"36:746:150":{"crate_id":36,"path":["icu_collections","codepointtrie","error","Error"],"kind":"enum"},"5:5960:265":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"4:978:4720":{"crate_id":4,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"4:9321:16000":{"crate_id":4,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"5:7098:3360":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"17:15088:5904":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"5:2579:9422":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"6:5334:8830":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"17:14545:5801":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"1:15:3266":{"crate_id":1,"path":["core","write"],"kind":"macro"},"1:42982:224":{"crate_id":1,"path":["core","range","RangeFrom"],"kind":"struct"},"32:1815:5078":{"crate_id":32,"path":["zerovec","ule","option","OptionULE"],"kind":"struct"},"16:2568:6414":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"17:16573:6345":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"22:4969:3661":{"crate_id":22,"path":["icu_properties","provider","EastAsianWidthValueToLongNameV1Marker"],"kind":"struct"},"4:9292:7116":{"crate_id":4,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"32:475:27559":{"crate_id":32,"path":["zerovec","map","vecs","ZeroVecLike"],"kind":"trait"},"6:553:8434":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"4:5873:15983":{"crate_id":4,"path":["std","process","Termination"],"kind":"trait"},"17:16029:6175":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"1:40331:224":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"4:9225:211":{"crate_id":4,"path":["std","process","Output"],"kind":"struct"},"16:7946:6439":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"4:1867:722":{"crate_id":4,"path":["std","env"],"kind":"module"},"16:6841:4657":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"22:5011:3667":{"crate_id":22,"path":["icu_properties","provider","GraphemeClusterBreakNameToValueV1Marker"],"kind":"struct"},"5:4292:9429":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"4:6967:7134":{"crate_id":4,"path":["std","sync","reentrant_lock","ReentrantLockGuard"],"kind":"struct"},"17:11494:5428":{"crate_id":17,"path":["object","read","archive","ArchiveOffset"],"kind":"struct"},"1:22373:15866":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"5:2810:9425":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"4:9214:7239":{"crate_id":4,"path":["std","pipe","PipeWriter"],"kind":"struct"},"6:6756:9176":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"29:1380:4483":{"crate_id":29,"path":["icu_locid","extensions","unicode","keywords","Keywords"],"kind":"struct"},"1:43170:87":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"17:16814:6398":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"4:8959:2755":{"crate_id":4,"path":["std","path","Iter"],"kind":"struct"},"4:919:3356":{"crate_id":4,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"1:44856:4099":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"16:7209:6628":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"22:5102:3680":{"crate_id":22,"path":["icu_properties","provider","IndicSyllabicCategoryValueToShortNameV1Marker"],"kind":"struct"},"16:7398:37608":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"0:400:2412":{"crate_id":0,"path":["idna","Errors"],"kind":"struct"},"16:2770:6423":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"1:4897:10275":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"4:3679:2673":{"crate_id":4,"path":["std","io","Write"],"kind":"trait"},"16:7027:6590":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"16:5707:23017":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"17:13928:4582":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"2:1785:238":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"4:5222:15960":{"crate_id":4,"path":["std","panic","always_abort"],"kind":"function"},"17:10634:4546":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"1:41588:7321":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:43244:88":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"22:4654:3616":{"crate_id":22,"path":["icu_properties","provider","PrintV1Marker"],"kind":"struct"},"32:2749:5088":{"crate_id":32,"path":["zerovec","ule","tuple","Tuple2ULE"],"kind":"struct"},"17:12385:5509":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"1:47192:7534":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"4:9309:7244":{"crate_id":4,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"1:23516:7382":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:23585:7386":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU8Inner"],"kind":"struct"},"22:3816:3565":{"crate_id":22,"path":["icu_properties","provider","ScriptWithExtensionsPropertyV1"],"kind":"struct"},"4:3560:7088":{"crate_id":4,"path":["std","io","util","Repeat"],"kind":"struct"},"4:6953:4747":{"crate_id":4,"path":["std","sync","reentrant_lock","ReentrantLock"],"kind":"struct"},"32:2466:4457":{"crate_id":32,"path":["zerovec","varzerovec","components","VarZeroVecComponents"],"kind":"struct"},"1:4959:3381":{"crate_id":1,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"17:13079:5594":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"6:5664:8984":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"20:652:3463":{"crate_id":20,"path":["icu_normalizer","Composition"],"kind":"struct"},"17:16380:6290":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"6:7390:9288":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"1:23629:7390":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU128Inner"],"kind":"struct"},"4:11137:32276":{"crate_id":4,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"17:16269:6264":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"1:41265:107":{"crate_id":1,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:14095:4779":{"crate_id":1,"path":["core","future","async_drop","Fuse"],"kind":"struct"},"1:3558:128":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"16:8206:4677":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"5:1551:3356":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"22:4766:3632":{"crate_id":22,"path":["icu_properties","provider","BasicEmojiV1Marker"],"kind":"struct"},"7:78:22005":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"1:5136:3470":{"crate_id":1,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"1:45489:4270":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"4:11380:4735":{"crate_id":4,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"4:12150:7092":{"crate_id":4,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"11:1878:6940":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"22:4381:3577":{"crate_id":22,"path":["icu_properties","provider","ChangesWhenCasemappedV1Marker"],"kind":"struct"},"1:2685:10204":{"crate_id":1,"path":["core","ptr","with_exposed_provenance"],"kind":"function"},"17:15928:6149":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"22:4808:3638":{"crate_id":22,"path":["icu_properties","provider","CanonicalCombiningClassV1Marker"],"kind":"struct"},"4:8324:131":{"crate_id":4,"path":["std","fs","DirBuilder"],"kind":"struct"},"1:41353:10283":{"crate_id":1,"path":["core","ffi","c_char"],"kind":"type_alias"},"4:8568:2771":{"crate_id":4,"path":["std","io","util","Sink"],"kind":"struct"},"4:11759:32305":{"crate_id":4,"path":["std","sys","sync","once","futex","CompletionGuard"],"kind":"struct"},"4:8909:15977":{"crate_id":4,"path":["std","path","Component"],"kind":"enum"},"0:250:2452":{"crate_id":0,"path":["idna","domain_to_ascii_strict"],"kind":"function"},"17:13014:5584":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"1:40277:3349":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"1:4653:4773":{"crate_id":1,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:23095:15866":{"crate_id":1,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"34:320:27565":{"crate_id":34,"path":["litemap","store","Store"],"kind":"trait"},"1:14187:217":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"17:12081:5476":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"4:7901:7791":{"crate_id":4,"path":["std","panicking","begin_panic","Payload"],"kind":"struct"},"1:41723:7203":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"5:7856:3351":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"5:5564:16038":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"1:22163:31895":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"6:8007:9392":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"17:15699:6093":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"6:5088:8755":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"17:14678:5821":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"4:9270:2755":{"crate_id":4,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"17:15595:6079":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"17:2394:23153":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"5:7762:7051":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"17:13000:23223":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"16:6939:6579":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"32:2089:37743":{"crate_id":32,"path":["zerovec","ule","VarULE","parse_byte_slice"],"kind":"function"},"17:16417:6297":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"17:3877:5286":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"6:4896:8668":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"24:247:27489":{"crate_id":24,"path":["yoke","yoke","CloneableCart"],"kind":"trait"},"0:355:2631":{"crate_id":0,"path":["idna","uts46","ProcessingSuccess","WroteToSink"],"kind":"variant"},"1:13453:3330":{"crate_id":1,"path":["core","str","pattern"],"kind":"module"},"1:43318:89":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"6:5630:8971":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"1:11577:252":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"16:2528:6412":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"17:16350:6285":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"16:7421:23025":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"0:252:2465":{"crate_id":0,"path":["idna","domain_to_unicode"],"kind":"function"},"1:44081:4926":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"4:9674:7070":{"crate_id":4,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"17:12686:5551":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"6:5658:8981":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"24:599:5124":{"crate_id":24,"path":["yoke","trait_hack","YokeTraitHack"],"kind":"struct"},"17:15102:5907":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"29:786:5109":{"crate_id":29,"path":["icu_locid","parser","SubtagIterator"],"kind":"struct"},"37:300:4409":{"crate_id":37,"path":["icu_locid_transform","canonicalizer","LocaleCanonicalizer"],"kind":"struct"},"1:4071:3314":{"crate_id":1,"path":["core","array","drain","Drain"],"kind":"struct"},"5:1781:35859":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"6:1500:8460":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"4:11189:32255":{"crate_id":4,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"4:8764:7098":{"crate_id":4,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"1:0:585":{"crate_id":1,"path":["core"],"kind":"module"},"5:3858:7023":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"22:4703:3623":{"crate_id":22,"path":["icu_properties","provider","SentenceTerminalV1Marker"],"kind":"struct"},"17:14746:5831":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"23:312:5125":{"crate_id":23,"path":["icu_provider","response","DataPayloadOr"],"kind":"struct"},"22:4640:3614":{"crate_id":22,"path":["icu_properties","provider","PatternWhiteSpaceV1Marker"],"kind":"struct"},"17:12787:5562":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"16:2504:6411":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"22:3758:3563":{"crate_id":22,"path":["icu_properties","provider","PropertyUnicodeSetV1"],"kind":"enum"},"17:14413:5783":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"22:4479:3591":{"crate_id":22,"path":["icu_properties","provider","ExtenderV1Marker"],"kind":"struct"},"4:4333:9776":{"crate_id":4,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"17:14598:5810":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"1:40294:225":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"29:1443:2913":{"crate_id":29,"path":["icu_locid","extensions","unicode","Unicode"],"kind":"struct"},"14:31:6915":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"24:427:27496":{"crate_id":24,"path":["yoke","either","EitherCart"],"kind":"enum"},"20:428:3469":{"crate_id":20,"path":["icu_normalizer","provider","Uts46DecompositionSupplementV1Marker"],"kind":"struct"},"4:7022:245":{"crate_id":4,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"4:4199:15910":{"crate_id":4,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"1:41313:4286":{"crate_id":1,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"29:671:4470":{"crate_id":29,"path":["icu_locid","langid","LanguageIdentifier"],"kind":"struct"},"32:860:4456":{"crate_id":32,"path":["zerovec","map2d","map","ZeroMap2d"],"kind":"struct"},"17:14624:5813":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"6:1727:8593":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"4:9500:199":{"crate_id":4,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"17:12072:4689":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"17:11868:4533":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"1:40369:226":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"27:0:3404":{"crate_id":27,"path":["zerofrom"],"kind":"module"},"17:12103:4555":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"16:5415:6473":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"16:7302:6643":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"29:946:2995":{"crate_id":29,"path":["icu_locid","extensions","other","Other"],"kind":"struct"},"5:2251:15783":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"4:4363:9778":{"crate_id":4,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"1:48172:7625":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:10441:3385":{"crate_id":1,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"4:909:4092":{"crate_id":4,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"17:16828:6399":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"11:2414:3314":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"16:4871:6456":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"6:5428:8868":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"16:8040:37614":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"4:12664:782":{"crate_id":4,"path":["std","f64"],"kind":"primitive"},"6:6878:9218":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"1:45798:7492":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:10673:3370":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"18:754:5270":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"17:13856:5676":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"17:15013:5889":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"0:325:2436":{"crate_id":0,"path":["idna","uts46","DnsLength","Ignore"],"kind":"variant"},"37:331:27592":{"crate_id":37,"path":["icu_locid_transform","error","LocaleTransformError"],"kind":"enum"},"16:7880:4616":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"1:43861:28503":{"crate_id":1,"path":["core","fmt","rt","ArgumentType"],"kind":"enum"},"22:4311:3567":{"crate_id":22,"path":["icu_properties","provider","AsciiHexDigitV1Marker"],"kind":"struct"},"22:5217:5193":{"crate_id":22,"path":["icu_properties","sets","ErasedSetlikeMarker"],"kind":"struct"},"23:924:3503":{"crate_id":23,"path":["icu_provider","request","DataRequest"],"kind":"struct"},"4:12032:9443":{"crate_id":4,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"1:47663:7569":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:42821:3756":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"23:1130:5154":{"crate_id":23,"path":["icu_provider","hello_world","FormattedHelloWorld"],"kind":"struct"},"1:39039:10247":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"4:4967:15924":{"crate_id":4,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"17:11014:37619":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"4:9863:131":{"crate_id":4,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"22:4843:3643":{"crate_id":22,"path":["icu_properties","provider","GeneralCategoryNameToValueV1Marker"],"kind":"struct"},"11:2513:8368":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"1:23277:7366":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"4:8636:4288":{"crate_id":4,"path":["std","io","Lines"],"kind":"struct"},"17:14093:5702":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"1:45497:4272":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"17:13328:5362":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"16:2638:6417":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"6:1690:8580":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:16802:6395":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"6:1489:8455":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"0:128:2405":{"crate_id":0,"path":["idna","uts46"],"kind":"module"},"1:41455:7306":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"22:2064:8351":{"crate_id":22,"path":["icu_properties","props","IndicSyllabicCategoryULE"],"kind":"struct"},"4:10496:7069":{"crate_id":4,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"11:1027:6932":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"36:403:3472":{"crate_id":36,"path":["icu_collections","char16trie","trie","Char16TrieIterator"],"kind":"struct"},"17:13529:5617":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"17:13344:5610":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"1:45017:4285":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:2229:4502":{"crate_id":1,"path":["core","ptr","metadata","metadata"],"kind":"function"},"6:5288:8816":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"1:47057:7527":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"16:4118:6446":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"16:6950:6580":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"22:4927:3655":{"crate_id":22,"path":["icu_properties","provider","HangulSyllableTypeNameToValueV1Marker"],"kind":"struct"},"1:45821:7493":{"crate_id":1,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"6:4970:8702":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"11:389:9766":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"36:614:27585":{"crate_id":36,"path":["icu_collections","codepointtrie","cptrie","TrieType"],"kind":"enum"},"22:4521:3597":{"crate_id":22,"path":["icu_properties","provider","HexDigitV1Marker"],"kind":"struct"},"29:1038:4477":{"crate_id":29,"path":["icu_locid","extensions","private","Private"],"kind":"struct"},"4:11145:32278":{"crate_id":4,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"1:3075:272":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"16:6736:37607":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"1:33494:6688":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"5:3262:101":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"5:4322:9429":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"4:8298:7157":{"crate_id":4,"path":["std","fs","Permissions"],"kind":"struct"},"1:14427:164":{"crate_id":1,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"22:993:2807":{"crate_id":22,"path":["icu_properties","maps","CodePointMapDataBorrowed"],"kind":"struct"},"6:6651:9144":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"6:5441:8878":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"6:5301:8821":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"1:23362:4790":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"17:15353:5944":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"16:6121:6435":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"1:23222:7365":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"0:0:2467":{"crate_id":0,"path":["idna"],"kind":"module"},"16:5083:6462":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"41:86:5000":{"crate_id":41,"path":["utf16_iter","report","ErrorReportingUtf16Chars"],"kind":"struct"},"16:6835:4655":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"1:31732:3895":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"17:15578:6077":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"1:11564:15866":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"4:7501:32311":{"crate_id":4,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"1:46850:7503":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"22:1201:2808":{"crate_id":22,"path":["icu_properties","props","BidiClass"],"kind":"struct"},"4:4591:7097":{"crate_id":4,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"16:8582:6826":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"6:4990:8713":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:40389:228":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"4:12666:939":{"crate_id":4,"path":["std","i8"],"kind":"primitive"},"23:880:5142":{"crate_id":23,"path":["icu_provider","key","DataKeyPath"],"kind":"struct"},"1:23527:10132":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:13530:10365":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:23695:7396":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI128Inner"],"kind":"struct"},"1:45273:7352":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:45349:7474":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"20:573:5208":{"crate_id":20,"path":["icu_normalizer","provider","NonRecursiveDecompositionSupplementV1"],"kind":"struct"},"17:14924:5874":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"17:16219:6244":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"6:8316:9415":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"6:7562:9371":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"20:631:3462":{"crate_id":20,"path":["icu_normalizer","Decomposition"],"kind":"struct"},"16:3012:22158":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"1:44693:4282":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"17:11269:23108":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"6:1530:8473":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"1:42512:7337":{"crate_id":1,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"22:5243:5196":{"crate_id":22,"path":["icu_properties","sets","UnicodeSetData"],"kind":"struct"},"17:16068:6187":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"1:22675:4078":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:48210:7627":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"22:2311:5180":{"crate_id":22,"path":["icu_properties","provider","names","PropertyEnumToValueNameSparseMapV1"],"kind":"struct"},"6:5450:8884":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"6:1514:8465":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"1:11956:4097":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"17:12214:5486":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"1:44956:4297":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"17:12944:4560":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"6:8260:9402":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"1:41989:7331":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"16:2722:6421":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"1:45501:4273":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:22648:15866":{"crate_id":1,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"1:23640:7391":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroUsizeInner"],"kind":"struct"},"17:16848:5686":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"1:45707:219":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"1:41435:7423":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"16:6500:22130":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"22:4913:3653":{"crate_id":22,"path":["icu_properties","provider","ScriptValueToLongNameV1Marker"],"kind":"struct"},"4:12674:1897":{"crate_id":4,"path":["std","u64"],"kind":"primitive"},"4:699:7060":{"crate_id":4,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"1:22188:31901":{"crate_id":1,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"16:6387:6508":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"1:33918:10232":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"4:11604:7278":{"crate_id":4,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"9:0:3292":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"1:23496:9453":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"29:1771:5116":{"crate_id":29,"path":["icu_locid","subtags","variant","Variant"],"kind":"struct"},"5:3082:9419":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"22:5109:3681":{"crate_id":22,"path":["icu_properties","provider","IndicSyllabicCategoryValueToLongNameV1Marker"],"kind":"struct"},"17:11540:5431":{"crate_id":17,"path":["object","read","archive","ArchiveSymbol"],"kind":"struct"},"17:12146:5481":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"6:7524:9352":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"6:5412:1279":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"4:3061:7081":{"crate_id":4,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"1:42762:2755":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"17:14940:5876":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"4:2348:15848":{"crate_id":4,"path":["std","fs","read_to_string"],"kind":"function"},"17:14476:5794":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"42:72:3706":{"crate_id":42,"path":["utf8_iter","indices","Utf8CharIndices"],"kind":"struct"},"23:982:3506":{"crate_id":23,"path":["icu_provider","response","DataResponseMetadata"],"kind":"struct"},"4:2663:7076":{"crate_id":4,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"36:0:3413":{"crate_id":36,"path":["icu_collections"],"kind":"module"},"5:3712:4092":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"4:11493:9435":{"crate_id":4,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"1:4171:3356":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"17:16631:5676":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"4:5932:232":{"crate_id":4,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"42:66:2812":{"crate_id":42,"path":["utf8_iter","Utf8CharsEx"],"kind":"trait"},"23:308:3501":{"crate_id":23,"path":["icu_provider","response","DataPayload"],"kind":"struct"},"5:7738:7048":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"16:6586:6545":{"crate_id":16,"path":["gimli","read","cfi","UnwindExpression"],"kind":"struct"},"6:5503:8912":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"17:10965:5410":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"1:42961:226":{"crate_id":1,"path":["core","range","RangeInclusive"],"kind":"struct"},"17:11318:5415":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"33:0:3410":{"crate_id":33,"path":["zerovec_derive"],"kind":"module"},"17:13757:5647":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"4:5343:7105":{"crate_id":4,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:47965:7606":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"5:6169:16052":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"17:12643:4529":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"4:9444:7251":{"crate_id":4,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"17:10431:23089":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"17:16058:6182":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"11:2519:8369":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"17:11259:5414":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"36:475:5044":{"crate_id":36,"path":["icu_collections","codepointinvlist","cpinvlist","CodePointInversionList"],"kind":"struct"},"20:536:5207":{"crate_id":20,"path":["icu_normalizer","provider","CanonicalCompositionsV1"],"kind":"struct"},"17:14373:5775":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"5:5134:9429":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"24:17:15866":{"crate_id":24,"path":["yoke","cartable_ptr","private","Sealed"],"kind":"trait"},"17:13044:5589":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"1:2235:7290":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"16:3832:6445":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"1:10884:169":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"22:4507:3595":{"crate_id":22,"path":["icu_properties","provider","GraphemeExtendV1Marker"],"kind":"struct"},"22:1710:3526":{"crate_id":22,"path":["icu_properties","props","GraphemeClusterBreak"],"kind":"struct"},"3:0:3289":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"5:7710:7045":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"4:12665:761":{"crate_id":4,"path":["std","f128"],"kind":"primitive"},"6:6638:9140":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"22:4710:3624":{"crate_id":22,"path":["icu_properties","provider","TerminalPunctuationV1Marker"],"kind":"struct"},"17:16684:6366":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"16:7977:6440":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"6:6727:9166":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"4:3697:15864":{"crate_id":4,"path":["std","io","Seek"],"kind":"trait"},"1:41078:3997":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"37:492:27599":{"crate_id":37,"path":["icu_locid_transform","provider","canonicalizer","AliasesV2Marker"],"kind":"struct"},"22:5262:5198":{"crate_id":22,"path":["icu_properties","sets","UnicodeSetDataBorrowed"],"kind":"struct"},"4:11251:32299":{"crate_id":4,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"5:7539:3314":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"17:14454:5787":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"4:8606:4774":{"crate_id":4,"path":["std","io","Chain"],"kind":"struct"},"17:15186:5918":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"22:4339:3571":{"crate_id":22,"path":["icu_properties","provider","BidiMirroredV1Marker"],"kind":"struct"},"17:13819:5663":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"22:4829:3641":{"crate_id":22,"path":["icu_properties","provider","CanonicalCombiningClassValueToLongNameV1Marker"],"kind":"struct"},"1:3079:271":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"4:4965:15923":{"crate_id":4,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"4:10886:7082":{"crate_id":4,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"6:1507:8463":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"11:1703:168":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"17:15035:5900":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"22:3661:5185":{"crate_id":22,"path":["icu_properties","provider","bidi_data","MirroredPairedBracketDataULE"],"kind":"struct"},"17:13489:5615":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"17:14811:5861":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"4:12171:7093":{"crate_id":4,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"4:11079:7156":{"crate_id":4,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"17:11512:23108":{"crate_id":17,"path":["object","read","archive","SymbolIteratorInternal"],"kind":"enum"},"6:1539:8479":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"16:2746:6422":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"29:701:4473":{"crate_id":29,"path":["icu_locid","locale","Locale"],"kind":"struct"},"11:649:2755":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"4:2495:15851":{"crate_id":4,"path":["std","fs","symlink_metadata"],"kind":"function"},"17:12065:5471":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"16:6911:6577":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"1:2877:147":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"4:8343:7159":{"crate_id":4,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"17:15001:5887":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"17:15128:5909":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"4:10810:32303":{"crate_id":4,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"30:189:27525":{"crate_id":30,"path":["writeable","PartsWrite"],"kind":"trait"},"20:408:3468":{"crate_id":20,"path":["icu_normalizer","provider","DecompositionDataV1"],"kind":"struct"},"4:11987:7279":{"crate_id":4,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"36:316:9739":{"crate_id":36,"path":["icu_collections","codepointtrie","cptrie","CodePointMapRangeIterator"],"kind":"struct"},"17:0:3299":{"crate_id":17,"path":["object"],"kind":"module"},"20:626:3461":{"crate_id":20,"path":["icu_normalizer","CharacterAndClass"],"kind":"struct"},"4:8559:4757":{"crate_id":4,"path":["std","io","util","Empty"],"kind":"struct"},"1:44128:4930":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"6:7292:9241":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"6:5387:8847":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"22:4402:3580":{"crate_id":22,"path":["icu_properties","provider","ChangesWhenTitlecasedV1Marker"],"kind":"struct"},"0:299:2406":{"crate_id":0,"path":["idna","uts46","AsciiDenyList"],"kind":"struct"},"1:11883:4102":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"5:778:264":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"1:22790:15427":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:41404:4774":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"17:12711:5553":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"11:2126:6932":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"4:11266:32301":{"crate_id":4,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"5:7797:3316":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"11:1063:37600":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"20:257:3454":{"crate_id":20,"path":["icu_normalizer","IsNormalizedSinkUtf16"],"kind":"struct"},"4:2521:15861":{"crate_id":4,"path":["std","fs","read_dir"],"kind":"function"},"1:41940:7327":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"23:915:3497":{"crate_id":23,"path":["icu_provider","key","DataKey"],"kind":"struct"},"6:5311:8824":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"1:43096:90":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"17:11667:5439":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"23:574:3494":{"crate_id":23,"path":["icu_provider","buf","BufferProvider"],"kind":"trait"},"1:34776:10242":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"4:4848:9280":{"crate_id":4,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"function"},"11:808:6937":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"16:5687:6476":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"5:3448:3351":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"17:13575:4561":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"5:7599:4730":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"1:33035:118":{"crate_id":1,"path":["core","marker","ConstParamTy_"],"kind":"trait"},"29:740:27507":{"crate_id":29,"path":["icu_locid","parser","errors","ParserError"],"kind":"enum"},"32:2447:5084":{"crate_id":32,"path":["zerovec","varzerovec","components","Index32"],"kind":"struct"},"4:8823:7228":{"crate_id":4,"path":["std","path","Prefix"],"kind":"enum"},"40:354:3697":{"crate_id":40,"path":["smallvec","ConstNonNull"],"kind":"struct"},"17:11963:5464":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"1:45008:4289":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"4:9278:7243":{"crate_id":4,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"1:43921:3377":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"4:11404:32279":{"crate_id":4,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"22:3557:5183":{"crate_id":22,"path":["icu_properties","provider","bidi_data","BidiAuxiliaryPropertiesV1"],"kind":"struct"},"1:3596:154":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"5:787:122":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"17:10202:23082":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"4:6454:7363":{"crate_id":4,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"1:43002:238":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"23:1001:27478":{"crate_id":23,"path":["icu_provider","any","AnyPayloadInner"],"kind":"enum"},"17:12800:5563":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"17:13219:5600":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"16:2465:4592":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"1:23651:7392":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI8Inner"],"kind":"struct"},"1:43431:98":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:40197:4348":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"22:3793:3564":{"crate_id":22,"path":["icu_properties","provider","ScriptWithExtensionsPropertyV1Marker"],"kind":"struct"},"17:16329:6279":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"1:7004:9452":{"crate_id":1,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"1:4513:111":{"crate_id":1,"path":["core","asserting","Capture"],"kind":"struct"},"17:11576:4533":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"17:13585:4568":{"crate_id":17,"path":["object","read","RelocationMap"],"kind":"struct"},"17:14152:5725":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"17:10369:23087":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"6:538:8426":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"16:906:5272":{"crate_id":16,"path":["gimli","read","endian_slice","DebugLen"],"kind":"struct"},"1:47028:7518":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:35122:6694":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"4:1654:6941":{"crate_id":4,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"4:7569:9780":{"crate_id":4,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"16:2948:6431":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"6:7539:9359":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"4:9286:3356":{"crate_id":4,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"6:6802:9192":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"9:470:22010":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"6:1657:8564":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"6:4842:8636":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"1:48015:7608":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"16:6254:4634":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"17:16191:6237":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"4:3640:7089":{"crate_id":4,"path":["std","io","IoSliceMut"],"kind":"struct"},"16:8480:5115":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"1:3158:150":{"crate_id":1,"path":["core","error","Error"],"kind":"trait"},"18:765:27290":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"17:14307:5760":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"4:8428:7161":{"crate_id":4,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"6:5357:8833":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"16:8595:6829":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"22:4619:3611":{"crate_id":22,"path":["icu_properties","provider","NfkcInertV1Marker"],"kind":"struct"},"1:8499:190":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"23:1126:5153":{"crate_id":23,"path":["icu_provider","hello_world","HelloWorldFormatter"],"kind":"struct"},"31:232:38513":{"crate_id":31,"path":["tinystr","asciibyte","AsciiByte"],"kind":"enum"},"22:960:3535":{"crate_id":22,"path":["icu_properties","maps","CodePointMapData"],"kind":"struct"},"5:2156:7023":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"1:22152:31892":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"5:1573:4716":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"17:16700:6371":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"1:42831:3759":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"4:12239:32258":{"crate_id":4,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"4:9249:7241":{"crate_id":4,"path":["std","process","ExitStatusError"],"kind":"struct"},"1:45699:239":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"29:0:3406":{"crate_id":29,"path":["icu_locid"],"kind":"module"},"16:7997:4668":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"22:4360:3574":{"crate_id":22,"path":["icu_properties","provider","CaseIgnorableV1Marker"],"kind":"struct"},"4:1944:7071":{"crate_id":4,"path":["std","env","ArgsOs"],"kind":"struct"},"36:368:9742":{"crate_id":36,"path":["icu_collections","iterator_utils","RangeListIteratorCoalescer"],"kind":"struct"},"22:5060:3674":{"crate_id":22,"path":["icu_properties","provider","SentenceBreakV1Marker"],"kind":"struct"},"17:15159:5915":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"6:5557:8933":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"17:11210:37623":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"5:40:3353":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"4:927:4716":{"crate_id":4,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"17:13052:5591":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"16:3439:6442":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"6:6719:9165":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"22:4591:3607":{"crate_id":22,"path":["icu_properties","provider","MathV1Marker"],"kind":"struct"},"1:40349:227":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"16:7156:6615":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"5:6513:16060":{"crate_id":5,"path":["alloc","sync","UniqueArcUninit"],"kind":"struct"},"1:48093:7614":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"4:12662:763":{"crate_id":4,"path":["std","f16"],"kind":"primitive"},"4:8965:7236":{"crate_id":4,"path":["std","path","Ancestors"],"kind":"struct"},"22:1487:8343":{"crate_id":22,"path":["icu_properties","props","ScriptULE"],"kind":"struct"},"15:0:3297":{"crate_id":15,"path":["addr2line"],"kind":"module"},"1:23332:4789":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"0:186:2630":{"crate_id":0,"path":["idna","uts46","verify_dns_length"],"kind":"function"},"5:2344:35950":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"1:3069:175":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"1:3357:3392":{"crate_id":1,"path":["core","marker","Freeze"],"kind":"trait"},"4:2568:3227":{"crate_id":4,"path":["std","io"],"kind":"module"},"1:3072:157":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"0:247:2429":{"crate_id":0,"path":["idna","domain_to_ascii_cow"],"kind":"function"},"4:3095:238":{"crate_id":4,"path":["std","io","error","Result"],"kind":"type_alias"},"17:14870:5867":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"4:988:15818":{"crate_id":4,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"16:3693:6444":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"4:12021:7142":{"crate_id":4,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"4:9424:7250":{"crate_id":4,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"4:7972:5277":{"crate_id":4,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"4:3424:7084":{"crate_id":4,"path":["std","io","stdio","Stdout"],"kind":"struct"},"1:4413:9429":{"crate_id":1,"path":["core","array","Guard"],"kind":"struct"},"4:4039:7093":{"crate_id":4,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"1:3593:153":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"6:4869:8659":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"17:13030:5586":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"1:43580:3368":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"17:11794:23128":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"17:13021:23224":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"1:41426:4777":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"17:13795:5662":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"4:702:7062":{"crate_id":4,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"10:44:4690":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"16:5058:6461":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"16:5280:6469":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"22:4416:3582":{"crate_id":22,"path":["icu_properties","provider","DashV1Marker"],"kind":"struct"},"32:0:3409":{"crate_id":32,"path":["zerovec"],"kind":"module"},"11:813:6924":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"6:5255:8796":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"32:2732:5081":{"crate_id":32,"path":["zerovec","ule","unvalidated","UnvalidatedChar"],"kind":"struct"},"1:3540:10249":{"crate_id":1,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"16:4954:6459":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"0:309:2433":{"crate_id":0,"path":["idna","uts46","Hyphens"],"kind":"enum"},"5:4202:4092":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"1:3066:77":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"1:10675:3371":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"18:598:37628":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"4:1639:3314":{"crate_id":4,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"17:12344:5503":{"crate_id":17,"path":["object","read","macho","fat","MachOFatFile"],"kind":"struct"},"1:4701:3378":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"1:46865:7504":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"32:496:27558":{"crate_id":32,"path":["zerovec","map","vecs","MutableZeroVecLike"],"kind":"trait"},"17:13120:5414":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"16:2878:6428":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"22:4787:3635":{"crate_id":22,"path":["icu_properties","provider","ExemplarCharactersPunctuationV1Marker"],"kind":"struct"},"1:10665:3367":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"1:2043:9429":{"crate_id":1,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"6:6500:9064":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"4:12659:1862":{"crate_id":4,"path":["std","tuple"],"kind":"primitive"},"5:3079:2616":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"32:2077:27321":{"crate_id":32,"path":["zerovec","ule","AsULE"],"kind":"trait"},"23:835:4491":{"crate_id":23,"path":["icu_provider","fallback","LocaleFallbackConfig"],"kind":"struct"},"16:6096:6483":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"22:4990:3664":{"crate_id":22,"path":["icu_properties","provider","LineBreakValueToShortNameV1Marker"],"kind":"struct"},"1:48108:7615":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"22:5032:3670":{"crate_id":22,"path":["icu_properties","provider","WordBreakV1Marker"],"kind":"struct"},"1:8281:10311":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"4:12087:9782":{"crate_id":4,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"6:5127:8758":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"6:6472:9052":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"1:2228:10216":{"crate_id":1,"path":["core","ptr","metadata","Thin"],"kind":"trait_alias"},"1:10663:3366":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"17:14637:5815":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"6:5640:8972":{"crate_id":6,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"1:47177:7533":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"17:16005:6171":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"18:491:5233":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"1:47368:7558":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"16:7762:6711":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"4:9569:7138":{"crate_id":4,"path":["std","time","SystemTime"],"kind":"struct"},"1:10667:3368":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"16:2858:6427":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"16:6779:6564":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"4:6053:7118":{"crate_id":4,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"6:6858:9204":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"16:6729:4619":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"4:4852:9284":{"crate_id":4,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"function"},"1:22178:31900":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"28:0:3405":{"crate_id":28,"path":["zerofrom_derive"],"kind":"module"},"1:26660:283":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:6998:7318":{"crate_id":1,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"16:7355:4663":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"1:23137:15508":{"crate_id":1,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"20:468:3476":{"crate_id":20,"path":["icu_normalizer","provider","CanonicalDecompositionTablesV1Marker"],"kind":"struct"},"4:3373:7083":{"crate_id":4,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"5:1582:4718":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"16:7055:6591":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"16:6026:4623":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"24:23:27494":{"crate_id":24,"path":["yoke","cartable_ptr","CloneableCartablePointerLike"],"kind":"trait"},"1:41089:28363":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"4:5696:7110":{"crate_id":4,"path":["std","process","ChildStdin"],"kind":"struct"},"37:0:3414":{"crate_id":37,"path":["icu_locid_transform"],"kind":"module"},"11:832:6927":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"4:4140:15905":{"crate_id":4,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"6:6702:9162":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"40:348:3696":{"crate_id":40,"path":["smallvec","ToSmallVec"],"kind":"trait"},"4:10517:7261":{"crate_id":4,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"17:16838:5681":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"5:2261:7025":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"17:14165:5729":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"6:6513:9070":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"16:8148:4675":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"17:11654:5414":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"17:12621:5549":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"1:48119:7616":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"6:5196:8770":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"6:8231:9395":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"20:340:3560":{"crate_id":20,"path":["icu_normalizer","provider","Baked"],"kind":"struct"},"22:1652:3529":{"crate_id":22,"path":["icu_properties","props","LineBreak"],"kind":"struct"},"32:2329:5069":{"crate_id":32,"path":["zerovec","flexzerovec","owned","FlexZeroVecOwned"],"kind":"struct"},"4:11393:7241":{"crate_id":4,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"16:4402:6451":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"1:4:1292":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"6:5230:8786":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"6:5477:8902":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"22:1032:5160":{"crate_id":22,"path":["icu_properties","props","ErasedNameToEnumMapV1Marker"],"kind":"struct"},"17:16051:6180":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"4:1643:3351":{"crate_id":4,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"1:47936:7605":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"17:13892:4573":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"17:16672:6364":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"4:11993:7139":{"crate_id":4,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"1:14160:31510":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"17:11200:4529":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"4:12635:32275":{"crate_id":4,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"20:334:2804":{"crate_id":20,"path":["icu_normalizer","properties","CanonicalCombiningClassMap"],"kind":"struct"},"16:7334:6647":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"4:11161:7154":{"crate_id":4,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"6:1684:8577":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"17:13673:5629":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"32:2090:37744":{"crate_id":32,"path":["zerovec","ule","VarULE","from_byte_slice_unchecked"],"kind":"function"},"1:41395:7422":{"crate_id":1,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"6:6523:9077":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"17:15713:6094":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"29:729:27506":{"crate_id":29,"path":["icu_locid","ordering","SubtagOrderingResult"],"kind":"enum"},"11:851:6929":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"38:0:3415":{"crate_id":38,"path":["icu_locid_transform_data"],"kind":"module"},"23:965:3499":{"crate_id":23,"path":["icu_provider","request","DataLocale"],"kind":"struct"},"4:11109:152":{"crate_id":4,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"4:10515:7262":{"crate_id":4,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"0:368:2633":{"crate_id":0,"path":["idna","uts46","ProcessingError","ValidityError"],"kind":"variant"},"17:12008:5466":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"24:19:27493":{"crate_id":24,"path":["yoke","cartable_ptr","CartablePointerLike"],"kind":"trait"},"22:4717:3625":{"crate_id":22,"path":["icu_properties","provider","UnifiedIdeographV1Marker"],"kind":"struct"},"5:3298:6941":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"22:5053:3673":{"crate_id":22,"path":["icu_properties","provider","WordBreakValueToLongNameV1Marker"],"kind":"struct"},"16:3124:22160":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"6:5405:8858":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"1:41574:5248":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"4:8623:4286":{"crate_id":4,"path":["std","io","Bytes"],"kind":"struct"},"22:3680:3561":{"crate_id":22,"path":["icu_properties","provider","PropertyCodePointSetV1"],"kind":"enum"},"34:334:27567":{"crate_id":34,"path":["litemap","store","StoreSlice"],"kind":"trait"},"4:6895:7130":{"crate_id":4,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"17:16755:6387":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"17:13509:5287":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"17:13195:5598":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"1:13688:123":{"crate_id":1,"path":["core","str","lossy","Debug"],"kind":"struct"},"22:2281:5179":{"crate_id":22,"path":["icu_properties","provider","names","PropertyValueNameToEnumMapV1"],"kind":"struct"},"6:5604:8959":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"17:14690:5822":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"5:1591:6937":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"4:12679:13":{"crate_id":4,"path":["std","fn"],"kind":"primitive"},"16:7713:37609":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"5:7679:15812":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"1:42662:7447":{"crate_id":1,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"6:4997:8716":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"22:4864:3646":{"crate_id":22,"path":["icu_properties","provider","BidiClassV1Marker"],"kind":"struct"},"22:4745:3629":{"crate_id":22,"path":["icu_properties","provider","XdigitV1Marker"],"kind":"struct"},"32:2428:4462":{"crate_id":32,"path":["zerovec","varzerovec","components","Index16"],"kind":"struct"},"18:507:5234":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"29:1796:4488":{"crate_id":29,"path":["icu_locid","subtags","variants","Variants"],"kind":"struct"},"17:12562:5544":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"9:412:22013":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"4:8359:4756":{"crate_id":4,"path":["std","io","cursor","Cursor"],"kind":"struct"},"17:10333:23086":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"23:1059:27482":{"crate_id":23,"path":["icu_provider","buf","BufferFormat"],"kind":"enum"},"1:48062:7611":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"6:6452:9041":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"17:14955:5880":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"23:595:27483":{"crate_id":23,"path":["icu_provider","dynutil","UpcastDataPayload"],"kind":"trait"},"17:12045:5342":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"17:14883:5869":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"17:12242:5489":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"4:3517:15893":{"crate_id":4,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"1:12978:3029":{"crate_id":1,"path":["core","str","converts","from_utf8_unchecked"],"kind":"function"},"17:10255:23083":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"4:8976:7237":{"crate_id":4,"path":["std","path","StripPrefixError"],"kind":"struct"},"22:4976:3662":{"crate_id":22,"path":["icu_properties","provider","LineBreakV1Marker"],"kind":"struct"},"5:7627:3356":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"44:0:3419":{"crate_id":44,"path":["icu_normalizer_data"],"kind":"module"},"1:38874:10244":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"6:5539:8925":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"1:43806:9520":{"crate_id":1,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"6:4921:8684":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"1:3571:4349":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"17:13648:5628":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"6:5471:8899":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"16:4764:6453":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"17:14834:5862":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"11:2354:2755":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"4:12007:7140":{"crate_id":4,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"1:2159:1397":{"crate_id":1,"path":["core","ptr"],"kind":"module"},"1:45555:7483":{"crate_id":1,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"22:969:3536":{"crate_id":22,"path":["icu_properties","maps","ErasedMaplikeMarker"],"kind":"struct"},"1:47613:7567":{"crate_id":1,"path":["core","core_arch","simd","m16x16"],"kind":"struct"},"1:41048:7407":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:13126:4294":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"17:10821:5396":{"crate_id":17,"path":["object","read","read_cache","ReadCacheInternal"],"kind":"struct"},"17:10524:23092":{"crate_id":17,"path":["object","common","RelocationFlags"],"kind":"enum"},"16:3887:5301":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"1:33706:6685":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"37:793:4431":{"crate_id":37,"path":["icu_locid_transform","provider","fallback","LocaleFallbackLikelySubtagsV1"],"kind":"struct"},"6:4947:8694":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"16:6157:4624":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"1:43468:4925":{"crate_id":1,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"18:726:4521":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"20:498:3479":{"crate_id":20,"path":["icu_normalizer","provider","DecompositionTablesV1"],"kind":"struct"},"17:10766:4550":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"20:309:3514":{"crate_id":20,"path":["icu_normalizer","properties","Decomposed"],"kind":"enum"},"12:0:3295":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"1:45338:10372":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:41598:7430":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"18:635:5250":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"17:13360:23096":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"1:2687:10205":{"crate_id":1,"path":["core","ptr","with_exposed_provenance_mut"],"kind":"function"},"4:11165:7272":{"crate_id":4,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"4:2736:7078":{"crate_id":4,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"5:3337:36054":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"1:9484:3758":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"22:1108:5167":{"crate_id":22,"path":["icu_properties","props","ErasedEnumToValueNameLinearMapV1Marker"],"kind":"struct"},"17:16650:6359":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"4:8152:15803":{"crate_id":4,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"1:3327:2674":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"17:11151:5413":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"1:2820:3883":{"crate_id":1,"path":["core","clone","CloneToUninit"],"kind":"trait"},"22:4661:3617":{"crate_id":22,"path":["icu_properties","provider","QuotationMarkV1Marker"],"kind":"struct"},"1:3719:223":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"20:615:3460":{"crate_id":20,"path":["icu_normalizer","CharacterAndTrieValue"],"kind":"struct"},"1:42696:7338":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"1:44838:4103":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"4:8027:32316":{"crate_id":4,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"22:1431:3525":{"crate_id":22,"path":["icu_properties","props","GeneralCategoryGroup"],"kind":"struct"},"18:538:4515":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"4:8310:152":{"crate_id":4,"path":["std","fs","FileType"],"kind":"struct"},"16:6901:6576":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"6:564:8439":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"6:5019:8729":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"17:16359:6287":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"11:2525:37597":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"17:15937:6150":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"6:1675:8571":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"6:4964:8700":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"1:13186:4292":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"9:168:4706":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"17:16040:6179":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"16:6171:4627":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"17:11564:5434":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"22:1522:3527":{"crate_id":22,"path":["icu_properties","props","HangulSyllableType"],"kind":"struct"},"22:4941:3657":{"crate_id":22,"path":["icu_properties","provider","HangulSyllableTypeValueToLongNameV1Marker"],"kind":"struct"},"17:10860:4551":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"16:7505:6669":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"11:2440:3351":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"0:342:2636":{"crate_id":0,"path":["idna","uts46","ErrorPolicy","MarkErrors"],"kind":"variant"},"1:45026:4283":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"22:2237:5178":{"crate_id":22,"path":["icu_properties","provider","names","NormalizedPropertyNameStr"],"kind":"struct"},"32:985:27560":{"crate_id":32,"path":["zerovec","varzerovec","components","VarZeroVecFormat"],"kind":"trait"},"37:1058:5035":{"crate_id":37,"path":["icu_locid_transform","provider","LanguageStrStrPair"],"kind":"struct"},"22:4773:3633":{"crate_id":22,"path":["icu_properties","provider","ExemplarCharactersMainV1Marker"],"kind":"struct"},"17:10880:4527":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"16:7220:6629":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"1:8447:2759":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:45513:4787":{"crate_id":1,"path":["core","time","Nanoseconds"],"kind":"struct"},"6:532:8423":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"17:13260:23094":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"17:12969:4561":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"1:45139:7463":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"16:7575:7251":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"16:5316:6470":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"16:7551:23026":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"1:47568:7566":{"crate_id":1,"path":["core","core_arch","simd","m8x32"],"kind":"struct"},"4:2099:209":{"crate_id":4,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"1:47241:7537":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"16:7468:6665":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"22:4815:3639":{"crate_id":22,"path":["icu_properties","provider","CanonicalCombiningClassNameToValueV1Marker"],"kind":"struct"},"4:11116:7260":{"crate_id":4,"path":["std","sys","pal","unix","fs","Mode"],"kind":"struct"},"36:411:3473":{"crate_id":36,"path":["icu_collections","char16trie","trie","TrieResult"],"kind":"enum"},"32:1846:5079":{"crate_id":32,"path":["zerovec","ule","option","OptionVarULE"],"kind":"struct"},"1:10661:133":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"22:935:3533":{"crate_id":22,"path":["icu_properties","error","PropertiesError"],"kind":"enum"},"17:11328:37624":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"1:33036:278":{"crate_id":1,"path":["core","marker","UnsizedConstParamTy"],"kind":"trait"},"22:4626:3612":{"crate_id":22,"path":["icu_properties","provider","NfkdInertV1Marker"],"kind":"struct"},"1:33033:3396":{"crate_id":1,"path":["core","marker","Tuple"],"kind":"trait"},"1:43355:96":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"29:1281:4482":{"crate_id":29,"path":["icu_locid","extensions","unicode","attributes","Attributes"],"kind":"struct"},"6:6390:9013":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"29:859:5112":{"crate_id":29,"path":["icu_locid","shortvec","ShortBoxSliceIntoIter"],"kind":"struct"},"4:11430:7138":{"crate_id":4,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"1:22176:31898":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:4776:7300":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:44802:4298":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"17:12836:23222":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"1:44334:9531":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"18:481:5232":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"4:11099:4755":{"crate_id":4,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"32:2087:27318":{"crate_id":32,"path":["zerovec","ule","VarULE"],"kind":"trait"},"6:4829:8626":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"16:6967:4659":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"37:843:27607":{"crate_id":37,"path":["icu_locid_transform","provider","fallback","CollationFallbackSupplementV1Marker"],"kind":"struct"},"5:3080:36059":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"24:0:3401":{"crate_id":24,"path":["yoke"],"kind":"module"},"11:787:3351":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"5:7519:3356":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"32:2861:5090":{"crate_id":32,"path":["zerovec","ule","tuple","Tuple4ULE"],"kind":"struct"},"4:5748:116":{"crate_id":4,"path":["std","process","Command"],"kind":"struct"},"4:4255:15915":{"crate_id":4,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"22:4878:3648":{"crate_id":22,"path":["icu_properties","provider","BidiClassValueToShortNameV1Marker"],"kind":"struct"},"32:2480:38516":{"crate_id":32,"path":["zerovec","varzerovec","owned","ShiftType"],"kind":"enum"},"4:8616:7203":{"crate_id":4,"path":["std","io","Take"],"kind":"struct"},"1:22:845":{"crate_id":1,"path":["core","format_args"],"kind":"macro"},"8:0:3291":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"1:42770:4092":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"11:1885:6941":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"1:41117:3998":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:40281:7404":{"crate_id":1,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"5:1612:4720":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"5:1535:4092":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"37:714:27604":{"crate_id":37,"path":["icu_locid_transform","provider","expander","LikelySubtagsExtendedV1Marker"],"kind":"struct"},"14:7:6915":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"15:306:9756":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"37:675:27603":{"crate_id":37,"path":["icu_locid_transform","provider","expander","LikelySubtagsForScriptRegionV1Marker"],"kind":"struct"},"6:8294:9410":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"17:12133:5480":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"1:8335:3712":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"6:4902:8671":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"11:686:4719":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"1:48134:7617":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:8804:162":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:23454:28340":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:23684:7395":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI64Inner"],"kind":"struct"},"17:485:5273":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"6:4881:8662":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"17:11915:4529":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"17:12035:5468":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"1:2834:3884":{"crate_id":1,"path":["core","clone","InitializingSlice"],"kind":"struct"},"9:226:7453":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"5:1483:100":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"1:10924:4785":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:45505:4268":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"16:6203:23019":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"31:206:5093":{"crate_id":31,"path":["tinystr","ascii","TinyAsciiStr"],"kind":"struct"},"17:12298:23197":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCacheSlice"],"kind":"enum"},"16:8230:23029":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"1:47418:7560":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"18:96:9745":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"17:15896:6141":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"17:11112:37621":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"16:6082:6479":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"22:5039:3671":{"crate_id":22,"path":["icu_properties","provider","WordBreakNameToValueV1Marker"],"kind":"struct"},"1:14346:119":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"4:10892:7086":{"crate_id":4,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"32:1641:27556":{"crate_id":32,"path":["zerovec","ule","encode","EncodeAsVarULE"],"kind":"trait"},"17:12397:5510":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"1:909:10133":{"crate_id":1,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"4:1100:6675":{"crate_id":4,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"17:13066:5593":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"18:573:5234":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"4:3590:9429":{"crate_id":4,"path":["std","io","Guard"],"kind":"struct"},"4:3371:7082":{"crate_id":4,"path":["std","io","stdio","Stdin"],"kind":"struct"},"6:5282:8813":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"18:548:165":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"17:16230:6248":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"17:10815:5395":{"crate_id":17,"path":["object","read","read_cache","ReadCache"],"kind":"struct"},"4:7889:7790":{"crate_id":4,"path":["std","panicking","begin_panic_handler","StaticStrPayload"],"kind":"struct"},"17:12093:4554":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"6:5529:8919":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"4:11585:9439":{"crate_id":4,"path":["std","sys","exit_guard","PThread"],"kind":"struct"},"5:6700:3314":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"4:377:7054":{"crate_id":4,"path":["std","thread","scoped","Scope"],"kind":"struct"},"0:35:2408":{"crate_id":0,"path":["idna","punycode"],"kind":"module"},"4:9513:9429":{"crate_id":4,"path":["std","sync","poison","Guard"],"kind":"struct"},"17:13700:5635":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"32:1469:4463":{"crate_id":32,"path":["zerovec","zerovec","ZeroVec"],"kind":"struct"},"1:42909:7451":{"crate_id":1,"path":["core","range","iter","IterRangeInclusive"],"kind":"struct"},"1:44784:4299":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:46801:7498":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"17:10176:23081":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"22:5067:3675":{"crate_id":22,"path":["icu_properties","provider","SentenceBreakNameToValueV1Marker"],"kind":"struct"},"4:3934:7091":{"crate_id":4,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"17:11423:23106":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"4:619:7059":{"crate_id":4,"path":["std","thread","JoinHandle"],"kind":"struct"},"4:8949:7102":{"crate_id":4,"path":["std","path","Components"],"kind":"struct"},"1:34257:10237":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:4501:7298":{"crate_id":1,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"17:10455:23090":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"11:2275:6675":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"5:7619:3356":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"17:10479:23091":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"5:6030:3314":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"17:10586:4526":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"1:41378:4083":{"crate_id":1,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"6:8175:9393":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"11:676:3356":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"22:1054:5163":{"crate_id":22,"path":["icu_properties","props","PropertyValueNameToEnumMapperBorrowed"],"kind":"struct"},"17:12749:5559":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"17:14845:5864":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"18:680:5258":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"22:3622:27302":{"crate_id":22,"path":["icu_properties","provider","bidi_data","CheckedBidiPairedBracketType"],"kind":"enum"},"5:3324:6942":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"24:420:5120":{"crate_id":24,"path":["yoke","cartable_ptr","CartableOptionPointer"],"kind":"struct"},"6:1597:8517":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"6:5617:8965":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"1:44938:4296":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"5:1520:2755":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"16:8623:6830":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"1:47817:7602":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"11:1558:6938":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"16:8093:6766":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"6:5057:8745":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"17:11053:5411":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"11:427:9769":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"42:98:3705":{"crate_id":42,"path":["utf8_iter","Utf8Chars"],"kind":"struct"},"17:14897:5870":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"}},"external_crates":{"43":{"name":"write16","html_root_url":null},"40":{"name":"smallvec","html_root_url":null},"37":{"name":"icu_locid_transform","html_root_url":null},"34":{"name":"litemap","html_root_url":null},"31":{"name":"tinystr","html_root_url":null},"28":{"name":"zerofrom_derive","html_root_url":null},"25":{"name":"stable_deref_trait","html_root_url":null},"22":{"name":"icu_properties","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"44":{"name":"icu_normalizer_data","html_root_url":null},"41":{"name":"utf16_iter","html_root_url":null},"38":{"name":"icu_locid_transform_data","html_root_url":null},"35":{"name":"icu_provider_macros","html_root_url":null},"32":{"name":"zerovec","html_root_url":null},"29":{"name":"icu_locid","html_root_url":null},"26":{"name":"yoke_derive","html_root_url":null},"23":{"name":"icu_provider","html_root_url":null},"20":{"name":"icu_normalizer","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"42":{"name":"utf8_iter","html_root_url":null},"39":{"name":"icu_properties_data","html_root_url":null},"36":{"name":"icu_collections","html_root_url":null},"33":{"name":"zerovec_derive","html_root_url":null},"30":{"name":"writeable","html_root_url":null},"27":{"name":"zerofrom","html_root_url":null},"24":{"name":"yoke","html_root_url":null},"21":{"name":"displaydoc","html_root_url":"https://docs.rs/displaydoc/0.2.3/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":33}