{"root":"0:0:2348","crate_version":"0.9.0-alpha.1","includes_private":false,"index":{"b:2:2989-0:273:2342":{"id":"b:2:2989-0:273:2342","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2342","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2992:2538"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:248:2493":{"id":"0:248:2493","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:140:2470","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:144":{"id":"0:144","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2771:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42259:13489-0:273:2342":{"id":"a:2:42259:13489-0:273:2342","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42259:13489","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2342","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:148":{"id":"0:148","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:149:480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2716-0:214:2339":{"id":"b:2:2716-0:214:2339","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2998","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2339","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2718:2952"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:108":{"id":"0:108","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoBlockRng","id":"20:22:2467","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:121:2563":{"id":"0:121:2563","crate_id":0,"name":"set_stream","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"Set the stream number.\n\nThis is initialized to zero; 2<sup>64</sup> unique streams of output\nare available per seed/key.\n\nNote that in order to reproduce ChaCha output with a specific 64-bit\nnonce, one can convert that nonce to a `u64` in little-endian fashion\nand pass to this function. In theory a 96-bit nonce can be used by\npassing the last 64-bits to this function and using the first 32-bits as\nthe most significant half of the 64-bit counter (which may be set\nindirectly via `set_word_pos`), but this is not directly supported.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["stream",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2719-0:282:2343":{"id":"b:2:2719-0:282:2343","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2998","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2343","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2721:25802"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32457:2999-0:137:2340":{"id":"a:2:32457:2999-0:137:2340","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32457:2999","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13281:336":{"id":"2:13281:336","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:13282:26733","`u8`":"1:12408:1869"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13319:8398":{"id":"2:13319:8398","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:42168:191","prim@char":"1:12389:476","self::pattern":"2:12960:13924"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:12845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:12845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:13922","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:212":{"id":"0:212","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2771:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2338","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13335:33696":{"id":"2:13335:33696","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12960:13924","str::split":"2:13323:26762","prim@char":"1:12389:476","str::split_terminator":"2:13332:33695"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:44105:12264","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:12845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:12845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:13922","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32457:2999-0:273:2342":{"id":"a:2:32457:2999-0:273:2342","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32457:2999","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2342","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:92-0:273:2342":{"id":"0:92-0:273:2342","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[28,58],"end":[28,69]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha8Core","name":"ChaCha8Core","id":"0:273:2342","glob":false}}},"0:137:2340":{"id":"0:137:2340","crate_id":0,"name":"ChaCha20Core","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"ChaCha with 20 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:32457:2999-0:137:2340","a:2:42260:13711-0:137:2340","a:2:3212:247-0:137:2340","a:2:3247:8482-0:137:2340","a:2:42259:13489-0:137:2340","a:2:32398:237-0:137:2340","b:2:2989-0:137:2340","b:2:2719-0:137:2340","b:2:3828-0:137:2340","b:2:2716-0:137:2340","b:2:2993-0:137:2340","b:2:2999-0:137:2340","b:2:3004-0:137:2340","b:5:793-0:137:2340","b:22:270-0:137:2340","0:139","0:97","0:103","0:126","0:144","0:142","0:108","0:99","0:141"]}}},"0:103":{"id":"0:103","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_rng","seed_from_u64"],"trait":{"name":"SeedableRng","id":"20:140:2470","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:104:2492","0:106:2493"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:178:2492":{"id":"0:178:2492","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"0:90-0:137:2340":{"id":"0:90-0:137:2340","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[28,31],"end":[28,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha20Core","name":"ChaCha20Core","id":"0:137:2340","glob":false}}},"0:117:2528":{"id":"0:117:2528","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42298:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"20:76:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:195:841":{"id":"0:195:841","crate_id":0,"name":"from","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2338","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:102:2489":{"id":"0:102:2489","crate_id":0,"name":"generate","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["r",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:18:2466","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13368:33703":{"id":"2:13368:33703","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3004-0:273:2342":{"id":"b:2:3004-0:273:2342","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2342","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3007:138","2:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:191:2571":{"id":"0:191:2571","crate_id":0,"name":"get_seed","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"Get the seed.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"array":{"type":{"primitive":"u8"},"len":"32"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:118":{"id":"0:118","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:119:2534","0:120:2550","0:121:2563","0:122:2568","0:123:2571"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5730:13620":{"id":"5:5730:13620","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7774:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13379:26777":{"id":"2:13379:26777","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12389:476","self::pattern":"2:12960:13924"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:12845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:12845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:13922","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3247:8482-0:205:2338":{"id":"a:2:3247:8482-0:205:2338","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3247:8482","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2338","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:182:2524":{"id":"0:182:2524","crate_id":0,"name":"next_u32","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3247:8482-0:282:2343":{"id":"a:2:3247:8482-0:282:2343","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3247:8482","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2343","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:127:841":{"id":"0:127:841","crate_id":0,"name":"from","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13274:33689":{"id":"2:13274:33689","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:125":{"id":"0:125","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:139:2468","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:141":{"id":"0:141","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32400:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:795:8460":{"id":"5:795:8460","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:238:2489":{"id":"0:238:2489","crate_id":0,"name":"generate","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["r",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:18:2466","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:245":{"id":"0:245","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_rng","seed_from_u64"],"trait":{"name":"SeedableRng","id":"20:140:2470","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2343","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:246:2492","0:248:2493"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5729:34410":{"id":"5:5729:34410","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:306:3000","`String`":"5:7774:243"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:306:3000","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2716-0:137:2340":{"id":"b:2:2716-0:137:2340","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2998","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2718:2952"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:235":{"id":"0:235","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BlockRngCore","id":"20:18:2466","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2342","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:236:173","0:237:2488","0:238:2489"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:99":{"id":"0:99","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BlockRngCore","id":"20:18:2466","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:100:173","0:101:2488","0:102:2489"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13273:33688":{"id":"2:13273:33688","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:128":{"id":"0:128","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2766:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:129:706"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13393:25894":{"id":"2:13393:25894","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2719-0:137:2340":{"id":"b:2:2719-0:137:2340","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2998","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2721:25802"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:176":{"id":"0:176","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoBlockRng","id":"20:22:2467","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2338","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:180:2493":{"id":"0:180:2493","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:140:2470","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2993-0:282:2343":{"id":"b:2:2993-0:282:2343","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2343","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:255:2534":{"id":"0:255:2534","crate_id":0,"name":"get_word_pos","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"Get the offset from the start of the stream, in 32-bit words.\n\nSince the generated blocks are 16 words (2<sup>4</sup>) long and the\ncounter is 64-bits, the offset is a 68-bit number. Sub-word offsets are\nnot supported, hence the result can simply be multiplied by 4 to get a\nbyte-offset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:253:2528":{"id":"0:253:2528","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42298:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"20:76:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13300:2527":{"id":"2:13300:2527","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:44023:8672","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:793-0:146:2341":{"id":"b:5:793-0:146:2341","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:789:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:795:8460","5:796:8461","5:797:8462"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:256:2550":{"id":"0:256:2550","crate_id":0,"name":"set_word_pos","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"Set the offset from the start of the stream, in 32-bit words.\n\nAs with `get_word_pos`, we use a 68-bit number. Since the generator\nsimply cycles at the end of its period (1 ZiB), we ignore the upper\n60 bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["word_offset",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:252:2526":{"id":"0:252:2526","crate_id":0,"name":"fill_bytes","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3004-0:146:2341":{"id":"b:2:3004-0:146:2341","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3007:138","2:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2989-0:137:2340":{"id":"b:2:2989-0:137:2340","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2992:2538"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:22:270-0:273:2342":{"id":"b:22:270-0:273:2342","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"22:263:2768","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"22:267:3034","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2342","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["22:273:25806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:277":{"id":"0:277","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32400:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2342","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32398:237-0:214:2339":{"id":"a:2:32398:237-0:214:2339","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2339","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:146:2341":{"id":"0:146:2341","crate_id":0,"name":"ChaCha20Rng","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"A cryptographically secure random number generator that uses the ChaCha algorithm.\n\nChaCha is a stream cipher designed by Daniel J. Bernstein[^1], that we use as an RNG. It is\nan improved variant of the Salsa20 cipher family, which was selected as one of the \"stream\nciphers suitable for widespread adoption\" by eSTREAM[^2].\n\nChaCha uses add-rotate-xor (ARX) operations as its basis. These are safe against timing\nattacks, although that is mostly a concern for ciphers and not for RNGs. We provide a SIMD\nimplementation to support high throughput on a variety of common hardware platforms.\n\nWith the ChaCha algorithm it is possible to choose the number of rounds the core algorithm\nshould run. The number of rounds is a tradeoff between performance and security, where 8\nrounds is the minimum potentially secure configuration, and 20 rounds is widely used as a\nconservative choice.\n\nWe use a 64-bit counter and 64-bit stream identifier as in Bernstein's implementation[^1]\nexcept that we use a stream identifier in place of a nonce. A 64-bit counter over 64-byte\n(16 word) blocks allows 1 ZiB of output before cycling, and the stream identifier allows\n2<sup>64</sup> unique streams of output per seed. Both counter and stream are initialized\nto zero but may be set via the `set_word_pos` and `set_stream` methods.\n\nThe word layout is:\n\n```text\nconstant  constant  constant  constant\nseed      seed      seed      seed\nseed      seed      seed      seed\ncounter   counter   stream_id stream_id\n```\n\nThis implementation uses an output buffer of sixteen `u32` words, and uses\n[`BlockRng`] to implement the [`RngCore`] methods.\n\n[^1]: D. J. Bernstein, [*ChaCha, a variant of Salsa20*](\n      https://cr.yp.to/chacha.html)\n\n[^2]: [eSTREAM: the ECRYPT Stream Cipher Project](\n      http://www.ecrypt.eu.org/stream/)","links":{"`BlockRng`":"20:178:2465","`RngCore`":"20:133:2469"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:118","a:2:32457:2999-0:146:2341","a:2:42260:13711-0:146:2341","a:2:3212:247-0:146:2341","a:2:3247:8482-0:146:2341","a:2:42259:13489-0:146:2341","a:2:32398:237-0:146:2341","b:2:2989-0:146:2341","b:2:2719-0:146:2341","b:2:3828-0:146:2341","b:2:2716-0:146:2341","b:2:2993-0:146:2341","b:2:2999-0:146:2341","b:2:3004-0:146:2341","b:5:793-0:146:2341","b:22:270-0:146:2341","0:126","0:150","0:128","0:148","0:125","0:130","0:109","0:113"]}}},"0:208:480":{"id":"0:208:480","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2338","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:22:270-0:214:2339":{"id":"b:22:270-0:214:2339","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"22:263:2768","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"22:267:3034","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2339","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["22:273:25806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:219:811":{"id":"0:219:811","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2993-0:273:2342":{"id":"b:2:2993-0:273:2342","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2342","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:242:2493":{"id":"0:242:2493","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:140:2470","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:150":{"id":"0:150","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10389:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:151:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:97":{"id":"0:97","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10389:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:98:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32398:237-0:146:2341":{"id":"a:2:32398:237-0:146:2341","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:181":{"id":"0:181","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["read_adapter"],"trait":{"name":"RngCore","id":"20:133:2469","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2339","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:182:2524","0:183:2525","0:184:2526","0:185:2528"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3212:247-0:282:2343":{"id":"a:2:3212:247-0:282:2343","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2343","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13347:26773":{"id":"2:13347:26773","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:12845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:12845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:13922","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:184:2526":{"id":"0:184:2526","crate_id":0,"name":"fill_bytes","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:172:2492":{"id":"0:172:2492","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"2:2721:25802":{"id":"2:2721:25802","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32457:2999-0:214:2339":{"id":"a:2:32457:2999-0:214:2339","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32457:2999","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2339","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3828-0:214:2339":{"id":"b:2:3828-0:214:2339","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2998","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2339","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13401:33711":{"id":"2:13401:33711","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:5017:33711"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:44336:12167","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2999-0:146:2341":{"id":"b:2:2999-0:146:2341","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3002:138","2:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:143:706":{"id":"0:143:706","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:174:2493":{"id":"0:174:2493","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:140:2470","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:240:2492":{"id":"0:240:2492","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"2:13315:8440":{"id":"2:13315:8440","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:42168:191","prim@char":"1:12389:476","self::pattern":"2:12960:13924"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:12845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13309:26775":{"id":"2:13309:26775","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, in which case this function will return true if\nthe `&str` is a prefix of this string slice.\n\nThe [pattern] can also be a [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\nThese will only be checked against the first character of this string slice.\nLook at the second example below regarding behavior for slices of [`char`]s.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```\n\n```\nlet bananas = \"bananas\";\n\n// Note that both of these assert successfully.\nassert!(bananas.starts_with(&['b', 'a', 'n', 'a']));\nassert!(bananas.starts_with(&['a', 'b', 'c', 'd']));\n```","links":{"prim@char":"1:12389:476","self::pattern":"2:12960:13924"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:12845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:793-0:205:2338":{"id":"b:5:793-0:205:2338","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:789:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2338","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:795:8460","5:796:8461","5:797:8462"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:275":{"id":"0:275","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2342","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:276:480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13302:31752":{"id":"2:13302:31752","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:13301:31765"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:44320:12277","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5717:34407":{"id":"5:5717:34407","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7774:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:12845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13388:33709":{"id":"2:13388:33709","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12389:476","self::pattern":"2:12960:13924"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:12845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:12845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:13922","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:284":{"id":"0:284","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2343","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:285:480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42260:13711-0:137:2340":{"id":"a:2:42260:13711-0:137:2340","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42260:13711","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13323:26762":{"id":"2:13323:26762","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12960:13924","`DoubleEndedIterator`":"2:8333:130","prim@char":"1:12389:476","str::split_whitespace":"2:13301:31765","str::rsplit":"2:13329:26766"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:44037:12032","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:12845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3828-0:282:2343":{"id":"b:2:3828-0:282:2343","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2998","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2343","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13304:33694":{"id":"2:13304:33694","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:44301:12275","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:177":{"id":"0:177","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_rng","seed_from_u64"],"trait":{"name":"SeedableRng","id":"20:140:2470","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2339","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:178:2492","0:180:2493"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13373:33706":{"id":"2:13373:33706","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12389:476","self::pattern":"2:12960:13924"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:12845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:94:2345":{"id":"0:94:2345","crate_id":0,"name":"ChaChaRng","span":{"filename":"src/lib.rs","begin":[32,0],"end":[32,33]},"visibility":"public","docs":"ChaCha with 20 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}}},"a:2:3247:8482-0:146:2341":{"id":"a:2:3247:8482-0:146:2341","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3247:8482","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:793-0:137:2340":{"id":"b:5:793-0:137:2340","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:789:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:795:8460","5:796:8461","5:797:8462"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:19:2477":{"id":"0:19:2477","crate_id":0,"name":"Array64","span":{"filename":"src/chacha.rs","begin":[27,0],"end":[27,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[repr(transparent)]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}}},"2:13329:26766":{"id":"2:13329:26766","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12960:13924","`DoubleEndedIterator`":"2:8333:130","prim@char":"1:12389:476","str::split":"2:13323:26762"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:44055:12037","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:12845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:12845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:13922","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:273:2342":{"id":"0:273:2342","crate_id":0,"name":"ChaCha8Core","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"ChaCha with 8 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:32457:2999-0:273:2342","a:2:42260:13711-0:273:2342","a:2:3212:247-0:273:2342","a:2:3247:8482-0:273:2342","a:2:42259:13489-0:273:2342","a:2:32398:237-0:273:2342","b:2:2989-0:273:2342","b:2:2719-0:273:2342","b:2:3828-0:273:2342","b:2:2716-0:273:2342","b:2:2993-0:273:2342","b:2:2999-0:273:2342","b:2:3004-0:273:2342","b:5:793-0:273:2342","b:22:270-0:273:2342","0:275","0:233","0:277","0:244","0:235","0:280","0:239","0:278","0:262"]}}},"0:120:2550":{"id":"0:120:2550","crate_id":0,"name":"set_word_pos","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"Set the offset from the start of the stream, in 32-bit words.\n\nAs with `get_word_pos`, we use a 68-bit number. Since the generator\nsimply cycles at the end of its period (1 ZiB), we ignore the upper\n60 bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["word_offset",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:166:811":{"id":"0:166:811","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:209":{"id":"0:209","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32400:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2338","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2716-0:273:2342":{"id":"b:2:2716-0:273:2342","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2998","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2342","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2718:2952"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:113":{"id":"0:113","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["read_adapter"],"trait":{"name":"RngCore","id":"20:133:2469","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:114:2524","0:115:2525","0:116:2526","0:117:2528"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:189:2563":{"id":"0:189:2563","crate_id":0,"name":"set_stream","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"Set the stream number.\n\nThis is initialized to zero; 2<sup>64</sup> unique streams of output\nare available per seed/key.\n\nNote that in order to reproduce ChaCha output with a specific 64-bit\nnonce, one can convert that nonce to a `u64` in little-endian fashion\nand pass to this function. In theory a 96-bit nonce can be used by\npassing the last 64-bits to this function and using the first 32-bits as\nthe most significant half of the 64-bit counter (which may be set\nindirectly via `set_word_pos`), but this is not directly supported.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["stream",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5720:34408":{"id":"5:5720:34408","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7774:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13397:25900":{"id":"2:13397:25900","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3008:1824":{"id":"2:3008:1824","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:42298:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:100:173":{"id":"0:100:173","crate_id":0,"name":"Item","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"0:262":{"id":"0:262","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2342","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2343","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:263:841"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:3002:138":{"id":"2:3002:138","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:165":{"id":"0:165","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10389:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2338","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:166:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3828-0:137:2340":{"id":"b:2:3828-0:137:2340","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2998","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13399:26636":{"id":"2:13399:26636","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1066:38515"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:186":{"id":"0:186","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2339","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:187:2534","0:188:2550","0:189:2563","0:190:2568","0:191:2571"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13353:33697":{"id":"2:13353:33697","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12960:13924","`DoubleEndedIterator`":"2:8333:130","prim@char":"1:12389:476","str::matches":"2:13350:2967"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:44259:12273","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:12845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:12845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:13922","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:22:270-0:137:2340":{"id":"b:22:270-0:137:2340","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"22:263:2768","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"22:267:3034","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["22:273:25806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:198":{"id":"0:198","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2771:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2339","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2999-0:273:2342":{"id":"b:2:2999-0:273:2342","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2342","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3002:138","2:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13276:33690":{"id":"2:13276:33690","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:13274:33689"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3212:247-0:137:2340":{"id":"a:2:3212:247-0:137:2340","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:218":{"id":"0:218","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10389:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2339","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:219:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13295:26760":{"id":"2:13295:26760","crate_id":2,"name":"split_at_checked","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut_checked`]\nmethod.\n\n[`split_at_mut_checked`]: str::split_at_mut_checked\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at_checked(3).unwrap();\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n\nassert_eq!(None, s.split_at_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_checked(16));  // Beyond the string length\n```","links":{"str::split_at_mut_checked":"2:13296:26761"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3212:247-0:205:2338":{"id":"a:2:3212:247-0:205:2338","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2338","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:217:480":{"id":"0:217:480","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2339","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:287:811":{"id":"0:287:811","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13306:26774":{"id":"2:13306:26774","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12389:476","self::pattern":"2:12960:13924"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:12845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42260:13711-0:273:2342":{"id":"a:2:42260:13711-0:273:2342","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42260:13711","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2342","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13385:33708":{"id":"2:13385:33708","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12389:476","self::pattern":"2:12960:13924"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:12845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2989-0:146:2341":{"id":"b:2:2989-0:146:2341","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2992:2538"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42259:13489-0:146:2341":{"id":"a:2:42259:13489-0:146:2341","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42259:13489","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:280":{"id":"0:280","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2771:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2342","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:793-0:214:2339":{"id":"b:5:793-0:214:2339","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:789:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2339","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:795:8460","5:796:8461","5:797:8462"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2989-0:205:2338":{"id":"b:2:2989-0:205:2338","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2338","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2992:2538"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:239":{"id":"0:239","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_rng","seed_from_u64"],"trait":{"name":"SeedableRng","id":"20:140:2470","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2342","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:240:2492","0:242:2493"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:129:706":{"id":"0:129:706","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13369:33704":{"id":"2:13369:33704","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5732:25897":{"id":"5:5732:25897","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:13397:25900"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13283:26729":{"id":"2:13283:26729","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:42168:191"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2995:841":{"id":"2:2995:841","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2716-0:205:2338":{"id":"b:2:2716-0:205:2338","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2998","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2338","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2718:2952"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2716-0:146:2341":{"id":"b:2:2716-0:146:2341","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2998","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2718:2952"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:112:2493":{"id":"0:112:2493","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:140:2470","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3007:138":{"id":"2:3007:138","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32322:10842","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:13292:33693":{"id":"2:13292:33693","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12395:1739","crate::ops::IndexMut":"2:3490:13521","str::slice_unchecked":"2:13291:33692"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:116:2526":{"id":"0:116:2526","crate_id":0,"name":"fill_bytes","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:282:2343":{"id":"0:282:2343","crate_id":0,"name":"ChaCha8Rng","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"A cryptographically secure random number generator that uses the ChaCha algorithm.\n\nChaCha is a stream cipher designed by Daniel J. Bernstein[^1], that we use as an RNG. It is\nan improved variant of the Salsa20 cipher family, which was selected as one of the \"stream\nciphers suitable for widespread adoption\" by eSTREAM[^2].\n\nChaCha uses add-rotate-xor (ARX) operations as its basis. These are safe against timing\nattacks, although that is mostly a concern for ciphers and not for RNGs. We provide a SIMD\nimplementation to support high throughput on a variety of common hardware platforms.\n\nWith the ChaCha algorithm it is possible to choose the number of rounds the core algorithm\nshould run. The number of rounds is a tradeoff between performance and security, where 8\nrounds is the minimum potentially secure configuration, and 20 rounds is widely used as a\nconservative choice.\n\nWe use a 64-bit counter and 64-bit stream identifier as in Bernstein's implementation[^1]\nexcept that we use a stream identifier in place of a nonce. A 64-bit counter over 64-byte\n(16 word) blocks allows 1 ZiB of output before cycling, and the stream identifier allows\n2<sup>64</sup> unique streams of output per seed. Both counter and stream are initialized\nto zero but may be set via the `set_word_pos` and `set_stream` methods.\n\nThe word layout is:\n\n```text\nconstant  constant  constant  constant\nseed      seed      seed      seed\nseed      seed      seed      seed\ncounter   counter   stream_id stream_id\n```\n\nThis implementation uses an output buffer of sixteen `u32` words, and uses\n[`BlockRng`] to implement the [`RngCore`] methods.\n\n[^1]: D. J. Bernstein, [*ChaCha, a variant of Salsa20*](\n      https://cr.yp.to/chacha.html)\n\n[^2]: [eSTREAM: the ECRYPT Stream Cipher Project](\n      http://www.ecrypt.eu.org/stream/)","links":{"`BlockRng`":"20:178:2465","`RngCore`":"20:133:2469"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:254","a:2:32457:2999-0:282:2343","a:2:42260:13711-0:282:2343","a:2:3212:247-0:282:2343","a:2:3247:8482-0:282:2343","a:2:42259:13489-0:282:2343","a:2:32398:237-0:282:2343","b:2:2989-0:282:2343","b:2:2719-0:282:2343","b:2:3828-0:282:2343","b:2:2716-0:282:2343","b:2:2993-0:282:2343","b:2:2999-0:282:2343","b:2:3004-0:282:2343","b:5:793-0:282:2343","b:22:270-0:282:2343","0:264","0:286","0:284","0:262","0:266","0:261","0:245","0:249"]}}},"2:13344:26772":{"id":"2:13344:26772","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:12845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5731:25896":{"id":"5:5731:25896","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:13396:25899"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13396:25899":{"id":"2:13396:25899","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:251:2525":{"id":"0:251:2525","crate_id":0,"name":"next_u64","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13303:28555":{"id":"2:13303:28555","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:44291:12274","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13370:33705":{"id":"2:13370:33705","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12389:476","self::pattern":"2:12960:13924"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:12845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:12845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12986:13921","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13391:33710":{"id":"2:13391:33710","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12921:137","`FromStr`":"2:12920:13566"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42298:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12920:13566","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12920:13566","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42259:13489-0:205:2338":{"id":"a:2:42259:13489-0:205:2338","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42259:13489","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2338","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:22:270-0:205:2338":{"id":"b:22:270-0:205:2338","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"22:263:2768","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"22:267:3034","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2338","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["22:273:25806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:142":{"id":"0:142","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2766:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:143:706"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:194":{"id":"0:194","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2338","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2339","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:195:841"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:95:2347":{"id":"0:95:2347","crate_id":0,"name":"ChaChaCore","span":{"filename":"src/lib.rs","begin":[34,0],"end":[34,35]},"visibility":"public","docs":"ChaCha with 20 rounds, low-level interface","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}}},"2:13356:33698":{"id":"2:13356:33698","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12960:13924","`DoubleEndedIterator`":"2:8333:130","prim@char":"1:12389:476","str::rmatch_indices":"2:13359:33699"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:44187:12269","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:12845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2718:2952":{"id":"2:2718:2952","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13362:33700":{"id":"2:13362:33700","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:122:2568":{"id":"0:122:2568","crate_id":0,"name":"get_stream","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"Get the stream number.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2716-0:282:2343":{"id":"b:2:2716-0:282:2343","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2998","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2343","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2718:2952"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2999-0:205:2338":{"id":"b:2:2999-0:205:2338","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2338","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3002:138","2:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42260:13711-0:205:2338":{"id":"a:2:42260:13711-0:205:2338","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42260:13711","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2338","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:193":{"id":"0:193","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:139:2468","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2339","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:246:2492":{"id":"0:246:2492","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"0:101:2488":{"id":"0:101:2488","crate_id":0,"name":"Results","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Array64","id":"0:19:2477","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}}},"b:2:3828-0:146:2341":{"id":"b:2:3828-0:146:2341","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2998","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:109":{"id":"0:109","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_rng","seed_from_u64"],"trait":{"name":"SeedableRng","id":"20:140:2470","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:110:2492","0:112:2493"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32457:2999-0:146:2341":{"id":"a:2:32457:2999-0:146:2341","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32457:2999","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:257:2563":{"id":"0:257:2563","crate_id":0,"name":"set_stream","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"Set the stream number.\n\nThis is initialized to zero; 2<sup>64</sup> unique streams of output\nare available per seed/key.\n\nNote that in order to reproduce ChaCha output with a specific 64-bit\nnonce, one can convert that nonce to a `u64` in little-endian fashion\nand pass to this function. In theory a 96-bit nonce can be used by\npassing the last 64-bits to this function and using the first 32-bits as\nthe most significant half of the 64-bit counter (which may be set\nindirectly via `set_word_pos`), but this is not directly supported.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["stream",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42260:13711-0:282:2343":{"id":"a:2:42260:13711-0:282:2343","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42260:13711","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2343","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:265:706":{"id":"0:265:706","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2343","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2999-0:214:2339":{"id":"b:2:2999-0:214:2339","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2339","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3002:138","2:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:187:2534":{"id":"0:187:2534","crate_id":0,"name":"get_word_pos","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"Get the offset from the start of the stream, in 32-bit words.\n\nSince the generated blocks are 16 words (2<sup>4</sup>) long and the\ncounter is 64-bits, the offset is a 68-bit number. Sub-word offsets are\nnot supported, hence the result can simply be multiplied by 4 to get a\nbyte-offset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:0:2348":{"id":"0:0:2348","crate_id":0,"name":"rand_chacha","span":{"filename":"src/lib.rs","begin":[9,0],"end":[34,35]},"visibility":"public","docs":"The ChaCha random number generator.","links":{},"attrs":["#![doc(html_logo_url =\n\"https://www.rust-lang.org/logos/rust-logo-128x128-blk.png\", html_favicon_url\n= \"https://www.rust-lang.org/favicon.ico\", html_root_url =\n\"https://rust-random.github.io/rand/\")]","#![forbid(unsafe_code)]","#![deny(missing_docs)]","#![deny(missing_debug_implementations)]","#![doc(test(attr(allow(unused_variables), deny(warnings))))]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:3-20:0:2335","0:88-0:205:2338","0:89-0:214:2339","0:90-0:137:2340","0:91-0:146:2341","0:92-0:273:2342","0:93-0:282:2343","0:94:2345","0:95:2347"],"is_stripped":false}}},"2:13341:26770":{"id":"2:13341:26770","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12389:476","str::splitn":"2:13338:26768","self::pattern":"2:12960:13924"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:44159:12267","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:12845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:12845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:13922","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:196":{"id":"0:196","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2766:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2339","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:197:706"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2719-0:273:2342":{"id":"b:2:2719-0:273:2342","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2998","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2342","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2721:25802"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:249":{"id":"0:249","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["read_adapter"],"trait":{"name":"RngCore","id":"20:133:2469","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2343","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:250:2524","0:251:2525","0:252:2526","0:253:2528"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:119:2534":{"id":"0:119:2534","crate_id":0,"name":"get_word_pos","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"Get the offset from the start of the stream, in 32-bit words.\n\nSince the generated blocks are 16 words (2<sup>4</sup>) long and the\ncounter is 64-bits, the offset is a 68-bit number. Sub-word offsets are\nnot supported, hence the result can simply be multiplied by 4 to get a\nbyte-offset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:216":{"id":"0:216","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2339","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:217:480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:114:2524":{"id":"0:114:2524","crate_id":0,"name":"next_u32","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13312:26776":{"id":"2:13312:26776","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12389:476","self::pattern":"2:12960:13924"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:12845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:12845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:13922","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32398:237-0:137:2340":{"id":"a:2:32398:237-0:137:2340","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:244":{"id":"0:244","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoBlockRng","id":"20:22:2467","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2342","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2999-0:282:2343":{"id":"b:2:2999-0:282:2343","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2343","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3002:138","2:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:106:2493":{"id":"0:106:2493","crate_id":0,"name":"from_seed","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:140:2470","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13294:26757":{"id":"2:13294:26757","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_mut_checked`](str::split_at_mut_checked).\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:13293:26756","str::split_at_mut_checked":"2:13296:26761"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5714:14162":{"id":"5:5714:14162","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7774:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:12845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3004-0:137:2340":{"id":"b:2:3004-0:137:2340","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3007:138","2:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2999-0:137:2340":{"id":"b:2:2999-0:137:2340","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3002:138","2:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42259:13489-0:214:2339":{"id":"a:2:42259:13489-0:214:2339","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42259:13489","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2339","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:233":{"id":"0:233","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10389:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2342","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:234:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:126":{"id":"0:126","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:127:841"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3247:8482-0:214:2339":{"id":"a:2:3247:8482-0:214:2339","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3247:8482","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2339","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2993-0:214:2339":{"id":"b:2:2993-0:214:2339","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2339","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:3830:1839":{"id":"2:3830:1839","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39881:12156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:236:173":{"id":"0:236:173","crate_id":0,"name":"Item","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"0:93-0:282:2343":{"id":"0:93-0:282:2343","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[28,71],"end":[28,81]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha8Rng","name":"ChaCha8Rng","id":"0:282:2343","glob":false}}},"0:130":{"id":"0:130","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2771:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2993-0:205:2338":{"id":"b:2:2993-0:205:2338","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2338","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32398:237-0:273:2342":{"id":"a:2:32398:237-0:273:2342","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2342","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32457:2999-0:205:2338":{"id":"a:2:32457:2999-0:205:2338","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32457:2999","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2338","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:793-0:273:2342":{"id":"b:5:793-0:273:2342","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:789:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2342","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:795:8460","5:796:8461","5:797:8462"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:210":{"id":"0:210","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2766:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2338","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:211:706"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13326:26764":{"id":"2:13326:26764","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12389:476","self::pattern":"2:12960:13924"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:12775:12036","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:12845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:797:8462":{"id":"5:797:8462","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:170:2489":{"id":"0:170:2489","crate_id":0,"name":"generate","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["r",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"20:18:2466","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:259:2571":{"id":"0:259:2571","crate_id":0,"name":"get_seed","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"Get the seed.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"array":{"type":{"primitive":"u8"},"len":"32"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:88-0:205:2338":{"id":"0:88-0:205:2338","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[28,4],"end":[28,16]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha12Core","name":"ChaCha12Core","id":"0:205:2338","glob":false}}},"2:13299:12290":{"id":"2:13299:12290","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12389:476"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:44013:12258","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:110:2492":{"id":"0:110:2492","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"0:139":{"id":"0:139","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:140:480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13287:26731":{"id":"2:13287:26731","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3212:247-0:273:2342":{"id":"a:2:3212:247-0:273:2342","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2342","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:98:811":{"id":"0:98:811","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2989-0:214:2339":{"id":"b:2:2989-0:214:2339","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2339","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2992:2538"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:263:841":{"id":"0:263:841","crate_id":0,"name":"from","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2342","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13364:33701":{"id":"2:13364:33701","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13272:8399":{"id":"2:13272:8399","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13398:26635":{"id":"2:13398:26635","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1066:38515"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3004-0:282:2343":{"id":"b:2:3004-0:282:2343","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2343","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3007:138","2:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13400:26637":{"id":"2:13400:26637","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1066:38515"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:123:2571":{"id":"0:123:2571","crate_id":0,"name":"get_seed","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"public","docs":"Get the seed.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"array":{"type":{"primitive":"u8"},"len":"32"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13270":{"id":"2:13270","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:13271:1008","2:13272:8399","2:13273:33688","2:13274:33689","2:13276:33690","2:13279:26310","2:13280:33691","2:13281:336","2:13282:26733","2:13283:26729","2:13285:26730","2:13287:26731","2:13289:26732","2:13291:33692","2:13292:33693","2:13293:26756","2:13294:26757","2:13295:26760","2:13296:26761","2:13298:12279","2:13299:12290","2:13300:2527","2:13301:31765","2:13302:31752","2:13303:28555","2:13304:33694","2:13305:31910","2:13306:26774","2:13309:26775","2:13312:26776","2:13315:8440","2:13319:8398","2:13323:26762","2:13326:26764","2:13329:26766","2:13332:33695","2:13335:33696","2:13338:26768","2:13341:26770","2:13344:26772","2:13347:26773","2:13350:2967","2:13353:33697","2:13356:33698","2:13359:33699","2:13362:33700","2:13364:33701","2:13366:33702","2:13368:33703","2:13369:33704","2:13370:33705","2:13373:33706","2:13376:25830","2:13379:26777","2:13382:33707","2:13385:33708","2:13388:33709","2:13391:33710","2:13393:25894","2:13394:26632","2:13395:25898","2:13396:25899","2:13397:25900","2:13398:26635","2:13399:26636","2:13400:26637","2:13401:33711","2:13403:13482","2:13404:33712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5728:34409":{"id":"5:5728:34409","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7774:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2719-0:214:2339":{"id":"b:2:2719-0:214:2339","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2998","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2339","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2721:25802"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42259:13489-0:282:2343":{"id":"a:2:42259:13489-0:282:2343","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42259:13489","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2343","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:89-0:214:2339":{"id":"0:89-0:214:2339","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[28,18],"end":[28,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha12Rng","name":"ChaCha12Rng","id":"0:214:2339","glob":false}}},"0:264":{"id":"0:264","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2766:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2343","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:265:706"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13359:33699":{"id":"2:13359:33699","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12960:13924","`DoubleEndedIterator`":"2:8333:130","prim@char":"1:12389:476","str::match_indices":"2:13356:33698"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:44205:12270","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:12845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:12845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:13922","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:167":{"id":"0:167","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BlockRngCore","id":"20:18:2466","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2338","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:168:173","0:169:2488","0:170:2489"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:22:270-0:146:2341":{"id":"b:22:270-0:146:2341","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"22:263:2768","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"22:267:3034","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["22:273:25806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:140:480":{"id":"0:140:480","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:151:811":{"id":"0:151:811","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:183:2525":{"id":"0:183:2525","crate_id":0,"name":"next_u64","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:258:2568":{"id":"0:258:2568","crate_id":0,"name":"get_stream","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"public","docs":"Get the stream number.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13395:25898":{"id":"2:13395:25898","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:211:706":{"id":"0:211:706","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2338","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13291:33692":{"id":"2:13291:33692","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12395:1739","str::slice_mut_unchecked":"2:13292:33693","crate::ops::Index":"2:39712:13520"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13350:2967":{"id":"2:13350:2967","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12960:13924","`DoubleEndedIterator`":"2:8333:130","prim@char":"1:12389:476","str::rmatches":"2:13353:33697"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:44241:12272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:12845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:205:2338":{"id":"0:205:2338","crate_id":0,"name":"ChaCha12Core","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"ChaCha with 12 rounds","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:32457:2999-0:205:2338","a:2:42260:13711-0:205:2338","a:2:3212:247-0:205:2338","a:2:3247:8482-0:205:2338","a:2:42259:13489-0:205:2338","a:2:32398:237-0:205:2338","b:2:2989-0:205:2338","b:2:2719-0:205:2338","b:2:3828-0:205:2338","b:2:2716-0:205:2338","b:2:2993-0:205:2338","b:2:2999-0:205:2338","b:2:3004-0:205:2338","b:5:793-0:205:2338","b:22:270-0:205:2338","0:171","0:165","0:212","0:176","0:207","0:210","0:209","0:194","0:167"]}}},"a:2:3212:247-0:146:2341":{"id":"a:2:3212:247-0:146:2341","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3004-0:214:2339":{"id":"b:2:3004-0:214:2339","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2339","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3007:138","2:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2992:2538":{"id":"2:2992:2538","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2966:145"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3247:8482-0:137:2340":{"id":"a:2:3247:8482-0:137:2340","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3247:8482","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:149:480":{"id":"0:149:480","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13285:26730":{"id":"2:13285:26730","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:42168:191"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13305:31910":{"id":"2:13305:31910","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:44329:12278","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:793-0:282:2343":{"id":"b:5:793-0:282:2343","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:789:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2343","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:795:8460","5:796:8461","5:797:8462"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:22:270-0:282:2343":{"id":"b:22:270-0:282:2343","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[221,0],"end":[223,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"MultiLane","id":"22:263:2768","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"VZip","id":"22:267:3034","args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2343","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["22:273:25806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:279:706":{"id":"0:279:706","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2342","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:278":{"id":"0:278","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2766:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2342","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:279:706"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:254":{"id":"0:254","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2343","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:255:2534","0:256:2550","0:257:2563","0:258:2568","0:259:2571"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:237:2488":{"id":"0:237:2488","crate_id":0,"name":"Results","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Array64","id":"0:19:2477","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}}},"2:13403:13482":{"id":"2:13403:13482","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:5018:13482"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:44345:12158","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:266":{"id":"0:266","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2771:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2343","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:171":{"id":"0:171","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["from_rng","seed_from_u64"],"trait":{"name":"SeedableRng","id":"20:140:2470","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2338","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:172:2492","0:174:2493"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:188:2550":{"id":"0:188:2550","crate_id":0,"name":"set_word_pos","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"Set the offset from the start of the stream, in 32-bit words.\n\nAs with `get_word_pos`, we use a 68-bit number. Since the generator\nsimply cycles at the end of its period (1 ZiB), we ignore the upper\n60 bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["word_offset",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13394:26632":{"id":"2:13394:26632","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:40067:14002","Self::is_ascii":"2:13393:25894"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:40067:14002","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:91-0:146:2341":{"id":"0:91-0:146:2341","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[28,45],"end":[28,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::chacha::ChaCha20Rng","name":"ChaCha20Rng","id":"0:146:2341","glob":false}}},"a:2:42260:13711-0:146:2341":{"id":"a:2:42260:13711-0:146:2341","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42260:13711","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:261":{"id":"0:261","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"20:139:2468","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2343","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13338:26768":{"id":"2:13338:26768","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12389:476","self::pattern":"2:12960:13924","str::rsplitn":"2:13341:26770"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:44141:12266","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:12845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2993-0:146:2341":{"id":"b:2:2993-0:146:2341","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:3-20:0:2335":{"id":"0:3-20:0:2335","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[22,0],"end":[22,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"rand_core","name":"rand_core","id":"20:0:2335","glob":false}}},"a:2:3247:8482-0:273:2342":{"id":"a:2:3247:8482-0:273:2342","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3247:8482","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2342","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:250:2524":{"id":"0:250:2524","crate_id":0,"name":"next_u32","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:190:2568":{"id":"0:190:2568","crate_id":0,"name":"get_stream","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"Get the stream number.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:43-22:274:2763":{"id":"0:43-22:274:2763","crate_id":0,"name":null,"span":{"filename":"src/guts.rs","begin":[14,0],"end":[14,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"ppv_lite86::Machine","name":"Machine","id":"22:274:2763","glob":false}}},"b:2:3828-0:273:2342":{"id":"b:2:3828-0:273:2342","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2998","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2342","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3004-0:205:2338":{"id":"b:2:3004-0:205:2338","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2338","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3007:138","2:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2989-0:282:2343":{"id":"b:2:2989-0:282:2343","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2343","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2992:2538"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:285:480":{"id":"0:285:480","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2343","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3828-0:205:2338":{"id":"b:2:3828-0:205:2338","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2998","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2338","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:796:8461":{"id":"5:796:8461","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13293:26756":{"id":"2:13293:26756","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_checked`](str::split_at_checked).\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_checked":"2:13295:26760","str::split_at_mut":"2:13294:26757"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13298:12279":{"id":"2:13298:12279","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12389:476"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:44007:12257","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13332:33695":{"id":"2:13332:33695","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12960:13924","str::split":"2:13323:26762","prim@char":"1:12389:476","`DoubleEndedIterator`":"2:8333:130","str::rsplit_terminator":"2:13335:33696"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:44087:12263","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:12845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:168:173":{"id":"0:168:173","crate_id":0,"name":"Item","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"a:2:32457:2999-0:282:2343":{"id":"a:2:32457:2999-0:282:2343","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32457:2999","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2343","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:3003:1826":{"id":"2:3003:1826","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:42298:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5712":{"id":"5:5712","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5713:34406","5:5714:14162","5:5717:34407","5:5720:34408","5:5728:34409","5:5729:34410","5:5730:13620","5:5731:25896","5:5732:25897"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13376:25830":{"id":"2:13376:25830","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns the substring after the prefix,\nwrapped in `Some`. Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12389:476","self::pattern":"2:12960:13924"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:12845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:115:2525":{"id":"0:115:2525","crate_id":0,"name":"next_u64","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:197:706":{"id":"0:197:706","crate_id":0,"name":"eq","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2339","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2719-0:205:2338":{"id":"b:2:2719-0:205:2338","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2998","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2338","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2721:25802"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:185:2528":{"id":"0:185:2528","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["bytes",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42298:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"20:76:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2719-0:146:2341":{"id":"b:2:2719-0:146:2341","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2998","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Rng","id":"0:146:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2721:25802"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:214:2339":{"id":"0:214:2339","crate_id":0,"name":"ChaCha12Rng","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"public","docs":"A cryptographically secure random number generator that uses the ChaCha algorithm.\n\nChaCha is a stream cipher designed by Daniel J. Bernstein[^1], that we use as an RNG. It is\nan improved variant of the Salsa20 cipher family, which was selected as one of the \"stream\nciphers suitable for widespread adoption\" by eSTREAM[^2].\n\nChaCha uses add-rotate-xor (ARX) operations as its basis. These are safe against timing\nattacks, although that is mostly a concern for ciphers and not for RNGs. We provide a SIMD\nimplementation to support high throughput on a variety of common hardware platforms.\n\nWith the ChaCha algorithm it is possible to choose the number of rounds the core algorithm\nshould run. The number of rounds is a tradeoff between performance and security, where 8\nrounds is the minimum potentially secure configuration, and 20 rounds is widely used as a\nconservative choice.\n\nWe use a 64-bit counter and 64-bit stream identifier as in Bernstein's implementation[^1]\nexcept that we use a stream identifier in place of a nonce. A 64-bit counter over 64-byte\n(16 word) blocks allows 1 ZiB of output before cycling, and the stream identifier allows\n2<sup>64</sup> unique streams of output per seed. Both counter and stream are initialized\nto zero but may be set via the `set_word_pos` and `set_stream` methods.\n\nThe word layout is:\n\n```text\nconstant  constant  constant  constant\nseed      seed      seed      seed\nseed      seed      seed      seed\ncounter   counter   stream_id stream_id\n```\n\nThis implementation uses an output buffer of sixteen `u32` words, and uses\n[`BlockRng`] to implement the [`RngCore`] methods.\n\n[^1]: D. J. Bernstein, [*ChaCha, a variant of Salsa20*](\n      https://cr.yp.to/chacha.html)\n\n[^2]: [eSTREAM: the ECRYPT Stream Cipher Project](\n      http://www.ecrypt.eu.org/stream/)","links":{"`BlockRng`":"20:178:2465","`RngCore`":"20:133:2469"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:186","a:2:32457:2999-0:214:2339","a:2:42260:13711-0:214:2339","a:2:3212:247-0:214:2339","a:2:3247:8482-0:214:2339","a:2:42259:13489-0:214:2339","a:2:32398:237-0:214:2339","b:2:2989-0:214:2339","b:2:2719-0:214:2339","b:2:3828-0:214:2339","b:2:2716-0:214:2339","b:2:2993-0:214:2339","b:2:2999-0:214:2339","b:2:3004-0:214:2339","b:5:793-0:214:2339","b:22:270-0:214:2339","0:193","0:196","0:198","0:181","0:177","0:218","0:216","0:194"]}}},"0:286":{"id":"0:286","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10389:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2343","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:287:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:276:480":{"id":"0:276:480","crate_id":0,"name":"clone","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ChaCha8Core","id":"0:273:2342","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13271:1008":{"id":"2:13271:1008","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12389:476"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13296:26761":{"id":"2:13296:26761","crate_id":2,"name":"split_at_mut_checked","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at_checked`] method.\n\n[`split_at_checked`]: str::split_at_checked\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\nif let Some((first, last)) = s.split_at_mut_checked(3) {\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n\nassert_eq!(None, s.split_at_mut_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_mut_checked(16));  // Beyond the string length\n```","links":{"str::split_at_checked":"2:13295:26760"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13301:31765":{"id":"2:13301:31765","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:13302:31752"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:44311:12276","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5713:34406":{"id":"5:5713:34406","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:306:3000","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:306:3000","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2993-0:137:2340":{"id":"b:2:2993-0:137:2340","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13404:33712":{"id":"2:13404:33712","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:5015:33712"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:44354:12166","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13289:26732":{"id":"2:13289:26732","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3212:247-0:214:2339":{"id":"a:2:3212:247-0:214:2339","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2339","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42260:13711-0:214:2339":{"id":"a:2:42260:13711-0:214:2339","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42260:13711","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Rng","id":"0:214:2339","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32398:237-0:282:2343":{"id":"a:2:32398:237-0:282:2343","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha8Rng","id":"0:282:2343","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13282:26733":{"id":"2:13282:26733","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12408:1869"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:234:811":{"id":"0:234:811","crate_id":0,"name":"fmt","span":{"filename":"src/chacha.rs","begin":[339,0],"end":[339,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13366:33702":{"id":"2:13366:33702","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:207":{"id":"0:207","crate_id":0,"name":null,"span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2338","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:208:480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13382:33707":{"id":"2:13382:33707","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12389:476","self::pattern":"2:12960:13924"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:12845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:12845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:13922","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42259:13489-0:137:2340":{"id":"a:2:42259:13489-0:137:2340","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42259:13489","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha20Core","id":"0:137:2340","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13279:26310":{"id":"2:13279:26310","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12507:13925"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:169:2488":{"id":"0:169:2488","crate_id":0,"name":"Results","span":{"filename":"src/chacha.rs","begin":[338,0],"end":[338,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Array64","id":"0:19:2477","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}}},"0:104:2492":{"id":"0:104:2492","crate_id":0,"name":"Seed","span":{"filename":"src/chacha.rs","begin":[337,0],"end":[337,80]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"array":{"type":{"primitive":"u8"},"len":"32"}}}}},"2:13280:33691":{"id":"2:13280:33691","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"22:273:25806":{"id":"22:273:25806","crate_id":22,"name":"vzip","span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.17/src/types.rs","begin":[226,4],"end":[226,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"V"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32398:237-0:205:2338":{"id":"a:2:32398:237-0:205:2338","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ChaCha12Core","id":"0:205:2338","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}}},"paths":{"1:505:29403":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"2:21753:13587":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"17:14708:9800":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"17:14533:9495":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"1:6696:12202":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"21:2780:8629":{"crate_id":21,"path":["zerocopy","byteorder","I128"],"kind":"struct"},"16:6368:8725":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"11:2301:10620":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"17:14140:9697":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"21:1408:8623":{"crate_id":21,"path":["zerocopy","byteorder","U64"],"kind":"struct"},"2:33759:14172":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"17:10823:8673":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"11:2349:12793":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"6:7469:11859":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"2:43872:12873":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:8022:12950":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"16:8137:8796":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"1:10744:12911":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"6:6419:11568":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"11:328:10832":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"5:5826:13954":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"1:12408:1869":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"1:4015:12919":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"17:15036:9873":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"5:1548:8551":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"5:7787:12004":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"17:13547:8690":{"crate_id":17,"path":["object","read","RelocationMap"],"kind":"struct"},"1:8197:12955":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"2:42646:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"2:40554:12164":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:8757:14153":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"2:32399:2998":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"17:13570:21546":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"17:16171:10212":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"2:22958:12047":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"2:12041:12852":{"crate_id":2,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"1:11247:29160":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"1:9141:199":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"2:11198:8550":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"2:7831:14149":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"2:13625:8877":{"crate_id":2,"path":["core","future","async_drop","Fuse"],"kind":"struct"},"6:1597:11059":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"6:1563:11038":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"16:8165:8799":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"17:11309:12650":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"11:1005:10620":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"16:7259:10590":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"1:12392:1328":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"6:1696:11123":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"6:8284:11964":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:46264:2806":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"2:43862:12040":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"11:1601:12799":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"6:7577:11929":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"2:43124:12243":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"16:8096:12775":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"21:139:71":{"crate_id":21,"path":["zerocopy","pointer","ptr","invariant","Any"],"kind":"enum"},"11:772:8846":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"1:5103:13697":{"crate_id":1,"path":["std","os","net","linux_ext","socket","UnixSocketExt"],"kind":"trait"},"5:7856:12811":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"2:39824:216":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"16:6890:8781":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"2:45957:12327":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2:4359:12531":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"17:3854:12638":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"1:9448:12946":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockWriteGuard"],"kind":"struct"},"6:5658:11525":{"crate_id":6,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"1:5672:114":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:40877:134":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"2:3438:13880":{"crate_id":2,"path":["core","ops","deref","DerefPure"],"kind":"trait"},"16:8711:10746":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"1:11537:29421":{"crate_id":1,"path":["std","sys","sync","once","futex","CompletionGuard"],"kind":"struct"},"17:16209:10221":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"17:12409:21648":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"1:7796:26100":{"crate_id":1,"path":["std","panicking","begin_panic_handler","FormatStringPayload"],"kind":"struct"},"2:40827:12868":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:11050:25831":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"1:9340:12978":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"17:16632:10331":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"5:5518:34584":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"1:3347:12909":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"2:44013:12258":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"6:559:10979":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"5:7233:34627":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"2:30811:31888":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"2:44141:12266":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"6:7361:11823":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"1:10987:12544":{"crate_id":1,"path":["std","sys","pal","unix","fs","Mode"],"kind":"struct"},"22:967:8610":{"crate_id":22,"path":["ppv_lite86","soft","x4"],"kind":"struct"},"17:14072:9677":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"2:23076:12065":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"17:11163:8651":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"2:2766:201":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"6:6716:11718":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"17:13306:9577":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2:43883:12251":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"21:595:25764":{"crate_id":21,"path":["zerocopy","Unaligned"],"kind":"trait"},"1:11964:9075":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"6:4937:11231":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"5:898:12805":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"22:176:3017":{"crate_id":22,"path":["ppv_lite86","types","BSwap"],"kind":"trait"},"17:15973:10143":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"5:6117:72":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"0:94:2345":{"crate_id":0,"path":["rand_chacha","ChaChaRng"],"kind":"type_alias"},"17:13181:12717":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"17:13322:21544":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"17:16642:10332":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"22:1525:8522":{"crate_id":22,"path":["ppv_lite86","x86_64","YesA2"],"kind":"struct"},"11:2121:10620":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"5:7872:12832":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"2:46621:12388":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"20:76:138":{"crate_id":20,"path":["rand_core","error","Error"],"kind":"struct"},"17:5131:12639":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"17:15689:10067":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"1:8668:11827":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"18:659:12621":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:573:13470":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"1:9186:8550":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"15:288:20559":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"5:5006:217":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"1:6817:13738":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"1:9312:12974":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"21:2099:8626":{"crate_id":21,"path":["zerocopy","byteorder","I16"],"kind":"struct"},"2:46509:12370":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"11:2495:20532":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"2:4716:221":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"2:8748:150":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"17:11386:21554":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"1:10950:12455":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"2:40583:12158":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"22:1593:3015":{"crate_id":22,"path":["ppv_lite86","x86_64","vec512_storage"],"kind":"union"},"5:7619:8403":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"6:5387:11398":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"2:45054:180":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:8664:12969":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"17:12906:8682":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"2:21721:33174":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"2:11523:12850":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:6201:12448":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"11:102:10828":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"2:22591:14191":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_exposed_provenance"],"kind":"function"},"16:7578:12528":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"2:22457:13861":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"17:14031:9667":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"1:9135:12972":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"1:7490:30717":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"17:11733:21575":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"1:7372:31387":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"17:12204:9480":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"16:2530:10381":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"17:16494:9615":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"1:4174:13652":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"1:8835:13721":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"2:8441:178":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"16:2684:10388":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"17:10938:35075":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"17:14612:9786":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"17:11818:12666":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"1:6885:12943":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLockGuard"],"kind":"struct"},"2:12986:13921":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:12737:12271":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"2:44755:12310":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"16:8058:12774":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"16:2486:10379":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"2:44534:12294":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"16:2796:10393":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"17:13169:12716":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"2:40485:12159":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"17:15602:10059":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"11:2380:8550":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"1:12411:1863":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"2:46604:3031":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"18:754:9342":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"11:1884:8403":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"17:14845:9839":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"17:16341:10259":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"22:257:2820":{"crate_id":22,"path":["ppv_lite86","types","u64x2x4"],"kind":"trait"},"1:12394:1705":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"1:4888:13699":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"18:589:9315":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"16:3014:20606":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"5:3729:8551":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"6:538:10967":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"16:8209:8800":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"2:47320:8370":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"17:3720:12637":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"17:13592:9592":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"6:6708:11714":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"5:2304:8852":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"16:7401:35060":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"2:41906:170":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"6:5477:11455":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"17:16812:10371":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"2:10766:14263":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"17:12699:12702":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"17:11788:12662":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"17:14019:9664":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:11367:12847":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"17:11319:35077":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"5:7502:8840":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"6:1507:11005":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"6:5295:11366":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"2:46104:12342":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"21:3587:35515":{"crate_id":21,"path":["zerocopy","pointer","ptr","invariant","Initialized"],"kind":"enum"},"20:178:2465":{"crate_id":20,"path":["rand_core","block","BlockRng"],"kind":"struct"},"2:44329:12278":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"2:23731:236":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"16:2724:10390":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"1:4699:13678":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"2:21934:8890":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"2:42424:97":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"17:12347:12691":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"16:7789:35067":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"1:5640:12928":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"22:224:3027":{"crate_id":22,"path":["ppv_lite86","types","Swap64"],"kind":"trait"},"16:8598:12779":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"16:6713:12736":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"17:14405:9755":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"17:12962:21673":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"2:44007:12257":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"6:7414:11846":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"6:6758:11731":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"17:12066:8677":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"2:4501:13971":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"5:1223:34644":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"2:46754:12393":{"crate_id":2,"path":["core","core_arch","simd","m8x32"],"kind":"struct"},"6:8308:11968":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"16:6970:8782":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"1:11847:12917":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"6:5450:11437":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"2:7780:31832":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"6:6381:11541":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"1:11714:12555":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"17:5305:12640":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"1:2011:13550":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"15:394:20569":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"16:7508:10614":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:4435:12836":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"16:6188:10454":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"6:8199:11955":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:46139:12344":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"2:32929:10633":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"2:44771:12314":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"6:5441:11431":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"2:13742:12859":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"2:12475:14252":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:3307:31114":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"6:578:10989":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"16:6144:21466":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"6:6443:11584":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"16:5379:10441":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"22:267:3034":{"crate_id":22,"path":["ppv_lite86","types","VZip"],"kind":"trait"},"1:5855:220":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:4720:12838":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"2:47003:12429":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"6:1690:11122":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:44320:12277":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"17:13095:9558":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"16:5742:8647":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"1:1852:703":{"crate_id":1,"path":["std","env"],"kind":"module"},"6:1569:11040":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:41421:12208":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"2:44087:12263":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:5794:11748":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"5:1564:8403":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"5:1645:12810":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"5:7666:11997":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"1:2081:198":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"6:586:10993":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"2:3041:124":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"6:8031:11954":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"2:43843:12039":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"17:14269:9729":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"16:8105:10683":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"2:12981:13922":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"17:13798:9633":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"2:13953:152":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"1:8359:9066":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"11:798:9152":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"5:3703:182":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"2:22628:13867":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"2:3644:14182":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"17:667:9437":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"2:47435:8375":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"17:11173:35074":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"17:14859:9840":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"1:2018:794":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"1:8568:12965":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"22:1416:9296":{"crate_id":22,"path":["ppv_lite86","x86_64","sse2","G1"],"kind":"struct"},"2:12661:12260":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"11:854:12788":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"16:3695:10413":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"2:43783:12871":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"6:5301:11369":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"21:811:8646":{"crate_id":21,"path":["zerocopy","byteorder","LittleEndian"],"kind":"enum"},"2:43379:9032":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"22:296:3035":{"crate_id":22,"path":["ppv_lite86","types","Store"],"kind":"trait"},"1:3039:12908":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"6:5357:11383":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"6:5641:11521":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"17:12749:12706":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"2:11222:8551":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"16:2860:10396":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"2:9855:92":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"17:15586:10056":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"6:6823:11750":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"1:9288:12527":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:23279:12081":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroIsizeInner"],"kind":"struct"},"9:480:20456":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"1:11908:12919":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"2:44949:12321":{"crate_id":2,"path":["core","future","async_drop","Noop"],"kind":"struct"},"5:1604:12797":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"2:23007:31892":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"2:44105:12264":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"17:16822:9648":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"1:5620:12927":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"1:971:13503":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"16:3141:9346":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"2:40770:12016":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:9429:12531":{"crate_id":1,"path":["std","sync","poison","Guard"],"kind":"struct"},"1:11112:29412":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"6:5682:11537":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"2:44037:12032":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"2:1969:12531":{"crate_id":2,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"21:757:25768":{"crate_id":21,"path":["zerocopy","ByteSlice"],"kind":"trait"},"17:12335:12690":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"6:4902:11214":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"17:11448:12652":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"2:41960:13630":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"17:15981:10144":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"6:5349:11382":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"6:6748:11724":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"2:40564:12165":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"17:12736:12705":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"6:532:10964":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"6:6813:11747":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"20:127:25749":{"crate_id":20,"path":["rand_core","impls","next_u64_via_fill"],"kind":"function"},"2:43630:12250":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"11:299:10829":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"16:3110:10410":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"1:9267:13744":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"1:597:12884":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"17:11475:21556":{"crate_id":17,"path":["object","read","archive","SymbolIteratorInternal"],"kind":"enum"},"1:10940:12534":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"1:5983:12935":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"5:7797:12830":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"17:10418:21538":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"1:8231:140":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"2:13602:12858":{"crate_id":2,"path":["core","future","async_drop","AsyncDropInPlace"],"kind":"struct"},"2:42106:12501":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"14:202:13938":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"17:12319:12688":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"16:6269:10460":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"2:1838:14111":{"crate_id":2,"path":["core","intrinsics","AggregateRawPtr"],"kind":"trait"},"22:250:3032":{"crate_id":22,"path":["ppv_lite86","types","u128x2"],"kind":"trait"},"1:4160:13650":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"5:4142:9152":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"16:7030:10538":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"1:11035:12930":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"5:7531:9152":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"1:9474:12532":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"5:4172:34584":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"21:764:25771":{"crate_id":21,"path":["zerocopy","IntoByteSliceMut"],"kind":"trait"},"2:11402:12037":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"16:7938:10676":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2:47373:8373":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"18:735:25735":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"16:6837:8778":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"17:13515:21545":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"2:39874:12865":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"2:2732:113":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"5:6033:9152":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"17:15315:9914":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"1:11887:12918":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"22:241:3029":{"crate_id":22,"path":["ppv_lite86","types","u32x4x2"],"kind":"trait"},"2:22563:13587":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"17:12035:8813":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"11:873:12790":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"17:12056:8676":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"5:7561:33454":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"2:41388:12203":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"2:41020:12192":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"17:12537:12694":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"13:229:8808":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:10041:8882":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:4146:13649":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"2:39729:213":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:5274:12924":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"16:8669:10673":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"2:40867:12176":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"18:491:9309":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"16:4152:10416":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"2:42072:31873":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"2:22718:13856":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"17:13662:9602":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"6:5151:11305":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"6:553:10976":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"1:11308:162":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"1:3400:12911":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"22:1510:8517":{"crate_id":22,"path":["ppv_lite86","x86_64","NoS4"],"kind":"struct"},"2:46849:12396":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"20:139:2468":{"crate_id":20,"path":["rand_core","CryptoRng"],"kind":"trait"},"6:8261:11958":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"2:32389:12148":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"5:7677:13502":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"1:8354:12959":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"17:12840:9539":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"6:5249:11342":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"16:896:12720":{"crate_id":16,"path":["gimli","read","endian_slice","DebugBytes"],"kind":"struct"},"22:263:2768":{"crate_id":22,"path":["ppv_lite86","types","MultiLane"],"kind":"trait"},"1:8006:13587":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:3247:8482":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"6:6493:11607":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"6:4957:11240":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:7715:13999":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"6:6740:11723":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"20:140:2470":{"crate_id":20,"path":["rand_core","SeedableRng"],"kind":"trait"},"6:1684:11119":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"2:4908:8503":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"5:7736:12001":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"22:1520:8521":{"crate_id":22,"path":["ppv_lite86","x86_64","NoA1"],"kind":"struct"},"2:4789:12015":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"1:10787:9493":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"1:11130:29402":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"6:5127:11303":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"21:512:25759":{"crate_id":21,"path":["zerocopy","DstLayout"],"kind":"struct"},"18:573:9310":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:22851:12046":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"2:43935:12042":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"6:7391:11845":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:13916:9157":{"crate_id":2,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"1:10921:12989":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"1:1106:12793":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"1:1083:10620":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"2:10036:32594":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:3455:141":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:47239:8363":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"2:46828:12395":{"crate_id":2,"path":["core","core_arch","simd","m32x8"],"kind":"struct"},"2:10655:8887":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"6:7518:11896":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"6:8008:11942":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"6:6611:11674":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:46004:12333":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:42260:13711":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"17:11358:21553":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"1:1489:156":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:34384:14176":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:22904:8892":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:30800:8463":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"22:1569:2764":{"crate_id":22,"path":["ppv_lite86","x86_64","vec128_storage"],"kind":"union"},"17:14393:9753":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"16:7212:10576":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"1:9438:235":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"2:8251:14154":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"22:885:2762":{"crate_id":22,"path":["ppv_lite86","dispatch_light128"],"kind":"macro"},"2:44763:12312":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"17:472:12628":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"1:3684:13607":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"2:46171:12346":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:40919:8877":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"2:21806:13587":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"2:6971:12030":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"16:5417:10442":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"1:10376:12981":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"2:22671:13587":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"2:41988:9028":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"6:7448:11852":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"17:16377:10263":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"1:1645:10836":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"1:3913:12918":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"17:11114:12647":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"1:9152:9046":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"1:5117:13698":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"17:11401:9449":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"2:5260:438":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"21:762:25770":{"crate_id":21,"path":["zerocopy","IntoByteSlice"],"kind":"trait"},"6:4914:11223":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"3:0:510":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:40780:12866":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"17:12851:9543":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"16:5085:10431":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"17:13028:12712":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"2:42535:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"17:14375:9752":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"1:8364:13619":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"6:6672:11699":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"6:5179:11307":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"6:5025:11275":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"6:7431:11847":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"6:7986:11941":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"5:2265:13465":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"17:14358:9749":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"16:8066:21477":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"1:2242:129":{"crate_id":1,"path":["std","ffi","os_str","Display"],"kind":"struct"},"2:8247:14155":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"16:4810:10423":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"1:1115:12796":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"17:583:12629":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"2:45081:10846":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"2:3258:13769":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"22:1540:8525":{"crate_id":22,"path":["ppv_lite86","x86_64","NoNI"],"kind":"struct"},"1:12406:914":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"5:7748:12003":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"22:0:2349":{"crate_id":22,"path":["ppv_lite86"],"kind":"module"},"20:163:3008":{"crate_id":20,"path":["rand_core","RngReadAdapter"],"kind":"struct"},"22:884:2761":{"crate_id":22,"path":["ppv_lite86","dispatch"],"kind":"macro"},"2:42864:8467":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"2:23202:12074":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU128Inner"],"kind":"struct"},"5:3875:12812":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"16:2966:10401":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"2:21922:13587":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"2:31158:196":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:45987:12331":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"6:5230:11332":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:42202:8551":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"6:5051:11288":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"1:2493:13576":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"1:11338:12548":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"17:10534:8646":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"2:22935:8893":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"2:2713:104":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"6:1632:11087":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"11:842:13503":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"16:7471:10610":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"5:4217:8551":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"1:8891:12518":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"17:15160:9892":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"6:1657:11106":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"17:11515:12653":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"1:6814:12940":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"2:41944:12214":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"17:10729:8671":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"17:14460:9764":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"11:1085:35029":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"17:15573:10051":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"5:1586:8846":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"17:13933:9648":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"1:2495:13577":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:23158:12070":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU8Inner"],"kind":"struct"},"2:8284:146":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"22:1530:8523":{"crate_id":22,"path":["ppv_lite86","x86_64","NoA2"],"kind":"struct"},"6:5057:11290":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"16:7386:8788":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"21:3601:8633":{"crate_id":21,"path":["zerocopy","wrappers","Unalign"],"kind":"struct"},"6:5676:11534":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"16:2506:10380":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"11:351:35034":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"17:506:9395":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"2:43211:8465":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"6:4929:11229":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"16:4241:10418":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"17:15760:10088":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"5:7094:13956":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"22:213:2772":{"crate_id":22,"path":["ppv_lite86","types","Vector"],"kind":"trait"},"17:2227:12632":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"2:3263:13771":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"2:44187:12269":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"2:42194:8550":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"17:14416:9756":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"17:12992:9553":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"6:8249:11956":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"17:10141:21529":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"1:3665:26608":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"6:6882:11762":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"6:1589:11054":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"17:11952:8674":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"16:8483:10734":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"17:12135:9474":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"18:643:9310":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"14:214:10824":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"17:15286:9894":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"16:2820:10394":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"5:6901:34584":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"18:718:9336":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"2:8386:2996":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"17:11457:9452":{"crate_id":17,"path":["object","read","archive","ArchiveOffset"],"kind":"struct"},"5:7721:14239":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:4930:13665":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"17:14886:9844":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"6:7487:11870":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"2:33625:13770":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"16:4902:10426":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"6:473:10927":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"1:384:12882":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"17:15557:10050":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"5:3277:101":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"2:2343:12013":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"5:221:12803":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"2:10849:29405":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"2:4598:8870":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"5:5150:12531":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"1:6700:12939":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"16:6876:10521":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"16:2660:10387":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"11:1105:12794":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"17:12293:12686":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"6:7604:11935":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:2960:77":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:3293:13887":{"crate_id":2,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"17:15475:10038":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"17:14692:9795":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"17:15136:8683":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"1:8549:8672":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"2:12721:12268":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:23257:12079":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI64Inner"],"kind":"struct"},"22:1560:8514":{"crate_id":22,"path":["ppv_lite86","x86_64","Avx2Machine"],"kind":"struct"},"1:12007:29418":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Bomb"],"kind":"struct"},"17:15812:10097":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"17:14738:9819":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"11:1914:10836":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"6:4921:11227":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:21932:13776":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"17:13205:12719":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"17:13537:8683":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"5:3347:10834":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"6:8267:11959":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"2:3665:13969":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:39668:13890":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"2:47048:12430":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:10404:206":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"11:835:12785":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"2:40575:12166":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:5094:13696":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"1:8620:12502":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"18:608:9305":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"6:4881:11204":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"1:4116:13647":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"17:13427:9580":{"crate_id":17,"path":["object","read","ObjectMapFile"],"kind":"struct"},"1:8503:12496":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"6:8302:11967":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"2:40990:12189":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"5:40:13522":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"2:44623:12297":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"6:7463:11857":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:47259:8365":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:11990:12561":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"17:12941:9549":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"11:1725:156":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"1:532:13465":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"1:5976:12931":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"17:13692:9606":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"11:1564:20537":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"2:43107:8463":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"17:13222:21542":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"17:14599:9784":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"17:317:12626":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"2:41165:12197":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"17:10977:35078":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"1:4812:13652":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"6:564:10981":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"1:5351:204":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"2:22589:31955":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"17:14627:9789":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"5:1794:34584":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"5:2594:11987":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"1:8631:12968":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"2:46281:2818":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:3566:12531":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"17:15731:10081":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"16:7044:8784":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"17:10564:8666":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"6:5603:11498":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"2:40937:12185":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"21:3229:8631":{"crate_id":21,"path":["zerocopy","byteorder","F32"],"kind":"struct"},"16:8121:210":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"17:10928:12644":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:41179:12198":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"21:756:35195":{"crate_id":21,"path":["zerocopy","sealed","ByteSliceSealed"],"kind":"trait"},"16:6640:12730":{"crate_id":16,"path":["gimli","read","dwarf","DwarfSections"],"kind":"struct"},"5:7591:8863":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"0:95:2347":{"crate_id":0,"path":["rand_chacha","ChaChaCore"],"kind":"type_alias"},"16:4404:10420":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"17:10843:8648":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"2:13896:9155":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"6:5069:11299":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"2:40671:12170":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"11:740:8850":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"16:8528:10738":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:44633:12301":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:8251:9045":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"2:43371:9030":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:10389:120":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"1:9178:9047":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:3736:13891":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"2:44419:13936":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:2084:197":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:47343:8371":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:12416:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"6:5541:11472":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"17:11902:9469":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"17:14832:9837":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"1:982:12788":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"17:11831:8655":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"5:1011:8550":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"5:1496:100":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"2:44291:12274":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"16:6028:8746":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"2:46378:12363":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:39881:12156":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"17:10663:8669":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"17:15701:10070":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"2:21826:8890":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"17:14346:9747":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"17:15931:10132":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"17:16786:10367":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"1:6217:220":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"11:1880:8550":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"6:4816:11158":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:42572:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"16:6904:10524":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"2:46089:12341":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"17:13610:9595":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"17:14152:9700":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"2:40849:8872":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"17:14560:9779":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"17:15714:10076":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"16:6588:10507":{"crate_id":16,"path":["gimli","read","cfi","UnwindExpression"],"kind":"struct"},"11:2420:8403":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"2:21689:33163":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"16:7807:35065":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"17:11926:9470":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"16:7765:10656":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"1:11236:12522":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"1:9165:12522":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"6:5217:11328":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"1:3304:29007":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"5:894:102":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"1:8202:12455":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"16:8636:21480":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"11:396:35030":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"1:5656:12929":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"2:8063:9050":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"16:5348:10440":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"16:546:8729":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"6:7454:11854":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"18:80:25725":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"17:15050:9874":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"17:13983:9655":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"6:5405:11410":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"2:32487:8485":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"11:2545:10840":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"16:7883:8739":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"14:187:20547":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"15:327:8804":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"17:1339:12631":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"21:796:8647":{"crate_id":21,"path":["zerocopy","byteorder","BigEndian"],"kind":"enum"},"21:2342:8627":{"crate_id":21,"path":["zerocopy","byteorder","I32"],"kind":"struct"},"17:10296:21534":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"2:44023:8672":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:11008:29157":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"2:3933:9152":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"17:13119:9559":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"2:12975:9332":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"17:15655:10064":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"6:5186:11309":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"1:4928:13663":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"11:1064:20536":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"17:13733:9615":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"6:4869:11201":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"17:11777:9467":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"2:46554:12387":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"6:8290:11965":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"11:809:12811":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"2:44159:12267":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:9456:162":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:40515:12160":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"2:8795:32593":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:23213:12075":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroUsizeInner"],"kind":"struct"},"1:378:12880":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"17:14284:9733":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"6:5648:11524":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"17:12249:12683":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"2:38364:14178":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"2:44751:12309":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"17:15641:10060":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"11:2559:10843":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"11:685:8551":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"16:8028:8793":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"1:10250:12224":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"2:23180:12072":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU32Inner"],"kind":"struct"},"2:46427:12366":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"16:3441:10411":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"16:6984:8783":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"1:6479:12448":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"2:11247:12032":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:43611:12248":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"22:1535:8524":{"crate_id":22,"path":["ppv_lite86","x86_64","YesNI"],"kind":"struct"},"1:3599:12499":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"17:16520:10287":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"6:6723:11719":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"16:6042:10403":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"1:3617:12916":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"17:15919:10129":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"1:4822:11838":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"function"},"1:9492:12533":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"1:1633:10834":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"5:798:119":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"1:1905:12895":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"2:46363:12362":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"17:10115:21528":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"17:15876:10114":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"5:4582:34613":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"1:9577:12896":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"2:41928:12212":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"1:8820:12516":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"1:1097:12792":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"1:2715:12905":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"17:11527:12654":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"11:1049:12793":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"5:3097:11984":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"2:40730:12174":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"2:33826:14171":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"2:45020:12322":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:39712:13520":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"1:11027:12954":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"1:10970:9067":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"1:4411:12920":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"5:1410:12792":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"1:910:8846":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"16:4929:10427":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"17:13945:9651":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"17:15064:9877":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"2:3052:138":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:4725:12839":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"6:5622:11512":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"6:5255:11344":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:32458:8486":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"16:6680:12731":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackageSections"],"kind":"struct"},"17:16218:10223":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"16:7521:10617":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"5:5562:13908":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:9850:85":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"6:6473:11594":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"6:6652:11694":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"9:0:2851":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"17:14750:9822":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"17:15963:10140":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"2:10650:13591":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"21:122:9298":{"crate_id":21,"path":["zerocopy","pointer","ptr","def","Ptr"],"kind":"struct"},"17:12976:9552":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"1:9252:13742":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"1:8579:13629":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"2:2710:103":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"6:5107:11301":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"17:12280:12684":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"21:3666:25772":{"crate_id":21,"path":["zerocopy","CastType"],"kind":"enum"},"17:10784:12642":{"crate_id":17,"path":["object","read","read_cache","ReadCacheInternal"],"kind":"struct"},"2:40479:12158":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:11753:12558":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"16:155:8722":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"1:923:8848":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"2:32457:2999":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"16:6462:21469":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"1:11447:10900":{"crate_id":1,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"11:1920:10837":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"17:11878:8651":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"17:13781:9630":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"16:5689:10445":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2:23268:12080":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI128Inner"],"kind":"struct"},"6:1643:11095":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"6:6917:11787":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:45070:12325":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"2:42387:90":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:8532:8871":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"1:3848:13631":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"10:36:10848":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"1:10444:13384":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"11:2466:12811":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"6:5533:11467":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:2937:14001":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"2:5088:13989":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"6:4990:11256":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"2:6076:12531":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"9:422:20459":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"16:6914:10525":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"16:908:12627":{"crate_id":16,"path":["gimli","read","endian_slice","DebugLen"],"kind":"struct"},"2:23235:12077":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI16Inner"],"kind":"struct"},"16:7016:10536":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"2:3285:13885":{"crate_id":2,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"17:14327:9742":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"1:12403:920":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:44345:12158":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"16:7980:10409":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"1:3074:138":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"6:7368:11827":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"17:14438:9763":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"2:41155:12196":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:11983:12561":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"17:10487:21540":{"crate_id":17,"path":["object","common","RelocationFlags"],"kind":"enum"},"17:14872:9841":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"1:2323:139":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"5:1259:34638":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"5:6731:34584":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"2:13585:12855":{"crate_id":2,"path":["core","future","async_drop","AsyncDropOwning"],"kind":"struct"},"16:5198:10435":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"2:21706:33166":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"2:22713:13858":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"6:6659:11695":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:40591:12167":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"17:14821:9836":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"14:31:12780":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"2:44759:12311":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"11:1888:9152":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"2:46214:12349":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:8494:9069":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"16:3126:20608":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"5:7575:8403":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"1:8093:13540":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"2:31185:8386":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"6:6526:11620":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"6:4984:11253":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"5:3339:10836":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"2:26131:267":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:2751:12904":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"1:6392:29377":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"5:3105:33340":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"1:8245:128":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"1:8723:12970":{"crate_id":1,"path":["std","panic","PanicHookInfo"],"kind":"struct"},"17:10332:21535":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"11:430:35043":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"11:1023:12792":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"2:40887:12178":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"6:4970:11245":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"17:11432:21555":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"9:390:20458":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"16:8151:8798":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"5:2275:11982":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"6:6631:11682":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"6:5036:11281":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"2:41379:12202":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"13:110:8531":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"2:43922:12874":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:33692:13772":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"16:5449:10443":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"5:291:34584":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"2:3699:13888":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:11382:12994":{"crate_id":1,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"2:44336:12167":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"22:247:3031":{"crate_id":22,"path":["ppv_lite86","types","u64x4"],"kind":"trait"},"2:40958:12187":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"6:5635:11518":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"2:3420:125":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"5:3095:34975":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"2:44787:8889":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"2:2957:78":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"6:497:10938":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"2:2045:678":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"17:14640:9790":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"17:10394:21537":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"22:892:8607":{"crate_id":22,"path":["ppv_lite86","soft","x2"],"kind":"struct"},"2:44767:12313":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"17:11653:9459":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"6:5586:11491":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"17:11630:9457":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"6:485:10933":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"1:11290:12547":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"5:6685:9152":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"1:8875:9162":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"2:13196:120":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"0:0:2348":{"crate_id":0,"path":["rand_chacha"],"kind":"module"},"17:12983:21674":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"17:15864:10113":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"2:47248:8364":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"17:10246:21532":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"6:5428:11421":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"16:2550:10382":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2:44805:131":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"16:6302:10467":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:44829:12318":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"1:3402:12912":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"2:10607:153":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"17:13361:9579":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"17:13041:12713":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"2:11440:12848":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"5:1132:34584":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"1:9742:12955":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"5:7774:243":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"6:4842:11178":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"2:821:13633":{"crate_id":2,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"1:5862:12448":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"6:6638:11683":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"11:1158:12796":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"2:46243:12358":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"2:6776:12024":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:46051:12336":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:11759:12559":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"1:5797:13726":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"2:38474:14180":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:40896:12180":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:2969:258":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"16:3308:10376":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"2:46019:12334":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:4346:13674":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"11:123:8809":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"2:40742:8672":{"crate_id":2,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"17:16145:10203":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"2:21814:13778":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:11290:12036":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"2:22685:13857":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"2:42146:12229":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"5:7060:13954":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"21:427:35542":{"crate_id":21,"path":["zerocopy","wrappers","update","WriteBackOnDrop"],"kind":"struct"},"2:43418:9034":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:12413:977":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"1:11702:9062":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"2:4799:8501":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"2:0:568":{"crate_id":2,"path":["core"],"kind":"module"},"6:5088:11300":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"16:5318:10439":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"6:1584:11052":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"16:2880:10397":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"16:5649:10444":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"1:2729:29405":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:13873:116":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"17:14507:9770":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"16:6256:8757":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"16:8626:10744":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"17:11678:12659":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"5:3352:33444":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"6:5271:11353":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:3433:8555":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"16:4983:10429":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"1:11824:25931":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:44979:207":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"16:3987:9359":{"crate_id":16,"path":["gimli","arch","PowerPc64"],"kind":"struct"},"1:4208:13653":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"1:8073:13486":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"1:8485:8879":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:44486:12292":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:8272:12958":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"17:11985:12671":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"16:8546:10740":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:11481:12266":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:38309:14177":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:9735:139":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"2:45972:12330":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"2:23069:12062":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"17:15829:10104":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"16:2415:20578":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2:40752:13553":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"1:1617:8550":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"1:9416:187":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"1:952:12797":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:39716:12151":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"16:7416:12745":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"6:6623:11681":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:47305:8369":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"2:10408:8474":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"5:1395:12793":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"2:2148:14202":{"crate_id":2,"path":["core","ptr","metadata","Thin"],"kind":"trait_alias"},"17:11291:35079":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"16:7542:10619":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"2:30521:13632":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"17:16728:10354":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"2:22363:13587":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"2:4877:8488":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"2:12698:12265":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"2:21808:13775":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"2:39784:215":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"17:14299:9738":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV1"],"kind":"struct"},"1:12401:763":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"2:40067:14002":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"17:14312:9740":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV2"],"kind":"struct"},"2:22642:14191":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","with_exposed_provenance"],"kind":"function"},"15:306:20560":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"1:8087:13487":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"22:260:3033":{"crate_id":22,"path":["ppv_lite86","types","u128x4"],"kind":"trait"},"2:44957:164":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:8219:12456":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"1:4824:11840":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"function"},"1:4218:13654":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:23191:12073":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU64Inner"],"kind":"struct"},"18:481:9308":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"6:570:10984":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"1:12410:1857":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"17:12095:9471":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"17:16084:10196":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"1:11255:8889":{"crate_id":1,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"1:11691:2781":{"crate_id":1,"path":["std","sys","thread_local","fast_local","eager","State"],"kind":"enum"},"14:220:10826":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"17:15679:10066":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"17:11026:35076":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"2:47294:8368":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"22:1445:9297":{"crate_id":22,"path":["ppv_lite86","x86_64","sse2","avx2","u32x4x2_avx2"],"kind":"struct"},"1:685:13484":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"1:5533:129":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"17:11465:9453":{"crate_id":17,"path":["object","read","archive","ArchiveSymbolIterator"],"kind":"struct"},"22:210:2771":{"crate_id":22,"path":["ppv_lite86","types","Vec4Ext"],"kind":"trait"},"1:965:12785":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"16:7337:10596":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"17:11539:8655":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"2:44612:13937":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"16:2570:10383":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"17:13818:9643":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"2:32400:244":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"5:6275:12531":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"18:635:9327":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:40704:12173":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"2:36433:10640":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"2:42250:8543":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"11:708:8849":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"6:517:10955":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"17:12149:9475":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"5:2171:12812":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"17:12931:8683":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"17:13871:8697":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"11:1900:10834":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"17:12897:9546":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"17:11706:12661":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"11:0:2853":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"1:9194:12973":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"17:13349:8686":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"2:43944:12875":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"17:10793:9343":{"crate_id":17,"path":["object","read","read_cache","ReadCacheRange"],"kind":"struct"},"2:23121:13587":{"crate_id":2,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"1:12400:747":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:6976:12028":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"17:10630:8668":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"2:33141:10630":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"1:5184:13703":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"22:1111:8611":{"crate_id":22,"path":["ppv_lite86","x86_64","sse2","u32x4_sse2"],"kind":"struct"},"16:8503:10735":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"17:14672:9794":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"16:5709:21465":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:43097:12235":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"2:40800:12867":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"2:4646:8500":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"1:6010:9048":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"17:10167:21530":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"16:7990:10681":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"1:9237:13743":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"16:4694:10421":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"20:109:25745":{"crate_id":20,"path":["rand_core","impls","fill_bytes_via_next"],"kind":"function"},"17:16507:9629":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"2:47268:8366":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:32322:10842":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"17:15769:10089":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"7:0:1921":{"crate_id":7,"path":["unwind"],"kind":"module"},"1:8108:12954":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"17:10097:21527":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"11:1580:12798":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"5:3313:10835":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:10337:8472":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"22:235:2818":{"crate_id":22,"path":["ppv_lite86","types","u64x2"],"kind":"trait"},"17:12776:12708":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:2222:189":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"2:46926:12428":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"11:2551:35038":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"16:2772:10392":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"2:2771:135":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"5:1636:210":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"2:43152:31891":{"crate_id":2,"path":["core","fmt","rt","ArgumentType"],"kind":"enum"},"11:2566:11997":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"6:7539:11910":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"17:14520:9773":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"2:34557:10639":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"16:2950:10400":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"5:6533:13869":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"1:2790:12907":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"1:12396:1829":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"5:7541:12828":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"21:3657:9302":{"crate_id":21,"path":["zerocopy","TrailingSliceLayout"],"kind":"struct"},"1:4891:13677":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"17:10031:21526":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"21:760:25769":{"crate_id":21,"path":["zerocopy","ByteSliceMut"],"kind":"trait"},"17:16714:10351":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"2:33893:14173":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"17:13385:8687":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"16:8612:8802":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"2:3490:13521":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"2:43834:12038":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"6:7341:11817":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:8625:13676":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"1:8027:12452":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"5:7258:34590":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"2:40836:8871":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"18:698:8640":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"17:12869:9582":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"5:3101:33339":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:13717:205":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"18:689:9331":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"17:10442:21539":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"2:44775:12315":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"2:44598:12296":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"17:16159:10209":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"2:11509:12849":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:23042:31902":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"16:3834:10414":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"5:5963:251":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"5:7519:11995":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"2:22991:12050":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"21:3594:35270":{"crate_id":21,"path":["zerocopy","pointer","ptr","invariant","at_least","Shared"],"kind":"trait"},"2:45093:12326":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"17:11065:12646":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"6:5482:11457":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"17:10218:21531":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"2:40971:12188":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"21:1617:8624":{"crate_id":21,"path":["zerocopy","byteorder","U128"],"kind":"struct"},"1:11976:26560":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"17:13719:9614":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"16:6064:10405":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:40637:12169":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"6:1625:11083":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"16:2620:10385":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"2:10394:129":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"16:6808:8776":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"5:4569:12531":{"crate_id":5,"path":["alloc","collections","vec_deque","shrink_to","Guard"],"kind":"struct"},"16:6111:10452":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:44311:12276":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:46695:12390":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"16:2435:20605":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"2:12491:12853":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"22:1515:8520":{"crate_id":22,"path":["ppv_lite86","x86_64","YesA1"],"kind":"struct"},"1:3656:8472":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"17:12826:9535":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"16:6696:12734":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"16:8267:10693":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:4855:8502":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"22:1500:8516":{"crate_id":22,"path":["ppv_lite86","x86_64","NoS3"],"kind":"struct"},"1:4338:13673":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"2:2155:12009":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"17:14652:9791":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2:46410:12365":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"18:598:35086":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:38419:14179":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"17:13209:138":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:47279:8367":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:22244:33175":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"2:11329:12846":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"17:11720:9461":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"2:41030:12193":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"6:5593:11493":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:44783:12317":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"6:5019:11272":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:33353:14170":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"6:1514:11007":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"6:4947:11237":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"11:488:154":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"20:124:25748":{"crate_id":20,"path":["rand_core","impls","next_u32_via_fill"],"kind":"function"},"2:42259:13489":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"20:133:2469":{"crate_id":20,"path":["rand_core","RngCore"],"kind":"trait"},"1:5305:12924":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:40678:12171":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"struct"},"6:6599:11669":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:47358:8372":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"2:44205:12270":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"6:5007:11266":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:42878:8476":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:9225:12524":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2:5361:988":{"crate_id":2,"path":["core","iter"],"kind":"module"},"18:96:25726":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"6:6449:11585":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"17:16761:10361":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"16:6084:10448":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"16:6421:8731":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"6:8343:11977":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"17:16656:10336":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"1:628:13481":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"21:32:25789":{"crate_id":21,"path":["zerocopy","byteorder","ByteOrder"],"kind":"trait"},"16:4844:10424":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"1:12395:1739":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"11:2148:12793":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"1:8264:12957":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"18:623:35083":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"21:587:25750":{"crate_id":21,"path":["zerocopy","IntoBytes"],"kind":"trait"},"1:1930:12897":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"2:46666:12389":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"17:11075:35072":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"2:22539:13863":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"17:16832:9653":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"2:42346:8551":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"2:40949:12186":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"2:3581:211":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:22983:12049":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"17:14084:9680":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:40928:12184":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:9360:12528":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"5:7760:12829":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"16:8179:10684":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"2:22577:13866":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"6:5507:11465":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"2:2966:145":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"17:12191:9479":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"5:2182:12813":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"1:11742:12947":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"2:11051:239":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"5:1239:33349":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"16:6205:21467":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"1:3674:13585":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"14:0:2855":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"2:43136:10712":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"11:2533:10838":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"1:8690:12504":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"17:14963:9857":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"1:3493:13614":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"10:44:8814":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"1:11016:29159":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"21:2569:8628":{"crate_id":21,"path":["zerocopy","byteorder","I64"],"kind":"struct"},"6:5462:11446":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"19:0:1305":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"18:651:9310":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"5:0:309":{"crate_id":5,"path":["alloc"],"kind":"module"},"16:5255:10437":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"17:12163:9476":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"1:6300:29408":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"2:46583:8604":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"2:2596:679":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"22:1580:3014":{"crate_id":22,"path":["ppv_lite86","x86_64","vec256_storage"],"kind":"union"},"2:42609:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"17:12886:9545":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"2:42354:8403":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"17:15024:9872":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:46296:12359":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"17:15905:10122":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"17:16198:10220":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"2:13034:13930":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:9347:9054":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"1:6871:9058":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLock"],"kind":"struct"},"1:8645:12503":{"crate_id":1,"path":["std","os","unix","net","ucred","UCred"],"kind":"struct"},"2:6267:8876":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:3072:226":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"17:10696:8670":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"1:7947:29416":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"1:2477:13571":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"17:13921:9647":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"6:8014:11944":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"11:671:8550":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"17:3503:12636":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"11:1893:12811":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"5:6552:13870":{"crate_id":5,"path":["alloc","task","LocalWake"],"kind":"trait"},"17:13491:9584":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"17:15621:8705":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"1:946:12811":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"16:5727:8646":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"17:11757:21576":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"2:5319:12842":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"17:15844:10106":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"17:15540:10048":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"16:2450:10377":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"17:14933:9851":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"2:44779:12316":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"17:12583:9524":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"2:3343:10635":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:46456:12367":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"16:5060:10430":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"21:3552:35268":{"crate_id":21,"path":["zerocopy","pointer","ptr","invariant","Invariants"],"kind":"trait"},"2:42290:8553":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"6:5520:11466":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"16:2920:10399":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"6:5375:11393":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"16:2840:10395":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"2:43408:2781":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"11:1674:35027":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"16:2748:10391":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"2:4459:110":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"11:2440:9152":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"2:12507:13925":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"15:0:2856":{"crate_id":15,"path":["addr2line"],"kind":"module"},"21:942:8620":{"crate_id":21,"path":["zerocopy","byteorder","U16"],"kind":"struct"},"2:34038:14174":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"17:15946:10136":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"6:5241:11338":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"5:1625:8850":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"1:936:9152":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"17:15887:10118":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"11:881:12791":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"2:46185:12347":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:30747:8898":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:7809:26098":{"crate_id":1,"path":["std","panicking","begin_panic_handler","StaticStrPayload"],"kind":"struct"},"6:6534:11625":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:42094:12227":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"6:7308:11794":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"1:12414:1931":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"6:5471:11452":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"2:8751:8552":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:12175:28039":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"6:5341:11381":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"17:11421:12651":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"16:7159:10563":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"20:186:3009":{"crate_id":20,"path":["rand_core","block","BlockRng64"],"kind":"struct"},"2:42498:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"5:994:13505":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"1:10945:12536":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"16:6822:21470":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCacheStrategy"],"kind":"enum"},"2:45044:12879":{"crate_id":2,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"16:2640:10386":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"17:16019:10152":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"1:10627:12972":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"2:47396:8374":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"17:16701:10345":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"17:14043:9668":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"1:2505:13582":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"17:13471:9533":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"6:4964:11243":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:12008:9388":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"2:3826:71":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"1:10747:12913":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"17:10516:21541":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"17:11579:12657":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"5:3318:33443":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"5:7708:11998":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"2:42219:8542":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"17:15777:10091":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"22:1505:8519":{"crate_id":22,"path":["ppv_lite86","x86_64","YesS4"],"kind":"struct"},"16:6794:10511":{"crate_id":16,"path":["gimli","read","relocate","RelocateReader"],"kind":"struct"},"6:6876:11761":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"16:8223:10685":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"2:43387:9033":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"16:5172:10434":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"5:5309:8861":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"17:14947:9853":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"2:10406:8473":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"2:44259:12273":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"5:7611:8403":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"2:23224:12076":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI8Inner"],"kind":"struct"},"2:10355:144":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"1:2332:13568":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"6:5488:11458":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"17:16798:10370":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"2:44840:14296":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"16:7554:21475":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"18:531:9312":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"1:6527:220":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"2:32398:237":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"1:8192:9389":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"1:11124:29420":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"17:2406:12633":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"22:202:3025":{"crate_id":22,"path":["ppv_lite86","types","Vec2"],"kind":"trait"},"2:3288:13886":{"crate_id":2,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"2:22501:13862":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"2:40686:12172":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"17:10803:8672":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"2:32364:12863":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"5:7551:11996":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"13:0:2848":{"crate_id":13,"path":["std_detect"],"kind":"module"},"2:3093:12835":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"1:8209:9067":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"2:47093:12431":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"2:46072:12340":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:4359:13675":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"6:8330:11973":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"2:43964:12876":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"2:41006:9325":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"2:7609:8411":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"2:44301:12275":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"6:5570:11486":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:22969:31903":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:4308:30720":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"16:4956:10428":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"11:830:12797":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"1:4777:13695":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"5:789:250":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"16:6502:20577":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"21:3645:25773":{"crate_id":21,"path":["zerocopy","SizeInfo"],"kind":"enum"},"20:195:9307":{"crate_id":20,"path":["rand_core","error","ErrorCode"],"kind":"struct"},"17:16132:10197":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"22:244:3030":{"crate_id":22,"path":["ppv_lite86","types","u64x2x2"],"kind":"trait"},"16:3889:9351":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"2:8295:165":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"17:12860:9544":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"22:1299:8619":{"crate_id":22,"path":["ppv_lite86","x86_64","sse2","u128x1_sse2"],"kind":"struct"},"1:11067:9047":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"2:824:190":{"crate_id":2,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"2:46325:12360":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"6:4890:11209":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"1:9393:9072":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"2:10400:8475":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"18:0:2859":{"crate_id":18,"path":["memchr"],"kind":"module"},"16:6843:8780":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"5:3373:10837":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"6:5196:11316":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"17:12648:9526":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"6:8296:11966":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:3254:8484":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"17:16283:10242":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"1:8749:9158":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"17:15953:10137":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"2:40526:31868":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"2:3671:13968":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"18:726:8642":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"2:30785:12083":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"2:42185:173":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"1:961:8850":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"6:6790:11741":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"17:2378:21603":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"1:8555:12032":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"16:7424:21474":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:8512:13586":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"16:6389:12723":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"18:563:8637":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"1:4230:13657":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"2:4846:13979":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"17:15418:10000":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"17:15549:10049":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"2:22:826":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"5:4506:34613":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"1:12361:13488":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"16:6953:10528":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"2:14008:13506":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"2:42281:3344":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"2:32382:8501":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"6:6480:11598":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"18:765:25736":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"5:3306:8550":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"17:15106:9881":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"2:46716:12391":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"6:6902:11776":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"2:47122:8605":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"21:3567:35270":{"crate_id":21,"path":["zerocopy","pointer","ptr","invariant","Shared"],"kind":"enum"},"16:7358:8786":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"16:6159:8747":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"2:41365:12200":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"1:4168:13651":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"17:11864:12668":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"17:13909:9644":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"17:15431:10007":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"2:44561:12295":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"2:13690:32814":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"2:45012:12877":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"2:43954:12043":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"18:670:12625":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"1:10980:140":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"1:4986:12923":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"17:14114:9692":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"2:3458:142":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"22:216:3026":{"crate_id":22,"path":["ppv_lite86","types","Words4"],"kind":"trait"},"1:7170:13773":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"17:12952:9550":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"14:40:9630":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"6:5366:11387":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"2:43996:12256":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"2:4567:8869":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"9:236:2781":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"1:3445:12914":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"17:13970:9654":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"6:4792:11141":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"1:680:12888":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:7714:13998":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"22:253:2812":{"crate_id":22,"path":["ppv_lite86","types","u32x4x4"],"kind":"trait"},"2:43190:138":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"17:13854:8695":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"6:6411:11566":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"18:521:25737":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"2:11495:12267":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1:3349:12910":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"2:5281:32626":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"16:5282:10438":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"16:6098:12721":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"5:1424:12796":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"5:3860:9068":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"1:2645:12903":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"2:2146:14201":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:1621:8403":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"16:6123:10404":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"17:16385:10266":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"1:12415:1434":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"1:4826:11842":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"function"},"17:12225:9483":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"17:10778:12641":{"crate_id":17,"path":["object","read","read_cache","ReadCache"],"kind":"struct"},"17:13635:9596":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"2:40541:12163":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"22:232:2806":{"crate_id":22,"path":["ppv_lite86","types","u32x4"],"kind":"trait"},"11:1907:10835":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"17:13193:12718":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"6:5165:11306":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"17:12762:12707":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:44664:12307":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"17:11566:12656":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"2:10615:157":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"1:3310:30987":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"17:15351:9945":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"2:22205:13587":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"1:12404:902":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"17:13157:12715":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"1:9433:234":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"16:3048:20607":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"2:44961:219":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"2:44241:12272":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"2:23246:12078":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI32Inner"],"kind":"struct"},"16:7907:10675":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"16:7168:10564":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"5:1595:8848":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"11:2400:8551":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"16:6337:10470":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"17:14773:9831":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"2:4482:13884":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"17:16775:10365":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"16:7192:21473":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"16:6731:8742":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"17:16332:10257":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"9:53:8815":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"6:5265:11350":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"17:13266:21543":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"17:12570:12696":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"18:113:25727":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"11:2137:12792":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"11:2323:12792":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"17:16362:10262":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:44646:12305":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"17:13006:9556":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"17:16750:10360":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"2:43909:12041":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"2:45033:32959":{"crate_id":2,"path":["core","task","wake","ExtData"],"kind":"enum"},"21:544:25751":{"crate_id":21,"path":["zerocopy","NoCell"],"kind":"trait"},"2:39053:14181":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"17:14055:9669":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"2:12966:12845":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"14:7:12780":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"2:6153:12022":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"17:11805:12665":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"22:1495:8518":{"crate_id":22,"path":["ppv_lite86","x86_64","YesS3"],"kind":"struct"},"5:1533:8550":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"16:7350:8743":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"1:9352:9070":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"1:6736:9057":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"2:11041:13587":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"2:3212:247":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"6:5205:11321":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"17:12371:8679":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"17:12687:12701":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"17:13451:9582":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"21:607:8501":{"crate_id":21,"path":["zerocopy","Ref"],"kind":"struct"},"2:22365:13777":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"16:8320:21479":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"2:10336:226":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"5:4307:12531":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"11:2539:10839":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"1:9747:26201":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"16:4873:10425":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:42363:196":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"18:706:9332":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"17:13055:8655":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"17:14001:9663":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"17:14547:9778":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"6:1530:11015":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"17:10861:139":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"1:4932:13666":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"6:6770:11733":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"17:12176:9477":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"17:13890:8704":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"2:46395:12364":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"17:15010:9871":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"17:11016:12645":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2:21704:33170":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"17:15785:10093":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"5:735:12804":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"1:6590:186":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"1:6942:233":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"17:15496:10043":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"1:8256:9044":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"17:12625:9525":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"1:10670:29410":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"5:4536:12531":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"6:5551:11478":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"6:6700:11710":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"6:8319:11972":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"17:12216:9482":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"17:12711:12703":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"1:4110:13648":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"16:7075:21472":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"6:4805:11150":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"17:15739:10084":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"2:40715:14239":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:32368:10673":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"1:11273:12532":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"16:8723:138":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"2:46200:12348":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"6:7332:11811":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"16:8565:10743":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"16:6942:10527":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"1:437:185":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"17:10274:21533":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:42166:194":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"20:0:2335":{"crate_id":20,"path":["rand_core"],"kind":"module"},"18:507:9310":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"21:535:25760":{"crate_id":21,"path":["zerocopy","KnownLayout"],"kind":"trait"},"2:15:2480":{"crate_id":2,"path":["core","write"],"kind":"macro"},"2:10181:8464":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"7:32:20443":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"17:13757:9629":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"16:8014:8792":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"17:15439:10008":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"5:4491:265":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"17:14099:9686":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"12:0:2854":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"6:6544:11632":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"6:4829:11168":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:42857:8466":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"6:6777:11734":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"6:5562:11484":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"5:2157:9068":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"21:3386:8632":{"crate_id":21,"path":["zerocopy","byteorder","F64"],"kind":"struct"},"6:5224:11329":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"17:11851:12667":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"21:2991:8630":{"crate_id":21,"path":["zerocopy","byteorder","Isize"],"kind":"struct"},"6:6680:11701":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:44440:12282":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"2:8304:2997":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"5:1379:10620":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"18:548:153":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:40905:12181":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"17:14902:9846":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"1:12389:476":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"17:15531:10044":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:10402:8476":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"17:12524:12693":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"16:7058:10539":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"17:16739:10359":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"5:3809:34584":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"16:7969:10680":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"17:13554:9587":{"crate_id":17,"path":["object","read","RelocationMapEntry"],"kind":"struct"},"22:1545:8515":{"crate_id":22,"path":["ppv_lite86","x86_64","SseMachine"],"kind":"struct"},"5:1614:8849":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:30779:12006":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:8797:2781":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"5:2377:8855":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"2:47201:8606":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:1628:12811":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"20:22:2467":{"crate_id":20,"path":["rand_core","block","CryptoBlockRng"],"kind":"trait"},"1:9306:116":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"16:7495:10611":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"1:5465:203":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"16:4120:10415":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"6:7586:11932":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"6:1667:11112":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:42338:8550":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"6:7548:11913":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"5:7511:8403":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"6:5325:11377":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"5:306:3000":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"1:11708:12995":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:22210:13781":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"5:5566:13909":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"1:4222:13655":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"5:2357:34979":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"18:680:9328":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"6:1675:11113":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:8045:9493":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"16:3587:10412":{"crate_id":16,"path":["gimli","arch","MIPS"],"kind":"struct"},"1:9443:12945":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockReadGuard"],"kind":"struct"},"1:1982:12898":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"16:8585:12776":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"1:6376:9155":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"22:1205:8618":{"crate_id":22,"path":["ppv_lite86","x86_64","sse2","u64x2_sse2"],"kind":"struct"},"17:15896:10121":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"5:6170:14492":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"17:12920:9547":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"17:11691:12660":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"6:5395:11403":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"2:10396:8467":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"17:12082:8662":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"17:16297:10244":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"1:8280:9068":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:3659:147":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:8613:12501":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"16:5224:10436":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"1:8542:12196":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"6:1727:11135":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"17:15852:10107":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"2:12960:13924":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"17:15410:9997":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"2:32375:12864":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"6:6437:11581":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"1:2551:2866":{"crate_id":1,"path":["std","io"],"kind":"module"},"2:8003:8879":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:902:8403":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:2610:14191":{"crate_id":2,"path":["core","ptr","with_exposed_provenance"],"kind":"function"},"2:2973:257":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"17:1220:12630":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"1:8562:12274":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"2:4447:12837":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:12405:908":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"6:7563:11920":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"16:6866:21471":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"2:9417:8880":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:9373:25833":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"21:546:25761":{"crate_id":21,"path":["zerocopy","TryFromBytes"],"kind":"trait"},"17:11281:12649":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"6:5311:11373":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"16:8298:10697":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"6:1551:11030":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"5:7583:210":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"2:12920:13566":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"2:21677:33163":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"2:39632:8554":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"16:2467:8714":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"2:43626:12249":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"5:3094:8460":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"17:15939:10135":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"6:6521:11619":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"1:8574:12967":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"16:8000:8791":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"1:3910:12917":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"1:5726:12930":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:4066:8403":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"21:1183:8622":{"crate_id":21,"path":["zerocopy","byteorder","U32"],"kind":"struct"},"2:40858:8875":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"16:8233:21478":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"16:7223:10577":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"6:1489:10997":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"16:6749:8773":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"17:13398:8689":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"4:0:2849":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"16:6625:10508":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"17:13082:12648":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"17:16264:10237":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"16:7462:12746":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"16:4766:10422":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"5:3465:12811":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"17:14586:9782":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"16:7716:35063":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"2:2808:202":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:8732:13707":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"2:3402:13889":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"2:23089:12066":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"2:44455:12288":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"6:5629:11515":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"6:6691:11704":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"2:32489:115":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"7:79:20450":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"17:14975:9859":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"2:43165:74":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"16:2990:10402":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"16:5113:10432":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"2:21723:33168":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"6:7316:11799":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"5:3716:8550":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"1:1650:10837":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"1:8902:12519":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"22:274:2763":{"crate_id":22,"path":["ppv_lite86","types","Machine"],"kind":"trait"},"16:6173:8750":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"2:44971:227":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"11:434:35039":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"1:0:1731":{"crate_id":1,"path":["std"],"kind":"module"},"17:12108:9472":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"17:2437:12635":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"2:41403:12205":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"5:3940:12811":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"2:43396:157":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:10518:114":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"6:7350:11818":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"17:16179:10215":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"17:12550:9522":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"1:4677:13677":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"2:41394:12204":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"14:160:12780":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:2052:12008":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"17:10549:8647":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"1:10357:12895":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"17:16008:10151":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"1:9764:128":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"2:10864:32106":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"16:7731:8542":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"2:39744:210":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"17:12723:12704":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"17:15121:9885":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"1:12407:895":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"6:5381:11395":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"1:8007:12451":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"17:16613:9643":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"1:4330:13672":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"17:11503:9456":{"crate_id":17,"path":["object","read","archive","ArchiveSymbol"],"kind":"struct"},"1:957:8849":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"1:10999:12496":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"5:1898:12811":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"2:22798:12045":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"16:0:2857":{"crate_id":16,"path":["gimli"],"kind":"module"},"2:5980:12531":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"2:3684:31932":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"6:545:10971":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"17:14220:9704":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"6:4896:11211":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"17:15836:10105":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"6:6462:11586":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:10741:12909":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"17:11222:12648":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"16:2900:10398":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"5:4917:811":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"6:0:1013":{"crate_id":6,"path":["libc"],"kind":"module"},"17:11971:12670":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"17:11592:9430":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"17:14483:9769":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"17:13070:8651":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"17:15997:10147":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"1:3443:12913":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"17:13958:9653":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"16:6781:10510":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"5:6149:8861":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"2:42871:8475":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"6:1494:10999":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"17:12234:9563":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"17:11232:21556":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"6:6666:11696":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"16:7838:21476":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"11:364:35032":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"6:523:10958":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"1:2479:13572":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"3:234:226":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"6:1521:11010":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"6:465:10922":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"6:5117:11302":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"18:613:35084":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"2:46494:12369":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"2:39766:212":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"6:8353:11979":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"16:6573:10504":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"16:6998:10529":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"17:15090:9879":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"1:12372:25838":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"11:2366:12802":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"17:14796:9832":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"11:1140:12795":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"16:4267:10419":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"22:180:2766":{"crate_id":22,"path":["ppv_lite86","types","BitOps32"],"kind":"trait"},"6:5494:11460":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"21:1826:8625":{"crate_id":21,"path":["zerocopy","byteorder","Usize"],"kind":"struct"},"1:677:12886":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"20:107:25744":{"crate_id":20,"path":["rand_core","impls","next_u64_via_u32"],"kind":"function"},"1:12340:12998":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"16:6239:8752":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"16:6738:35064":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"2:47180:12433":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"17:16555:10317":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"2:21755:13779":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"2:42722:98":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:40699:107":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"2:12079:13917":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"17:11606:8651":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"2:46036:12335":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"6:1703:11126":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:47151:12432":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"16:7919:12767":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"17:12787:9528":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"2:3461:143":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"21:558:25763":{"crate_id":21,"path":["zerocopy","FromBytes"],"kind":"trait"},"17:12673:12697":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"17:16323:10253":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:2963:163":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:23100:13646":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"2:23027:31904":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"2:43983:12253":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:44469:12291":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"11:785:8848":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"2:42461:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:3207:118":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"17:16241:10236":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"17:11553:12655":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"17:16668:10338":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"2:42685:91":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"16:903:12626":{"crate_id":16,"path":["gimli","read","endian_slice","DebugByte"],"kind":"struct"},"16:6658:8758":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"17:12260:21647":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCacheSlice"],"kind":"enum"},"9:355:20472":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"1:10535:26202":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"21:553:25762":{"crate_id":21,"path":["zerocopy","FromZeros"],"kind":"trait"},"17:15148:9888":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"1:4492:12921":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"1:988:12790":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"2:9529:12845":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"16:6608:206":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"17:12816:9533":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"11:698:8403":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"17:11958:12669":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:21667:8386":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"16:6440:21468":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"16:4184:10417":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"17:15989:10146":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"18:515:9311":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"17:12798:21672":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"5:4337:12531":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"17:12018:12673":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"17:322:12627":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"6:5334:11380":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"2:12008:12851":{"crate_id":2,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"16:7305:10592":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"2:42210:8403":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"1:879:8550":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"1:7821:26099":{"crate_id":1,"path":["std","panicking","begin_panic","Payload"],"kind":"struct"},"16:2704:10389":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"6:4976:11248":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"6:1500:11002":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"1:1928:12896":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"1:8885:8550":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"1:7892:9437":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"17:10597:8667":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"17:15753:10087":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"9:500:10903":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"1:2328:12537":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"17:14127:9696":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"11:2228:8813":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"1:12356:9076":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"17:16187:10216":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"1:892:8551":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"2:2802:195":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"6:1539:11021":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"1:8639:12965":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"2:46799:12394":{"crate_id":2,"path":["core","core_arch","simd","m16x16"],"kind":"struct"},"1:661:12885":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"6:5319:11376":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:1869:12894":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"1:766:154":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:44354:12166":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"6:5139:11304":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"6:4997:11259":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"17:14917:9850":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"9:328:10885":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"17:14807:9834":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"2:42128:12228":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"1:994:12791":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"16:7282:10591":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"6:5412:1257":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"17:12392:9489":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"2:44954:151":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"17:14997:9870":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"1:9202:8403":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"17:16595:9633":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"1:7738:26334":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"22:299:2769":{"crate_id":22,"path":["ppv_lite86","types","StoreBytes"],"kind":"trait"},"2:3217:8480":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"2:10398:8466":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"6:6765:11732":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"17:13145:12714":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"17:14335:9744":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"8:0:2850":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"1:12393:335":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"1:9421:12936":{"crate_id":1,"path":["std","sync","mutex","MappedMutexGuard"],"kind":"struct"},"17:12028:12674":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"22:220:2767":{"crate_id":22,"path":["ppv_lite86","types","LaneWords4"],"kind":"trait"},"1:7835:26097":{"crate_id":1,"path":["std","panicking","rust_panic_without_hook","RewrapBox"],"kind":"struct"},"22:183:3021":{"crate_id":22,"path":["ppv_lite86","types","RotateEachWord32"],"kind":"trait"},"1:12390:1891":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"1:6055:9049":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"17:16036:10159":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"17:16311:10251":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"21:34:25790":{"crate_id":21,"path":["zerocopy","byteorder","Order"],"kind":"enum"},"17:16684:10343":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"6:6564:11648":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"17:15665:10065":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"22:206:2770":{"crate_id":22,"path":["ppv_lite86","types","Vec4"],"kind":"trait"},"1:12402:742":{"crate_id":1,"path":["std","f128"],"kind":"primitive"},"2:46477:12368":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"17:14573:9781":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"2:23169:12071":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU16Inner"],"kind":"struct"},"2:39804:214":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"17:0:2858":{"crate_id":17,"path":["object"],"kind":"module"},"1:12388:1187":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"17:16026:10154":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"5:938:13504":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"9:176:8831":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"6:8273:11960":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"17:12605:8651":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"1:7343:29424":{"crate_id":1,"path":["std","sys","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"6:5420:11416":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"1:6424:9055":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"22:178:2765":{"crate_id":22,"path":["ppv_lite86","types","ArithOps"],"kind":"trait"},"17:11998:12672":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"6:4875:11202":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:9319:25861":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"2:3205:8479":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"6:5288:11364":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"6:5670:11532":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"6:6731:11720":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"2:2082:1372":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"5:4377:8550":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"17:15077:9878":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"2:22919:8864":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:3536:12204":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"21:0:2992":{"crate_id":21,"path":["zerocopy"],"kind":"module"},"2:10832:32584":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"17:10368:21536":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"2:39894:12157":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:1624:9152":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"5:7185:264":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"1:11223:9046":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"6:5282:11361":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:42298:226":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"1:1639:10835":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"16:5757:10446":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"16:5144:10433":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"17:13290:9409":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"2:44055:12037":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"17:12122:9473":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"22:238:3028":{"crate_id":22,"path":["ppv_lite86","types","u128x1"],"kind":"trait"},"6:479:10930":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"6:5044:11286":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"2:12775:12036":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"17:16399:10269":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"5:7084:13955":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"1:12399:744":{"crate_id":1,"path":["std","f16"],"kind":"primitive"},"1:11728:12556":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"17:12306:9486":{"crate_id":17,"path":["object","read","macho","fat","MachOFatFile"],"kind":"struct"},"1:9208:12523":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"1:10378:12980":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"22:1411:9295":{"crate_id":22,"path":["ppv_lite86","x86_64","sse2","G0"],"kind":"struct"},"2:21735:33171":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"2:41372:12201":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"6:491:10935":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"2:46733:12392":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"17:12044:12679":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"2:40598:13995":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"1:10961:12543":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"2:43173:8463":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"20:18:2466":{"crate_id":20,"path":["rand_core","block","BlockRngCore"],"kind":"trait"},"1:5606:12925":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"2:2612:14192":{"crate_id":2,"path":["core","ptr","with_exposed_provenance_mut"],"kind":"function"},"5:7692:8859":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:43852:12872":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:42759:9029":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"16:7372:8787":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"9:445:20457":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"16:6852:10516":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:2936:13587":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"17:13014:12710":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"1:2325:12902":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:3449:2995":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"16:6408:10476":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"17:11124:35073":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"17:13838:8691":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"17:11617:12648":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"1:12387:420":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"6:6507:11618":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"6:1711:11130":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"6:8255:11957":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2:3273:10634":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"2:39844:13496":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"2:6965:12031":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"5:2825:11990":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"18:581:8386":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"2:46156:12345":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:4:1270":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"1:12409:1851":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"2:43426:9035":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"18:538:8635":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"1:7902:12948":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"2:22232:8891":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:5009:13662":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"2:8333:130":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"2:40981:8878":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"2:34211:14175":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"5:6812:8403":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"1:5869:12449":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"1:1867:12893":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"2:40807:12041":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:4566:12922":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"16:7959:10679":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"17:12359:12692":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"16:2590:10384":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"2:3654:254":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"16:8043:35061":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"10:0:2852":{"crate_id":10,"path":["adler"],"kind":"module"},"1:7415:25865":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"2:46346:12361":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"2:46118:12343":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:41413:12206":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:12412:1845":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"16:7949:10408":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"14:165:20540":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"1:9301:9051":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"2:47222:12434":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"}},"external_crates":{"20":{"name":"rand_core","html_root_url":"https://rust-random.github.io/rand/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"22":{"name":"ppv_lite86","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"zerocopy","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":30}